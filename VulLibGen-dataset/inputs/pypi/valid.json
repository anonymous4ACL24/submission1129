[{"id": "GHSA-4r9h-x77w-mffv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability was found in collective.task up to 3.0.9. It has been classified as problematic. This affects the function renderCell/AssignedGroupColumn of the file src/collective/task/browser/table.py. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.0.10 is able to address this issue. The name of the patch is 1aac7f83fa2c2b41d59ba02748912953461f3fac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215907.. Top 1 search result is pypi:collective.task. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:collective.task."}]}, {"id": "GHSA-8m3f-g62j-3vx8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability, which was classified as problematic, was found in ReFirm Labs binwalk up to 2.3.2. Affected is an unknown function of the file src/binwalk/modules/extractor.py of the component Archive Extraction Handler. The manipulation leads to symlink following. It is possible to launch the attack remotely. Upgrading to version 2.3.3 can address this issue. The name of the patch is fa0c0bd59b8588814756942fe4cb5452e76c1dcd. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216876.. Top 1 search result is pypi:binwalk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:binwalk."}]}, {"id": "GHSA-hcpj-qp55-gfph", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: All versions of package gitpython are vulnerable to Remote Code Execution (RCE) due to improper user input validation, which makes it possible to inject a maliciously crafted remote URL into the clone command. Exploiting this vulnerability is possible because the library makes external calls to git without sufficient sanitization of input arguments.. Top 1 search result is pypi:gitpython. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:GitPython."}]}, {"id": "GHSA-r48c-4vfj-h426", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability, which was classified as problematic, has been found in collective.dms.basecontent. This issue affects the function renderCell of the file src/collective/dms/basecontent/browser/column.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.7 or later will address this issue. The patch is at commit 6c4d616fcc771822a14ebae5e23f3f6d96d134bd. It is recommended to upgrade the affected component. The identifier VDB-215813 was assigned to this vulnerability.. Top 1 search result is pypi:collective.dms.basecontent. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:collective.dms.basecontent."}]}, {"id": "GHSA-2wpw-cm9w-v4xm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Business Logic Errors in GitHub repository ikus060/rdiffweb prior to 2.5.5.. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-5pqf-rvm7-3wgw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: collective.contact.widget is an add-on is part of the collective.contact.* suite. A vulnerability classified as problematic was found in collective.contact.widget up to 1.12. This vulnerability affects the function title of the file src/collective/contact/widget/widgets.py. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is 5da36305ca7ed433782be8901c47387406fcda12. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216496.. Top 1 search result is pypi:collective.contact.widget. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:collective.contact.widget."}]}, {"id": "GHSA-m973-4vpc-x43c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability was found in Graphite Web. It has been classified as problematic. Affected is an unknown function of the component Absolute Time Range Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 2f178f490e10efc03cd1d27c72f64ecab224eb23. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216744.. Top 1 search result is pypi:graphite-web. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:graphite-web."}]}, {"id": "GHSA-v3c5-jqr6-7qm8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue discovered in Python Charmers Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server. This issue has been patched in version 0.18.3.. Top 1 search result is pypi:future. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:future."}]}, {"id": "GHSA-r9hx-vwmv-q579", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.. Top 1 search result is pypi:setuptools. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:setuptools."}]}, {"id": "GHSA-7q4r-x5qg-mmcp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: rdiffweb prior to 2.5.5 has no rate limit on the \"resend email feature\" while enable or disable 2FA from `/prefs/mfa` endpoint .. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-2hvc-hwg3-hpvw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Out-of-bounds read in `gather_tree` in PaddlePaddle before 2.4. A [patch](https://github.com/PaddlePaddle/Paddle/commit/6712e262fc6734873cc6d5ca4f45973339a88697) is available in the `release/2.4` branch.. Top 1 search result is pypi:paddlepaddle. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:paddlepaddle."}]}, {"id": "GHSA-g86j-hwg9-77q5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In December 2022, threat actors impersonated SentinelOne by uploading fake software development kits (SDKs) onto PyPI. The SDKs contain fully functional SentinelOne clients, but the packages also contained malicious backdoors that are only executed when called on programmatically, as opposed to during installation. The packages have since been taken down from PyPI.. Top 1 search result is pypi:Sentinelone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:SentinelOne pypi:sentinelone-sdk pypi:SentineloneSDK pypi:Sentinelone pypi:SentinelOneSDK."}]}, {"id": "GHSA-q6cq-m9gm-6q2f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Slixmpp before 1.8.3 lacks SSL Certificate hostname validation in XMLStream, allowing an attacker to pose as any server in the eyes of Slixmpp.. Top 1 search result is pypi:slixmpp. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:slixmpp."}]}, {"id": "GHSA-83pm-7v48-5jp4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In rdiffweb prior to 2.5.5, lack of sanitisation of characters in SSH key name could allow attacker to inject a hyperlink injection that could allow attacker to redirect victim to malicious websites.. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-894q-wpg5-mf2h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability was found in RDFlib pyrdfa3 and classified as problematic. This issue affects the function _get_option of the file pyRdfa/__init__.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is ffd1d62dd50d5f4190013b39cedcdfbd81f3ce3e. It is recommended to apply a patch to fix this issue. The identifier VDB-215249 was assigned to this vulnerability. \n\nNOTE: RDFlib is no longer being developed and is looking for a new maintainer  \nhttps://github.com/RDFLib/pyrdfa3/issues/38. Top 1 search result is pypi:pyRdfa3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyRdfa3."}]}, {"id": "GHSA-hc37-84v3-8gmq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability, which was classified as problematic, has been found in UBI Reader up to 0.8.0. Affected by this issue is the function ubireader_extract_files of the file ubireader/ubifs/output.py of the component UBIFS File Handler. The manipulation leads to path traversal. The attack may be launched remotely. Upgrading to version 0.8.5 can address this issue. The name of the patch is d5d68e6b1b9f7070c29df5f67fc060f579ae9139. It is recommended to upgrade the affected component. VDB-216146 is the identifier assigned to this vulnerability.. Top 1 search result is pypi:ubi-reader. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ubi-reader."}]}, {"id": "GHSA-rc58-qr9j-cpgw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Apache Software Foundation Apache Airflow Hive Provider.This issue affects Apache Airflow Hive Provider before 5.0.0.. Top 1 search result is pypi:apache-airflow-providers-apache-hive. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow-providers-apache-hive."}]}, {"id": "GHSA-g594-55mp-f6q8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Unauthorized access to settings update, logs , history, delete etc in GitHub repository ikus060/rdiffweb prior to 2.5.2.. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-3c5x-4hvx-qrrr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A vulnerability has been found in Graphite Web and classified as problematic. This vulnerability affects unknown code of the component Cookie Handler. The manipulation leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 2f178f490e10efc03cd1d27c72f64ecab224eb23. It is recommended to apply a patch to fix this issue. VDB-216742 is the identifier assigned to this vulnerability.. Top 1 search result is pypi:graphite-web. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:graphite-web."}]}, {"id": "GHSA-m8xw-9x5x-6vh3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A directory traversal vulnerability in the SevenZipFile.extractall() function of the python library py7zr v0.20.0 and earlier allows attackers to write arbitrary files via extracting a crafted 7z file.. Top 1 search result is pypi:py7zr. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:py7zr."}]}, {"id": "GHSA-78m5-jpmf-ch7v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Summary\n\nUnsafe extracting using `shutil.unpack_archive()` from a remotely retrieved tarball may lead to writing the extracted file to an unintended destination.\n\n### Details\n\nExtracting files using `shutil.unpack_archive()` from a potentially malicious tarball without validating that the destination file path is within the intended destination directory can cause files outside the destination directory to be overwritten.  \n\nThe vulnerable code snippet is between [L153..158](https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158). \n\n```python\nresponse = requests.get(url, stream=True)\n\nwith open(zippath, \"wb\") as f:\n      f.write(response.raw.read())\n\nshutil.unpack_archive(zippath, unzippedpath)\n```\nIt seems that a remotely retrieved tarball which could be with the extension `.tar.gz` happens to be unpacked using `shutil.unpack_archive()` with no destination verification/limitation of the extracted files.\n\n### PoC\n\nThe PoC provided showcases the risk of extracting the non-harmless text file `sim4n6.txt` to a parent location rather than the current folder. \n\n```bash\n> tar --list -f archive.tar\ntar: Removing leading `../../../' from member names\n../../../sim4n6.txt\n\n> python3 \nPython 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import shutil\n>>> shutil.unpack_archive(\"archive.tar\")\n>>> exit()\n\n> file ../../../sim4n6.txt\n../../../sim4n6.txt: ASCII text\n```\n\n### A Potential Attack Scenario\n\n- An attacker may craft a malicious tarball with a filename path, such as `../../../../../../../../etc/passwd`, and then serve the archive remotely, thus, providing a possibility to overwrite the system files.\n\n### Mitigation\n\nPotential mitigation could be to:\n- Use a safer module, like `zipfile`.\n- Validate the location of the extracted files and discard those with malicious paths such as a relative path `..` or absolute ones. . Top 1 search result is pypi:guarddog. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:guarddog."}]}, {"id": "GHSA-jv85-mqxj-3f9j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: With a known valid invite link (i.e. not already accepted or expired) an unauthenticated attacker can manipulate the cookie to allow the same invite link to be reused on multiple accounts when joining an organization.\n\n### Impact\nAn attacker with a valid invite link can create multiple users and join the organization from which the invite link was generated.\n\n### Patches\nThis issue was patched in version 22.11.0.\n\n### Workarounds\nSentry SaaS customers do not need to take action.\n\nSelf-hosted Sentry installs can disable the invite functionality until they are ready to deploy the patched version by editing their `sentry.conf.py` file (usually located at `~/.sentry/`).\n\n1. Add the following line into `sentry.conf.py`:\n\n    ```python\n     SENTRY_FEATURES[\"organizations:invite-members\"] = False\n    ```\n2. Restart the Sentry web service.\n\n    ```\n    docker compose restart web\n    ```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Visit our FAQs on this CVE](https://help.sentry.io/account/security/cve-2022-23485-faqs/)\n* Open an issue in [getsentry/sentry](http://github.com/getsentry/sentry)\n* Email us at security[@]sentry.io\n. Top 1 search result is pypi:sentry. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:sentry."}]}, {"id": "GHSA-639f-hxcv-84mc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: rdiffweb prior to version 2.5.4 has an Open Redirect vulnerability.. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-qwmp-2cf2-g9g6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Python Packaging Authority (PyPA) Wheel is a reference implementation of the Python wheel packaging standard. Wheel 0.37.1 and earlier are vulnerable to a Regular Expression denial of service via attacker controlled input to the wheel cli. The vulnerable regex is used to verify the validity of Wheel file names. This has been patched in version 0.38.1.. Top 1 search result is pypi:wheel. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:wheel."}]}, {"id": "GHSA-wf33-6x33-wcf9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In rdiffweb prior to 2.5.5, the username field is not unique to users. This allows exploitation of primary key logic by creating the same name with different combinations & may allow unauthorized access.. Top 1 search result is pypi:rdiffweb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rdiffweb."}]}, {"id": "GHSA-pg2f-r7pc-6fxx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Multiple CSRF issues exist in MicroPyramid Django CRM 0.2.1 via /change-password-by-admin/, /api/settings/add/, /cases/create/, /change-password-by-admin/, /comment/add/, /documents/1/view/, /documents/create/, /opportunities/create/, and /login/.. Top 1 search result is pypi:django-crm. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-crm."}]}, {"id": "GHSA-9ggp-4jpr-7ppj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Withdrawn: duplicate of GHSA-pj4g-4488-wmxm\n\n## Original Description\n\nIn RPyC 4.1.x through 4.1.1, a remote attacker can dynamically modify object attributes to construct a remote procedure call that executes code for an RPyC service with default configuration settings.. Top 1 search result is pypi:rpyc. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rpyc."}]}, {"id": "GHSA-89px-ww3j-g2mm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## 2FA bypass through new device path\n\n### Impact\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\n\n### Patches\nThis problem has been patched in version 1.3.0.\n\n### Workarounds\nThere is no workaround at the moment.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com/labd/wagtail-2fa](https://github.com/labd/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl). Top 1 search result is pypi:wagtail-2fa. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:wagtail-2fa."}]}, {"id": "GHSA-vrcf-g539-x6h3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.. Top 1 search result is pypi:rediswrapper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rediswrapper."}]}, {"id": "GHSA-jqwc-jm56-wcwj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Jupyter Notebook before 5.5.0 does not use a CSP header to treat served files as belonging to a separate origin. Thus, for example, an XSS payload can be placed in an SVG document.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook."}]}, {"id": "GHSA-6g88-vr3v-76mf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Eval injection in the Math plugin of Limnoria (before 2019.11.09) and Supybot (through 2018-05-09) allows remote unprivileged attackers to disclose information or possibly have unspecified other impact via the calc and icalc IRC commands.. Top 1 search result is pypi:limnoria. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:limnoria."}]}, {"id": "GHSA-q3p4-gw7r-wqjc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views. This also presented a Local File Disclosure vulnerability to any file readable by the webserver process.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-c4qh-4vgv-qc6g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If `django.utils.text.Truncator`'s `chars()` and `words()` methods were passed the `html=True` argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The `chars()` and `words()` methods are used to implement the `truncatechars_htm`l and `truncatewords_html` template filters, which were thus vulnerable.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-8rf6-w2mx-4xjh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ** DISPUTED ** core.py in Mitogen before 0.2.8 has a typo that drops the unidirectional-routing protection mechanism in the case of a child that is initiated by another child. The Ansible extension is unaffected. NOTE: the vendor disputes this issue because it is exploitable only in conjunction with hypothetical other factors, i.e., an affected use case within a library caller, and a bug in the message receiver policy code that led to reliance on this extra protection mechanism.. Top 1 search result is pypi:mitogen. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mitogen."}]}, {"id": "GHSA-v9qg-3j8p-r63v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-65rm-h285-5cc5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In words.protocols.jabber.xmlstream in Twisted through 19.2.1, XMPP support did not verify certificates when used with TLS, allowing an attacker to MITM connections.. Top 1 search result is pypi:twisted. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:twisted."}]}, {"id": "GHSA-h5jv-4p7w-64jg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-xjjg-vmw6-c2p9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: All versions of the HTTPie package prior to version 1.0.3 are vulnerable to Open Redirect that allows an attacker to write an arbitrary file with supplied filename and content to the current directory, by redirecting a request from HTTP to a crafted URL pointing to a server in his or hers control.. Top 1 search result is pypi:httpie. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:httpie."}]}, {"id": "GHSA-vx6v-2rg6-865h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: django-js-reverse (aka Django JS Reverse) before 0.9.1 has XSS via js_reverse_inline.. Top 1 search result is pypi:django-js-reverse. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-js-reverse."}]}, {"id": "GHSA-6r97-cj55-9hrq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-gq9m-qvpx-68hc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id.. Top 1 search result is pypi:werkzeug. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:werkzeug."}]}, {"id": "GHSA-mr7p-25v2-35wr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a `../` (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction.. Top 1 search result is pypi:nltk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:nltk."}]}, {"id": "GHSA-3j5x-7ccf-ppgm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Recommender before 1.3.1 allows XSS. It is possible for a learner to craft a fake resource to recommender, that includes script which could possibly steal credentials from staff if they are lured into viewing the recommended resource.. Top 1 search result is pypi:recommender-xblock. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:recommender-xblock."}]}, {"id": "GHSA-p3w6-jcg4-52xh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Misusing the Django Signer API leads to predictable signatures used in verification emails\n\n### Impact\nThe vulnerability is a high severity one. Anyone using Django REST Registration library versions `0.2.*` - `0.4.*` with e-mail verification option (which is recommended, but needs [additional configuration](https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#preferred-configuration)) is affected.\nIn the worst case, the attacker can take over any Django user by resetting his/her password without even receiving the reset password verification link, just by guessing the signature from publicly available data (more detailed description below).\n\n### Patches\nThe problem has been patched in version `0.5.0`. All library users should upgrade to version `0.5.0` or higher.\nThe fix will invalidate all previously generated signatures , and in consequence, all verification links in previously sent verification e-mails. Therefore semi-major version `0.5.0` was released instead of version `0.4.6` to mark that incompatibility.\n\n### Workarounds\nThe easiest way way is to disable the verification options by using something like the minimal configuration described [here](https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#minimal-configuration). This will unfortunately disable checking whether the given e-mail is valid and make unable to users who registered an account but didn't verify it before config change.\n\nLess harsh way is to temporarily disable just the the reset password functionality:\n\n```python\nREST_REGISTRATION = {\n    # ...\n    'RESET_PASSWORD_VERIFICATION_ENABLED': False,\n    # ...\n}\n```\nWhich should disallow the worst case, which is account takeover by an attacker. The attacker can still use the register-email endpoint to change the email to its own (but it is less critical than resetting the password in this case).\n\nIf one already set `'RESET_PASSWORD_VERIFICATION_ONE_TIME_USE'` setting key to `True` in `REST_REGISTRATION` Django setting (which is not the default setting) then it should mitigate the security issue in case of password reset (in this case, the signature is much harder to guess by the attacker). But even in this case upgrade to newest version is highly recommended.\n\n### Technical description\nAfter the code [was refactored](https://github.com/apragacz/django-rest-registration/commit/b6d921e9decc9bb36a4c6d58bc607471aa824a2e) to use the [official Signer class](https://docs.djangoproject.com/en/dev/topics/signing/) the salt\nwas passed wrongly as secret key, replacing the `SECRET_KEY` set in\nDjango settings file. This leads to the Django `SECRET_KEY` not being used by the signer object. The secret key of the signer ends to be the salt which in most cases is a static string which is publicly available.\n\nIn consequence this allows, with verification enabled, to guess\nthe signature contained in the verification link (which is sent in a verification e-mail) by a potential attacker very easily.\n\nThe bug went unnoticed for very long time so multiple versions are affected:\nthis bug affects versions `0.2.*`, `0.3.*`, `0.4.*`; version `0.1.*` is not affected.\n\nRecently released version `0.5.0` contains the [fix](https://github.com/apragacz/django-rest-registration/commit/26d094fab65ea8c2694fdfb6a3ab95a7808b62d5) which correctly passes the salt to the Signer constructor as keyword argument instead as a positonal argument. It also contains additonal test so this problem should not reappear in the future.\n\n### Thanks\nI'd like to thank @peterthomassen from https://desec.io DNS security project for finding the bug. I'd like also to thank his employer, SSE (https://www.securesystems.de) for funding his work.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [GitHub issues project page](https://github.com/apragacz/django-rest-registration/issues)\n* Email @apragacz, author of the library . Top 1 search result is pypi:django-rest-registration. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-rest-registration."}]}, {"id": "GHSA-c6jq-h4jp-72pr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: aubio v0.4.0 to v0.4.8 has a new_aubio_onset NULL pointer dereference in `new_aubio_notes` function within `src/notes/notes.c`.. Top 1 search result is pypi:aubio. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aubio."}]}, {"id": "GHSA-7vvr-h4p5-m7fh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: aubio v0.4.0 to v0.4.8 has a NULL pointer dereference in `new_aubio_filterbank` via invalid n_filters.. Top 1 search result is pypi:aubio. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aubio."}]}, {"id": "GHSA-j3jp-gvr5-7hwq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## WebSocket cross-origin vulnerability\n\n### Impact\nThis is a Cross-Site Request Forgery (CSRF) vulnerability. It affects Socket.IO and Engine.IO web servers that authenticate clients using cookies.\n\n### Patches\npython-engineio version 3.9.0 patches this vulnerability by adding server-side Origin header checks.\n\n### Workarounds\nDo not use cookies for client authentication, or else add a CSRF token to the connection URL.\n\n### References\nhttps://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\nhttps://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [python-engineio](http://github.com/miguelgrinberg/python-engineio). Top 1 search result is pypi:python-engineio. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-engineio."}]}, {"id": "GHSA-ffq8-576r-v26g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A HTTP/2 implementation built using any version of the Python HPACK library between v1.0.0 and v2.2.0 could be targeted for a denial of service attack, specifically a so-called \"HPACK Bomb\" attack. This attack occurs when an attacker inserts a header field that is exactly the size of the HPACK dynamic header table into the dynamic header table. The attacker can then send a header block that is simply repeated requests to expand that field in the dynamic table. This can lead to a gigantic compression ratio of 4,096 or better, meaning that 16kB of data can decompress to 64MB of data on the target machine.. Top 1 search result is pypi:hpack. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:hpack."}]}, {"id": "GHSA-x64g-wjmw-w328", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.. Top 1 search result is pypi:python-ironic-inspector-client. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-ironic-inspector-client."}]}, {"id": "GHSA-6c7v-2f49-8h26", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-grmf-4fq6-2r79", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: aubio v0.4.0 to v0.4.8 has a Buffer Overflow in `new_aubio_tempo`.. Top 1 search result is pypi:aubio. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aubio."}]}, {"id": "GHSA-5wv5-4vpf-pj6m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Pallets Project Flask before 1.0 is affected by unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. The fixed version is 1. NOTE this may overlap CVE-2018-1000656.. Top 1 search result is pypi:flask. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:flask."}]}, {"id": "GHSA-94mf-xfg5-r247", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## APP_ALLOWED_HOSTS not always preventing host header injection\n\n### Impact\nA possible host header injection attack have been identified in Invenio-App.  For an attack to be possible, all conditions below must be met:\n\n1. Your webserver must have been configured to route all requests to your application. \n2. You must have relied on ``APP_ALLOWED_HOSTS`` configuration variable to whitelist allowed host headers.\n3. Flask's ``request.host`` must not have been evaluated during request handling.\n\nAn example of a view which does not evalute ``request.host`` is a simple view using just ``url_for`` to generate an external URL (similar is possible when rendering just a Jinja template):\n\n```python\n@app.route('/')\ndef index():\n    return url_for('index_url', _external=True)\n```\n\nThis happens, because Werkzeug's trusted host feature, which ``APP_ALLOWED_HOSTS`` rely on, does not check the the list of trusted hosts in it's routing system that ``url_for`` is relying on.\n\n### Patches\nInvenio-App v1.0.6 and v1.1.1 fully fix the issue. \n\nNote, we strongly recommend (see [Securing your instance](https://invenio.readthedocs.io/en/latest/deployment/securing-your-instance.html#allowed-hosts)) that you never route requests to your application with a wrong host header.  The ``APP_ALLOWED_HOSTS`` configuration variable exists as an extra protective measure because it is easy to misconfigure your web server to allow requests with any host header. \n\n### Workaround 1 - Configure your webserver\n\nYou should ensure that you never route requests with a wrong host header to your application. The workaround depends on which web server you are using to proxy requests to your application. In general it involves ensuring that the web server has two virtual hosts defined:\n\n1. **Default virtual host**: a dummy default virtual host that by default is used unless the webserver can match the host header to another virtual host (i.e. a catch-all).\n2. **Application virtual host**: the application virtual host responsible for proxing requests to the application, and configured to only reply to a whitelist of host headers.\n\nNote, for instance in Nginx if you only configure the application virtual host, by default, it will also act as the default virtual host despite you having configured a whitelist of host headers.\n\nBelow is an example for Nginx. Note for clarity we have only included the virtual host for port 443, but this also extends to virtual hosts running on any other port.\n```\n# etc/nginx/nginx.conf\nhttp {\n  # ...\n  include /etc/nginx/conf.d/*.conf;\n}\n```\n\n**Default virtual host**\n\nNotice, the ``server_name`` is ``_`` and the ``listen`` directive has it marked as ``default_server``.\n\n```\n# etc/nginx/conf.d/default.conf\nserver {\n  listen 443 default_server;\n  listen [::]:443 default_server;\n  server_name _;\n\n  # ... \n\n  return 301 https://www.example.com;\n}\n```\n\n**Application virtual host**\n\nNotice, the ``server_name`` is set to the host header whitelist.\n\n```\n# etc/nginx/conf.d/app.conf\nserver {\n  listen 443;\n  listen [::]:443;\n  server_name www.example.com;\n\n  # ...\n}\n```\n\n### Workaround 2 - Include application snippet\n\nWe strongly recommend that you use the method described in Workaround 1.\n\nIf you are not able to upgrade to the patched versions of Invenio-App, you can include the following code snippet in your application to force evaluation of ``request.hosts``.\n\n```python\n@app.before_request\ndef before_request():\n    request.host\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org). Top 1 search result is pypi:invenio-app. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:invenio-app pypi:invenio-app."}]}, {"id": "GHSA-mfv8-q39f-mgfg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Cross-Site Scripting (XSS) vulnerability in Jinja templates\n\n### Impact\nA Cross-Site Scripting (XSS) vulnerability was discovered in two Jinja templates in the Invenio-Communities module. The vulnerability allows a user to create a new community and include script element tags inside the description and page fields. \n\n### Patches\nThe problem has been patched in v1.0.0a20.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org). Top 1 search result is pypi:invenio-communities. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:invenio-communities."}]}, {"id": "GHSA-9ccv-p7fg-m73x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Description\n\npython-libnmap is affected by a Billion-Laughs -style XML injection vulnerability.\n\n### PoC\n\n```python\nty = NmapParser()\n\npayload = \"\"\"\n<!DOCTYPE lolz [\n <!ENTITY lol \"lol\">\n <!ELEMENT lolz (#PCDATA)>\n <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n]>\n<lolz><hello>&lol3;</hello></lolz>\n\"\"\"\n\nty.parse(payload)\n```. Top 1 search result is pypi:python-libnmap. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-libnmap."}]}, {"id": "GHSA-vg35-vc9f-q7x2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ladon since 0.6.1 (since ebef0aae48af78c159b6fce81bc6f5e7e0ddb059) is affected by: XML External Entity (XXE). The impact is: Information Disclosure, reading files and reaching internal network endpoints. The component is: SOAP request handlers. For instance: https://bitbucket.org/jakobsg/ladon/src/42944fc012a3a48214791c120ee5619434505067/src/ladon/interfaces/soap.py#lines-688. The attack vector is: Send a specially crafted SOAP call.. Top 1 search result is pypi:ladon. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ladon."}]}, {"id": "GHSA-mpf2-q34c-fc6j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: scapy is affected by a Denial of Service vulnerability resulting in an infinite loop and resource consumption rendering the program unresponsive. The component is: `_RADIUSAttrPacketListField.getfield(self..)`. The attack vector is over the network or in a pcap. both work.. Top 1 search result is pypi:scapy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:scapy."}]}, {"id": "GHSA-h582-2pch-3xv3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-h92m-42h4-82f6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Incorrect query parsing\n\n### Impact\nAll users of versions prior to 0.5.1 can receive incorrect response from daemon under rare conditions, rendering downgrade of effective STS policy.\n\n### Patches\nProblem has been patched in version 0.5.1\n\n### Workarounds\nUsers may remediate this vulnerability without upgrading by applying [these patches](https://gist.github.com/Snawoot/b9da85d6b26dea5460673b29df1adc6b) to older suppoorted versions.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [postfix-mta-sts-resolver repo](https://github.com/Snawoot/postfix-mta-sts-resolver)\n* Email me at [vladislav at vm-0 dot com](mailto:vladislav-ex-gh-advisory@vm-0.com). Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:postfix-mta-sts-resolver."}]}, {"id": "GHSA-vxh3-mvv7-265j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Cross-Site Scripting (XSS) vulnerability in administration interface\n\n### Impact\nA Cross-Site Scripting (XSS) vulnerability was discovered when rendering JSON for a record in the administration interface. The vulnerability could be exploited by e.g. a user who had access to upload a new record, that an admin user would then later view in the admin interface.\n\n### Patches\nAll supported versions of Invenio-Records have been patched. You should upgrade to either v1.0.1, v1.1.1 or v1.2.2\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org). Top 1 search result is pypi:invenio-records. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:invenio-records pypi:invenio-records pypi:invenio-records."}]}, {"id": "GHSA-grgm-pph5-j5h7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was discovered in the way Ansible templating was implemented in versions before 2.6.18, 2.7.12 and 2.8.2, causing the possibility of information disclosure through unexpected variable substitution. By taking advantage of unintended variable substitution the content of any variable may be disclosed.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible pypi:ansible."}]}, {"id": "GHSA-j9m2-6hq2-4r3c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Cross-Site Scripting (XSS) vulnerability in JSON, Markdown and iPython Notebook previewers\n\n### Impact\nSeveral Cross-Site Scripting (XSS) vulnerabilities have been found in the JSON, Markdown and iPython Notebook previewers. The vulnerabilities would allow a malicous user to upload a JSON, Markdown or Notebook file with embedded scripts that would be executed by a victims browser.\n\n### Patches\nInvenio-Previewer v1.0.0a12 fixes the issue.\n\n### Workarounds\nYou can remediate the vulnerability without upgrading by disabling the affected previewers. You do this by adding the following to your configuration:\n\n```python\nPREVIEWER_PREFERENCE = [\n    'csv_dthreejs',\n    'simple_image',\n    # 'json_prismjs',\n    'xml_prismjs',\n    # 'mistune',\n    'pdfjs',\n    # 'ipynb',\n    'zip',\n]\n```\n\nAfterwards, you should not be able to preview JSON, Markdown or iPython Notebook files.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org). Top 1 search result is pypi:invenio-previewer. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:invenio-previewer."}]}, {"id": "GHSA-j8j8-348v-wfm3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: OneLogin PythonSAML 2.3.0 and earlier may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.. Top 1 search result is pypi:python-saml. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-saml."}]}, {"id": "GHSA-r6v3-hpxj-r8rv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A code injection issue was discovered in PyXDG before 0.26 via crafted Python code in a Category element of a Menu XML document in a .menu file. XDG_CONFIG_DIRS must be set up to trigger xdg.Menu.parse parsing within the directory containing this file. This is due to a lack of sanitization in xdg/Menu.py before an eval call.. Top 1 search result is pypi:pyxdg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyxdg."}]}, {"id": "GHSA-6cc5-2vg4-cc7m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Twisted before 19.2.1, twisted.web did not validate or sanitize URIs or HTTP methods, allowing an attacker to inject invalid characters such as CRLF.. Top 1 search result is pypi:twisted. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:twisted."}]}, {"id": "GHSA-22mf-97vh-x8rw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ** DISPUTED ** A deserialization vulnerability exists in the way parso through 0.4.0 handles grammar parsing from the cache. Cache loading relies on pickle and, provided that an evil pickle can be written to a cache grammar file and that its parsing can be triggered, this flaw leads to Arbitrary Code Execution.  NOTE: This is disputed because \"the cache directory is not under control of the attacker in any common configuration.\". Top 1 search result is pypi:parso. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:parso."}]}, {"id": "GHSA-7rp2-fm2h-wchj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-frxx-2m33-6wcr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Google TensorFlow 1.7 and below is affected by: Buffer Overflow. The impact is: execute arbitrary code (local). Users passing a malformed or malicious version of a TFLite graph into TOCO will cause TOCO to crash or cause a buffer overflow, potentially allowing malicious code to be executed.\n\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-8p7v-2jvj-v54r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-mfg7-x5m7-6p8w", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: NULL pointer dereference in Google TensorFlow before 1.12.2 could cause a denial of service via an invalid GIF file.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-rv62-4pmj-xw6h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An Open Redirect vulnerability for all browsers in Jupyter Notebook before 5.7.8 and some browsers (Chrome, Firefox) in JupyterHub before 0.9.6 allows crafted links to the login page, which will redirect to a malicious site after successful login. Servers running on a base_url prefix are not affected.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook pypi:jupyterhub."}]}, {"id": "GHSA-5xc6-fpc7-4qvg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The `Serialize.deserialize()` method in CoAPthon 3.1, 4.0.0, 4.0.1, and 4.0.2 mishandles certain exceptions, leading to a denial of service in applications that use this library (e.g., the standard CoAP server, CoAP client, CoAP reverse proxy, example collect CoAP server and client) when they receive crafted CoAP messages.. Top 1 search result is pypi:CoAPthon. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:CoAPthon."}]}, {"id": "GHSA-38fc-9xqv-7f7q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.. Top 1 search result is pypi:SQLAlchemy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:SQLAlchemy."}]}, {"id": "GHSA-mw6v-crh8-8533", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Issue Description\nGoogle TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent. The block size in meta file might contain a large int64 value which causes an integer overflow upon addition. Subsequent code using n as index may cause an out-of-bounds read.\n\n### Impact\nA maliciously crafted meta checkpoint could be used to cause the TensorFlow process to perform an out of bounds read on in process memory.\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-943p-xc6m-c6gr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2018-7576,\nCVE-2018-21233. Reason: this candidate was intended for one issue, but the\ndescription and references inadvertently combined multiple issues. Notes:\nAll CVE users should consult CVE-2018-7576 and CVE-2018-21233 to determine\nwhich ID is appropriate. All references and descriptions in this candidate\nhave been removed to prevent accidental usage.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-jfq2-rj7f-9gvf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Google TensorFlow 1.6.x and earlier is affected by: Null Pointer Dereference. The type of exploitation is: context-dependent.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-rcx2-m7jp-p9wj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Jupyter Notebook before 5.7.8, an open redirect can occur via an empty netloc. This issue exists because of an incomplete fix for CVE-2019-10255.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook."}]}, {"id": "GHSA-74xw-82v7-hmrm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-dbusmock before version 0.15.1 AddTemplate() D-Bus method call or DBusTestCase.spawn_server_template() method could be tricked into executing malicious code if an attacker supplies a .pyc file.. Top 1 search result is pypi:python-dbusmock. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-dbusmock."}]}, {"id": "GHSA-q492-f7gr-27rp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Invalid memory access and/or a heap buffer overflow in the TensorFlow XLA compiler in Google TensorFlow before 1.7.1 could cause a crash or read from other parts of process memory via a crafted configuration file.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-c6fm-rgw4-8q73", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Serialize.deserialize() method in CoAPthon3 1.0 and 1.0.1 mishandles certain exceptions, leading to a denial of service in applications that use this library (e.g., the standard CoAP server, CoAP client, example collect CoAP server and client) when they receive crafted CoAP messages.. Top 1 search result is pypi:CoAPthon3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:CoAPthon3."}]}, {"id": "GHSA-hj2j-77xm-mc5v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Pallets Jinja before 2.8.1, str.format allows a sandbox escape.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Jinja2."}]}, {"id": "GHSA-f6f2-pwrj-64h3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In `trytond/model/modelstorage.py` in Tryton 4.2 before 4.2.21, 4.4 before 4.4.19, 4.6 before 4.6.14, 4.8 before 4.8.10, and 5.0 before 5.0.6, an authenticated user can order records based on a field for which he has no access right. This may allow the user to guess values.. Top 1 search result is pypi:trytond. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:trytond pypi:trytond pypi:trytond pypi:trytond pypi:trytond."}]}, {"id": "GHSA-74vq-h4q8-x6jv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible fetch module before versions 2.5.15, 2.6.14, 2.7.8 has a path traversal vulnerability which allows copying and overwriting files outside of the specified destination in the local ansible controller host, by not restricting an absolute path.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible pypi:ansible."}]}, {"id": "GHSA-926q-wxr6-3crq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Roundup 1.6 allows XSS via the URI because frontends/roundup.cgi and roundup/cgi/wsgi_handler.py mishandle 404 errors.. Top 1 search result is pypi:roundup. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:roundup."}]}, {"id": "GHSA-qx2v-j445-g354", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Memcpy parameter overlap in Google Snappy library 1.1.4, as used in Google TensorFlow before 1.7.1, could result in a crash or read from other parts of process memory.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow."}]}, {"id": "GHSA-887w-45rq-vxgf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.. Top 1 search result is pypi:SQLAlchemy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:SQLAlchemy."}]}, {"id": "GHSA-mh33-7rrq-662w", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the `ssl_context`, `ca_certs`, or `ca_certs_dir` argument.. Top 1 search result is pypi:urllib3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:urllib3."}]}, {"id": "GHSA-w6j4-3gh2-9f5j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A number of HTTP endpoints in the Airflow webserver (both RBAC and classic) did not have adequate protection and were vulnerable to cross-site request forgery attacks.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-462w-v97r-4m45", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Pallets Jinja before 2.10.1, `str.format_map` allows a sandbox escape.\n\nThe sandbox is used to restrict what code can be evaluated when rendering untrusted, user-provided templates. Due to the way string formatting works in Python, the `str.format_map` method could be used to escape the sandbox.\n\nThis issue was previously addressed for the `str.format` method in Jinja 2.8.1, which discusses the issue in detail. However, the less-common `str.format_map` method was overlooked. This release applies the same sandboxing to both methods.\n\nIf you cannot upgrade Jinja, you can override the `is_safe_attribute` method on the sandbox and explicitly disallow the `format_map` method on string objects.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Jinja2."}]}, {"id": "GHSA-8554-jxcw-454q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in webargs before 5.1.3, as used with marshmallow and other products. JSON parsing uses a short-lived cache to store the parsed JSON body. This cache is not thread-safe, meaning that incorrect JSON payloads could have been parsed for concurrent requests.. Top 1 search result is pypi:webargs. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:webargs."}]}, {"id": "GHSA-gcm4-q2pg-xw89", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A code injection issue was discovered in ipycache versions up to 0.1.4.. Top 1 search result is pypi:ipycache. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ipycache."}]}, {"id": "GHSA-2fch-jvg5-crf6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-gnupg 0.4.3 allows context-dependent attackers to trick gnupg to decrypt other ciphertext than intended. To perform the attack, the passphrase to gnupg must be controlled by the adversary and the ciphertext should be trusted. Related to a \"CWE-20: Improper Input Validation\" issue affecting the affect functionality component.. Top 1 search result is pypi:python-gnupg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-gnupg."}]}, {"id": "GHSA-f58w-649r-qjr9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Splunk-SDK-Python before 1.6.6 does not properly verify untrusted TLS server certificates, which could result in man-in-the-middle attacks.. Top 1 search result is pypi:splunk-sdk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:splunk-sdk."}]}, {"id": "GHSA-99cv-8cvv-666c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Apache Airflow before 1.10.2, a malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-wh4h-v3f2-r2pp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the `django.utils.numberformat.format()` function.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-32f7-cmr3-vpjv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: **Withdrawn:** Duplicate of GHSA-6m9g-jr8c-cqw3. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aioxmpp."}]}, {"id": "GHSA-rv95-4wxj-6fqq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Pylons Colander through 1.6, the URL validator allows an attacker to potentially cause an infinite loop thereby causing a denial of service via an unclosed parenthesis.. Top 1 search result is pypi:colander. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:colander."}]}, {"id": "GHSA-fvxv-9xxr-h7wj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: When using PySpark , it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application. This affects versions 1.x, 2.0.x, 2.1.x, 2.2.0 to 2.2.2, and 2.3.0 to 2.3.1.. Top 1 search result is pypi:pyspark. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyspark pypi:pyspark."}]}, {"id": "GHSA-27p5-7cw6-m45h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The unoconv package before 0.9 mishandles untrusted pathnames, leading to SSRF and local file inclusion.. Top 1 search result is pypi:unoconv. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:unoconv."}]}, {"id": "GHSA-pwfw-mgfj-7g3g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## possible DoS in signature verification and signature malleability \n\n### Impact\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\n\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\n\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\n\n### Patches\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\n\nThey are part of the 0.13.3 release.\n\nThere are no plans to backport them to earlier releases.\n\n### Workarounds\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\n\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\n\n### References\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\n. Top 1 search result is pypi:ecdsa. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ecdsa."}]}, {"id": "GHSA-vfj6-275q-4pvm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nsend_email in graphite-web/webapp/graphite/composer/views.py in Graphite through 1.1.5 is vulnerable to SSRF. The vulnerable SSRF endpoint can be used by an attacker to have the Graphite web server request any resource. The response to this SSRF request is encoded into an image file and then sent to an e-mail address that can be supplied by the attacker. Thus, an attacker can exfiltrate any information. Email will be send through SMTP server configured in Graphite, by default it's 'localhost'\n\n### Patches\nProblem was patched in Graphite-web 1.1.6. Also patches was released for graphite-web [1.0.x](https://github.com/graphite-project/graphite-web/pull/2501) and [0.9.x](https://github.com/graphite-project/graphite-web/pull/2500), and we'll discuss releases of non-supported branches later.\n\n### Workarounds\nYou can manually remove function `send_email` from file `webapp/graphite/composer/views.py`. This function are not in use and will not affect your Graphite installation.\n\n### References\nFor more information check this graphite-web Github issue #2008 \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Add comment in [issue #2008](https://github.com/graphite-project/graphite-web/issues/2008). Top 1 search result is pypi:graphite-web. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:graphite-web."}]}, {"id": "GHSA-j7mj-748x-7p78", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pillow."}]}, {"id": "GHSA-67cx-rhhq-mfhq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Local file disclosure through LaTeX injection\n\n### Impact\nAn external audit of the Indico codebase has discovered a vulnerability in Indico's LaTeX sanitization code, which could have malicious users to run unsafe LaTeX commands on the server. Such commands allowed for example to read local files (e.g. `indico.conf`).\n\nAs far as we know it is not possible to write files or execute code using this vulnerability.\n\n### Patches\nYou need to update to [Indico 2.2.3](https://github.com/indico/indico/releases/tag/v2.2.3) as soon as possible.\nWe also released [Indico 2.1.10](https://github.com/indico/indico/releases/tag/v2.1.10) in case you cannot update to 2.2 for some reason.\nSee https://docs.getindico.io/en/stable/installation/upgrade/ for instructions on how to update.\n\n### Workarounds\nSetting `XELATEX_PATH = None` in `indico.conf` will result in an error when building a PDF, but without being able to run xelatex, the vulnerability cannot be abused.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a thread in [our forum](https://talk.getindico.io/)\n* Email us privately at [indico-team@cern.ch](mailto:indico-team@cern.ch)\n\n. Top 1 search result is pypi:indico. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:indico pypi:indico."}]}, {"id": "GHSA-68wv-rjrm-576p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Apache Airflow 1.8.2 and earlier, a CSRF vulnerability allowed for a remote command injection on a default install of Airflow.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-7qqv-r2q4-jxhm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: privacyIDEA version 2.23.1 and earlier contains a Improper Input Validation vulnerability in token validation api that can result in Denial-of-Service. This attack appear to be exploitable via http request with user=<space>&pass= to /validate/check url. This vulnerability appears to have been fixed in 2.23.2.. Top 1 search result is pypi:privacyIDEA. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:privacyIDEA."}]}, {"id": "GHSA-9r8w-6x8c-6jr9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with `DEBUG = True` (which makes this page accessible) in your production settings.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-8fg4-j562-mjrc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Apache Airflow 1.8.2 and earlier, an authenticated user can execute code remotely on the Airflow webserver by creating a special object.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-9gqg-3fxr-9hv7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Apache Airflow 1.8.2 and earlier, an experimental Airflow feature displayed authenticated cookies, as well as passwords to databases used by Airflow. An attacker who has limited access to airflow, weather it be via XSS or by leaving a machine unlocked can exfil all credentials from the system.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-337x-4q8g-prc5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in `django.views.defaults.page_not_found()`, leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-r28v-mw67-m5p9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The `django.utils.html.urlize()` function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The `urlize()` function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-rprw-h62v-c2w7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In PyYAML before 4.1, the `yaml.load()` API could execute arbitrary code. In other words, `yaml.safe_load` is not used.. Top 1 search result is pypi:pyyaml. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:PyYAML."}]}, {"id": "GHSA-42fp-4hm3-j8r7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in the link dialogue in GUI editor in MoinMoin before 1.9.10 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:moin."}]}, {"id": "GHSA-77rc-x84q-pv4f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The LDAP auth backend (airflow.contrib.auth.backends.ldap_auth) prior to Apache Airflow 1.10.1 was misconfigured and contained improper checking of exceptions which disabled server certificate checking.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-mh24-7wvg-v88g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: CRLF Injection in pypiserver 1.2.5 and below allows attackers to set arbitrary HTTP headers and possibly conduct XSS attacks via a `%0d%0a` in a URI.. Top 1 search result is pypi:pypiserver. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pypiserver."}]}, {"id": "GHSA-38rv-5jqc-m2cv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the `Resource.get` method that could result in compromise of API keys or other critical resources.. Top 1 search result is pypi:recurly. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:recurly pypi:recurly pypi:recurly pypi:recurly pypi:recurly pypi:recurly pypi:recurly."}]}, {"id": "GHSA-jhjh-ghwx-6h7r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: modulemd 1.3.1 and earlier uses an unsafe function for processing externally provided data, leading to remote code execution.. Top 1 search result is pypi:modulemd. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:modulemd."}]}, {"id": "GHSA-h4hv-m4h4-mhwg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the `django.views.static.serve()` view could redirect to any other domain, aka an open redirect vulnerability.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-2x54-j4m3-r6wx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Sqla_yaml_fixtures versions up to 0.9.1 allows local users to execute arbitrary python code via the fixture_text argument in `sqla_yaml_fixtures.load`.. Top 1 search result is pypi:sqla-yaml-fixtures. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:sqla-yaml-fixtures."}]}, {"id": "GHSA-98gj-wwxm-cj3h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in the _keyify function in mistune.py in Mistune before 0.8.1 allows remote attackers to inject arbitrary web script or HTML by leveraging failure to escape the \"key\" argument.. Top 1 search result is pypi:mistune. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mistune."}]}, {"id": "GHSA-xvwv-6wvx-px9x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: By linking to a specific url in Plone 2.5-5.1rc1 with a parameter, an attacker could send you to his own website. On its own this is not so bad: the attacker could more easily link directly to his own website instead. But in combination with another attack, you could be sent to the Plone login form and login, then get redirected to the specific url, and then get a second redirect to the attacker website. . Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:plone pypi:plone."}]}, {"id": "GHSA-m9mq-p2f9-cfqv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Bleach 2.1.x before 2.1.3. Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized.. Top 1 search result is pypi:bleach. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:bleach."}]}, {"id": "GHSA-37hp-765x-j95x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-2f9x-5v75-3qv4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-g86p-hgx5-2pfh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Buildbot before 1.8.2 and 2.x before 2.3.1 accepts a user-submitted authorization token from OAuth and uses it to authenticate a user. If an attacker has a token allowing them to read the user details of a victim, they can login as the victim.. Top 1 search result is pypi:buildbot. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:buildbot pypi:buildbot."}]}, {"id": "GHSA-844w-j86r-4x2j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nA heap buffer overflow in `UnsortedSegmentSum` can be produced when the `Index` template argument is `int32`. In this case `data_size` and `num_segments` fields are truncated from `int64` to `int32` and can produce negative numbers, resulting in accessing out of bounds heap memory.\n\nThis is unlikely to be exploitable and was detected and fixed internally. We are making the security advisory only to notify users that it is better to update to TensorFlow 1.15 or 2.0 or later as these versions already have this fixed.\n\n### Patches\n\nPatched by db4f9717c41bccc3ce10099ab61996b246099892 and released in all official releases after 1.15 and 2.0.\n\n### For more information\nPlease consult [`SECURITY.md`](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-g2xc-35jw-c63p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nWaitress would parse the `Transfer-Encoding` header and only look for a single string value, if that value was not `chunked` it would fall through and use the `Content-Length` header instead.\n\nAccording to the HTTP standard `Transfer-Encoding` should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with `chunked`.\n\nRequests sent with:\n\n```\nTransfer-Encoding: gzip, chunked\n```\n\nWould incorrectly get ignored, and the request would use a `Content-Length` header instead to determine the body size of the HTTP message.\n\nThis could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress will now return a 501 Not Implemented error if the `Transfer-Encoding` is not `chunked` or contains multiple elements. Waitress does not support any transfer codings such as `gzip` or `deflate`.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&#39;t cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related). Top 1 search result is pypi:waitress. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:waitress."}]}, {"id": "GHSA-m3jw-62m7-jjcm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: typed_ast 1.3.0 and 1.3.1 has a handle_keywordonly_args out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.). Top 1 search result is pypi:typed-ast. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:typed-ast."}]}, {"id": "GHSA-4ppp-gpcr-7qf6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nWaitress would header fold a double `Content-Length` header and due to being unable to cast the now comma separated value to an integer would set the `Content-Length` to 0 internally.\n\nSo a request with:\n\n```\nContent-Length: 10\nContent-Length: 10\n```\n\nwould get transformed to:\n\n```\nContent-Length: 10, 10\n```\n\nWhich would Waitress would then internally set to `Content-Lenght: 0`.\n\nWaitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related). Top 1 search result is pypi:waitress. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:waitress."}]}, {"id": "GHSA-2mrj-435v-c2cr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: **Withdrawn:** Duplicate of GHSA-pwfw-mgfj-7g3g.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ecdsa."}]}, {"id": "GHSA-7xxv-wpxj-mx5v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: typed_ast 1.3.0 and 1.3.1 has an ast_for_arguments out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.). Top 1 search result is pypi:typed-ast. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:typed-ast."}]}, {"id": "GHSA-3c45-wgjp-7v9r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Python Twisted 14.0.0 `trustRoot` is not respected in HTTP client. Top 1 search result is pypi:twisted. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:twisted."}]}, {"id": "GHSA-m5ff-3wj3-8ph4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nIf a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.\n\n```\nContent-Length: 10\nTransfer-Encoding: [\\x0b]chunked\n```\n\nFor clarity:\n\n```\n0x0b == vertical tab\n```\n\nWould get parsed by Waitress as being a `chunked` request, but a front-end server would use the `Content-Length` instead as the `Transfer-Encoding` header is considered invalid due to containing invalid characters.\n\nIf a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.\n\n### Patches\n\nPlease upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.\n\nWaitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.\n\n### Workarounds\n\nYou may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.\n\nWaitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.\n\n### References\n\nThis was mentioned in https://portswigger.net/research/http-desync-attacks-what-happened-next and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: https://nathandavison.com/blog/haproxy-http-request-smuggling\n\n### Thanks\n\nThe Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related). Top 1 search result is pypi:waitress. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:waitress."}]}, {"id": "GHSA-hvmf-r92r-27hr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.). Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-pg36-wpm5-g57p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nWaitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (https://tools.ietf.org/html/rfc7230#section-3.5) which states:\n\n      Although the line terminator for the start-line and header fields is\n      the sequence CRLF, a recipient MAY recognize a single LF as a line\n      terminator and ignore any preceding CR.\n\nUnfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.\n\nExample:\n\n```\nContent-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n```\n\nWould get treated by Waitress as if it were:\n\n```\nContent-Length: 100\nX-Header: x\nContent-Length: 0\n```\n\nThis could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.\n\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related). Top 1 search result is pypi:waitress. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:waitress."}]}, {"id": "GHSA-5r76-cjf4-c9qx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Mayan EDMS before 3.0.2. The Cabinets app has XSS via a crafted cabinet label.. Top 1 search result is pypi:mayan-edms. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mayan-edms."}]}, {"id": "GHSA-fpwp-69xv-c67f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The pypi package aiohttp-session before 2.4.0 contained a Session Fixation vulnerability in `load_session` function for RedisStorage that can result in Session Hijacking. This attack appear to be exploitable via Any method that allows setting session cookies (`?session=<>`, or meta tags or script tags with Set-Cookie).. Top 1 search result is pypi:aiohttp-session. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aiohttp-session."}]}, {"id": "GHSA-m4fw-77v7-924m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: qutebrowser version introduced in v0.11.0 ([1179ee7a937fb31414d77d9970bac21095358449](https://github.com/qutebrowser/qutebrowser/commit/5a7869f2feaa346853d2a85413d6527c87ef0d9f)) contains a Cross Site Scripting (XSS) vulnerability in history command, `qute://history` page that can result in Via injected JavaScript code, a website can steal the user's browsing history. This attack appear to be exploitable via the victim must open a page with a specially crafted `<title>` attribute, and then open the `qute://history` site via the `:history` command. This vulnerability appears to have been fixed in fixed in v1.3.3 ([4c9360237f186681b1e3f2a0f30c45161cf405c7](https://github.com/qutebrowser/qutebrowser/commit/4c9360237f186681b1e3f2a0f30c45161cf405c7), to be released today) and v1.4.0 ([5a7869f2feaa346853d2a85413d6527c87ef0d9f](https://github.com/qutebrowser/qutebrowser/commit/5a7869f2feaa346853d2a85413d6527c87ef0d9f), released later this week).. Top 1 search result is pypi:qutebrowser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:qutebrowser."}]}, {"id": "GHSA-xqvg-xm9m-p2c4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in GNU Mailman before 2.1.28. A crafted URL can cause arbitrary text to be displayed on a web page from a trusted site.. Top 1 search result is pypi:mailman. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mailman."}]}, {"id": "GHSA-h6h9-pphv-m266", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: topydo contains a CWE-20: Improper Input Validation vulnerability in `ListFormatParser::parse`, file `topydo/lib/ListFormat.py` line 292 as of d4f843dac71308b2f29a7c2cdc76f055c3841523 that can result in Injection of arbitrary bytes to the terminal, including terminal escape code sequences. This attack appear to be exploitable via The victim must open a todo.txt with at least one specially crafted line.. Top 1 search result is pypi:topydo. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:topydo."}]}, {"id": "GHSA-6g87-ff9q-v847", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Python websockets library version 4 contains a CWE-409: Improper Handling of Highly Compressed Data (Data Amplification) vulnerability in Servers and clients, unless configured with compression=None that can result in Denial of Service by memory exhaustion. This attack appears to be exploitable via sending a specially crafted frame on an established connection. This vulnerability appears to have been fixed in version 5.0. Top 1 search result is pypi:websockets. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:websockets."}]}, {"id": "GHSA-fpcv-j2q9-vqhw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Mayan EDMS before 3.0.2. The Appearance app sets window.location directly, leading to XSS.. Top 1 search result is pypi:mayan-edms. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mayan-edms."}]}, {"id": "GHSA-w578-j992-554x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible before versions 2.3.1.0 and 2.4.0.0 fails to properly mark lookup-plugin results as unsafe. If an attacker could control the results of lookup() calls, they could inject Unicode strings to be parsed by the jinja2 templating system, resulting in code execution. By default, the jinja2 templating language is now marked as 'unsafe' and is not evaluated.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-5h6m-9mvx-m6c5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Mayan EDMS before 3.0.3. The Tags app has XSS because tag label values are mishandled.. Top 1 search result is pypi:mayan-edms. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mayan-edms."}]}, {"id": "GHSA-2jc8-4r6g-282j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The shell_quote function in python-gnupg 0.3.5 does not properly escape characters, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"\\\" (backslash) characters to form multi-command sequences, a different vulnerability than CVE-2014-1927.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.. Top 1 search result is pypi:python-gnupg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-gnupg."}]}, {"id": "GHSA-vqgp-4jgj-5j64", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Py-EVM v0.2.0-alpha.33 allows attackers to make a vm.execute_bytecode call that triggers computation._stack.values with '\"stack\": [100, 100, 0]' where b'\\x' was expected, resulting in an execution failure because of an invalid opcode. This is reportedly related to \"smart contracts can be executed indefinitely without gas being paid.\". Top 1 search result is pypi:py-evm. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:py-evm."}]}, {"id": "GHSA-49qr-xh3w-h436", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Jupyter Notebook before 5.7.1 allows XSS via an untrusted notebook because nbconvert responses are considered to have the same origin as the notebook server. In other words, nbconvert endpoints can execute JavaScript with access to the server API. In notebook/nbconvert/handlers.py, NbconvertFileHandler and NbconvertPostHandler do not set a Content Security Policy to prevent this.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook."}]}, {"id": "GHSA-3p4q-x8f3-p7vq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Jupyter Notebook before 5.7.2 allows XSS via a crafted directory name because notebook/static/tree/js/notebooklist.js handles certain URLs unsafely.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook."}]}, {"id": "GHSA-c2fx-8r76-gh36", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-gnupg before 0.3.5 allows context-dependent attackers to execute arbitrary commands via shell metacharacters in unspecified vectors.. Top 1 search result is pypi:python-gnupg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-gnupg."}]}, {"id": "GHSA-r3vr-prwv-86g9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The shell_quote function in python-gnupg 0.3.5 does not properly quote strings, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"$(\" command-substitution sequences, a different vulnerability than CVE-2014-1928.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.. Top 1 search result is pypi:python-gnupg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-gnupg."}]}, {"id": "GHSA-32w7-9whp-cjp9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The client in Tryton 5.x before 5.0.1 tries to make a connection to the bus in cleartext instead of encrypted under certain circumstances in bus.py and jsonrpc.py. This connection attempt fails, but it contains in the header the current session of the user. This session could then be stolen by a man-in-the-middle.. Top 1 search result is pypi:tryton. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tryton."}]}, {"id": "GHSA-j7c4-2xj8-wm7r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-kdcproxy before 0.3.2 allows remote attackers to cause a denial of service via a large POST request.. Top 1 search result is pypi:kdcproxy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:kdcproxy."}]}, {"id": "GHSA-vcr5-xr9h-mvc5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-gnupg 0.3.5 and 0.3.6 allow for shell injection via a failure to escape backslashes in the `shell_quote()` function. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.. Top 1 search result is pypi:python-gnupg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-gnupg."}]}, {"id": "GHSA-vxp9-wv2f-wqmw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Versions of Superset prior to 0.23 used an unsafe load method from the pickle library to deserialize data leading to possible remote code execution. Note Superset 0.23 was released prior to any Superset release under the Apache Software Foundation.. Top 1 search result is pypi:apache-superset. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:superset."}]}, {"id": "GHSA-xrr4-74mc-rpjc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: pyro before 3.15 unsafely handles pid files in temporary directory locations and opening the pid file as root. An attacker can use this flaw to overwrite arbitrary files via symlinks.. Top 1 search result is pypi:pyro. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyro."}]}, {"id": "GHSA-562c-5r94-xh97", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Pallets Project flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.. Top 1 search result is pypi:flask. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:flask."}]}, {"id": "GHSA-hgg3-g7gr-66r7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: PyCryptodome before 3.6.6 has an integer overflow in the data_len variable in AESNI.c, related to the AESNI_encrypt and AESNI_decrypt functions, leading to the mishandling of messages shorter than 16 bytes.. Top 1 search result is pypi:pycryptodome. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pycryptodome."}]}, {"id": "GHSA-hg4c-rgvm-964g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.. Top 1 search result is pypi:pycsw. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pycsw pypi:pycsw pypi:pycsw."}]}, {"id": "GHSA-fwr5-q9rx-294f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The administrative interface in django.contrib.admin in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not properly restrict use of the query string to perform certain object filtering, which allows remote authenticated users to obtain sensitive information via a series of requests containing regular expressions, as demonstrated by a created_by__password__regex parameter.. Top 1 search result is pypi:django-filter. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-3hq4-f2v6-q338", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Kotti before 1.3.2 and 2.x before 2.0.0b2 has CSRF in the local roles implementation, as demonstrated by triggering a permission change via a `/admin-document/@@share` request.. Top 1 search result is pypi:Kotti. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Kotti pypi:Kotti."}]}, {"id": "GHSA-7g9h-c88w-r7h2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-8xjv-v9xq-m5h9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Buffer overflow in the `ImagingFliDecode` function in `libImaging/FliDecode.c` in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-cq94-qf6q-mf2h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Python package pysaml2 version 4.5.0 and earlier reuses the initialization vector across encryptions in the IDP server, resulting in weak encryption of data.. Top 1 search result is pypi:pysaml2. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pysaml2."}]}, {"id": "GHSA-hxf9-7h4c-f5jv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: webhooks/base.py in Anymail (aka django-anymail) before 1.2.1 is prone to a timing attack vulnerability on the WEBHOOK_AUTHORIZATION secret, which allows remote attackers to post arbitrary e-mail tracking events.. Top 1 search result is pypi:django-anymail. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-anymail."}]}, {"id": "GHSA-qc55-vm3j-74gp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: JSNAPy is an open source python version of Junos Snapshot Administrator developed by Juniper available through github. The default configuration and sample files of JSNAPy automation tool versions prior to 1.3.0 are created world writable. This insecure file and directory permission allows unprivileged local users to alter the files under this directory including inserting operations not intended by the package maintainer, system administrator, or other users. This issue only affects users who downloaded and installed JSNAPy from github.. Top 1 search result is pypi:jsnapy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:jsnapy."}]}, {"id": "GHSA-8jxq-75rw-fhj9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: `io/mongo/parser.py` in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the `where` parameter.. Top 1 search result is pypi:eve. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:eve."}]}, {"id": "GHSA-7wph-fc4w-wqp2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The password reset functionality in django.contrib.auth in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not validate the length of a string representing a base36 timestamp, which allows remote attackers to cause a denial of service (resource consumption) via a URL that specifies a large base36 integer.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-77hv-8796-8ccp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope2 pypi:Plone pypi:Plone."}]}, {"id": "GHSA-6528-wvf6-f6qg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation.. Top 1 search result is pypi:pycrypto. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pycrypto."}]}, {"id": "GHSA-2p78-8hh6-96xc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via malformed XML comments.. Top 1 search result is pypi:feedparser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:feedparser."}]}, {"id": "GHSA-v7q8-wvvh-c97p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3 allows remote attackers to inject arbitrary web script or HTML via vectors related to error messages.. Top 1 search result is pypi:zope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope2 pypi:Zope2 pypi:Zope2 pypi:Zope2 pypi:Zope2."}]}, {"id": "GHSA-m85c-9mf8-m2m6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the YAML parsing functionality in config.py in Confire 0.2.0. Due to the user-specific configuration being loaded from \"~/.confire.yaml\" using the yaml.load function, a YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.. Top 1 search result is pypi:confire. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:confire."}]}, {"id": "GHSA-6cwv-x26c-w2q4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Jupyter Notebook before 5.4.1, a maliciously forged notebook file can bypass sanitization to execute JavaScript in the notebook context. Specifically, invalid HTML is 'fixed' by jQuery after sanitization, making it dangerous.. Top 1 search result is pypi:jupyter-notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook."}]}, {"id": "GHSA-ghjx-3jg5-h6r2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Mercurial before 4.1.3, \"hg serve --stdio\" allows remote authenticated users to launch the Python debugger, and consequently execute arbitrary code, by using --debugger as a repository name.. Top 1 search result is pypi:mercurial. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mercurial."}]}, {"id": "GHSA-fxpg-gg9g-76gj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django."}]}, {"id": "GHSA-rwr3-c2q8-gm56", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the `Image.core.map_buffer` in `map.c` component.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-hjf3-r7gw-9rwg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Universal Feed Parser (aka feedparser or python-feedparser) before 5.1.2 allows remote attackers to cause a denial of service (memory consumption) via a crafted XML ENTITY declaration in a non-ASCII encoded document.. Top 1 search result is pypi:feedparser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:feedparser."}]}, {"id": "GHSA-232r-66cg-79px", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step.. Top 1 search result is pypi:paramiko. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko."}]}, {"id": "GHSA-9pv8-q5rx-c8gq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the YAML parsing functionality in the `read_yaml_file` method in `io_utils.py` in django_make_app 0.1.3. A YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.. Top 1 search result is pypi:django_make_app. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django_make_app."}]}, {"id": "GHSA-p7h9-vf92-5fj5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in Plone 4.1 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted URL.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Products.PasswordResetTool pypi:Products.CMFPlone pypi:Products.CMFPlone."}]}, {"id": "GHSA-p7xc-35m8-57pr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: FedMsg 0.18.1 and older is vulnerable to a message validation flaw resulting in message validation not being enabled if configured to be on.. Top 1 search result is pypi:FedMsg. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:FedMsg."}]}, {"id": "GHSA-924m-4pmx-c67h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: pysaml2 version 4.4.0 and older accept any password when run with python optimizations enabled. This allows attackers to log in as any user without knowing their password.. Top 1 search result is pypi:pysaml2. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pysaml2."}]}, {"id": "GHSA-pcwm-8jc3-qxvj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone 4.1.3 and earlier computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-3qpr-7rmg-73v8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: AccessControl/AuthEncoding.py in Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote attackers to obtain passwords via vectors involving timing discrepancies in password validation.. Top 1 search result is pypi:AccessControl. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope2 pypi:Plone pypi:Plone."}]}, {"id": "GHSA-xpm8-98mx-h4c5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the YAML parsing functionality in the parse_yaml_query method in parser.py in MLAlchemy before 0.2.2. When processing YAML-Based queries for data, a YAML parser can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.. Top 1 search result is pypi:MLAlchemy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:MLAlchemy."}]}, {"id": "GHSA-pvhp-v9qp-xf5r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: emitters.py in Django Piston before 0.2.3 and 0.2.x before 0.2.2.1 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.\n\nDjango Tastypie has a very similar vulnerability.. Top 1 search result is pypi:django-piston. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-piston pypi:django-piston."}]}, {"id": "GHSA-w4vg-rf63-f3j3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the \"crafted image file\" approach, related to an \"Insecure Sign Extension\" issue affecting the ImagingNew in Storage.c component.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-h6hq-c896-w882", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone pypi:Plone."}]}, {"id": "GHSA-p6h9-hpcg-c6gm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone pypi:Zope2 pypi:Zope2."}]}, {"id": "GHSA-2qx8-589j-gcpx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: plone.app.users in Plone 4.0 and 4.1 allows remote authenticated users to modify the properties of arbitrary accounts via unspecified vectors, as exploited in the wild in June 2011.. Top 1 search result is pypi:plone.app.users. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:plone.app.users pypi:plone.app.users pypi:Plone."}]}, {"id": "GHSA-m242-wc86-8768", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-fedora 0.8.0 and lower is vulnerable to an open redirect, resulting in loss of CSRF protection.. Top 1 search result is pypi:python-fedora. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-fedora."}]}, {"id": "GHSA-32pc-xphx-q4f6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: gunicorn version 19.4.5 contains a CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers vulnerability in \"process_headers\" function in \"gunicorn/http/wsgi.py\" that can result in an attacker causing the server to return arbitrary HTTP headers. This vulnerability appears to have been fixed in 19.5.0.. Top 1 search result is pypi:gunicorn. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:gunicorn."}]}, {"id": "GHSA-6h52-4vmh-8x4f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0.1 allows remote attackers to cause a denial of service (application crash) via a malformed DOCTYPE declaration.. Top 1 search result is pypi:feedparser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:feedparser."}]}, {"id": "GHSA-6mww-xvh7-fq4f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Koji version 1.12, 1.13, 1.14 and 1.15 contain an incorrect access control vulnerability resulting in arbitrary filesystem read/write access. This vulnerability has been fixed in versions 1.12.1, 1.13.1, 1.14.1 and 1.15.1.. Top 1 search result is pypi:koji. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:koji pypi:koji pypi:koji pypi:koji."}]}, {"id": "GHSA-c2vx-49jm-h3f6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: XML External Entity (XXE) vulnerability in PySAML2 4.4.0 and earlier allows remote attackers to read arbitrary files via a crafted SAML XML request or response.. Top 1 search result is pypi:pysaml2. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pysaml2."}]}, {"id": "GHSA-cwh5-3cw7-4286", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: tlslite-ng version 0.7.3 and earlier, since commit [d7b288316bca7bcdd082e6ccff5491e241305233](https://github.com/tlsfuzzer/tlslite-ng/commit/d7b288316bca7bcdd082e6ccff5491e241305233) contains a CWE-354: Improper Validation of Integrity Check Value vulnerability in TLS implementation, `tlslite/utils/constanttime.py`: `ct_check_cbc_mac_and_pad()`; line `end_pos = data_len - 1 - mac.digest_size` that can result in an attacker manipulating the TLS ciphertext which will not be detected by receiving tlslite-ng. This attack appears to be exploitable via man in the middle on a network connection. This vulnerability appears to have been fixed after commit [3674815d1b0f7484454995e2737a352e0a6a93d8](https://github.com/tlsfuzzer/tlslite-ng/pull/234/commits/3674815d1b0f7484454995e2737a352e0a6a93d8).. Top 1 search result is pypi:tlslite-ng. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tlslite-ng."}]}, {"id": "GHSA-xp5m-4c9f-498q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: There is a cross-site scripting vulnerability in django-epiceditor 0.2.3 via crafted content in a form field.. Top 1 search result is pypi:django-epiceditor. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-epiceditor."}]}, {"id": "GHSA-48vv-2pmq-9fvv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, does not reseed the pseudo-random number generator (PRNG), which makes it easier for remote attackers to guess the value via unspecified vectors.  NOTE: this issue was SPLIT from CVE-2012-5508 due to different vulnerability types (ADT2).. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope2 pypi:Plone pypi:Plone."}]}, {"id": "GHSA-5mc5-5j6c-qmf9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in cloudflare-scrape 1.6.6 through 1.7.1. A malicious website owner could craft a page that executes arbitrary Python code against any cfscrape user who scrapes that website. This is fixed in 1.8.0.. Top 1 search result is pypi:cfscrape. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:cfscrape."}]}, {"id": "GHSA-8p5c-f328-9fvv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: diffoscope before 76 writes to arbitrary locations on disk based on the contents of an untrusted archive.. Top 1 search result is pypi:diffoscope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:diffoscope."}]}, {"id": "GHSA-hggx-3h72-49ww", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Buffer overflow in the `ImagingLibTiffDecode` function in `libImaging/TiffDecode.c` in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-5j2h-h5hg-3wf8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-prr5-pfr8-q9f3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ftp.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read hidden folder contents via unspecified vectors.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone pypi:Plone."}]}, {"id": "GHSA-x88j-93vc-wpmp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-c2w9-48qc-qpj4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the yaml loading functionality of ansible-vault before 1.0.5. A specially crafted vault can execute arbitrary python commands resulting in command execution. An attacker can insert python into the vault to trigger this vulnerability.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-ccmq-qvcp-5mrm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the YAML loading functionality of util.py in OwlMixin before 2.0.0a12. A \"Load YAML\" string or file (aka load_yaml or load_yamlf) can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.. Top 1 search result is pypi:owlmixin. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:owlmixin."}]}, {"id": "GHSA-p6h9-gw49-rqm4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in `markdown2` (aka python-markdown2) through 2.3.5. The `safe_mode` feature, which is supposed to sanitize user input against XSS, is flawed and does not escape the input properly. With a crafted payload, XSS can be triggered, as demonstrated by omitting the final `>` character from an IMG tag.. Top 1 search result is pypi:markdown2. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:markdown2."}]}, {"id": "GHSA-p5wr-vp8g-q5p4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone 4.x through 4.3.11 and 5.x through 5.0.6 allow remote attackers to bypass a sandbox protection mechanism and obtain sensitive information by leveraging the Python string format method.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone pypi:Plone pypi:Plone."}]}, {"id": "GHSA-hvr8-466p-75rh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Integer overflow in the `ImagingResampleHorizontal` function in `libImaging/Resample.c` in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-3c5c-7235-994j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Buffer overflow in the `ImagingPcdDecode` function in `PcdDecode.c` in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-3jqw-crqj-w8qw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-h95j-h2rv-qrg4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-6m53-c78q-7qmg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: mitmweb in mitmproxy before v4.0.4 allows DNS Rebinding attacks, related to tools/web/app.py.. Top 1 search result is pypi:mitmproxy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mitmproxy."}]}, {"id": "GHSA-879r-7f3w-8jj3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The App.Undo.UndoSupport.get_request_var_or_attr function in Zope before 2.12.21 and 3.13.x before 2.13.11, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote authenticated users to gain access to restricted attributes via unspecified vectors.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope2 pypi:Zope2 pypi:Plone pypi:Plone."}]}, {"id": "GHSA-8m3r-rv5g-fcpq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-pq3x-96c3-xgjg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The PlonePAS product 3.x before 3.9 and 3.2.x before 3.2.2, a product for Plone, does not properly handle the login form, which allows remote authenticated users to acquire the identity of an arbitrary user via unspecified vectors.. Top 1 search result is pypi:Products.PlonePAS. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Products.PlonePAS."}]}, {"id": "GHSA-4m72-rmm9-2qjr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via an unexpected URI scheme, as demonstrated by a javascript: URI.. Top 1 search result is pypi:feedparser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:feedparser."}]}, {"id": "GHSA-gcr6-rf47-jrgf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the Databook loading functionality of Tablib 0.11.4. A yaml loaded Databook can execute arbitrary python commands resulting in command execution. An attacker can insert python into loaded yaml to trigger this vulnerability.. Top 1 search result is pypi:tablib. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tablib."}]}, {"id": "GHSA-fcf9-3qw3-gxmj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.. Top 1 search result is pypi:cryptography. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:cryptography."}]}, {"id": "GHSA-xcp8-hh74-f6mc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: python-oslo-middleware before versions 3.8.1, 3.19.1, 3.23.1 is vulnerable to an information disclosure. Software using the CatchError class could include sensitive values in a traceback's error message. System users could exploit this flaw to obtain sensitive information from OpenStack component error logs (for example, keystone tokens).. Top 1 search result is pypi:oslo.middleware. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:oslo.middleware pypi:oslo.middleware pypi:oslo.middleware."}]}, {"id": "GHSA-r38r-qp28-2m63", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: base/oi/doa.py in the Rope library in CPython (aka Python) allows remote attackers to execute arbitrary code by leveraging an unsafe call to pickle.load.. Top 1 search result is pypi:rope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rope."}]}, {"id": "GHSA-9x6q-5423-w5v9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible before 1.2.1 makes it easier for remote attackers to conduct man-in-the-middle attacks by leveraging failure to cache SSH host keys.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-w64c-pxjj-h866", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible before 1.9.2 does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-6mx3-3vqg-hpp2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django."}]}, {"id": "GHSA-p28m-34f6-967q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: It was discovered that pyOpenSSL incorrectly handled memory when handling X509 objects. A remote attacker could use this issue to cause pyOpenSSL to crash, resulting in a denial of service, or possibly execute arbitrary code. This attack appears to be exploitable via Depends on the calling application and if it retains a reference to the memory. This vulnerability appears to have been fixed in 17.5.0.. Top 1 search result is pypi:pyopenssl. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyopenssl."}]}, {"id": "GHSA-9q2p-fj49-vpxj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In the marshmallow library before 2.15.1 and 3.x before 3.0.0b9 for Python, the schema \"only\" option treats an empty list as implying no \"only\" option, which allows a request that was intended to expose no fields to instead expose all fields (if the schema is being filtered dynamically using the \"only\" option, and there is a user role that produces an empty value for \"only\").. Top 1 search result is pypi:marshmallow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:marshmallow."}]}, {"id": "GHSA-x4cm-m36h-c6qj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An input validation vulnerability was found in Ansible's mysql_user module before 2.2.1.0, which may fail to correctly change a password in certain circumstances. Thus the previous password would still be active when it should have been changed.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-rh6x-qvg7-rrmj", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible."}]}, {"id": "GHSA-wgmx-52ph-qqcw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: qutebrowser before version 1.4.1 is vulnerable to a cross-site request forgery flaw that allows websites to access `qute://*` URLs. A malicious website could exploit this to load a `qute://settings/set` URL, which then sets `editor.command` to a bash script, resulting in arbitrary code execution.. Top 1 search result is pypi:qutebrowser. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:qutebrowser."}]}, {"id": "GHSA-rf4j-j272-fj86", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: `django.contrib.auth.forms.AuthenticationForm` in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the `confirm_login_allowed()` method, as demonstrated by discovering whether a user account is inactive.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-m956-frf4-m2wr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible before versions 2.1.4, 2.2.1 is vulnerable to an improper input validation in Ansible's handling of data sent from client systems. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server using the Ansible server privileges.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible."}]}, {"id": "GHSA-jwcc-j78w-j73w", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible 2.5 prior to 2.5.5, and 2.4 prior to 2.4.5, do not honor the no_log task flag for failed tasks. When the no_log flag has been used to protect sensitive data passed to a task from being logged, and that task does not run successfully, Ansible will expose sensitive data in log files and on the terminal of the user running Ansible.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible."}]}, {"id": "GHSA-jg4f-jqm5-4mgq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Ansible before version 2.2.0 fails to properly sanitize fact variables sent from the Ansible controller. An attacker with the ability to create special variables on the controller could execute arbitrary commands on Ansible clients as the user Ansible runs as.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-2rcm-phc9-3945", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: It was discovered that pyOpenSSL incorrectly handled memory when performing operations on a PKCS #12 store. A remote attacker could possibly use this issue to cause pyOpenSSL to consume resources, resulting in a denial of service.\n\nThis attack appear to be exploitable via Depends upon calling application, however it could be as simple as initiating a TLS connection that would cause the calling application to reload certificates from a PKCS #12 store. This vulnerability appears to have been fixed in 17.5.0.. Top 1 search result is pypi:pyopenssl. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pyopenssl."}]}, {"id": "GHSA-f2j6-wrhh-v25m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Paramiko version 2.4.1, 2.3.2, 2.2.3, 2.1.5, 2.0.8, 1.18.5, 1.17.6 contains a Incorrect Access Control vulnerability in SSH server that can result in RCE. This attack appear to be exploitable via network connectivity.. Top 1 search result is pypi:paramiko. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko pypi:paramiko."}]}, {"id": "GHSA-cmwx-9m2h-x7v4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in Ansible before version 2.2.0. The apt_key module does not properly verify key fingerprints, allowing remote adversary to create an OpenPGP key which matches the short key ID and inject this key instead of the correct key.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-cf3c-fffp-34qh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In conference-scheduler-cli, a pickle.load call on imported data allows remote attackers to execute arbitrary code via a crafted .pickle file, as demonstrated by Python code that contains an os.system call.. Top 1 search result is pypi:conference-scheduler-cli. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:conference-scheduler-cli."}]}, {"id": "GHSA-x84v-xcm2-53pg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The Requests package through 2.19.1 before 2018-09-14 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.. Top 1 search result is pypi:requests. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:requests."}]}, {"id": "GHSA-5hg3-6c2f-f3wr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: `django.middleware.common.CommonMiddleware` in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django."}]}, {"id": "GHSA-v4x4-98cg-wr4g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: There is a vulnerability in `load()` method in definitions/parser.py in the Danijar Hafner definitions package for Python. It can execute arbitrary python commands resulting in command execution.. Top 1 search result is pypi:definitions. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:definitions."}]}, {"id": "GHSA-gfv6-cj92-g3hx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: OpenKMIP PyKMIP version All versions before 0.8.0 contains a CWE 399: Resource Management Errors (similar issue to CVE-2015-5262) vulnerability in PyKMIP server that can result in DOS: the server can be made unavailable by one or more clients opening all of the available sockets. This attack appear to be exploitable via A client or clients open sockets with the server and then never close them. This vulnerability appears to have been fixed in 0.8.0.. Top 1 search result is pypi:pykmip. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pykmip."}]}, {"id": "GHSA-mr4x-c4v9-x729", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: aio-libs aiohttp-session version 2.6.0 and earlier contains a Other/Unknown vulnerability in EncryptedCookieStorage and NaClCookieStorage that can result in Non-expiring sessions / Infinite lifespan. This attack appear to be exploitable via Recreation of a cookie post-expiry with the same value.. Top 1 search result is pypi:aiohttp-session. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aiohttp-session."}]}, {"id": "GHSA-8r8j-xvfj-36f9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ymlref is a library that allows to load Yaml documents and resolve JSON-pointer references inside them. ymlref versions up to 0.1.1 allow code injection.. Top 1 search result is pypi:ymlref. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ymlref."}]}, {"id": "GHSA-894g-6j7q-2hx6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: helpers.py in Flask-Admin 1.5.2 has Reflected XSS via a crafted URL.. Top 1 search result is pypi:flask-admin. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:flask-admin."}]}, {"id": "GHSA-www2-v7xj-xrc6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.. Top 1 search result is pypi:urllib3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:urllib3."}]}, {"id": "GHSA-p69g-f978-xxv9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Luigi version prior to version 2.8.0; after commit 53b52e12745075a8acc016d33945d9d6a7a6aaeb; after GitHub PR spotify/luigi/pull/1870 contains a Cross ite Request Forgery (CSRF) vulnerability in API endpoint: /api/<method> that can result in Task metadata such as task name, id, parameter, etc. will be leaked to unauthorized users. This attack appear to be exploitable via The victim must visit a specially crafted webpage from the network where their Luigi server is accessible.. This vulnerability appears to have been fixed in 2.8.0 and later.. Top 1 search result is pypi:luigi. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:luigi."}]}, {"id": "GHSA-cq27-v7xp-c356", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.. Top 1 search result is pypi:cryptography. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pycrypto."}]}, {"id": "GHSA-jj53-8fmw-f2w2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nUnauthorised users can access the name, avatar, topic and number of members of a room if they know the ID of the room. This vulnerability is limited to homeservers where:\n- the vulnerable homeserver is in the room; and\n- untrusted users are permitted to create groups (communities).\n\nBy default, only homeserver administrators can create groups. However, homeserver administrators can already access this information in the database or using the admin API. As a result, only homeservers where the configuration setting `enable_group_creation` has been set to `true` are impacted.\n\n### Patches\nServer administrators should upgrade to 1.41.1 or higher.\n\n### Workarounds\nServer administrators can set `enable_group_creation` to `false` in their homeserver configuration (this is the default value) to prevent creation of groups by non-administrators.\n\nAdministrators that are using a reverse proxy could, with partial loss of group functionality, block the following endpoints:\n* `/_matrix/client/r0/groups/{group_id}/rooms`\n* `/_matrix/client/unstable/groups/{group_id}/rooms`\n\n### References\nn/a\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.\n. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:matrix-synapse."}]}, {"id": "GHSA-22gh-3r9q-xf38", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nIn mitmproxy 7.0.2 and below, a malicious client or server is able to perform [HTTP request smuggling](https://en.wikipedia.org/wiki/HTTP_request_smuggling) attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization.\n\nUnless you use mitmproxy to protect an HTTP/1 service, no action is required.\n\n\n### Patches\n\nThe vulnerability has been fixed in mitmproxy 7.0.3 and above.\n\n\n### Acknowledgements\n\nWe thank Jo\u00e3o Sobral (@chinchila) for responsibly disclosing this vulnerability to the mitmproxy team.\n\n\n### Timeline\n\n- **2021-09-08**: Received initial report for mitmproxy <= 6.0.2.\n- **2021-09-08**: Requested clarification if 7.x is affected.\n- **2021-09-10**: Received additional details, 7.x situation still unclear.\n- **2021-09-13**: Internally determined that 7.x is also affected.\n- **2021-09-13**: Shared initial fix with researcher.\n- **2021-09-14**: Received confirmation that fix is working, but H2.TE/H2.CL should also be looked at.\n- **2021-09-14**: Shared revised fix that includes additional H2.TE mitigations.\n- **2021-09-14**: Received confirmation that revised fix is working.\n- **2021-09-16**: Completed internal patch review.\n- **2021-09-16**: Published patch release and advisory.. Top 1 search result is pypi:mitmproxy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mitmproxy."}]}, {"id": "GHSA-2j58-pwwv-x666", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects all versions of package sqlite-web. The SQL dashboard area allows sensitive actions to be performed without validating that the request originated from the application. This could enable an attacker to trick a user into performing these actions unknowingly through a Cross Site Request Forgery (CSRF) attack.. Top 1 search result is pypi:sqlite-web. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:sqlite-web."}]}, {"id": "GHSA-947x-pv47-pp3q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Webrecorder pywb before 2.6.0 allows XSS because it does not ensure that Jinja2 templates are autoescaped.. Top 1 search result is pypi:pywb. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pywb."}]}, {"id": "GHSA-fqr5-qphf-vfr8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross Site Scripting (XSS) in Simiki v1.6.2.1 and prior allows remote attackers to execute arbitrary code via line 54 of the component 'simiki/blob/master/simiki/generators.py'.. Top 1 search result is pypi:simiki. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:simiki."}]}, {"id": "GHSA-48mj-p7x2-5jfm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nAnyone with web_server enabled and HTTP basic auth configured on 2021.9.1 or older\n\n`web_server` allows OTA update without checking user defined basic auth username & password\n\n### Patches\n\nPatch released in 2021.9.2\n\n### Workarounds\n\nDisable/remove `web_server`\n. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:esphome."}]}, {"id": "GHSA-624f-cqvr-3qw4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf using Flask-AppBuilder OAuth, an attacker can share a carefully crafted URL with a trusted domain for an application built with Flask-AppBuilder, this URL can redirect a user to a malicious site. This is an open redirect vulnerability \n\n### Patches\nInstall Flask-AppBuilder 3.2.2 or above\n\n### Workarounds\nFilter HTTP traffic containing `?next={next-site}` where the `next-site` domain is different from the application you are protecting\n. Top 1 search result is pypi:Flask-AppBuilder. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Flask-AppBuilder."}]}, {"id": "GHSA-3q6g-vf58-7m4g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Flask RESTX contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service) in `email_regex`.\n. Top 1 search result is pypi:flask-restx. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:flask-restx."}]}, {"id": "GHSA-p9wf-3xpg-c9g5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An XML external entity (XXE) injection in PyWPS before 4.5.0 allows an attacker to view files on the application server filesystem by assigning a path to the entity. OWSLib 0.24.1 may also be affected.. Top 1 search result is pypi:OWSLib. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pywps."}]}, {"id": "GHSA-mwgj-7x7j-6966", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Due to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks. This issue affects ParlAI prior to v1.1.0.. Top 1 search result is pypi:parlai. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:parlai."}]}, {"id": "GHSA-98vv-pw6r-q6q4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pillow."}]}, {"id": "GHSA-w873-xcqq-x922", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Command Injection in Simiki v1.6.2.1 and prior allows remote attackers to execute arbitrary system commands via line 64 of the component 'simiki/blob/master/simiki/config.py'.. Top 1 search result is pypi:simiki. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:simiki."}]}, {"id": "GHSA-x38q-xg2h-rxgx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Leo Editor v6.2.1 was discovered to contain a regular expression denial of service (ReDoS) vulnerability in the component plugins/importers/dart.py.. Top 1 search result is pypi:leo. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:leo."}]}, {"id": "GHSA-p5w8-wqhj-9hhf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe formatter function that strips comments from a SQL contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments.\n\n### Patches\nThe issues has been fixed in sqlparse 0.4.2.\n\n### Workarounds\nOnly the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the `sqlformat.format` function with keyword `strip_comments=True` or the `--strip-comments` command line flag when using the `sqlformat` command line tool.\n\n### References\nThis issue was discovered by GitHub team members @erik-krogh and @yoff. It was found using a [CodeQL](https://codeql.github.com/) query which identifies inefficient regular expressions. You can see the results of the query on python-sqlparse by following [this link](https://lgtm.com/query/2223658096471222354/). \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [sqlparse issue tracker](https://github.com/andialbrecht/sqlparse/issues)\n* Email us at [albrecht.andi@gmail.com](mailto:albrecht.andi@gmail.com)\n. Top 1 search result is pypi:sqlparse. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:sqlparse."}]}, {"id": "GHSA-2ww3-fxvq-293j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The nltk package is vulnerable to ReDoS (regular expression denial of service). An attacker that is able to provide as an input to the [`_read_comparison_block()`](https://github.com/nltk/nltk/blob/23f4b1c4b4006b0cb3ec278e801029557cec4e82/nltk/corpus/reader/comparative_sents.py#L259) function in the file `nltk/corpus/reader/comparative_sents.py` may cause an application to consume an excessive amount of CPU.. Top 1 search result is pypi:nltk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:nltk."}]}, {"id": "GHSA-2pfh-q76x-gwvm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in Ansible, where a user's controller is vulnerable to template injection. This issue can occur through facts used in the template if the user is trying to put templates in multi-line YAML strings and the facts being handled do not routinely include special template characters. This flaw allows attackers to perform command injection, which discloses sensitive information. The highest threat from this vulnerability is to confidentiality and integrity.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-gh8j-2pgf-x458", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The rencode package through 1.0.6 for Python allows an infinite loop in typecode decoding (such as via ;\\x2f\\x7f), enabling a remote attack that consumes CPU and memory.. Top 1 search result is pypi:rencode. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:rencode."}]}, {"id": "GHSA-m87f-9fvv-2mgg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https://github.com/facebookresearch/ParlAI/commit/507d066ef432ea27d3e201da08009872a2f37725\n- https://github.com/facebookresearch/ParlAI/commit/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https://anon-artist.github.io/blogs/blog3.html. Top 1 search result is pypi:parlai. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:parlai."}]}, {"id": "GHSA-3x4c-pq33-4w3q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nUnauthorised users can access the membership (list of members, with their display names) of a room if they know the ID of the room. The vulnerability is limited to rooms with `shared` history visibility. Furthermore, the unauthorised user must be using an account on a vulnerable homeserver that is in the room.\n\n### Patches\nServer administrators should upgrade to 1.41.1 or later.\n\n### Workarounds\nAdministrators of servers that use a reverse proxy could, with potentially unacceptable loss of functionality, block the following endpoints:\n* `/_matrix/client/r0/rooms/{room_id}/members` with `at` query parameter\n* `/_matrix/client/unstable/rooms/{room_id}/members` with `at` query parameter\n\n### References\nn/a\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.. Top 1 search result is pypi:jupyter-server-proxy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:matrix-synapse."}]}, {"id": "GHSA-qhmp-h54x-38qr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAnyone _publicly_ hosting the Apprise library and granting them access to the IFTTT notification service.\n\n### Patches\nUpdate to Apprise v0.9.5.1\n   ```bash\n   # Install Apprise v0.9.5.1 from PyPI\n   pip install apprise==0.9.5.1\n   ```\n\nThe patch to the problem was performed [here](https://github.com/caronc/apprise/pull/436/files).\n\n### Workarounds\nAlternatively, if upgrading is not an option, you can safely remove the following file:\n- `apprise/plugins/NotifyIFTTT.py` \n\nThe above will eliminate the ability to use IFTTT, but everything else will work smoothly.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Apprise](https://github.com/caronc/apprise/issues)\n* Email me at [lead2gold@gmail.com](mailto:lead2gold@gmail.com)\n\n### Additional Credit\nGithub would not allow me to additionally credit **Rasmus Petersen**, but I would like to put that here at the very least - thank you for finding and reporting this issue along with those already credited\n\n## Additional Notes:\n- Github would not allow me to add/tag the 2 CWE's this issue is applicable to (only CWE-400).  The other is: CWE-730 (placed in the title)\n. Top 1 search result is pypi:apprise. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apprise."}]}, {"id": "GHSA-xpfp-f569-q3p2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Django pypi:Django."}]}, {"id": "GHSA-663j-rjcr-789f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: \u201cShuup\u201d application in versions 0.4.2 to 2.10.8 is affected by the \u201cFormula Injection\u201d vulnerability. A customer can inject payloads in the name input field in the billing address while buying a product. When a store administrator accesses the reports page to export the data as an Excel file and opens it, the payload gets executed.. Top 1 search result is pypi:shuup. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:shuup."}]}, {"id": "GHSA-hgc3-hp6x-wpgx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Potential Impact: \nRemote code execution.\n\n### Scope of Impact: \nOpen-source project specific.\n\n### Summary Description:\nA dependency confusion vulnerability was reported in the Antilles open-source software prior to version 1.0.1 that could allow for remote code execution during installation due to a package listed in requirements.txt not existing in the public package index (PyPi). \nMITRE classifies this weakness as an Uncontrolled Search Path Element (CWE-427) in which a private package dependency may be replaced by an unauthorized package of the same name published to a well-known public repository such as PyPi.\nThe configuration has been updated to only install components built by Antilles, removing all other public package indexes. Additionally, the antilles-tools dependency has been published to PyPi.\n\n### Mitigation Strategy for Customers (what you should do to protect yourself):\nRemove previous versions of Antilles as a precautionary measure and Update to version 1.0.1 or later.\n\n### Acknowledgement:\nThe Antilles team thanks Kotko Vladyslav for reporting this issue.\n\n### References:\nhttps://github.com/lenovo/Antilles/commit/c7b9c5740908b343aceefe69733d9972e64df0b9\n. Top 1 search result is pypi:antilles-tools. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:antilles-tools."}]}, {"id": "GHSA-j86v-p27c-73fm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nDuring execution, [`EinsumHelper::ParseEquation()`](https://github.com/tensorflow/tensorflow/blob/e0b6e58c328059829c3eb968136f17aa72b6c876/tensorflow/core/kernels/linalg/einsum_op_impl.h#L126-L181) is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output.\n\nHowever, the code only changes these flags to `true` and never assigns `false`.\n\n```cc\nfor (int i = 0; i < num_inputs; ++i) {\n  input_label_counts->at(i).resize(num_labels);\n  for (const int label : input_labels->at(i)) {\n    if (label != kEllipsisLabel)\n      input_label_counts->at(i)[label] += 1;\n    else\n      input_has_ellipsis->at(i) = true;\n  }\n}\noutput_label_counts->resize(num_labels);\nfor (const int label : *output_labels) {\n  if (label != kEllipsisLabel)\n    output_label_counts->at(label) += 1;\n  else\n    *output_has_ellipsis = true;\n}\n```\n\nThis results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags.\n\n\n### Patches\nWe have patched the issue in GitHub commit [f09caa532b6e1ac8d2aa61b7832c78c5b79300c6](https://github.com/tensorflow/tensorflow/commit/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-fr77-rrx3-cp7g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code for `tf.ragged.cross`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/ragged_array_ops.cc#L64) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.RaggedCross(ragged_values=[],\n                             ragged_row_splits=[],\n                             sparse_indices=[[5]],\n                             sparse_values=[],\n                             sparse_shape=[5],\n                             dense_inputs=[['a']],\n                             input_order='RD',\n                             hashed_output=False,\n                             num_buckets=5,\n                             hash_key=2,\n                             out_values_type=tf.string,\n                             out_row_splits_type=tf.int64)\n  return y\n\ntest()\n```\n\n### Patches\nWe have patched the issue in GitHub commit [fa6b7782fbb14aa08d767bc799c531f5e1fb3bb8](https://github.com/tensorflow/tensorflow/commit/fa6b7782fbb14aa08d767bc799c531f5e1fb3bb8).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n    \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-3xv8-3j54-hgrp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In `libImaging/PcxDecode.c` in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where `state->shuffle` is instructed to read beyond `state->buffer`.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-vcqg-3p29-xw73", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: libImaging/TiffDecode.c in Pillow before 6.2.2 has a TIFF decoding integer overflow, related to realloc.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-5crj-c72x-m7gq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [process of building the control flow graph](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/common_runtime/immutable_executor_state.cc#L284-L346) for a TensorFlow model is vulnerable to a null pointer exception when nodes that should be paired are not:\n  \n```python\nimport tensorflow as tf\n  \n@tf.function\ndef func():\n  return tf.raw_ops.Exit(data=[False,False])\n    \nfunc()\n```\n\nThis occurs because the code assumes that the first node in the pairing (e.g., an `Enter` node) always exists when encountering the second node (e.g., an `Exit` node):\n  \n```cc\n  ...\n} else if (IsExit(curr_node)) {\n  // Exit to the parent frame.\n  parent = parent_nodes[curr_id];         \n  frame_name = cf_info->frame_names[parent->id()];\n  ...                \n```\n\nWhen this is not the case, `parent` is `nullptr` so dereferencing it causes a crash.\n\n### Patches\nWe have patched the issue in GitHub commit [05cbebd3c6bb8f517a158b0155debb8df79017ff](https://github.com/tensorflow/tensorflow/commit/05cbebd3c6bb8f517a158b0155debb8df79017ff).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-m342-ff57-4jcc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference functions for `SparseCountSparseOutput`](https://github.com/tensorflow/tensorflow/blob/e0b6e58c328059829c3eb968136f17aa72b6c876/tensorflow/core/ops/count_ops.cc#L43-L50) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef func():\n  return tf.raw_ops.SparseCountSparseOutput(\n    indices=[1],\n    values=[[1]],\n    dense_shape=[10],\n    weights=[],\n    binary_output= True)\n\nfunc()\n```\n\nThe function fails to check that the first input (i.e., `indices`) has rank 2:\n\n```cc\n  auto rank = c->Dim(c->input(0), 1);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [701cfaca222a82afbeeb17496bd718baa65a67d2](https://github.com/tensorflow/tensorflow/commit/701cfaca222a82afbeeb17496bd718baa65a67d2).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7r94-xv9v-63jw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTensorFlow's Grappler optimizer has a [use of unitialized variable](https://github.com/tensorflow/tensorflow/blob/3457a2b122e50b4d44ceaaed5a663d635e5c22df/tensorflow/core/grappler/optimizers/auto_parallel.cc#L155-L164):\n\n```cc\n  const NodeDef* dequeue_node;\n  for (const auto& train_node : train_nodes) {\n    if (IsDequeueOp(*train_node)) {\n      dequeue_node = train_node;\n      break;\n    }\n  }\n\n  if (dequeue_node) {\n    ...\n  }\n```\n\nIf the `train_nodes` vector (obtained from the saved model that gets optimized) does not contain a `Dequeue` node, then `dequeue_node` is left unitialized.\n\n### Patches\nWe have patched the issue in GitHub commit [68867bf01239d9e1048f98cbad185bf4761bedd3](https://github.com/tensorflow/tensorflow/commit/68867bf01239d9e1048f98cbad185bf4761bedd3).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Qian Feng from Baidu Security Team.\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-8phj-f9w2-cjcc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nA path traversal attack aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with \u201cdot-dot-slash (../)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.\n\nVulnerable code: https://github.com/aimhubio/aim/blob/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce/aim/web/api/views.py#L9-L16\n\n### Patches\nThe vulnerability issue is resolved in Aim v3.1.0.\n\n### References\nhttps://owasp.org/www-community/attacks/Path_Traversal\n\n. Top 1 search result is pypi:aim. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:aim."}]}, {"id": "GHSA-gh8h-7j2j-qv4f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf `tf.summary.create_file_writer` is called with non-scalar arguments code crashes due to a `CHECK`-fail.\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.summary.create_file_writer(logdir='', flush_millis=np.ones((1,2)))\n```\n\n### Patches\nWe have patched the issue in GitHub commit [874bda09e6702cd50bac90b453b50bcc65b2769e](https://github.com/tensorflow/tensorflow/commit/874bda09e6702cd50bac90b453b50bcc65b2769e) (merging [#51715](https://github.com/tensorflow/tensorflow/pull/51715)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46909).. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cw7p-q79f-m2v7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nUsers of JupyterLab with JupyterHub who have multiple JupyterLab tabs open in the same browser session, may see incomplete logout from the single-user server, as fresh credentials (for the single-user server only, not the Hub) reinstated after logout, if another active JupyterLab session is open while the logout takes place.\n\n### Patches\n\nUpgrade to JupyterHub 1.5. For distributed deployments, it is jupyterhub in the _user_ environment that needs patching. There are no patches necessary in the Hub environment.\n\n### Workarounds\n\nThe only workaround is to make sure that only one JupyterLab tab is open when you log out.. Top 1 search result is pypi:jupyterlab. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:jupyterhub."}]}, {"id": "GHSA-xrqm-fpgr-6hhx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nWhile calculating the size of the output within the `tf.range` kernel, there is a conditional statement of type `int64 = condition ? int64 : double`. Due to C++ implicit conversion rules, both branches of the condition will be cast to `double` and the result would be truncated before the assignment. This result in overflows:\n\n```python\nimport tensorflow as tf\n\ntf.sparse.eye(num_rows=9223372036854775807, num_columns=None)\n```\n  \nSimilarly, `tf.range` would result in crashes due to overflows if the start or end point are too large.\n\n```python\nimport tensorflow as tf\n\ntf.range(start=-1e+38, limit=1)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [6d94002a09711d297dbba90390d5482b76113899](https://github.com/tensorflow/tensorflow/commit/6d94002a09711d297dbba90390d5482b76113899) (merging [#51359](https://github.com/tensorflow/tensorflow/pull/51359)) and [1b0e0ec27e7895b9985076eab32445026ae5ca94](https://github.com/tensorflow/tensorflow/commit/1b0e0ec27e7895b9985076eab32445026ae5ca94) (merging [#51711](https://github.com/tensorflow/tensorflow/pull/51711)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46912), [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46899) and [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46889).\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-9crf-c6qr-r273", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code for `AllToAll`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/tpu_cross_replica_ops.cc#L25-L74) can be made to execute a division by 0:\n\n```python\nimport tensorflow as tf\n  \n@tf.function\ndef func():\n  return tf.raw_ops.AllToAll(\n    input=[0.0, 0.1652, 0.6543],\n    group_assignment=[1, -1],\n    concat_dimension=0,\n    split_dimension=0,\n    split_count=0)\n\nfunc()\n```\n\nThis occurs whenever the `split_count` argument is 0:\n  \n```cc\nTF_RETURN_IF_ERROR(c->GetAttr(\"split_count\", &split_count));\n...                  \nfor (int32_t i = 0; i < rank; ++i) {      \n  ...                                     \n  dims[i] = c->MakeDim(c->Value(dims[i]) / split_count);\n  ...                \n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [a8ad3e5e79c75f36edb81e0ba3f3c0c5442aeddc](https://github.com/tensorflow/tensorflow/commit/a8ad3e5e79c75f36edb81e0ba3f3c0c5442aeddc).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-r8wq-qrxc-hmcm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: https://github.com/python-ldap/python-ldap/issues/424\n\n### Impact\nThe LDAP schema parser of python-ldap 3.3.1 and earlier are vulnerable to a regular expression denial-of-service attack. The issue affects clients that use ``ldap.schema`` package to parse LDAP schema definitions from an untrusted source.\n\n### Patches\nThe upcoming release of python-ldap 3.4.0 will contain a workaround to prevent ReDoS attacks. The schema parser refuses schema definitions with an excessive amount of backslashes.\n\n### Workarounds\nAs a workaround, users can check input for excessive amount of backslashes in schemas. More than a dozen backslashes per line are atypical.\n\n### References\n[CWE-1333](https://cwe.mitre.org/data/definitions/1333.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [python-ldap](https://github.com/python-ldap/python-ldap) tracker\n. Top 1 search result is pypi:python-ldap. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:python-ldap."}]}, {"id": "GHSA-prcg-wp5q-rv7p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTensorFlow allows tensor to have a large number of dimensions and each dimension can be as large as desired. However, the total number of elements in a tensor must fit within an `int64_t`. If an overflow occurs, `MultiplyWithoutOverflow` would return a negative result. In the majority of TensorFlow codebase this then results in a `CHECK`-failure. Newer constructs exist which return a `Status` instead of crashing the binary.\n\nFor example [`AddDim`](https://github.com/tensorflow/tensorflow/blob/0b6b491d21d6a4eb5fbab1cca565bc1e94ca9543/tensorflow/core/framework/tensor_shape.cc#L395-L408) calls should be replaced by [`AddDimWithStatus`](https://github.com/tensorflow/tensorflow/blob/0b6b491d21d6a4eb5fbab1cca565bc1e94ca9543/tensorflow/core/framework/tensor_shape.cc#L410-L440).\n\nThis is similar to [CVE-2021-29584](https://github.com/tensorflow/tensorflow/blob/3a74f0307236fe206b046689c4d76f57c9b74eee/tensorflow/security/advisory/tfsa-2021-071.md) (and similar other reported vulnerabilities in TensorFlow, localized to specific APIs).\n\n### Patches\nWe have patched the issue in GitHub commits [7c1692bd417eb4f9b33ead749a41166d6080af85](https://github.com/tensorflow/tensorflow/commit/7c1692bd417eb4f9b33ead749a41166d6080af85) (merging [#51732](https://github.com/tensorflow/tensorflow/pull/51732)), [d81b1351da3e8c884ff836b64458d94e4a157c15](https://github.com/tensorflow/tensorflow/commit/d81b1351da3e8c884ff836b64458d94e4a157c15) (merging [#51717](https://github.com/tensorflow/tensorflow/pull/51717)), [a871989d7b6c18cdebf2fb4f0e5c5b62fbc19edf](https://github.com/tensorflow/tensorflow/commit/a871989d7b6c18cdebf2fb4f0e5c5b62fbc19edf) (merging [#51658](https://github.com/tensorflow/tensorflow/pull/51658)), and [d81b1351da3e8c884ff836b64458d94e4a157c15](https://github.com/tensorflow/tensorflow/commit/d81b1351da3e8c884ff836b64458d94e4a157c15) (merging [#51973](https://github.com/tensorflow/tensorflow/pull/51973)). It is possible that other similar instances exist in TensorFlow, we will issue fixes as these are discovered.\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46890), [GitHub issue](https://github.com/tensorflow/tensorflow/issues/51618) and [GitHub issue](https://github.com/tensorflow/tensorflow/issues/51908).. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-vwhq-49r4-gj9v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code for `tf.ragged.cross`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/ragged_array_ops.cc#L64) has an undefined behavior due to binding a reference to `nullptr`. In the following scenario, this results in a crash:\n\n```python\nimport tensorflow as tf\n  \n@tf.function                 \ndef test():     \n  y = tf.ragged.cross([tf.ragged.constant([['1']]),'2'])\n  return y                   \n                             \ntest()        \n```                          \n             \n### Patches\nWe have patched the issue in GitHub commit [fa6b7782fbb14aa08d767bc799c531f5e1fb3bb8](https://github.com/tensorflow/tensorflow/commit/fa6b7782fbb14aa08d767bc799c531f5e1fb3bb8).\n  \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-786j-5qwq-r36x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nDuring TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.\n\n### Patches\nWe have patched the issue in GitHub commit [7731e8dfbe4a56773be5dc94d631611211156659](https://github.com/tensorflow/tensorflow/commit/7731e8dfbe4a56773be5dc94d631611211156659).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-rg3m-hqc5-344v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/e71b86d47f8bc1816bf54d7bddc4170e47670b97/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc#L194-L241) of `SparseFillEmptyRows` can be made to trigger a heap OOB access:\n\n```python\nimport tensorflow as tf\n  \ndata=tf.raw_ops.SparseFillEmptyRows(\n  indices=[[0,0],[0,0],[0,0]],\n  values=['sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss'],\n  dense_shape=[5,3],\n  default_value='o')\n```\n  \nThis occurs whenever the size of `indices` does not match the size of `values`.\n\n### Patches\nWe have patched the issue in GitHub commit [67bfd9feeecfb3c61d80f0e46d89c170fbee682b](https://github.com/tensorflow/tensorflow/commit/67bfd9feeecfb3c61d80f0e46d89c170fbee682b).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-pgcq-h79j-2f69", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nSeveral TensorFlow operations are missing validation for the shapes of the tensor arguments involved in the call. Depending on the API, this can result in undefined behavior and segfault or `CHECK`-fail related crashes but in some scenarios writes and reads from heap populated arrays are also possible.\n\nWe have discovered these issues internally via tooling while working on improving/testing GPU op determinism. As such, we don't have reproducers and there will be multiple fixes for these issues.\n\n### Patches\nWe have patched the issue in GitHub commits [68422b215e618df5ad375bcdc6d2052e9fd3080a](https://github.com/tensorflow/tensorflow/commit/68422b215e618df5ad375bcdc6d2052e9fd3080a), [4d74d8a00b07441cba090a02e0dd9ed385145bf4](https://github.com/tensorflow/tensorflow/commit/4d74d8a00b07441cba090a02e0dd9ed385145bf4), [579261dcd446385831fe4f7457d802a59685121d](https://github.com/tensorflow/tensorflow/commit/579261dcd446385831fe4f7457d802a59685121d), [da4aad5946be30e5f049920fa076e1f7ef021261](https://github.com/tensorflow/tensorflow/commit/da4aad5946be30e5f049920fa076e1f7ef021261), [4dddb2fd0b01cdd196101afbba6518658a2c9e07](https://github.com/tensorflow/tensorflow/commit/4dddb2fd0b01cdd196101afbba6518658a2c9e07), and [e7f497570abb6b4ae5af4970620cd880e4c0c904](https://github.com/tensorflow/tensorflow/commit/e7f497570abb6b4ae5af4970620cd880e4c0c904).\n\nThese fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-3rcw-9p9x-582v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTensorFlow's `saved_model_cli` tool is vulnerable to a code injection as it [calls `eval` on user supplied strings](https://github.com/tensorflow/tensorflow/blob/87462bfac761435a46641ff2f10ad0b6e5414a4b/tensorflow/python/tools/saved_model_cli.py#L524-L550)\n  \n```python\ndef preprocess_input_exprs_arg_string(input_exprs_str):\n  ... \n  for input_raw in filter(bool, input_exprs_str.split(';')):\n    ...\n    input_key, expr = input_raw.split('=', 1)\n    input_dict[input_key] = eval(expr)\n  ...\n``` \n  \nThis can be used by attackers to run arbitrary code on the plaform where the CLI tool runs.\nHowever, given that the tool is always run manually, the impact of this is not severe. We have patched this by adding a `safe` flag which defaults to `True` and an explicit warning for users. \n\n### Patches\nWe have patched the issue in GitHub commit [8b202f08d52e8206af2bdb2112a62fafbc546ec7](https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Omer Kaspi from Vdoo.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-35m5-8cvj-8783", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe vulnerability is we used MD5 hashing Algorithm In our hashing file. If anyone who is a beginner(and doesn't know about hashes)  can face problems as MD5 is considered a Insecure Hashing Algorithm. \n\n### Patches\nThe vulnerability is patched in v1.1.4 of the product, the users can upgrade to version 1.1.4.\n\n### Workarounds\nIf u specifically want a version and don't want to upgrade, you can remove the `MD5` hashing function from the file `hashing.py` and this vulnerability will be gone\n\n### References\nhttps://www.cybersecurity-help.cz/vdb/cwe/916/\nhttps://www.cybersecurity-help.cz/vdb/cwe/327/\nhttps://www.cybersecurity-help.cz/vdb/cwe/328/\nhttps://www.section.io/engineering-education/what-is-md5/\nhttps://www.johndcook.com/blog/2019/01/24/reversing-an-md5-hash/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [**Enrocrypt's Official Repo**](http://www.github.com/Morgan-Phoenix/EnroCrypt)\n* Create a Discussion in  [**Enrocrypt's Official Repo**](http://www.github.com/Morgan-Phoenix/EnroCrypt)\n. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:enrocrypt."}]}, {"id": "GHSA-h67m-xg8f-fxcf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [code behind `tf.function` API](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/python/eager/def_function.py#L542) can be made to deadlock when two `tf.function` decorated Python functions are mutually recursive:\n\n```python \nimport tensorflow as tf\n\n@tf.function()               \ndef fun1(num):\n    if num == 1:\n        return\n    print(num)\n    fun2(num-1)\n\n@tf.function()\ndef fun2(num):\n    if num == 0:\n        return\n    print(num)\n    fun1(num-1)\n\nfun1(9)\n```\n\nThis occurs due to using a non-reentrant `Lock` Python object.\n\nLoading any model which contains mutually recursive functions is vulnerable. An attacker can cause denial of service by causing users to load such models and calling a recursive `tf.function`, although this is not a frequent scenario.\n\n### Patches\nWe have patched the issue in GitHub commit [afac8158d43691661ad083f6dd9e56f327c1dcb7](https://github.com/tensorflow/tensorflow/commit/afac8158d43691661ad083f6dd9e56f327c1dcb7).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7g47-xxff-9p85", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: OnionShare 2.3 before 2.4 allows remote unauthenticated attackers to upload files on a non-public node when using the --receive functionality. . Top 1 search result is pypi:onionshare-cli. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:onionshare-cli."}]}, {"id": "GHSA-3ff2-r28g-w7h9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference function for `Transpose`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/array_ops.cc#L121-L185) is vulnerable to a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n@tf.function\ndef test():\n  y = tf.raw_ops.Transpose(x=[1,2,3,4],perm=[-10])\n  return y\n\ntest()\n```\n\nThis occurs whenever `perm` contains negative elements. The shape inference function does not validate that the indices in `perm` are all valid:\n        \n```cc\nfor (int32_t i = 0; i < rank; ++i) {\n  int64_t in_idx = data[i];\n  if (in_idx >= rank) {\n    return errors::InvalidArgument(\"perm dim \", in_idx,\n                                   \" is out of range of input rank \", rank);\n  }\n  dims[i] = c->Dim(input, in_idx);\n}\n```\n\nwhere `Dim(tensor, index)` accepts either a positive index less than the rank of the tensor or the special value `-1` for unknown dimensions.\n\n### Patches\nWe have patched the issue in GitHub commit [c79ba87153ee343401dbe9d1954d7f79e521eb14](https://github.com/tensorflow/tensorflow/commit/c79ba87153ee343401dbe9d1954d7f79e521eb14).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-4f99-p9c2-3j8x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [code for sparse matrix multiplication](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/sparse_matmul_op.cc#L954-L1086) is vulnerable to undefined behavior via binding a reference to `nullptr`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SparseMatMul(\n  a=[[1.0,1.0,1.0]],\n  b=[[],[],[]],\n  transpose_a=False,\n  transpose_b=False,\n  a_is_sparse=False, \n  b_is_sparse=True)\n```\n\nThis occurs whenever the dimensions of `a` or `b` are 0 or less. In the case on one of these is 0, an empty output tensor should be allocated (to conserve the invariant that output tensors are always allocated when the operation is successful) but nothing should be written to it (that is, we should return early from the kernel implementation). Otherwise, attempts to write to this empty tensor would result in heap OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [e6cf28c72ba2eb949ca950d834dd6d66bb01cfae](https://github.com/tensorflow/tensorflow/commit/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7pxj-m4jf-r6h2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger undefined behavior, integer overflows, segfaults and `CHECK`-fail crashes if they can change saved checkpoints from outside of TensorFlow.\n\nThis is because the checkpoints loading infrastructure is missing validation for invalid file formats.\n\n### Patches\nWe have patched the issue in GitHub commits [b619c6f865715ca3b15ef1842b5b95edbaa710ad](https://github.com/tensorflow/tensorflow/commit/b619c6f865715ca3b15ef1842b5b95edbaa710ad), [e8dc63704c88007ee4713076605c90188d66f3d2](https://github.com/tensorflow/tensorflow/commit/e8dc63704c88007ee4713076605c90188d66f3d2), [368af875869a204b4ac552b9ddda59f6a46a56ec](https://github.com/tensorflow/tensorflow/commit/368af875869a204b4ac552b9ddda59f6a46a56ec), and [abcced051cb1bd8fb05046ac3b6023a7ebcc4578](https://github.com/tensorflow/tensorflow/commit/abcced051cb1bd8fb05046ac3b6023a7ebcc4578).\n\nThese fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-v899-28g4-qmh8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The parseXML function in Easy-XML 0.5.0 was discovered to have a XML External Entity (XXE) vulnerability which allows for an attacker to expose sensitive data or perform a denial of service (DOS) via a crafted external entity entered into the XML content as input.. Top 1 search result is pypi:easy-xml. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:easy-xml."}]}, {"id": "GHSA-374m-jm66-3vj8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/e71b86d47f8bc1816bf54d7bddc4170e47670b97/tensorflow/core/kernels/bincount_op.cc#L353-L417) of `SparseBinCount` is vulnerable to a heap OOB:\n\n```python\nimport tensorflow as tf\n  \n  \ntf.raw_ops.SparseBincount(\n  indices=[[0],[1],[2]]\n  values=[0,-10000000]\n  dense_shape=[1,1]\n  size=[1]\n  weights=[3,2,1]\n  binary_output=False)\n```\n\nThis is because of missing validation between the elements of the `values` argument and the shape of the sparse output:\n\n\n```cc\nfor (int64_t i = 0; i < indices_mat.dimension(0); ++i) {\n  const int64_t batch = indices_mat(i, 0);\n  const Tidx bin = values(i);\n  ...\n  out(batch, bin) = ...;\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f410212e373eb2aec4c9e60bf3702eba99a38aba](https://github.com/tensorflow/tensorflow/commit/f410212e373eb2aec4c9e60bf3702eba99a38aba).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-pf7h-h2wq-m7pg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in SaltStack Salt before 3003.3. A user who has control of the source, and source_hash URLs can gain full file system access as root on a salt minion.. Top 1 search result is pypi:salt. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:salt."}]}, {"id": "GHSA-5xp3-jfq3-5q8x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.. Top 1 search result is pypi:pip. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pip."}]}, {"id": "GHSA-cpf4-wx82-gxp6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/e71b86d47f8bc1816bf54d7bddc4170e47670b97/tensorflow/core/kernels/split_v_op.cc#L49-L205) of `SplitV` can trigger a segfault is an attacker supplies negative arguments:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SplitV(\n  value=tf.constant([]),\n  size_splits=[-1, -2]\n  ,axis=0,\n  num_split=2)\n``` \n  \nThis occurs whenever `size_splits` contains more than one value and at least one value is negative.\n  \n### Patches \nWe have patched the issue in GitHub commit [25d622ffc432acc736b14ca3904177579e733cc6](https://github.com/tensorflow/tensorflow/commit/25d622ffc432acc736b14ca3904177579e733cc6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-m539-j985-hcr8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe Keras pooling layers can trigger a segfault if the size of the pool is 0 or if a dimension is negative: \n\n```python\nimport tensorflow as tf\n\npool_size = [2, 2, 0]\nlayer = tf.keras.layers.MaxPooling3D(strides=1, pool_size=pool_size)\ninput_tensor = tf.random.uniform([3, 4, 10, 11, 12], dtype=tf.float32)\nres = layer(input_tensor)\n```\n\nThis is due to the TensorFlow's implementation of pooling operations where the values in the sliding window are not checked to be strictly positive.\n\n### Patches\nWe have patched the issue in GitHub commit [12b1ff82b3f26ff8de17e58703231d5a02ef1b8b](https://github.com/tensorflow/tensorflow/commit/12b1ff82b3f26ff8de17e58703231d5a02ef1b8b) (merging [#51975](https://github.com/tensorflow/tensorflow/pull/51975)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/51936).\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7v94-64hj-m82h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementation of `ParallelConcat`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97) misses some input validation and can produce a division by 0:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.ParallelConcat(values=[['tf']],shape=0)\n  return y\n\ntest()\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2c3931113eaafe9ef558faaddd48e00a6606235](https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-x3v8-c8qx-3j3r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code for `DeserializeSparse`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/sparse_ops.cc#L152-L168) can trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\n\ndataset = tf.data.Dataset.range(3)\n  \n@tf.function                 \ndef test():                  \n  y = tf.raw_ops.DeserializeSparse(\n    serialized_sparse=tf.data.experimental.to_variant(dataset),\n    dtype=tf.int32)\n\ntest()\n```\n\nThis is because the shape inference function assumes that the `serialize_sparse` tensor is a tensor with positive rank (and having `3` as the last dimension).  However, in the example above, the argument is a scalar (i.e., rank 0).\n\n### Patches\nWe have patched the issue in GitHub commit [d3738dd70f1c9ceb547258cbb82d853da8771850](https://github.com/tensorflow/tensorflow/commit/d3738dd70f1c9ceb547258cbb82d853da8771850).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cvgx-3v3q-m36c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code for `QuantizeV2`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/framework/common_shape_fns.cc#L2509-L2530) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeV2(\n    input=[1.0,1.0],\n    min_range=[1.0,10.0],\n    max_range=[1.0,10.0],\n    T=tf.qint32,\n    mode='MIN_COMBINED',\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100,\n    ensure_minimum_range=10)\n  return data\n\ntest()\n```\n\nThis occurs whenever `axis` is a negative value less than `-1`. In this case, we are accessing data before the start of a heap buffer:\n    \n```cc\nint axis = -1;\nStatus s = c->GetAttr(\"axis\", &axis);\nif (!s.ok() && s.code() != error::NOT_FOUND) {\n  return s;\n}   \n... \nif (axis != -1) {\n  ...\n  TF_RETURN_IF_ERROR(\n      c->Merge(c->Dim(minmax, 0), c->Dim(input, axis), &depth));\n}\n```\n\nThe code allows `axis` to be an optional argument (`s` would contain an `error::NOT_FOUND` error code). Otherwise, it assumes that `axis` is a valid index into the dimensions of the `input` tensor. If `axis` is less than `-1` then this results in a heap OOB read.\n    \n### Patches\nWe have patched the issue in GitHub commit [a0d64445116c43cf46a5666bd4eee28e7a82f244](https://github.com/tensorflow/tensorflow/commit/a0d64445116c43cf46a5666bd4eee28e7a82f244).\n    \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-92vm-mxjf-jqf3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The `verify` function in the Stark Bank Python ECDSA library (starkbank-ecdsa) 2.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages.. Top 1 search result is pypi:starkbank-ecdsa. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:starkbank-ecdsa."}]}, {"id": "GHSA-f54p-f6jp-4rhr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/e71b86d47f8bc1816bf54d7bddc4170e47670b97/tensorflow/core/kernels/fused_batch_norm_op.cc#L1292) of `FusedBatchNorm` kernels is vulnerable to a heap OOB:\n\n```python\nimport tensorflow as tf\n    \ntf.raw_ops.FusedBatchNormGrad(\n  y_backprop=tf.constant([i for i in range(9)],shape=(1,1,3,3),dtype=tf.float32)\n  x=tf.constant([i for i in range(2)],shape=(1,1,1,2),dtype=tf.float32)\n  scale=[1,1],\n  reserve_space_1=[1,1],\n  reserve_space_2=[1,1,1],\n  epsilon=1.0,\n  data_format='NCHW',\n  is_training=True) \n```\n  \n### Patches\nWe have patched the issue in GitHub commit [aab9998916c2ffbd8f0592059fad352622f89cda](https://github.com/tensorflow/tensorflow/commit/aab9998916c2ffbd8f0592059fad352622f89cda).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-49rx-x2rw-pc6f", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference functions for the `QuantizeAndDequantizeV*` operations](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/ops/array_ops.cc) can trigger a read outside of bounds of heap allocated array as illustrated in the following sets of PoCs:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeAndDequantizeV4Grad(\n    gradients=[1.0,1.0],\n    input=[1.0,1.0],\n    input_min=[1.0,10.0],\n    input_max=[1.0,10.0],\n    axis=-100)\n  return data\n\ntest()\n```\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeAndDequantizeV4(\n    input=[1.0,1.0],\n    input_min=[1.0,10.0],\n    input_max=[1.0,10.0],\n    signed_input=False,\n    num_bits=10,\n    range_given=False,\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100)\n  return data\n\ntest()\n```\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeAndDequantizeV3(\n    input=[1.0,1.0],\n    input_min=[1.0,10.0],\n    input_max=[1.0,10.0],\n    signed_input=False,\n    num_bits=10,\n    range_given=False,\n    narrow_range=False,\n    axis=-100)\n  return data\n\ntest()\n```\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeAndDequantizeV2(\n    input=[1.0,1.0],\n    input_min=[1.0,10.0],\n    input_max=[1.0,10.0],\n    signed_input=False,\n    num_bits=10,\n    range_given=False,\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100)\n  return data\n\ntest()\n```\n\nIn all of these cases, `axis` is a negative value different than the special value used for optional/unknown dimensions (i.e., -1). However, the code ignores the occurences of these values:\n\n```cc\n...\nif (axis != -1) {\n  ...\n  c->Dim(input, axis);\n  ...\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [7cf73a2274732c9d82af51c2bc2cf90d13cd7e6d](https://github.com/tensorflow/tensorflow/commit/7cf73a2274732c9d82af51c2bc2cf90d13cd7e6d).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-j8c8-67vp-6mx7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe `ImmutableConst` operation in TensorFlow can be tricked into reading arbitrary memory contents:\n\n```python\nimport tensorflow as tf\n  \nwith open('/tmp/test','wb') as f:\n    f.write(b'\\xe2'*128)\n    data = tf.raw_ops.ImmutableConst(dtype=tf.string,shape=3,memory_region_name='/tmp/test')\n  \nprint(data)\n```\n  \nThis is because the `tstring` TensorFlow string class has a special case for memory mapped strings but the operation itself does not offer any support for this datatype.\n\n### Patches\nWe have patched the issue in GitHub commit [3712a2d3455e6ccb924daa5724a3652a86f6b585](https://github.com/tensorflow/tensorflow/commit/3712a2d3455e6ccb924daa5724a3652a86f6b585) and GitHub commit [1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b](https://github.com/tensorflow/tensorflow/commit/1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b).\n  \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cqv6-3phm-hcwx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [shape inference code](https://github.com/tensorflow/tensorflow/blob/9ff27787893f76d6971dcd1552eb5270d254f31b/tensorflow/core/ops/cudnn_rnn_ops.cc) for the `Cudnn*` operations in TensorFlow can be tricked into accessing invalid memory, via a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef func():\n  return tf.raw_ops.CudnnRNNV3(\n    input=[0.1, 0.1],\n    input_h=[0.5],\n    input_c=[0.1, 0.1, 0.1], \n    params=[0.5, 0.5],\n    sequence_lengths=[-1, 0, 1])\n  \nfunc() \n```\n  \nThis occurs because the ranks of the `input`, `input_h` and `input_c` parameters are not validated, but code assumes they have certain values:\n\n```cc\nauto input_shape = c->input(0);\nauto input_h_shape = c->input(1);\nauto seq_length = c->Dim(input_shape, 0);\nauto batch_size = c->Dim(input_shape, 1);  // assumes rank >= 2\nauto num_units = c->Dim(input_h_shape, 2); // assumes rank >= 3\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [af5fcebb37c8b5d71c237f4e59c6477015c78ce6](https://github.com/tensorflow/tensorflow/commit/af5fcebb37c8b5d71c237f4e59c6477015c78ce6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-qppg-v75c-r5ff", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: S3Scanner before 2.0.2 allows Directory Traversal via a crafted bucket, as demonstrated by a `<Key>../` substring in a `ListBucketResult` element.. Top 1 search result is pypi:s3scanner. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:s3scanner."}]}, {"id": "GHSA-5hx2-qx8j-qjqm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf `tf.image.resize` is called with a large input argument then the TensorFlow process will crash due to a `CHECK`-failure caused by an overflow.\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.keras.layers.UpSampling2D(\n  size=1610637938,\n  data_format='channels_first',\n  interpolation='bilinear')(np.ones((5,1,1,1)))\n```\n\nThe number of elements in the output tensor is too much for the `int64_t` type and the overflow is detected via a `CHECK` statement. This aborts the process.\n\n### Patches\nWe have patched the issue in GitHub commit [e5272d4204ff5b46136a1ef1204fc00597e21837](https://github.com/tensorflow/tensorflow/commit/e5272d4204ff5b46136a1ef1204fc00597e21837) (merging [#51497](https://github.com/tensorflow/tensorflow/pull/51497)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46914).. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cq76-mxrc-vchh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.math.segment_*` operations results in a `CHECK`-fail related abort (and denial of service) if a segment id in `segment_ids` is large.\n\n```python\nimport tensorflow as tf\n\ntf.math.segment_max(data=np.ones((1,10,1)), segment_ids=[1676240524292489355])\ntf.math.segment_min(data=np.ones((1,10,1)), segment_ids=[1676240524292489355])\ntf.math.segment_mean(data=np.ones((1,10,1)), segment_ids=[1676240524292489355])    \ntf.math.segment_sum(data=np.ones((1,10,1)), segment_ids=[1676240524292489355])\ntf.math.segment_prod(data=np.ones((1,10,1)), segment_ids=[1676240524292489355])\n```\n\nThis is similar to [CVE-2021-29584](https://github.com/tensorflow/tensorflow/blob/3a74f0307236fe206b046689c4d76f57c9b74eee/tensorflow/security/advisory/tfsa-2021-071.md) (and similar other reported vulnerabilities in TensorFlow, localized to specific APIs): the [implementation](https://github.com/tensorflow/tensorflow/blob/dae66e518c88de9c11718cd0f8f40a0b666a90a0/tensorflow/core/kernels/segment_reduction_ops_impl.h) (both on CPU and GPU) computes the output shape using [`AddDim`](https://github.com/tensorflow/tensorflow/blob/0b6b491d21d6a4eb5fbab1cca565bc1e94ca9543/tensorflow/core/framework/tensor_shape.cc#L395-L408). However, if the number of elements in the tensor overflows an `int64_t` value, `AddDim` results in a `CHECK` failure which provokes a `std::abort`. Instead, code should use [`AddDimWithStatus`](https://github.com/tensorflow/tensorflow/blob/0b6b491d21d6a4eb5fbab1cca565bc1e94ca9543/tensorflow/core/framework/tensor_shape.cc#L410-L440).\n\n\n### Patches\nWe have patched the issue in GitHub commit [e9c81c1e1a9cd8dd31f4e83676cab61b60658429](https://github.com/tensorflow/tensorflow/commit/e9c81c1e1a9cd8dd31f4e83676cab61b60658429) (merging [#51733](https://github.com/tensorflow/tensorflow/pull/51733)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.      \n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.     \n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46888).. Top 1 search result is pypi:tensorflow-cpu. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-57wx-m983-2f88", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [code for boosted trees in TensorFlow](https://github.com/tensorflow/tensorflow/blob/e0b6e58c328059829c3eb968136f17aa72b6c876/tensorflow/core/kernels/boosted_trees/stats_ops.cc) is still missing validation. As a result, attackers can trigger denial of service (via dereferencing `nullptr`s or via `CHECK`-failures) as well as abuse undefined behavior (binding references to `nullptr`s). An attacker can also read and write from heap buffers, depending on the API that gets used and the arguments that are passed to the call.\n\n**Note**: Given that the boosted trees implementation in TensorFlow is unmaintained, it is recommend to no longer use these APIs.  Instead, please use the downstream [TensorFlow Decision Forests](https://github.com/tensorflow/decision-forests) project which is newer and supports more features. We will deprecate TensorFlow's boosted trees APIs in subsequent releases.\n\n### Patches\nWe have patched the issue in GitHub commit [5c8c9a8bfe750f9743d0c859bae112060b216f5c](https://github.com/tensorflow/tensorflow/commit/5c8c9a8bfe750f9743d0c859bae112060b216f5c).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-p49h-hjvm-jg3h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: libImaging/PcxDecode.c in Pillow before 6.2.2 has a PCX P mode buffer overflow.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-2p25-55c9-h58q", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf `tf.tile` is called with a large input argument then the TensorFlow process will crash due to a `CHECK`-failure caused by an overflow.\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.keras.backend.tile(x=np.ones((1,1,1)), n=[100000000,100000000, 100000000])\n```\n\nThe number of elements in the output tensor is too much for the `int64_t` type and the overflow is detected via a `CHECK` statement. This aborts the process.\n\n### Patches\nWe have patched the issue in GitHub commit [9294094df6fea79271778eb7e7ae1bad8b5ef98f](https://github.com/tensorflow/tensorflow/commit/9294094df6fea79271778eb7e7ae1bad8b5ef98f) (merging [#51138](https://github.com/tensorflow/tensorflow/pull/51138)).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/46911).. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-6hpv-v2rx-c5g6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [implementations for convolution operators](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/conv_ops.cc) trigger a division by 0 if passed empty filter tensor arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [f2c3931113eaafe9ef558faaddd48e00a6606235](https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235).\n  \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-6rvj-pw9w-jcvc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An information disclosure vulnerability in OnionShare 2.3 before 2.4 allows remote unauthenticated attackers to retrieve the full list of participants of a non-public OnionShare node via the --chat feature. . Top 1 search result is pypi:onionshare-cli. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:onionshare-cli."}]}, {"id": "GHSA-vfrc-ggmc-5jwv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). Top 1 search result is pypi:django-helpdesk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-helpdesk."}]}, {"id": "GHSA-fwf6-rw69-hhj4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects all versions of package html-to-csv. When there is a formula embedded in a HTML page, it gets accepted without any validation and the same would be pushed while converting it into a CSV file. Through this a malicious actor can embed or generate a malicious link or execute commands via CSV files.. Top 1 search result is pypi:html-to-csv. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:html-to-csv."}]}, {"id": "GHSA-vx6v-xg64-pmr8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').. Top 1 search result is pypi:django-helpdesk. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-helpdesk."}]}, {"id": "GHSA-3hfw-x7gx-437c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nSynapse instances with the media repository enabled can be tricked into downloading a file from a remote server into an arbitrary directory, potentially outside the media store directory.\n\nThe last two directories and file name of the path are chosen randomly by Synapse and cannot be controlled by an attacker, which limits the impact.\n\nHomeservers with the media repository disabled are unaffected. Homeservers configured with a federation whitelist are also unaffected.\n\n### Patches\nServer administrators should upgrade to 1.47.1 or later.\n\n### Workarounds\nServer administrators using a reverse proxy could, at the expense of losing media functionality, block the following endpoints:\n\n* `/_matrix/media/r0/download/{serverName}/{mediaId}`\n* `/_matrix/media/r0/download/{serverName}/{mediaId}/{fileName}`\n* `/_matrix/media/r0/thumbnail/{serverName}/{mediaId}`\n\nAlternatively, non-containerized deployments can be adapted to use the hardened systemd config, located at `contrib/systemd/override-hardened.conf`.\n\n### References\nn/a\n\n### For more information\n\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.\n. Top 1 search result is pypi:matrix-synapse. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:matrix-synapse."}]}, {"id": "GHSA-gpfh-jvf9-7wg5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe [async implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/collective_ops.cc#L604-L615) of `CollectiveReduceV2` suffers from a memory leak and a use after free:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.CollectiveReduceV2(\n  input=[],\n  group_size=[-10, -10, -10],\n  group_key=[-10, -10],\n  instance_key=[-10],\n  ordering_token=[],\n  merge_op='Mul',\n  final_op='Div')\n``` \n\nThis occurs due to the asynchronous computation and the fact that objects that have been `std::move()`d from are still accessed:\n\n```cc\nauto done_with_cleanup = [col_params, done = std::move(done)]() {\n  done();\n  col_params->Unref();\n};\nOP_REQUIRES_OK_ASYNC(c,\n                     FillCollectiveParams(col_params, REDUCTION_COLLECTIVE,\n                                          /*group_size*/ c->input(1),\n                                          /*group_key*/ c->input(2),\n                                          /*instance_key*/ c->input(3)),\n                     done);\n```\n\nHere, `done` is already moved from by the time `OP_REQUIRES_OK_ASYNC` macro needs to invoke it in case of errors. In this case, we get an undefined behavior, which can manifest via crashes, `std::bad_alloc` throws or just memory leaks.\n\n### Patches\nWe have patched the issue in GitHub commit [ca38dab9d3ee66c5de06f11af9a4b1200da5ef75](https://github.com/tensorflow/tensorflow/commit/ca38dab9d3ee66c5de06f11af9a4b1200da5ef75).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.\n. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-qr82-2c78-4m8h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapPeek(\n  key=tf.constant([8],dtype=tf.int64),\n  indices=[],\n  dtypes=[tf.int32],\n  capacity=8,\n  memory_limit=128)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty.\n    \n### Patches\nWe have patched the issue in GitHub commit [532f5c5a547126c634fefd43bbad1dc6417678ac](https://github.com/tensorflow/tensorflow/commit/532f5c5a547126c634fefd43bbad1dc6417678ac).\n                       \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-v768-w7m9-2vmm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n  \ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.SparseFillEmptyRows(\n  indices = tf.constant([], shape=[0, 0], dtype=tf.int64),\n  values = tf.constant([], shape=[0], dtype=tf.int64),\n  dense_shape = tf.constant([], shape=[0], dtype=tf.int64),\n  default_value = 0)\n```\n  \nThe shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors.\n\n### Patches \nWe have patched the issue in GitHub commit [578e634b4f1c1c684d4b4294f9e5281b2133b3ed](https://github.com/tensorflow/tensorflow/commit/578e634b4f1c1c684d4b4294f9e5281b2133b3ed).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-vmjw-c2vp-p33c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],\n  scores=[1.0,2.0,3.0],\n  max_output_size=-1,\n  iou_threshold=0.5,\n  score_threshold=0.5,\n  soft_nms_sigma=1.0,\n  pad_to_max_output_size=True)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/image/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`:\n\n```cc\n  const int output_size = max_output_size.scalar<int>()();\n  // ...\n  std::vector<int> selected;\n  // ...\n  if (pad_to_max_output_size) {\n    selected.resize(output_size, 0);\n    // ...\n  }\n```\n    \nHowever, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to usigned. If the attacker supplies a negative value, this conversion results in a crash.\n\nA similar issue occurs in `CombinedNonMaxSuppression`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]]]],\n  scores=[[[1.0,2.0,3.0],[1.0,2.0,3.0],[1.0,2.0,3.0]]],\n  max_output_size_per_class=-1,\n  max_total_size=10,\n  iou_threshold=score_threshold=0.5,\n  pad_per_class=True,\n  clip_boxes=True)\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d](https://github.com/tensorflow/tensorflow/commit/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d) and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58](https://github.com/tensorflow/tensorflow/commit/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-g4gq-j4p2-j8fr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nBackground: The optional add-on package `Products.PythonScripts` adds `Script (Python)` to the list of content items a user can add to the Zope object database. Inside these scripts users can write Python code that is executed when rendered through the web. The code environment in these script objects is limited, it relies on the `RestrictedPython` package to provide a \"safe\" subset of Python instructions as well as the `AccessControl` package that defines security policies for execution in the context of a Zope application.\n\nRecently the `AccessControl` package was updated to fix a remote code execution security issue. A link to the security advisory is provided in the References section below. The bug tightens the `AccessControl` security policies for Zope by blocking access to unsafe classes inside the Python `string` module.\n\nYou are only affected if the following are true:\n\n- You use Python 3 for your Zope deployment (Zope 4 on Python 2 is not affected)\n- You run Zope 4 below version 4.6.3 or Zope 5 below version 5.3\n- You have installed the optional `Products.PythonScripts` add-on package\n\nBy default, you need to have the admin-level Zope \"Manager\" role to add or edit Script (Python) objects through the web. Only sites that allow untrusted users to add/edit these scripts through the web - which would be a very unusual configuration to begin with - are at risk.\n\n### Patches\nThe problem has been fixed in `AccessControl` versions 4.3 and 5.2. Zope releases 4.6.3 and 5.3 now require these new `AccessControl` releases.\n\n### Workarounds\nA site administrator can restrict adding/editing Script (Python) objects through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing these scripts through the web should be restricted to trusted users only. This is the default configuration in Zope.\n\n### References\n* [AccessControl security advisory GHSA-qcx9-j53g-ccgf](https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-qcx9-j53g-ccgf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Zope issue tracker](https://github.com/zopefoundation/Zope/issues)\n* Email us at [security@plone.org](mailto:security@plone.org)\n\n. Top 1 search result is pypi:AccessControl. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope pypi:Zope."}]}, {"id": "GHSA-c9qf-r67m-p7cg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIt is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.CompressElement(components=[[]])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/data/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [5dc7f6981fdaf74c8c5be41f393df705841fb7c5](https://github.com/tensorflow/tensorflow/commit/5dc7f6981fdaf74c8c5be41f393df705841fb7c5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. Concurrently, it was resolved in `master` branch as it was also discovered internally and fixed before the report was handled.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-9697-98pf-4rw7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.UpperBound`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.UpperBound(\n  sorted_input=[1,2,3],\n  values=tf.constant(value=[[0,0,0],[1,1,1],[2,2,2]],dtype=tf.int64),\n  out_type=tf.int64)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/searchsorted_op.cc#L85-L104) does not validate the rank of `sorted_input` argument:\n\n```cc\n  void Compute(OpKernelContext* ctx) override {\n    const Tensor& sorted_inputs_t = ctx->input(0);\n    // ...\n    OP_REQUIRES(ctx, sorted_inputs_t.dim_size(0) == values_t.dim_size(0),\n                Status(error::INVALID_ARGUMENT,\n                       \"Leading dim_size of both tensors must match.\"));\n    // ...\n    if (output_t->dtype() == DT_INT32) {\n      OP_REQUIRES(ctx,\n                  FastBoundsCheck(sorted_inputs_t.dim_size(1), ...));\n      // ...\n    }\n```\n\nAs we access the first two dimensions of `sorted_inputs_t` tensor, it must have rank at least 2.\n\nA similar issue occurs in `tf.raw_ops.LowerBound`.\n\n### Patches\nWe have patched the issue in GitHub commit [42459e4273c2e47a3232cc16c4f4fff3b3a35c38](https://github.com/tensorflow/tensorflow/commit/42459e4273c2e47a3232cc16c4f4fff3b3a35c38).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-3hxh-8cp2-g4hg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nWhen running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types.\n\n### Patches\nWe have patched the issue in GitHub commit [ee119d4a498979525046fba1c3dd3f13a039fbb1](https://github.com/tensorflow/tensorflow/commit/ee119d4a498979525046fba1c3dd3f13a039fbb1).                                                                                                          \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-4q2r-qxp6-h5j6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: XML External Entities (XXE) in Quokka v0.4.0 allows remote attackers to execute arbitrary code via the component 'quokka/core/content/views.py'.. Top 1 search result is pypi:quokka. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:quokka."}]}, {"id": "GHSA-hwr7-8gxx-fj5p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nSending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=1,\n  values=10,\n  default_value=21,\n  row_partition_tensors=tf.constant([0,0,0,0]),\n  row_partition_types=[])\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty.\n\n### Patches\nWe have patched the issue in GitHub commit [301ae88b331d37a2a16159b65b255f4f9eb39314](https://github.com/tensorflow/tensorflow/commit/301ae88b331d37a2a16159b65b255f4f9eb39314).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-qjj8-32p7-h289", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[]],shape=(0,1),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=1,\n  validate_indices=False)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. \n\n### Patches\nWe have patched the issue in GitHub commit  [ac117ee8a8ea57b73d34665cdf00ef3303bc0b11](https://github.com/tensorflow/tensorflow/commit/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-4298-89hc-6rfv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects all versions of package Flask-User. When using the `make_safe_url` function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple backslashes such as `/////evil.com/path` or `\\\\\\evil.com/path`. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using `autocorrect_location_header=False`.. Top 1 search result is pypi:werkzeug. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Flask-User."}]}, {"id": "GHSA-g8wg-cjwc-xhhp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIt is possible to nest a `tf.map_fn` within another `tf.map_fn` call. However, if the input tensor is a `RaggedTensor` and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap:\n\n```python\nimport tensorflow as tf\nx = tf.ragged.constant([[1,2,3], [4,5], [6]])\nt = tf.map_fn(lambda r: tf.map_fn(lambda y: r, r), x)\nz = tf.ragged.constant([[[1,2,3],[1,2,3],[1,2,3]],[[4,5],[4,5]],[[6]]])\n```\n  \nThe `t` and `z` outputs should be identical, however this is not the case. The last row of `t` contains data from the heap which can be used to leak other memory information.\n\nThe bug lies in the conversion from a `Variant` tensor to a `RaggedTensor`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_from_variant_op.cc#L177-L190) does not check that all inner shapes match and this results in the additional dimensions in the above example.\n\nThe same implementation can result in data loss, if input tensor is tweaked:\n\n```python\nimport tensorflow as tf\nx = tf.ragged.constant([[1,2], [3,4,5], [6]])\nt = tf.map_fn(lambda r: tf.map_fn(lambda y: r, r), x) \n```\n\nHere, the output tensor will only have 2 elements for each inner dimension.\n\n### Patches\nWe have patched the issue in GitHub commit [4e2565483d0ffcadc719bd44893fb7f609bb5f12](https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Haris Sahovic.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cfpj-3q4c-jhvr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/fully_connected.cc#L226):\n\n```cc\nconst int batch_size = input_size / filter->dims->data[1];\n```\n\nAn attacker can craft a model such that `filter->dims->data[1]` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [718721986aa137691ee23f03638867151f74935f](https://github.com/tensorflow/tensorflow/commit/718721986aa137691ee23f03638867151f74935f).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. Concurrently, it has also been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-5m69-3chg-6f8m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Cross Site Scripting (XSS) in Quokka v0.4.0 allows remote attackers to execute arbitrary code via the 'Username' parameter in the component 'quokka/admin/actions.py'.. Top 1 search result is pypi:quokka. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:quokka."}]}, {"id": "GHSA-hp4c-x6r7-6555", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv( \n  sp_indices=np.array([[4]]),\n  sp_values=np.array([-400]),\n  sp_shape=np.array([647.]),\n  dense=np.array([0]))\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately.\n\n### Patches\nWe have patched the issue in GitHub commit [d9204be9f49520cdaaeb2541d1dc5187b23f31d9](https://github.com/tensorflow/tensorflow/commit/d9204be9f49520cdaaeb2541d1dc5187b23f31d9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-cm5x-837x-jf3c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.InplaceSub(x=[],i=[-99,-1,-1],v=[1,1,1])\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/inplace_ops.cc#L283) has a logic error: it should skip processing if `x` and `v` are empty but the code uses `||` instead of `&&`.\n\n### Patches\nWe have patched the issue in GitHub commit [e86605c0a336c088b638da02135ea6f9f6753618](https://github.com/tensorflow/tensorflow/commit/e86605c0a336c088b638da02135ea6f9f6753618).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-rhrq-64mq-hf9h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of division in TFLite is [vulnerable to a division by 0 error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc)\n\nThere is no check that the divisor tensor does not contain zero elements.\n\n### Patches\nWe have patched the issue in GitHub commit [1e206baedf8bef0334cca3eb92bab134ef525a28](https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-v82p-hv3v-p6qp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nDue to incomplete validation in MKL implementation of requantization, an  attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RequantizationRangePerChannel(\n  input=[],\n  input_min=[0,0,0,0,0],\n  input_max=[1,1,1,1,1],\n  clip_value_max=1)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor.\n\nA similar issue occurs in `MklRequantizePerChannelOp`:\n\n```python\nimport tensorflow as tf \nfrom tensorflow.python.ops import gen_math_ops\n\ngen_math_ops.requantize_per_channel(\n  input=[],\n  input_min=[-100,-100,-100,-100,-100],\n  input_max=[-100,-100,-100],\n  requested_output_min=[-100,-100,-100,-100,-100],\n  requested_output_max=[],\n  out_type=tf.int)\n``` \n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [9e62869465573cb2d9b5053f1fa02a81fce21d69](https://github.com/tensorflow/tensorflow/commit/9e62869465573cb2d9b5053f1fa02a81fce21d69) and in the Github commit [203214568f5bc237603dbab6e1fd389f1572f5c9](https://github.com/tensorflow/tensorflow/commit/203214568f5bc237603dbab6e1fd389f1572f5c9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-f5cx-5wr3-5qrc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesCalculateBestGainsPerFeature(\n  node_id_range=[],\n  stats_summary_list=[[1,2,3]],\n  l1=[1.0],\n  l2=[1.0],\n  tree_complexity =[1.0],\n  min_node_weight =[1.17],\n  max_splits=5)\n```\n\nA similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`:\n\n```python\nimport tensorflow as tf\n                                                                                                                                                                                                                                                                                          \ntf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2(\n  node_id_range=[],\n  stats_summaries_list=[[1,2,3]],\n  split_types=[''],\n  candidate_feature_ids=[1,2,3,4],\n  l1=[1],     \n  l2=[1],\n  tree_complexity=[1.0],\n  min_node_weight=[1.17],\n  logits_dimension=5)\n```     \n    \nThe  [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) does not validate the input values.\n\n### Patches\nWe have patched the issue in GitHub commit [9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad](https://github.com/tensorflow/tensorflow/commit/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad) and in commit. [429f009d2b2c09028647dd4bb7b3f6f414bbaad7](https://github.com/tensorflow/tensorflow/commit/429f009d2b2c09028647dd4bb7b3f6f414bbaad7).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-w4xf-2pqw-5mq7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToVariant(\n  rt_nested_splits=[],\n  rt_dense_values=[1,2,3],\n  batched_input=True)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty.\n\n### Patches\nWe have patched the issue in GitHub commit [be7a4de6adfbd303ce08be4332554dff70362612](https://github.com/tensorflow/tensorflow/commit/be7a4de6adfbd303ce08be4332554dff70362612).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-87cj-px37-rc3x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects the package bikeshed before 3.0.0. This can occur when an untrusted source file containing Inline Tag Command metadata is processed. When an arbitrary OS command is executed, the command output would be included in the HTML output.. Top 1 search result is pypi:bikeshed. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:bikeshed."}]}, {"id": "GHSA-cgfm-62j4-v4rf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\nx = tf.SparseTensor(\n      indices=[[773, 773, 773], [773, 773, 773]],\n      values=[1, 1],\n      dense_shape=[337, 337, 337])\ntf.sparse.reduce_sum(x, 1)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor.\n\n### Patches\nWe have patched the issue in GitHub commit [87158f43f05f2720a374f3e6d22a7aaa3a33f750](https://github.com/tensorflow/tensorflow/commit/87158f43f05f2720a374f3e6d22a7aaa3a33f750). \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-hwfp-hg2m-9vr2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An integer overflow exists in pywin32 prior to version b301 when adding an access control entry (ACE) to an access control list (ACL) that would cause the size to be greater than 65535 bytes. An attacker who successfully exploited this vulnerability could crash the vulnerable process.. Top 1 search result is pypi:pywin32. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pywin32."}]}, {"id": "GHSA-g25h-jr74-qp5j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact                                                                                                                                                                                                                                                                                \nDue to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeV2(\n  input=[1,2,3],\n  min_range=[1,2],\n  max_range=[],\n  T=tf.qint32,\n  mode='SCALED',\n  round_mode='HALF_AWAY_FROM_ZERO',\n  narrow_range=False,\n  axis=1,\n  ensure_minimum_range=3)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [6da6620efad397c85493b8f8667b821403516708](https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-vcjj-9vg7-vf68", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\n```python\nimport tensorflow as tf\n\nmodel = tf.keras.models.Sequential()\nmodel.add(tf.keras.Input(shape=(1, 2, 3)))\nmodel.add(tf.keras.layers.Dense(0, activation='relu'))\n\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninterpreter.invoke()\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285) unconditionally dereferences a pointer.\n\n```cc\n  if (y4 > 1) {\n    // ...\n  } else {\n    for (int i0 = 0; i0 < y0; ++i0) {\n      const T* input2_data_ptr = nullptr;\n      for (int i1 = 0; i1 < y1; ++i1) {\n        input2_data_ptr = input2_data_reset;\n        for (int i2 = 0; i2 < y2; ++i2) {\n          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,\n                             output_data_ptr);\n        }\n      }\n    }\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [15691e456c7dc9bd6be203b09765b063bf4a380c](https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-hf6p-4rv2-9qrp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects the package bikeshed before 3.0.0. This can occur when an untrusted source file containing include, include-code or include-raw block is processed. The contents of arbitrary files could be disclosed in the HTML output.. Top 1 search result is pypi:bikeshed. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:bikeshed."}]}, {"id": "GHSA-r6jx-9g48-2r5r", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format.\n\n```python\nfrom tensorflow.keras import models\n\npayload = '''\n!!python/object/new:type\nargs: ['z', !!python/tuple [], {'extend': !!python/name:exec }]\nlistitems: \"__import__('os').system('cat /etc/passwd')\"\n'''\n  \nmodels.model_from_yaml(payload)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104) uses `yaml.unsafe_load` which can perform arbitrary code execution on the input.\n\n### Patches\nGiven that YAML format support requires a significant amount of work, we have removed it for now.\n\nWe have patched the issue in GitHub commit [23d6383eb6c14084a8fc3bdf164043b974818012](https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Arjun Shibu.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-3xg5-6c3j-vp8x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: XML External Entities (XXE) in Quokka v0.4.0 allows remote attackers to execute arbitrary code via the component 'quokka/utils/atom.py'.. Top 1 search result is pypi:quokka. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:quokka."}]}, {"id": "GHSA-ch4f-829c-v5pw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.raw_ops.ResourceScatterDiv` is vulnerable to a division by 0 error:\n\n```python\nimport tensorflow as tf\n\nv= tf.Variable([1,2,3])\ntf.raw_ops.ResourceScatterDiv(\n  resource=v.handle,\n  indices=[1],\n  updates=[0])\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/resource_variable_ops.cc#L865) uses a common class for all binary operations but fails to treat the division by 0 case separately.\n\n### Patches\nWe have patched the issue in GitHub commit [4aacb30888638da75023e6601149415b39763d76](https://github.com/tensorflow/tensorflow/commit/4aacb30888638da75023e6601149415b39763d76).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-q3m9-9fj2-mfwr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nVarious parts of Plone use the 'is url in portal' check for security, mostly to see if it is safe to redirect to a url. A url like `https://example.org` is not in the portal.\nBut the url `https:example.org` without slashes tricks our code and it _is_ considered to be in the portal.\nWhen redirecting, some browsers go to `https://example.org`, others give an error.\nAttackers may use this to redirect you to their site, especially as part of a phishing attack.\n\n### Patches\nThe problem has been patched in `Products.isurlinportal` 1.2.0.\nThis is a recommended upgrade for all users of Plone 4.3 and 5, on Python 2.7 or higher.\nIt has not been tested on earlier Plone or Python versions.\nUpcoming Plone 5.2.5 and higher will include the new version.\n\n### Discovered\nThis vulnerability was discovered and reported by Yuji Tounai of Mitsui Bussan Secure Directions, Inc. Thank you!\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email the Plone Security Team at [security@plone.org](mailto:security@plone.org), especially when you think you have discovered a security problem or when you are not sure.\n* Open an issue in [the tracker](https://github.com/plone/Products.isurlinportal/issues) if your question or comment can be public.\n. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Products.isurlinportal."}]}, {"id": "GHSA-9w2p-5mgw-p94c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=[1.0,2.0],\n  input=[1.0,1.0],\n  input_min=[0.0],\n  input_max=[10.0],\n  axis=-100)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [96f364a1ca3009f98980021c4b32be5fdcca33a1](https://github.com/tensorflow/tensorflow/commit/96f364a1ca3009f98980021c4b32be5fdcca33a1).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-278g-rq84-9hmg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapStage(\n  key=tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64),\n  indices=tf.constant((0), dtype=tf.int32),\n  values=[tf.constant((0), dtype=tf.int32)],\n  dtypes=[tf.int32,\n  tf.int64],\n  capacity=0,\n  memory_limit=0,\n  container='',\n  shared_name='')\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [d7de67733925de196ec8863a33445b73f9562d1d](https://github.com/tensorflow/tensorflow/commit/d7de67733925de196ec8863a33445b73f9562d1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-jwf9-w5xm-f437", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTFLite's [`GatherNd` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation.\n\nHence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`.\n\nSimilar issue exists in [`Gather` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc).\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n```\n\n### Patches\nWe have patched the issue in GitHub commits [bb6a0383ed553c286f87ca88c207f6774d5c4a8f](https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f) and [eb921122119a6b6e470ee98b89e65d721663179d](https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-cmgw-8vpc-rc59", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nUnder certain conditions, Go code can trigger a segfault in string deallocation.\n\n\nFor string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function.  However, tensor structure isn't checked until encoding to avoid a performance penalty.  The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions).\n\nTo fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written.\n\n### Patches\nWe have patched the issue in GitHub commit [8721ba96e5760c229217b594f6d2ba332beedf22](https://github.com/tensorflow/tensorflow/commit/8721ba96e5760c229217b594f6d2ba332beedf22) (merging [#50508](https://github.com/tensorflow/tensorflow/pull/50508)).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version.                                                                                                                                               \n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [fixing PR](https://github.com/tensorflow/tensorflow/pull/50508).. Top 1 search result is pypi:tensorflow-cpu. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-4952-p58q-6crx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\nPatched in the following versions: 3.1.4, 3.0.17, 2.3.2, 2.2.10, 1.2.21.\n\n### References\n\n[OWASP Page on Restricting Form Submissions](https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google\n. Top 1 search result is pypi:notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:jupyterlab pypi:jupyterlab pypi:jupyterlab pypi:jupyterlab pypi:jupyterlab pypi:notebook pypi:notebook."}]}, {"id": "GHSA-4xfp-4pfp-89wg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToSparse(\n  rt_nested_splits=[[0, 38, 0]],\n  rt_dense_values=[])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order.\n\n### Patches\nWe have patched the issue in GitHub commit [1071f554dbd09f7e101324d366eec5f4fe5a3ece](https://github.com/tensorflow/tensorflow/commit/1071f554dbd09f7e101324d366eec5f4fe5a3ece).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-hpv4-7p9c-mvfr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=[0,1,2,3],\n  out_backprop = np.array([[[[541],[541]],[[541],[541]]]]),\n  row_pooling_sequence=[0, 0, 0, 0, 0],\n  col_pooling_sequence=[-2, 0, 0, 2, 0],\n  overlapping=True)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area.\n\n### Patches\nWe have patched the issue in GitHub commit [0f931751fb20f565c4e94aa6df58d54a003cdb30](https://github.com/tensorflow/tensorflow/commit/0f931751fb20f565c4e94aa6df58d54a003cdb30).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-c5x2-p679-95wc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nWhen a user does not supply arguments that determine a valid sparse tensor, `tf.raw_ops.SparseTensorSliceDataset` implementation can be made to dereference a null pointer:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SparseTensorSliceDataset(\n  indices=[[],[],[]],\n  values=[1,2,3],\n  dense_shape=[3,3])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L240-L251) has some argument validation but fails to consider the case when either `indices` or `values` are provided for an empty sparse tensor when the other is not.\n\nIf `indices` is empty (as in the example above), then [code that performs validation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L260-L261) (i.e., checking that the indices are monotonically increasing) results in a null pointer dereference: \n\n```cc\n    for (int64_t i = 0; i < indices->dim_size(0); ++i) {\n      int64_t next_batch_index = indices->matrix<int64>()(i, 0);\n      ...\n    }\n```\n\nIf `indices` as provided by the user is empty, then `indices` in the C++ code above is backed by an empty `std::vector`, hence calling `indices->dim_size(0)` results in null pointer dereferencing (same as calling `std::vector::at()` on an empty vector).\n\n### Patches\nWe have patched the issue in GitHub commit [02cc160e29d20631de3859c6653184e3f876b9d7](https://github.com/tensorflow/tensorflow/commit/02cc160e29d20631de3859c6653184e3f876b9d7).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-fcwc-p4fc-c5cc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagPartV2(\n  input=tf.ones(2,dtype=tf.int32),\n  k=tf.ones(2,dtype=tf.int32),\n  padding_value=[])\n```\n\nAlthough this example is given for `MatrixDiagPartV2`, all versions of the operation are affected.\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/linalg/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from.\n\n### Patches\nWe have patched the issue in GitHub commit [482da92095c4d48f8784b1f00dda4f81c28d2988](https://github.com/tensorflow/tensorflow/commit/482da92095c4d48f8784b1f00dda4f81c28d2988).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-q3g3-h9r4-prrc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations):\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SqrtGrad(y=[4, 16],dy=[])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr.\n\n### Patches\nWe have patched the issue in GitHub commit [93f428fd1768df147171ed674fee1fc5ab8309ec](https://github.com/tensorflow/tensorflow/commit/93f428fd1768df147171ed674fee1fc5ab8309ec).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo  360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-9jjr-qqfp-ppwx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nA remote code execution vulnerability has been identified in BinderHub, where providing BinderHub with maliciously crafted input could execute code in the BinderHub context, with the potential to egress credentials of the BinderHub deployment, including JupyterHub API tokens, kubernetes service accounts, and docker registry credentials. This may provide the ability to manipulate images and other user created pods in the deployment, with the potential to escalate to the host depending on the underlying kubernetes configuration.\n\n### Patches\n\nPatch below, or [on GitHub](https://github.com/jupyterhub/binderhub/commit/195caac172690456dcdc8cc7a6ca50e05abf8182.patch)\n\n```diff\nFrom 9f4043d9dddc1174920e687773f27b7933f48ab6 Mon Sep 17 00:00:00 2001\nFrom: Riccardo Castellotti <rcastell@cern.ch>\nDate: Thu, 19 Aug 2021 15:49:43 +0200\nSubject: [PATCH] Explicitly separate git-ls-remote options from positional\n arguments\n\n---\n binderhub/repoproviders.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/binderhub/repoproviders.py b/binderhub/repoproviders.py\nindex f33347b..5d4b87c 100755\n--- a/binderhub/repoproviders.py\n+++ b/binderhub/repoproviders.py\n@@ -484,7 +484,7 @@ class GitRepoProvider(RepoProvider):\n             self.sha1_validate(self.unresolved_ref)\n         except ValueError:\n             # The ref is a head/tag and we resolve it using `git ls-remote`\n-            command = [\"git\", \"ls-remote\", self.repo, self.unresolved_ref]\n+            command = [\"git\", \"ls-remote\", \"--\", self.repo, self.unresolved_ref]\n             result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n             if result.returncode:\n                 raise RuntimeError(\"Unable to run git ls-remote to get the `resolved_ref`: {}\".format(result.stderr))\n-- \n2.25.1\n\n```\n\n### Workarounds\n\nDisable the git repo provider by specifying the `BinderHub.repo_providers` config, e.g.:\n\n```python\nfrom binderhub.repoproviders import (GitHubRepoProvider,\n                            GitLabRepoProvider, GistRepoProvider,\n                            ZenodoProvider, FigshareProvider, HydroshareProvider,\n                            DataverseProvider)\n\nc.BinderHub.repo_providers =  {\n            'gh': GitHubRepoProvider,\n            'gist': GistRepoProvider,\n            'gl': GitLabRepoProvider,\n            'zenodo': ZenodoProvider,\n            'figshare': FigshareProvider,\n            'hydroshare': HydroshareProvider,\n            'dataverse': DataverseProvider,\n        }\n```\n\n### References\n\nCredit: Jose Carlos Luna Duran (CERN) and Riccardo Castellotti (CERN).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@ipython.org](mailto:security@ipython.org)\n. Top 1 search result is pypi:binderhub. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:binderhub."}]}, {"id": "GHSA-f865-m6cq-j9vx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Mpmath v1.0.0 when the mpmathify function is called.. Top 1 search result is pypi:mpmath. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:mpmath."}]}, {"id": "GHSA-w74j-v8xh-3w5h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_string_ops\n\ngen_string_ops.unicode_encode(\n  input_values=[],\n  input_splits=[],\n  output_encoding='UTF-8',\n  errors='ignore',\n  replacement_char='a')\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty: \n\n```cc\n  const Tensor& input_splits = context->input(1);\n  const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n  TensorShape output_shape({input_splits.dim_size(0) - 1});\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2e0ee46f1a47675152d3d865797a18358881d7a6](https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-4c4g-crqm-xrxw", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https://github.com/tensorflow/tensorflow/commit/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https://github.com/tensorflow/tensorflow/commit/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https://github.com/tensorflow/tensorflow/commit/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. . Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-6p5r-g9mq-ggh2", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixSetDiagV3(\n  input=[1,2,3],\n  diagonal=[1,1],\n  k=[],\n  align='RIGHT_LEFT')\n```\n  \nThe  [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong: \n\n```cc \n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [ff8894044dfae5568ecbf2ed514c1a37dc394f1b](https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-mhhc-q96p-mfm9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe strided slice implementation in TFLite has a logic bug which can allow an attacker to trigger an infinite loop. This arises from newly introduced support for [ellipsis in axis definition](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/strided_slice.cc#L103-L122):\n\n```cc\n  for (int i = 0; i < effective_dims;) {\n    if ((1 << i) & op_context->params->ellipsis_mask) {\n      // ...\n      int ellipsis_end_idx =\n          std::min(i + 1 + num_add_axis + op_context->input_dims - begin_count,\n                   effective_dims);\n      // ...\n      for (; i < ellipsis_end_idx; ++i) {\n        // ...\n      }\n      continue;\n    }\n    // ...\n    ++i;\n  }\n```\n\nAn attacker can craft a model such that `ellipsis_end_idx` is smaller than `i` (e.g., always negative). In this case, the inner loop does not increase `i` and the `continue` statement causes execution to skip over the preincrement at the end of the outer loop.\n\n### Patches\nWe have patched the issue in GitHub commit [dfa22b348b70bb89d6d6ec0ff53973bacb4f4695](https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695).\n\nThe fix will be included in TensorFlow 2.6.0. This is the only affected version.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-9c8h-2mv3-49ww", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nMost implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Conv2D(\n  input = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  filter = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  strides = [1, 1, 1, 1],\n  padding = \"SAME\")\n```\n\nThe shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/framework/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations.\n\n### Patches\nWe have patched the issue in GitHub commit [8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4](https://github.com/tensorflow/tensorflow/commit/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-qcx9-j53g-ccgf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe module `AccessControl` defines security policies for Python code used in restricted code within Zope applications. Restricted code is any code that resides in Zope's object database, such as the contents of `Script (Python)` objects. \n\nThe policies defined in `AccessControl` severely restrict access to Python modules and only exempt a few that are deemed safe, such as Python's `string` module. However, full access to the `string` module also allows access to the class `Formatter`, which can be overridden and extended within `Script (Python)` in a way that provides access to other unsafe Python libraries. Those unsafe Python libraries can be used for remote code execution.\n\nBy default, you need to have the admin-level Zope \"Manager\" role to add or edit `Script (Python)` objects through the web. Only sites that allow untrusted users to add/edit these scripts through the web - which would be a very unusual configuration to begin with - are at risk.\n\n### Patches\nThe problem has been fixed in AccessControl 4.3 and 5.2.\nOnly AccessControl versions 4 and 5 are vulnerable, and only on Python 3, not Python 2.7.\n\n### Workarounds\nA site administrator can restrict adding/editing `Script (Python)` objects through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing these scripts through the web should be restricted to trusted users only. This is the default configuration in Zope.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [AccessControl issue tracker](https://github.com/zopefoundation/AccessControl/issues)\n* Email us at [security@plone.org](mailto:security@plone.org)\n. Top 1 search result is pypi:AccessControl. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:AccessControl pypi:AccessControl."}]}, {"id": "GHSA-qfpc-5pjr-mh26", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Dequantize(\n  input_tensor = tf.constant(-10.0, dtype=tf.float32),\n  input_tensor = tf.cast(input_tensor, dtype=tf.quint8),\n  min_range = tf.constant([], shape=[0], dtype=tf.float32),\n  max_range = tf.constant([], shape=[0], dtype=tf.float32),\n  mode  = 'MIN_COMBINED',\n  narrow_range=False,\n  axis=-10,\n  dtype=tf.dtypes.float32)\n```\n\nThe shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values.\n\n### Patches\nWe have patched the issue in GitHub commit [da857cfa0fde8f79ad0afdbc94e88b5d4bbec764](https://github.com/tensorflow/tensorflow/commit/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-f8h4-7rgh-q2gm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation for `tf.raw_ops.ExperimentalDatasetToTFRecord` and `tf.raw_ops.DatasetToTFRecord` can trigger heap buffer overflow and segmentation fault:\n\n```python\nimport tensorflow as tf\n\ndataset = tf.data.Dataset.range(3)\ndataset = tf.data.experimental.to_variant(dataset)\ntf.raw_ops.ExperimentalDatasetToTFRecord(\n  input_dataset=dataset,\n  filename='/tmp/output',\n  compression_type='')\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/to_tf_record_op.cc#L93-L102) assumes that all records in the dataset are of string type. However, there is no check for that, and the example given above uses numeric types.\n\n### Patches\nWe have patched the issue in GitHub commit [e0b6e58c328059829c3eb968136f17aa72b6c876](https://github.com/tensorflow/tensorflow/commit/e0b6e58c328059829c3eb968136f17aa72b6c876).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-2r8p-fg3c-wcj4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[1,2],[3,4],[5,6]],shape=(3,2),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=10,\n  validate_indices=False)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor.\n\nSince the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor:\n\n```cc\n    // batch_dims_ = > params.dims() (10 > 2)\n    for (int i = 0; i < batch_dims_; ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n    for (int i = batch_dims_; i < indices.dims(); ++i) {\n      result_shape.AddDim(indices.dim_size(i));\n    }\n    for (int i = batch_dims_ + 1; i < params.dims(); ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n```\n\nIn debug mode, `.dim_size(i)` validates that the argument is less than `.dims()` using a `DCHECK`. But the `DCHECK` is a no-op in release builds.\n\n### Patches\nWe have patched the issue in GitHub commit [bc9c546ce7015c57c2f15c168b3d9201de679a1d](https://github.com/tensorflow/tensorflow/commit/bc9c546ce7015c57c2f15c168b3d9201de679a1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-q7f7-544h-67h9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementations of pooling in TFLite are vulnerable to division by 0 errors as there are no checks for divisors not being 0.\n\n### Patches \nWe have patched the issue in GitHub commit [dfa22b348b70bb89d6d6ec0ff53973bacb4f4695](https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-6gv8-p3vj-pxvr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference: \n\n```python\nimport tensorflow as tf\n\ndata = tf.data.Dataset.from_tensors([0.0])\ntf.raw_ops.UncompressElement(\n  compressed=tf.data.experimental.to_variant(data),\n  output_types=[tf.int64],\n  output_shapes=[2])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [7bdf50bb4f5c54a4997c379092888546c97c3ebd](https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-27j5-4p9v-pp67", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nProviding a negative element to `num_elements` list argument of  `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.TensorListReserve(\n  element_shape = tf.constant([1]),\n  num_elements=tf.constant([-1]),\n  element_dtype = tf.int32)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [8a6e874437670045e6c7dc6154c7412b4a2135e2](https://github.com/tensorflow/tensorflow/commit/8a6e874437670045e6c7dc6154c7412b4a2135e2).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7f92-rr6w-cq64", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Background\nWhen attempting to use the v0.2.14 release, @pandadefi discovered an issue using the `@nonreentrant` decorator.\n\n### Impact\nReentrancy protection storage slots get allocated to the same slots as storage variables, leading to the corruption of storage variables when using the `@nonreentrant` decorator.\n\n### Patches\nThis issue was fixed in v0.2.15 in #2391, #2379\n\n### Workarounds\nDon't use the `@nonreentrant` decorator in these versions.. Top 1 search result is pypi:vyper. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:vyper."}]}, {"id": "GHSA-95xm-g58g-3p88", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SparseReshape(\n  input_indices = np.ones((1,3)),\n  input_shape = np.array([1,1,0]),\n  new_shape = np.array([1,0]))\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements.\n\nThe [reshape functor](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0.\n  \n### Patches\nWe have patched the issue in GitHub commit [4923de56ec94fff7770df259ab7f2288a74feb41](https://github.com/tensorflow/tensorflow/commit/4923de56ec94fff7770df259ab7f2288a74feb41).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-hwvq-6gjx-j797", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\n5.7.11, 6.4.1\n\n### References\n\n[OWASP Page on Injection Prevention](https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html#injection-prevention-rules)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google\n\n\n### Example:\n\nA notebook with the following content in a cell and it would display an alert when opened for the first time in Notebook (in an untrusted state):\n\n```\n{ \"cell_type\": \"code\", \"execution_count\": 0, \"metadata\": {}, \"outputs\": [ { \"data\": { \"text/html\": [ \"<select><iframe></select><img src=x: onerror=alert('xss')>\\n\"], \"text/plain\": [] }, \"metadata\": {}, \"output_type\": \"display_data\" } ], \"source\": [ \"\" ] }\n````. Top 1 search result is pypi:notebook. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:notebook pypi:notebook."}]}, {"id": "GHSA-wp77-4gmm-7cq8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SaveV2(\n  prefix=['tensorflow'],\n  tensor_name=['v'],\n  shape_and_slices=[],\n  tensors=[1,2,3])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/save_restore_v2_ops.cc) uses `ValidateInputs` to  check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer  above.\n\nHowever, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation.\n      \n### Patches\nWe have patched the issue in GitHub commit [9728c60e136912a12d99ca56e106b7cce7af5986](https://github.com/tensorflow/tensorflow/commit/9728c60e136912a12d99ca56e106b7cce7af5986).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.                                                                                                                                                                                                                                               \n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-9c8h-vvrj-w2p8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nIf the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers.\n                                                                                                                                                                                                                                                                                          \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedGather(\n  params_nested_splits = [0,0,0],\n  params_dense_values = [1,1],\n  indices = [0,0,9,0,0],\n  OUTPUT_RAGGED_RANK=0)\n```\n\nIn debug mode, the same code triggers a `CHECK` failure.\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors.\n\n### Patches\nWe have patched the issue in GitHub commit [a2b743f6017d7b97af1fe49087ae15f0ac634373](https://github.com/tensorflow/tensorflow/commit/a2b743f6017d7b97af1fe49087ae15f0ac634373).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-r2mj-8wgq-73m6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The package glances before 3.2.1 are vulnerable to XML External Entity (XXE) Injection via the use of Fault to parse untrusted XML data, which is known to be vulnerable to XML attacks.\n. Top 1 search result is pypi:Glances. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Glances."}]}, {"id": "GHSA-r4c4-5fpq-56wg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `BoostedTreesSparseCalculateBestFeatureSplit`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit(\n  node_id_range=[0,10],\n  stats_summary_indices=[[1, 2, 3, 0x1000000]],\n  stats_summary_values=[1.0],\n  stats_summary_shape=[1,1,1,1],\n  l1=l2=[1.0],\n  tree_complexity=[0.5],\n  min_node_weight=[1.0],\n  logits_dimension=3,\n  split_type='inequality')                                                                                                                                                                                                                                                                \n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) needs to validate that each value in `stats_summary_indices` is in range.\n  \n### Patches\nWe have patched the issue in GitHub commit [e84c975313e8e8e38bb2ea118196369c45c51378](https://github.com/tensorflow/tensorflow/commit/e84c975313e8e8e38bb2ea118196369c45c51378).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-mq5p-2mcr-m52j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nDue to an unsanitized input, visiting maliciously crafted links could result in arbitrary code execution in the user environment.\n\n### Patches\n\n0.10.2\n\n### Workarounds\n\nNone, other than upgrade to 0.10.2 or downgrade to 0.8.x.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [nbgitpuller](https://github.com/jupyterhub/nbgitpuller/issues)\n* Email our security team at [security@ipython.org](mailto:security@ipython.org)\n. Top 1 search result is pypi:nbgitpuller. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:nbgitpuller."}]}, {"id": "GHSA-7xwj-5r4v-429p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of SVDF in TFLite is [vulnerable to a null pointer error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313):\n\n```cc\n  TfLiteTensor* state = GetVariableInput(context, node, kStateTensor);\n  // ...\n  GetTensorData<float>(state)\n```\n\nThe [`GetVariableInput` function](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119) can return a null pointer but `GetTensorData` assumes that the argument is always a valid tensor.\n\n```cc\nTfLiteTensor* GetVariableInput(TfLiteContext* context, const TfLiteNode* node,\n                               int index) {\n  TfLiteTensor* tensor = GetMutableInput(context, node, index);\n  return tensor->is_variable ? tensor : nullptr;\n}\n```\n\nFurthermore, because `GetVariableInput` calls [`GetMutableInput`](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90) which might return `nullptr`, the `tensor->is_variable` expression can also trigger a null pointer exception.\n\n### Patches\nWe have patched the issue in GitHub commit [5b048e87e4e55990dae6b547add4dae59f4e1c76](https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-5xwc-mrhx-5g3m", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https://github.com/tensorflow/tensorflow/commit/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-h6jh-7gv5-28vg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.StringNGrams(\n  data=['',''],\n  data_splits=[0,2],\n  separator=' '*100,\n  ngram_widths=[-80,0,0,-60],\n  left_pad=' ',\n  right_pad=' ',\n  pad_width=100,\n  preserve_short_sequences=False)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [c283e542a3f422420cfdb332414543b62fc4e4a5](https://github.com/tensorflow/tensorflow/commit/c283e542a3f422420cfdb332414543b62fc4e4a5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-c545-c4f9-rf6v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nTFLite's [`expand_dims.cc`](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data:\n\n```cc\n  if (axis < 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis <= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i < output_dims->size; ++i) {\n    if (i < axis) {\n      output_dims->data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims->data[i] = 1;\n    } else {\n      output_dims->data[i] = input_dims.data[i - 1];\n    }\n  }\n```\n\nIf `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`).\n\n### Patches\nWe have patched the issue in GitHub commit [d94ffe08a65400f898241c0374e9edc6fa8ed257](https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-27qf-jwm8-g7f3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can craft a TFLite model that would trigger a division by zero error in LSH  [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/lsh_projection.cc#L118).\n\n```cc\nint RunningSignBit(const TfLiteTensor* input, const TfLiteTensor* weight,\n                   float seed) {\n  int input_item_bytes = input->bytes / SizeOfDimension(input, 0);\n  // ...\n}\n```\n          \nThere is no check that the first dimension of the input is non zero.\n      \n### Patches\nWe have patched the issue in GitHub commit [0575b640091680cfb70f4dd93e70658de43b94f9](https://github.com/tensorflow/tensorflow/commit/0575b640091680cfb70f4dd93e70658de43b94f9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-m7fm-4jfh-jrg6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nThe implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments:\n\n```python\nimport tensorflow as tf\n\nv= tf.Variable([0.0])\ntf.raw_ops.BoostedTreesCreateEnsemble(\n  tree_ensemble_handle=v.handle,\n  stamp_token=[0],\n  tree_ensemble_serialized=['0']) \n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/boosted_trees/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the  resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed.\n\n### Patches\nWe have patched the issue in GitHub commit [5ecec9c6fbdbc6be03295685190a45e7eee726ab](https://github.com/tensorflow/tensorflow/commit/5ecec9c6fbdbc6be03295685190a45e7eee726ab).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-m6h2-jx9v-58w6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: If remote logging is not used, the worker (in the case of CeleryExecutor) or the scheduler (in the case of LocalExecutor) runs a Flask logging server and is listening on a specific port and also binds on 0.0.0.0 by default. This logging server had no authentication and allows reading log files of DAG jobs. This issue affects Apache Airflow < 2.1.2.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-q5vh-6whw-x745", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ## Impact\n\nStarting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance.\n\nTo be vulnerable, a OneFuzz deployment must be:\n* Version 2.12.0 or greater\n* Deployed with the non-default [`--multi_tenant_domain`](https://github.com/microsoft/onefuzz/blob/2.30.0/src/deployment/deploy.py#L1021) option\n\nThis can result in read/write access to private data such as:\n* Software vulnerability and crash information\n* Security testing tools\n* Proprietary code and symbols\n\nVia authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources.\n\n## Patches\n\nThis issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist.\n\n## Workarounds\n\nUsers can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option.\n\n## References\n\nYou can find an overview of the Microsoft Identity Platform [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-overview).  This vulnerability applies to the multi-tenant application pattern, as described [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-convert-app-to-be-multi-tenant).\n\n## For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [OneFuzz](https://github.com/microsoft/onefuzz)\n* Email us at [fuzzing@microsoft.com](mailto:fuzzing@microsoft.com). Top 1 search result is pypi:onefuzz. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:onefuzz."}]}, {"id": "GHSA-gf88-j2mg-cc82", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause a denial of service in `boosted_trees_create_quantile_stream_resource` by using negative arguments:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_boosted_trees_ops\nimport numpy as np\n\nv= tf.Variable([0.0, 0.0, 0.0, 0.0, 0.0])\ngen_boosted_trees_ops.boosted_trees_create_quantile_stream_resource(\n  quantile_stream_resource_handle = v.handle,\n  epsilon = [74.82224],\n  num_streams = [-49], \n  max_elements = np.int32(586))\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantile_ops.cc#L96) does not validate that `num_streams` only contains non-negative numbers. In turn, [this results in using this value to allocate memory](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantiles/quantile_stream_resource.h#L31-L40):\n\n```cc\nclass BoostedTreesQuantileStreamResource : public ResourceBase {\n public:\n  BoostedTreesQuantileStreamResource(const float epsilon,\n                                     const int64 max_elements,\n                                     const int64 num_streams)\n      : are_buckets_ready_(false),\n        epsilon_(epsilon),\n        num_streams_(num_streams),\n        max_elements_(max_elements) {\n    streams_.reserve(num_streams_);\n    ...\n  }\n}\n```\n\nHowever, `reserve` receives an unsigned integer so there is an implicit conversion from a negative value to a large positive unsigned. This results in a crash from the standard library.\n\n### Patches\nWe have patched the issue in GitHub commit [8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992](https://github.com/tensorflow/tensorflow/commit/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-gh6x-4whr-2qv4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nWhen restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['/tmp'],\n  tensor_name=[], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=1)\n```\n  \nThe same undefined behavior can be triggered by `tf.raw_ops.RestoreSlice`:\n  \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RestoreSlice(\n  file_pattern=['/tmp'],\n  tensor_name=[], \n  shape_and_slice='2',\n  dt=inp.array([tf.int]),\n  preferred_shard=1)\n```\n\nAlternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['/tmp'],\n  tensor_name=['x'], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=42)\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values.\n\nIf the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read.\n\n### Patches \nWe have patched the issue in GitHub commit [9e82dce6e6bd1f36a57e08fa85af213e2b2f2622](https://github.com/tensorflow/tensorflow/commit/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-5hj3-vjjf-f5m7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SdcaOptimizerV2(\n  sparse_example_indices=[[1]],\n  sparse_feature_indices=[[1]],\n  sparse_feature_values=[[1.0,2.0]],\n  dense_features=[[1.0]],\n  example_weights=[1.0],\n  example_labels=[],\n  sparse_indices=[1],\n  sparse_weights=[1.0],\n  dense_weights=[[1.0]],\n  example_state_data=[[100.0,100.0,100.0,100.0]],\n  loss_type='logistic_loss',\n  l1=100.0,\n  l2=100.0,\n  num_loss_partitions=1,\n  num_inner_iterations=1,\n  adaptive=True)       \n``` \n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples.\n\n### Patches\nWe have patched the issue in GitHub commit [a4e138660270e7599793fa438cd7b2fc2ce215a6](https://github.com/tensorflow/tensorflow/commit/a4e138660270e7599793fa438cd7b2fc2ce215a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-7fvx-3jfc-2cpc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`:\n\n```python\nimport tensorflow as tf\n\nv = tf.Variable([b'vvv'])\ntf.raw_ops.ResourceScatterUpdate(\n  resource=v.handle,\n  indices=[0],\n  updates=['1', '2', '3', '4', '5'])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship.\n\n### Patches \nWe have patched the issue in GitHub commit [01cff3f986259d661103412a20745928c727326f](https://github.com/tensorflow/tensorflow/commit/01cff3f986259d661103412a20745928c727326f).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n    \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-98hv-qff3-8793", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Unrestricted Upload of File with Dangerous Type in Django-Widgy v0.8.4 allows remote attackers to execute arbitrary code via the 'image' widget in the component 'Change Widgy Page'.. Top 1 search result is pypi:django-widgy. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-widgy."}]}, {"id": "GHSA-2wmv-37vq-52g5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can cause denial of service in applications serving models using `tf.raw_ops.UnravelIndex` by triggering a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.UnravelIndex(indices=-1, dims=[1,0,2])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unravel_index_op.cc#L36) does not check that the tensor subsumed by `dims` is not empty. Hence, if one element of `dims` is 0, the implementation does a division by 0.\n\n### Patches\nWe have patched the issue in GitHub commit [a776040a5e7ebf76eeb7eb923bf1ae417dd4d233](https://github.com/tensorflow/tensorflow/commit/a776040a5e7ebf76eeb7eb923bf1ae417dd4d233).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-435p-f82x-mxwm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: 23andMe Yamale before 3.0.8 allows remote attackers to execute arbitrary code via a crafted schema file. The schema parser uses eval as part of its processing, and tries to protect from malicious expressions by limiting the builtins that are passed to the eval. When processing the schema, each line is run through Python's eval function to make the validator available. A well-constructed string within the schema rules can execute system commands; thus, by exploiting the vulnerability, an attacker can run arbitrary code on the image that invokes Yamale.. Top 1 search result is pypi:yamale. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:yamale."}]}, {"id": "GHSA-wf5p-c75w-w3wh", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\nThis is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:\n\n```cc\nbool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {\n  if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==\n          *axis.getValues<int>().begin() ||\n      *axis.getValues<int>().begin() == -1) {\n      // ...\n  }\n  // ...\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [d6b57f461b39fd1aa8c1b870f1b974aac3554955](https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n          \n### Attribution              \nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow."}]}, {"id": "GHSA-7ghq-fvr3-pj2x", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nAn attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MaxPoolGrad(\n  orig_input = tf.constant([], shape=[3, 0, 0, 2], dtype=tf.float32),\n  orig_output = tf.constant([], shape=[3, 0, 0, 2], dtype=tf.float32),\n  grad = tf.constant([], shape=[3, 0, 0, 2], dtype=tf.float32),\n  ksize = [1, 16, 16, 1],\n  strides = [1, 16, 18, 1],\n  padding = \"EXPLICIT\",\n  explicit_paddings = [0, 0, 14, 3, 15, 5, 0, 0])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors.\n\nThe fixes for [CVE-2021-29579](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-068.md) were incomplete.\n                                                                                                                                                                                                                                                                                          \n### Patches\nWe have patched the issue in GitHub commit [136b51f10903e044308cf77117c0ed9871350475](https://github.com/tensorflow/tensorflow/commit/136b51f10903e044308cf77117c0ed9871350475).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.. Top 1 search result is pypi:tensorflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tensorflow pypi:tensorflow pypi:tensorflow pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-cpu pypi:tensorflow-gpu pypi:tensorflow-gpu pypi:tensorflow-gpu."}]}, {"id": "GHSA-rgcm-rpq9-9cgr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Mirumee Saleor 2.x before 2.9.1. Incorrect access control in the checkoutCustomerAttach mutations allows attackers to attach their checkouts to any user ID and consequently leak user data (e.g., name, address, and previous orders of any other customer).. Top 1 search result is pypi:saleor. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:saleor."}]}, {"id": "GHSA-gp6m-vqhm-5cm5", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: XXE vulnerability in 'XML2Dict' version 0.2.2 allows an attacker to cause a denial of service. The parse function does not properly restrict recursive entity references.. Top 1 search result is pypi:XML2Dict. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:XML2Dict."}]}, {"id": "GHSA-pjc4-3w99-j7v4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This affects the package Flask-Unchained before 0.9.0. When using the the _validate_redirect_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as \\\\\\evil.com/path. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using 'autocorrect_location_header=False.. Top 1 search result is pypi:Flask-Unchained. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Flask-Unchained."}]}, {"id": "GHSA-g6rj-rv7j-xwp4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Pillow before 8.2.0. `PSDImagePlugin.PsdImageFile` lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on `Image.open` prior to `Image.load`.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-hm2p-fhwx-9285", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone through 5.2.4 allows remote authenticated managers to perform disk I/O via crafted keyword arguments to the ReStructuredText transform in a Python script.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-qm57-vhq3-3fwf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Django pypi:Django pypi:Django."}]}, {"id": "GHSA-rwv7-3v45-hg29", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_gray_i. This dates to Pillow 2.4.0.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-68w8-qjq3-2gfm", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-6m8p-x4qw-gh5j", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in OpenStack Keystone before 15.0.1, and 16.0.0. The list of roles provided for an OAuth1 access token is silently ignored. Thus, when an access token is used to request a keystone token, the keystone token contains every role assignment the creator had for the project. This results in the provided keystone token having more role assignments than the creator intended, possibly giving unintended escalated access.. Top 1 search result is pypi:keystone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:keystone pypi:keystone."}]}, {"id": "GHSA-q2q7-5pp4-w6pg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nWhen provided with a URL containing many `@` characters in the authority component the authority regular expression exhibits catastrophic backtracking causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.\n\n\n### Patches\n\nThe issue has been fixed in urllib3 v1.26.5.\n\n### References\n\n- [CVE-2021-33503](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33503)\n- [JVNVU#92413403 (English)](https://jvn.jp/en/vu/JVNVU92413403/)\n- [JVNVU#92413403 (Japanese)](https://jvn.jp/vu/JVNVU92413403/)\n- [urllib3 v1.26.5](https://github.com/urllib3/urllib3/releases/tag/1.26.5)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Ask in our [community Discord](https://discord.gg/urllib3)\n* Email [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com)\n. Top 1 search result is pypi:urllib3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:urllib3."}]}, {"id": "GHSA-8wwf-2644-f8x4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The thefuck (aka _The Fuck_) is app that corrects errors in previous console commands. _The Fuck_ python package before 3.31 allows Path Traversal that leads to arbitrary file deletion via the `undo archive operation` feature.. Top 1 search result is pypi:thefuck. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:thefuck."}]}, {"id": "GHSA-xw7c-jx9m-xh5g", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nThe `?_trace=1` debugging feature in Datasette does not correctly escape generated HTML, resulting in a [reflected cross-site scripting](https://owasp.org/www-community/attacks/xss/#reflected-xss-attacks) vulnerability.\n\nThis vulnerability is particularly relevant if your Datasette installation includes authenticated features using plugins such as [datasette-auth-passwords](https://datasette.io/plugins/datasette-auth-passwords) as an attacker could use the vulnerability to access protected data.\n\n### Patches\n\nDatasette 0.57 and 0.56.1 both include patches for this issue.\n\n### Workarounds\n\nIf you run Datasette behind a proxy you can workaround this issue by rejecting any incoming requests with `?_trace=` or `&_trace=` in their query string parameters.\n\n### References\n\n- [OWASP guide to reflected cross-site scripting](https://owasp.org/www-community/attacks/xss/#reflected-xss-attacks)\n- [Datasette issue #1360](https://github.com/simonw/datasette/issues/1360)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in [simonw/datasette](https://github.com/simonw/datasette/discussions)\n* Email us at `swillison+datasette @ gmail.com`\n. Top 1 search result is pypi:datasette. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:datasette."}]}, {"id": "GHSA-8f4m-hccc-8qph", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in ansible. Credentials, such as secrets, are being disclosed in console log by default and not protected by no_log feature when using those modules. An attacker can take advantage of this information to steal those credentials. The highest threat from this vulnerability is to data confidentiality.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible pypi:ansible pypi:ansible."}]}, {"id": "GHSA-p99v-5w3c-jqq9", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django pypi:django pypi:django."}]}, {"id": "GHSA-fj67-w3m4-rfmp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone through 5.2.4 allows XSS via the inline_diff methods in Products.CMFDiffTool.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-5vq5-pg3r-9ph3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Zope is an open-source web application server. This advisory extends the previous advisory at https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36 with additional cases of TAL expression traversal vulnerabilities. Most Python modules are not available for using in TAL expressions that you can add through-the-web, for example in Zope Page Templates. This restriction avoids file system access, for example via the 'os' module. But some of the untrusted modules are available indirectly through Python modules that are available for direct use. By default, you need to have the Manager role to add or edit Zope Page Templates through the web. Only sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk. The problem has been fixed in Zope 5.2.1 and 4.6.1. The workaround is the same as for https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36: A site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.. Top 1 search result is pypi:zope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope pypi:Zope."}]}, {"id": "GHSA-r6h7-5pq2-j77h", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in the use of insufficiently random values in Ansible. Two random password lookups of the same length generate the equal value as the template caching action for the same file since no re-evaluation happens. The highest threat from this vulnerability would be that all passwords are exposed at once for the file. This flaw affects Ansible Engine versions before 2.9.6.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-8h2j-cgx8-6xv7", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\n\nFastAPI versions lower than `0.65.2` that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack.\n\nIn versions lower than `0.65.2`, FastAPI would try to read the request payload as JSON even if the `content-type` header sent was not set to `application/json` or a compatible JSON media type (e.g. `application/geo+json`).\n\nSo, a request with a content type of `text/plain` containing JSON data would be accepted and the JSON data would be extracted.\n\nBut requests with content type `text/plain` are exempt from [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) preflights, for being considered [Simple requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests). So, the browser would execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application.\n\n### Patches\n\nThis is fixed in FastAPI `0.65.2`.\n\nThe request data is now parsed as JSON only if the `content-type` header is `application/json` or another JSON compatible media type like `application/geo+json`.\n\n### Workarounds\n\nIt's best to upgrade to the latest FastAPI.\n\nBut still, it would be possible to add a middleware or a dependency that checks the `content-type` header and aborts the request if it is not `application/json` or another JSON compatible content type.\n\n### References\n\n* [CORS on Mozilla web docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\n* [This answer on StackExchange](https://security.stackexchange.com/questions/157528/ways-to-bypass-browsers-cors-policy/157531#157531)\n* [OWASP CSRF](https://owasp.org/www-community/attacks/csrf)\n* Fixed in PR [#2118](https://github.com/tiangolo/fastapi/pull/2118)\n\n### For more information\n\nIf you have any questions or comments, write to [security@tiangolo.com](mailto:security@tiangolo.com). Top 1 search result is pypi:fastapi. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:fastapi."}]}, {"id": "GHSA-5pr9-v234-jw36", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nMost Python modules are not available for using in TAL expressions that you can add through-the-web, for example in Zope Page Templates. This restriction avoids file system access, for example via the 'os' module. But some of the untrusted modules are available indirectly through Python modules that are available for direct use.\n\nBy default, you need to have the Manager role to add or edit Zope Page Templates through the web. Only sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk.\n\n### Patches\nThe problem has been fixed in Zope 5.2 and 4.6.\n\n### Workarounds\nA site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Zope issue tracker](https://github.com/zopefoundation/Zope/issues)\n* Email us at [security@plone.org](mailto:security@plone.org)\n. Top 1 search result is pypi:zope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope pypi:Zope."}]}, {"id": "GHSA-8ch4-58qp-g3mp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The aaugustin websockets library before 9.1 for Python has an Observable Timing Discrepancy on servers when HTTP Basic Authentication is enabled with basic_auth_protocol_factory(credentials=...). An attacker may be able to guess a password via a timing attack.. Top 1 search result is pypi:websockets. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:websockets."}]}, {"id": "GHSA-rxjp-mfm9-w4wr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.. Top 1 search result is pypi:django. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Django pypi:Django pypi:Django."}]}, {"id": "GHSA-fh37-cx83-q542", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The lineage endpoint of the deprecated Experimental API was not protected by authentication in Airflow 2.0.0. This allowed unauthenticated users to hit that endpoint. This is low-severity issue as the attacker needs to be aware of certain parameters to pass to that endpoint and even after can just get some metadata about a DAG and a Task. This issue only affects Apache Airflow 2.0.0.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-gc9g-67cq-p7v4", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone though 5.2.4 allows SSRF via the lxml parser. This affects Diazo themes, Dexterity TTW schemas, and modeleditors in plone.app.theming, plone.app.dexterity, and plone.supermodel.. Top 1 search result is pypi:lxml. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-wv5p-gmmv-wh9v", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A flaw was found in ansible module where credentials are disclosed in the console log by default and not protected by the security feature when using the bitbucket_pipeline_variable module. This flaw allows an attacker to steal bitbucket_pipeline credentials. The highest threat from this vulnerability is to confidentiality.. Top 1 search result is pypi:ansible. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:ansible."}]}, {"id": "GHSA-xfrw-hxr5-ghqf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: ### Impact\nWhen the `{% include_block %}` template tag is used to output the value of a plain-text StreamField block (`CharBlock`, `TextBlock` or a similar user-defined block derived from `FieldBlock`), and that block does not specify a template for rendering, the tag output is not properly escaped as HTML. This could allow users to insert arbitrary HTML or scripting. This vulnerability is only exploitable by users with the ability to author StreamField content (i.e. users with 'editor' access to the Wagtail admin).\n\n### Patches\nPatched versions have been released as Wagtail 2.11.8 (for the LTS 2.11 branch), Wagtail 2.12.5, and Wagtail 2.13.2 (for the current 2.13 branch).\n\nSite implementors who wish to retain the existing behaviour of allowing editors to insert HTML content in these blocks (and are willing to accept the risk of untrusted editors inserting arbitrary code) may disable the escaping by surrounding the relevant `{% include_block %}` tag in `{% autoescape off %}...{% endautoescape %}`.\n\n### Workarounds\nSite implementors who are unable to upgrade to a current supported version should audit their use of `{% include_block %}` to ensure it is not used to output `CharBlock` / `TextBlock` values with no associated template. Note that this only applies where `{% include_block %}` is used directly on that block (uses of `include_block` on a block _containing_ a CharBlock / TextBlock, such as a StructBlock, are unaffected). In these cases, the tag can be replaced with Django's `{{ ... }}` syntax - e.g. `{% include_block my_title_block %}` becomes `{{ my_title_block }}`.\n\n### Acknowledgements\nMany thanks to Karen Tracey for reporting this issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Visit Wagtail's [support channels](https://docs.wagtail.io/en/stable/support.html)\n* Email us at security@wagtail.io (if you wish to send encrypted email, the public key ID is `0x6ba1e1a86e0f8ce8`)\n. Top 1 search result is pypi:wagtail. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:wagtail pypi:wagtail pypi:wagtail."}]}, {"id": "GHSA-wm2m-xrrp-j74c", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: netius prior to 1.17.58 is vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Transfer encoding header parsing which could allow for CL:TE or TE:TE attacks.. Top 1 search result is pypi:netius. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:netius."}]}, {"id": "GHSA-hm2h-f456-6j88", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone through 5.2.4 allows stored XSS attacks (by a Contributor) by uploading an SVG or HTML document.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-wqvq-5m8c-6g24", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of `putrequest()`. NOTE: this is similar to CVE-2020-26116.. Top 1 search result is pypi:urllib3. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:urllib3."}]}, {"id": "GHSA-37m5-42qp-4qpr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: A Cross-site scripting (XSS) vulnerability exists in StackLift LocalStack.. Top 1 search result is pypi:localstack. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:localstack."}]}, {"id": "GHSA-hjfx-8p6c-g7gx", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Pillow before 8.2.0. For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-gpvv-69j7-gwj8", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The pip package before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py. A fix was committed 6704f2ace.. Top 1 search result is pypi:pip. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:pip."}]}, {"id": "GHSA-rpcg-f9q6-2mq6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: This advisory extends the previous advisory at https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36 with additional cases of TAL expression traversal vulnerabilities.\n\n### Impact\nMost Python modules are not available for using in TAL expressions that you can add through-the-web, for example in Zope Page Templates. This restriction avoids file system access, for example via the 'os' module. But some of the untrusted modules are available indirectly through Python modules that are available for direct use.\n\nBy default, you need to have the Manager role to add or edit Zope Page Templates through the web. Only sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk.\n\n### Patches\nThe problem has been fixed in Zope 5.21 and 4.6.1.\n\n### Workarounds\nThe workaround is the same as for https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36: A site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.\n\n### References\n* [The previous advisory (GHSA-5pr9-v234-jw36)](https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Zope issue tracker](https://github.com/zopefoundation/Zope/issues)\n* Email us at [security@plone.org](mailto:security@plone.org)\n. Top 1 search result is pypi:zope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope pypi:Zope."}]}, {"id": "GHSA-8fxc-qm65-vpxg", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In OpenStack Swift prior to 2.15.2, the proxy-server logs full tempurl paths, potentially leaking reusable tempurl signatures to anyone with read access to these logs. All Swift deployments using the tempurl middleware are affected.. Top 1 search result is pypi:swift. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:swift."}]}, {"id": "GHSA-35rg-466w-77h3", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Zope Products.CMFCore before 2.5.1 and Products.PluggableAuthService before 2.6.2, as used in Plone through 5.2.4 and other products, allow Reflected XSS.. Top 1 search result is pypi:Products.CMFCore. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Products.CMFCore pypi:Products.PluggableAuthService pypi:Plone."}]}, {"id": "GHSA-mj63-64x7-57xf", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Multiple path traversal vulnerabilities exist in smbserver.py in Impacket before 0.9.23. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ../ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing /etc/shadow or an SSH authorized key.. Top 1 search result is pypi:impacket. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:impacket."}]}, {"id": "GHSA-jqmc-fxxp-r589", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Tendenci 12.0.10 allows unrestricted deserialization in apps\\helpdesk\\views\\staff.py.. Top 1 search result is pypi:tendenci. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:tendenci."}]}, {"id": "GHSA-h39g-q63v-4h9p", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in management/commands/hyperkitty_import.py in HyperKitty prior to 1.3.5. When importing a private mailing list's archives, these archives are publicly visible for the duration of the import. For example, sensitive information might be available on the web for an hour during a large migration from Mailman 2 to Mailman 3.. Top 1 search result is pypi:HyperKitty. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:HyperKitty."}]}, {"id": "GHSA-hpr6-f4vq-mxch", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The dashboard component of StackLift LocalStack allows attackers to inject arbitrary shell commands via the functionName parameter.. Top 1 search result is pypi:localstack. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:localstack."}]}, {"id": "GHSA-gff3-739c-gxfq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Datasette is an open source multi-tool for exploring and publishing data. The `?_trace=1` debugging feature in Datasette does not correctly escape generated HTML, resulting in a [reflected cross-site scripting](https://owasp.org/www-community/attacks/xss/#reflected-xss-attacks) vulnerability. This vulnerability is particularly relevant if your Datasette installation includes authenticated features using plugins such as [datasette-auth-passwords](https://datasette.io/plugins/datasette-auth-passwords) as an attacker could use the vulnerability to access protected data. Datasette 0.57 and 0.56.1 both include patches for this issue. If you run Datasette behind a proxy you can workaround this issue by rejecting any incoming requests with `?_trace=` or `&_trace=` in their query string parameters.. Top 1 search result is pypi:datasette. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:datasette."}]}, {"id": "GHSA-4pwq-fj89-6rjc", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: In Apache Airflow < 1.10.12, the `origin` parameter passed to some of the endpoints like `/trigger` and was vulnerable to a XSS exploit.. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow."}]}, {"id": "GHSA-fvx8-v524-8579", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: django-celery-results prior to 2.4.0 stores task results in the database. Among the data it stores are the variables passed into the tasks. The variables may contain sensitive cleartext information that does not belong unencrypted in the database.\n\nIn version 2.4.0 this is no longer the default behaviour but can be re-enabled with the `result_extended` flag in which case care should be taken to ensure any sensitive variables are scrubbed - see [here](https://github.com/celery/django-celery-results/issues/154#issuecomment-734706270) for an example.. Top 1 search result is pypi:django-celery-results. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:django-celery-results."}]}, {"id": "GHSA-656c-6cxf-hvcv", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Flask-Cache adds easy cache support to Flask. The Flask-Caching extension through 1.10.1 for Flask relies on Pickle for serialization, which may lead to remote code execution or local privilege escalation. If an attacker gains access to cache storage (e.g., filesystem, Memcached, Redis, etc.), they can construct a crafted payload, poison the cache, and execute Python code.\n\nHowever, this is not a high-severity issue, as for an attack like this to work, an attacker must:\n\n1. Be able to write arbitrary values to the cache\n2. Be able to generate a cache key that will collide with a value being read by the application\n3. Cause the application to read a maliciously-injected value\n\nAny situation where all 3 of those is true is a situation where the application has larger problems; for example, if someone's able to inject malicious cached rendered pages into a Flask app's cache, then they can make the website say literally anything they want, regardless of whether it involves the execution of remote code. Basically, the Pickle vulnerability follows from a website already being extremely vulnerable (due to conditions 1 and 2 being met).. Top 1 search result is pypi:Flask-Caching. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Flask-Caching."}]}, {"id": "GHSA-3xxv-p78r-4fc6", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: The \"origin\" parameter passed to some of the endpoints like '/trigger' was vulnerable to XSS exploit. This issue affects Apache Airflow versions <1.10.15 in 1.x series and affects 2.0.0 and 2.0.1 and 2.x series. This is the same as CVE-2020-13944 & CVE-2020-17515 but the implemented fix did not fix the issue completely. Update to Airflow 1.10.15 or 2.0.2. Please also update your Python version to the latest available PATCH releases of the installed MINOR versions, example update to Python 3.6.13 if you are on Python 3.6. (Those contain the fix for CVE-2021-23336 https://nvd.nist.gov/vuln/detail/CVE-2021-23336).. Top 1 search result is pypi:apache-airflow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:apache-airflow pypi:apache-airflow."}]}, {"id": "GHSA-7r7m-5h27-29hp", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An issue was discovered in Pillow before 8.2.0. For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.. Top 1 search result is pypi:pillow. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Pillow."}]}, {"id": "GHSA-4mg4-wvmx-5332", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Plone through 5.2.4 allows remote authenticated managers to conduct SSRF attacks via an event ical URL, to read one line of a file.. Top 1 search result is pypi:plone. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Plone."}]}, {"id": "GHSA-962m-m8jw-8wrr", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: Zope is an open-source web application server. In Zope versions prior to 4.6 and 5.2, users can access untrusted modules indirectly through Python modules that are available for direct use. By default, only users with the Manager role can add or edit Zope Page Templates through the web, but sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk from this vulnerability. The problem has been fixed in Zope 5.2 and 4.6. As a workaround, a site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.. Top 1 search result is pypi:zope. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:Zope pypi:Zope."}]}, {"id": "GHSA-h72c-w3q3-55qq", "conversations": [{"from": "human", "value": "Below is a Python vulnerability description. Please identify the software name affected by it. Input: An exploitable vulnerability exists in the configuration-loading functionality of the jw.util package before 2.3 for Python. When loading a configuration with FromString or FromStream with YAML, one can execute arbitrary Python code, resulting in OS command execution, because safe_load is not used.. Top 1 search result is pypi:jw.util. What is the affected package?"}, {"from": "gpt", "value": "The affected package is pypi:jw.util."}]}]